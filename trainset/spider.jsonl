{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhead_ID,name,born_state,age\n1,Tiger Woods,Alabama,67.0\n2,Sergio García,California,68.0\n3,K. J. Choi,Alabama,69.0\n4,Dudley Hart,California,52.0\n5,Jeff Maggert,Delaware,53.0\n6,Billy Mayfair,California,69.0\n7,Stewart Cink,Florida,50.0\n8,Nick Faldo,California,56.0\n9,Pádraig Harrington,Connecticut,43.0\n10,Franklin Langham,Connecticut,67.0\n\nQuestion: How many heads of the departments are older than 56 ?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the rows where age is greater than 56\ndf_filtered = df[df['age'] > 56]\n\n# Calculating the number of heads of the departments older than 56\nanswer = df_filtered.shape[0]\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhead_ID,name,born_state,age\n1,Tiger Woods,Alabama,67.0\n2,Sergio García,California,68.0\n3,K. J. Choi,Alabama,69.0\n4,Dudley Hart,California,52.0\n5,Jeff Maggert,Delaware,53.0\n6,Billy Mayfair,California,69.0\n7,Stewart Cink,Florida,50.0\n8,Nick Faldo,California,56.0\n9,Pádraig Harrington,Connecticut,43.0\n10,Franklin Langham,Connecticut,67.0\n\nQuestion: List the name, born state and age of the heads of departments ordered by age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('age')\n\nresult = df[['name', 'born_state', 'age']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartment_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees\n1,State,1789,1,9.96,30266.0\n2,Treasury,1789,2,11.1,115897.0\n3,Defense,1947,3,439.3,3000000.0\n4,Justice,1870,4,23.4,112557.0\n5,Interior,1849,5,10.7,71436.0\n6,Agriculture,1889,6,77.6,109832.0\n7,Commerce,1903,7,6.2,36000.0\n8,Labor,1913,8,59.7,17347.0\n9,Health and Human Services,1953,9,543.2,67000.0\n10,Housing and Urban Development,1965,10,46.2,10600.0\n\nQuestion: List the creation year, name and budget of each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf_selected = df[['Creation', 'Name', 'Budget_in_Billions']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartment_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees\n1,State,1789,1,9.96,30266.0\n2,Treasury,1789,2,11.1,115897.0\n3,Defense,1947,3,439.3,3000000.0\n4,Justice,1870,4,23.4,112557.0\n5,Interior,1849,5,10.7,71436.0\n6,Agriculture,1889,6,77.6,109832.0\n7,Commerce,1903,7,6.2,36000.0\n8,Labor,1913,8,59.7,17347.0\n9,Health and Human Services,1953,9,543.2,67000.0\n10,Housing and Urban Development,1965,10,46.2,10600.0\n\nQuestion: What is the average number of employees of the departments whose rank is between 10 and 15?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Ranking is between 10 and 15\nfiltered_df = df[(df['Ranking'] >= 10) & (df['Ranking'] <= 15)]\n\n# Calculate the average number of employees\naverage_employees = filtered_df['Num_Employees'].mean()\n\nprint(average_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhead_ID,name,born_state,age\n1,Tiger Woods,Alabama,67.0\n2,Sergio García,California,68.0\n3,K. J. Choi,Alabama,69.0\n4,Dudley Hart,California,52.0\n5,Jeff Maggert,Delaware,53.0\n6,Billy Mayfair,California,69.0\n7,Stewart Cink,Florida,50.0\n8,Nick Faldo,California,56.0\n9,Pádraig Harrington,Connecticut,43.0\n10,Franklin Langham,Connecticut,67.0\n\nQuestion: What are the names of the heads who are born outside the California state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter out rows where the born_state is not California\nfiltered_df = df[df['born_state'] != 'California']\n\n# create a list of names\nnames_outside_california = filtered_df['name'].tolist()\n\n# print the list of names\nprint(names_outside_california)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhead_ID,name,born_state,age\n1,Tiger Woods,Alabama,67.0\n2,Sergio García,California,68.0\n3,K. J. Choi,Alabama,69.0\n4,Dudley Hart,California,52.0\n5,Jeff Maggert,Delaware,53.0\n6,Billy Mayfair,California,69.0\n7,Stewart Cink,Florida,50.0\n8,Nick Faldo,California,56.0\n9,Pádraig Harrington,Connecticut,43.0\n10,Franklin Langham,Connecticut,67.0\n\nQuestion: What are the names of the states where at least 3 heads were born?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of heads born in each state\nstate_counts = df['born_state'].value_counts()\n\n# Filter states where at least 3 heads were born\nstates = state_counts[state_counts >= 3].index.tolist()\n\n# Print the states\nprint(states)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartment_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees\n1,State,1789,1,9.96,30266.0\n2,Treasury,1789,2,11.1,115897.0\n3,Defense,1947,3,439.3,3000000.0\n4,Justice,1870,4,23.4,112557.0\n5,Interior,1849,5,10.7,71436.0\n6,Agriculture,1889,6,77.6,109832.0\n7,Commerce,1903,7,6.2,36000.0\n8,Labor,1913,8,59.7,17347.0\n9,Health and Human Services,1953,9,543.2,67000.0\n10,Housing and Urban Development,1965,10,46.2,10600.0\n\nQuestion: In which year were most departments established?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the year with the most number of departments established\nyear_with_most_departments = df['Creation'].value_counts().idxmax()\n\nprint(year_with_most_departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndepartment_ID,head_ID,temporary_acting\n2,5,Yes\n15,4,Yes\n2,6,Yes\n7,3,No\n11,10,No\n\nQuestion: How many acting statuses are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique acting statuses\nacting_statuses = df['temporary_acting'].nunique()\n\n# Print the number of acting statuses\nprint(acting_statuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhead_ID,name,born_state,age\n1,Tiger Woods,Alabama,67.0\n2,Sergio García,California,68.0\n3,K. J. Choi,Alabama,69.0\n4,Dudley Hart,California,52.0\n5,Jeff Maggert,Delaware,53.0\n6,Billy Mayfair,California,69.0\n7,Stewart Cink,Florida,50.0\n8,Nick Faldo,California,56.0\n9,Pádraig Harrington,Connecticut,43.0\n10,Franklin Langham,Connecticut,67.0\n\nQuestion: Which head's name has the substring 'Ha'? List the id and name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Search for the heads with substring 'Ha'\nsearch_for = 'Ha'\n\n# Create a mask of True/False if the name contains 'Ha'\nmask = df['name'].str.contains(search_for, case=False)\n\n# Use the mask to filter the dataframe\ndf_filtered = df[mask]\n\n# Print the id and name of the heads\nresult = df_filtered[['head_ID', 'name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: How many farms are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of farms\nnum_farms = len(df)\n\nprint(num_farms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: Count the number of farms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of farms\nnum_farms = len(df)\n\nprint(num_farms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: List the total number of horses on farms in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the 'Total_Horses' column in ascending order and save the sorted values in a list\ntotal_horses_sorted = df['Total_Horses'].sort_values().tolist()\n\n# Print the sorted list of total horses\nprint(total_horses_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: What is the total horses record for each farm, sorted ascending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the 'Total_Horses' column in ascending order and save the sorted values in a list\ntotal_horses_sorted = df['Total_Horses'].sort_values().tolist()\n\n# Print the sorted list of total horses\nprint(total_horses_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: What is the average number of working horses of farms with more than 5000 total number of horses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only farms with more than 5000 total horses\ndf_filtered = df[df['Total_Horses'] > 5000]\n\n# Calculate average number of working horses on these farms\naverage_working_horses = df_filtered['Working_Horses'].mean()\n\n# Print the answer\nprint(average_working_horses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFarm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats\n1,1927,5056.5,3900.1,8374.5,805.5,31.6,3852.1,4412.4,7956.3\n2,1928,5486.9,4090.5,8604.8,895.3,32.8,3987.0,6962.9,8112.2\n3,1929,5607.5,4198.8,7611.0,593.7,26.9,3873.0,4161.2,7030.8\n4,1930,5308.2,3721.6,6274.1,254.8,49.6,3471.6,3171.8,4533.4\n5,1931,4781.3,3593.7,6189.5,113.8,40.0,3377.0,3373.3,3364.8\n6,1932,3658.9,3711.6,5006.7,105.2,71.6,2739.5,2623.7,2109.5\n7,1933,2604.8,3711.2,4446.3,116.9,37.6,2407.2,2089.2,2004.7\n8,1934,2546.9,2197.3,5277.5,156.5,46.7,2518.0,4236.7,2197.1\n\nQuestion: Give the average number of working horses on farms with more than 5000 total horses.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only farms with more than 5000 total horses\ndf_filtered = df[df['Total_Horses'] > 5000]\n\n# Calculate average number of working horses on these farms\naverage_working_horses = df_filtered['Working_Horses'].mean()\n\n# Print the answer\nprint(average_working_horses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: How many different statuses do cities have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different statuses\nstatus_count = df['Status'].nunique()\n\nprint(status_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Count the number of different statuses.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different statuses\nstatus_count = df['Status'].nunique()\n\nprint(status_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: List official names of cities in descending order of population.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort DataFrame by population in descending order and save it in a new DataFrame\nsorted_df = df.sort_values('Population', ascending=False)\n\n# Select the official names of the cities and save it in a list\ncity_names = sorted_df['Official_Name'].tolist()\n\n# Print the list\nprint(city_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What are the official names of cities, ordered descending by population?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort DataFrame by population in descending order and save it in a new DataFrame\nsorted_df = df.sort_values('Population', ascending=False)\n\n# Select the official names of the cities and save it in a list\ncity_names = sorted_df['Official_Name'].tolist()\n\n# Print the list\nprint(city_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: List the official name and status of the city with the largest population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum population\nmax_population = df['Population'].max()\n\n# Find the rows where the population is equal to the max population\nmax_pop_rows = df.loc[df['Population'] == max_population]\n\n# Get the official name and status of the city with the most residents\nanswer = max_pop_rows[['Official_Name', 'Status']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What is the official name and status of the city with the most residents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum population\nmax_population = df['Population'].max()\n\n# Find the rows where the population is equal to the max population\nmax_pop_rows = df.loc[df['Population'] == max_population]\n\n# Get the official name and status of the city with the most residents\nanswer = max_pop_rows[['Official_Name', 'Status']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Please show the different statuses of cities and the average population of cities with each status.", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Status' and calculate the average population for each group\navg_population = df.groupby('Status')['Population'].mean()\n\n# Print the average population for each status\nprint(avg_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What are the statuses and average populations of each city?", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Status' and calculate the average population for each group\navg_population = df.groupby('Status')['Population'].mean()\n\n# Print the average population for each status\nprint(avg_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: List the most common type of Status across cities.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_status = df['Status'].mode()[0]\nprint(most_common_status)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What is the most common status across all cities?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_status = df['Status'].mode()[0]\nprint(most_common_status)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Show the status shared by cities with population bigger than 1500 and smaller than 500.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the population\ndf_over_1500 = df[df['Population'] > 1500]\ndf_under_500 = df[df['Population'] < 500]\n\n# find the common statuses\ncommon_statuses = set(df_over_1500['Status'].unique()).intersection(set(df_under_500['Status'].unique()))\n\n# print the statuses\nprint(common_statuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the population\ndf_over_1500 = df[df['Population'] > 1500]\ndf_under_500 = df[df['Population'] < 500]\n\n# find the common statuses\ncommon_statuses = set(df_over_1500['Status'].unique()).intersection(set(df_under_500['Status'].unique()))\n\n# print the statuses\nprint(common_statuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Find the official names of cities with population bigger than 1500 or smaller than 500.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['Population'] > 1500) | (df['Population'] < 500)]\nofficial_names = df_filtered['Official_Name'].tolist()\nprint(official_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What are the official names of cities that have population over 1500 or less than 500?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['Population'] > 1500) | (df['Population'] < 500)]\nofficial_names = df_filtered['Official_Name'].tolist()\nprint(official_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: Show the census ranking of cities whose status are not \"Village\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe where status is not 'Village'\ndf_filtered = df[df['Status'] != 'Village']\n\n# Getting the census ranking of the filtered cities\ncensus_ranking = df_filtered['Census_Ranking'].tolist()\n\n# Printing the census ranking\nprint(census_ranking)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking\n1,Grand Falls/Grand-Sault,Town,18.06,5706.0,636 of 5008\n2,Perth-Andover,Village,8.89,1778.0,1442 of 5,008\n3,Plaster Rock,Village,3.09,1135.0,1936 of 5,008\n4,Drummond,Village,8.91,775.0,2418 of 5008\n5,Aroostook,Village,2.24,351.0,3460 of 5008\n\nQuestion: What are the census rankings of cities that do not have the status \"Village\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe where status is not 'Village'\ndf_filtered = df[df['Status'] != 'Village']\n\n# Getting the census ranking of the filtered cities\ncensus_ranking = df_filtered['Census_Ranking'].tolist()\n\n# Printing the census ranking\nprint(census_ranking)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,registration_date\n111,301,2008-11-04 10:35:13\n121,301,2008-10-04 10:35:13\n121,303,2008-11-14 10:35:13\n131,303,2008-11-05 10:35:13\n141,302,2008-11-06 10:35:13\n151,305,2008-11-07 10:35:13\n161,302,2008-11-07 10:35:13\n171,301,2008-11-07 10:35:13\n141,301,2008-11-08 10:35:13\n\nQuestion: what is id of students who registered some courses but the least number of courses in these students?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique courses each student has registered for\nstudent_counts = df['student_id'].value_counts()\n\n# Find the student who registered for the least number of courses\nleast_courses_student = student_counts.idxmin()\n\n# Find the ids of the students who registered for some courses but had the least number of courses for all students\nleast_courses_student_ids = df[df['student_id'] == least_courses_student]['student_id'].unique()\n\n# Print the ids\nprint(least_courses_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,registration_date\n111,301,2008-11-04 10:35:13\n121,301,2008-10-04 10:35:13\n121,303,2008-11-14 10:35:13\n131,303,2008-11-05 10:35:13\n141,302,2008-11-06 10:35:13\n151,305,2008-11-07 10:35:13\n161,302,2008-11-07 10:35:13\n171,301,2008-11-07 10:35:13\n141,301,2008-11-08 10:35:13\n\nQuestion: What are the ids of the students who registered for some courses but had the least number of courses for all students?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique courses each student has registered for\nstudent_counts = df['student_id'].value_counts()\n\n# Find the student who registered for the least number of courses\nleast_courses_student = student_counts.idxmin()\n\n# Find the ids of the students who registered for some courses but had the least number of courses for all students\nleast_courses_student_ids = df[df['student_id'] == least_courses_student]['student_id'].unique()\n\n# Print the ids\nprint(least_courses_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncandidate_id,qualification,assessment_date,asessment_outcome_code\n111,A,2010-04-07 11:44:34,Pass\n121,B,2010-04-17 11:44:34,Pass\n131,D,2010-04-05 11:44:34,Fail\n141,C,2010-04-06 11:44:34,Pass\n151,B,2010-04-09 11:44:34,Pass\n\nQuestion: Find id of the candidate who most recently accessed the course?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'assessment_date' column to datetime format\ndf['assessment_date'] = pd.to_datetime(df['assessment_date'])\n\n# Sort the dataframe by 'assessment_date' in descending order\ndf = df.sort_values('assessment_date', ascending=False)\n\n# The id of the candidate who most recently accessed the course\nmost_recent_candidate_id = df.iloc[0]['candidate_id']\n\n# Print the id of the most recent candidate\nprint(most_recent_candidate_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncandidate_id,qualification,assessment_date,asessment_outcome_code\n111,A,2010-04-07 11:44:34,Pass\n121,B,2010-04-17 11:44:34,Pass\n131,D,2010-04-05 11:44:34,Fail\n141,C,2010-04-06 11:44:34,Pass\n151,B,2010-04-09 11:44:34,Pass\n\nQuestion: What is the id of the candidate who most recently accessed the course?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'assessment_date' column to datetime format\ndf['assessment_date'] = pd.to_datetime(df['assessment_date'])\n\n# Sort the dataframe by 'assessment_date' in descending order\ndf = df.sort_values('assessment_date', ascending=False)\n\n# The id of the candidate who most recently accessed the course\nmost_recent_candidate_id = df.iloc[0]['candidate_id']\n\n# Print the id of the most recent candidate\nprint(most_recent_candidate_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncandidate_id,qualification,assessment_date,asessment_outcome_code\n111,A,2010-04-07 11:44:34,Pass\n121,B,2010-04-17 11:44:34,Pass\n131,D,2010-04-05 11:44:34,Fail\n141,C,2010-04-06 11:44:34,Pass\n151,B,2010-04-09 11:44:34,Pass\n\nQuestion: Find id of candidates whose assessment code is \"Pass\"?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data where assessment_outcome_code is 'Pass'\npass_df = df[df['asessment_outcome_code'] == 'Pass']\n\n# Get the candidate_id of these candidates\npass_candidate_ids = pass_df['candidate_id'].tolist()\n\n# Save the answer in a variable and print it\nanswer = pass_candidate_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncandidate_id,qualification,assessment_date,asessment_outcome_code\n111,A,2010-04-07 11:44:34,Pass\n121,B,2010-04-17 11:44:34,Pass\n131,D,2010-04-05 11:44:34,Fail\n141,C,2010-04-06 11:44:34,Pass\n151,B,2010-04-09 11:44:34,Pass\n\nQuestion: What are the ids of the candidates that have an outcome code of Pass?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data where assessment_outcome_code is 'Pass'\npass_df = df[df['asessment_outcome_code'] == 'Pass']\n\n# Get the candidate_id of these candidates\npass_candidate_ids = pass_df['candidate_id'].tolist()\n\n# Save the answer in a variable and print it\nanswer = pass_candidate_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,date_of_attendance\n111,301,2008-11-04 10:35:13\n121,301,2012-04-09 11:44:34\n121,303,2014-04-09 11:44:34\n141,302,2013-04-09 11:44:34\n171,301,2015-04-09 11:44:34\n161,302,2014-01-09 11:44:34\n151,305,2012-05-09 11:44:34\n141,301,2012-09-09 11:44:34\n\nQuestion: What are the id of students who registered course 301?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where course_id is 301\ndf_filtered = df[df['course_id'] == 301]\n\n# Get the unique student ids\nstudent_ids = df_filtered['student_id'].unique()\n\n# Print the student ids\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,date_of_attendance\n111,301,2008-11-04 10:35:13\n121,301,2012-04-09 11:44:34\n121,303,2014-04-09 11:44:34\n141,302,2013-04-09 11:44:34\n171,301,2015-04-09 11:44:34\n161,302,2014-01-09 11:44:34\n151,305,2012-05-09 11:44:34\n141,301,2012-09-09 11:44:34\n\nQuestion: What are the ids of the students who registered for course 301?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where course_id is 301\ndf_filtered = df[df['course_id'] == 301]\n\n# Get the unique student ids\nstudent_ids = df_filtered['student_id'].unique()\n\n# Print the student ids\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,date_of_attendance\n111,301,2008-11-04 10:35:13\n121,301,2012-04-09 11:44:34\n121,303,2014-04-09 11:44:34\n141,302,2013-04-09 11:44:34\n171,301,2015-04-09 11:44:34\n161,302,2014-01-09 11:44:34\n151,305,2012-05-09 11:44:34\n141,301,2012-09-09 11:44:34\n\nQuestion: What is the id of the student who most recently registered course 301?", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include rows where the course_id is 301\ndf_301 = df[df['course_id'] == 301]\n\n# Sort the dataframe by the date_of_attendance in descending order\ndf_301_sorted = df_301.sort_values('date_of_attendance', ascending=False)\n\n# Select the first row's student_id\nmost_recent_student_id = df_301_sorted.iloc[0]['student_id']\n\nprint(most_recent_student_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,course_id,date_of_attendance\n111,301,2008-11-04 10:35:13\n121,301,2012-04-09 11:44:34\n121,303,2014-04-09 11:44:34\n141,302,2013-04-09 11:44:34\n171,301,2015-04-09 11:44:34\n161,302,2014-01-09 11:44:34\n151,305,2012-05-09 11:44:34\n141,301,2012-09-09 11:44:34\n\nQuestion: What are the ids of the students who registered for course 301 most recently?", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include rows where the course_id is 301\ndf_301 = df[df['course_id'] == 301]\n\n# Sort the dataframe by the date_of_attendance in descending order\ndf_301_sorted = df_301.sort_values('date_of_attendance', ascending=False)\n\n# Select the first row's student_id\nmost_recent_student_id = df_301_sorted.iloc[0]['student_id']\n\nprint(most_recent_student_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,course_name,course_description,other_details\n301,statistics,statistics,\n302,English,English,\n303,French,French,\n304,database,database,\n305,data structure,data structure,\n306,Art history,Art history,\n\nQuestion: List the names of courses in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the course names\ncourse_names = df['course_name']\n\n# Sort the course names in alphabetical order\nsorted_course_names = course_names.sort_values()\n\n# Save the sorted course names in a variable\nanswer = sorted_course_names.values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,course_name,course_description,other_details\n301,statistics,statistics,\n302,English,English,\n303,French,French,\n304,database,database,\n305,data structure,data structure,\n306,Art history,Art history,\n\nQuestion: What are the names of the courses in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the course names\ncourse_names = df['course_name']\n\n# Sort the course names in alphabetical order\nsorted_course_names = course_names.sort_values()\n\n# Save the sorted course names in a variable\nanswer = sorted_course_names.values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nperson_id,first_name,middle_name,last_name,cell_mobile_number,email_address,login_name,password\n111,Shannon,Elissa,Senger,01955267735,javier.trantow@example.net,pgub,5e4ff49a61b3544da3ad7dc7e2cf28847564c64c\n121,Virginie,Jasmin,Hartmann,(508)319-2970x043,boyer.lonie@example.com,bkkv,b063331ea8116befaa7b84c59c6a22200f5f8caa\n131,Dariana,Hayley,Bednar,(262)347-9364x516,leila14@example.net,zops,b20b6a9f24aadeda70d54e410c3219f61fb063fb\n141,Verna,Arielle,Grant,1-372-548-7538x314,adele.gibson@example.net,uuol,7be9c03d5467d563555c51ebb3eb78e7f90832ec\n151,Hoyt,Mercedes,Wintheiser,1-603-110-0647,stanley.monahan@example.org,bnto,c55795df86182959094b83e27900f7cf44ced570\n161,Mayra,Haley,Hartmann,724-681-4161x51632,terry.kuhlman@example.org,rzxu,ecae473cb54601e01457078ac0cdf4a1ced837bb\n171,Lizeth,Bell,Bartoletti,812.228.0645x91481,celestine11@example.net,mkou,76a93d1d3b7becc932d203beac61d064bd54e947\n181,Nova,Amiya,Feest,766-272-9964,oreynolds@example.com,qrwl,7dce9b688636ee212294c257dd2f6b85c7f65f2e\n\nQuestion: List the first names of people in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the 'first_name' column in ascending order\ndf_sorted = df.sort_values(by='first_name')\n\n# Extract the first names into a list\nfirst_names = df_sorted['first_name'].tolist()\n\n# Print the list of first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nperson_id,first_name,middle_name,last_name,cell_mobile_number,email_address,login_name,password\n111,Shannon,Elissa,Senger,01955267735,javier.trantow@example.net,pgub,5e4ff49a61b3544da3ad7dc7e2cf28847564c64c\n121,Virginie,Jasmin,Hartmann,(508)319-2970x043,boyer.lonie@example.com,bkkv,b063331ea8116befaa7b84c59c6a22200f5f8caa\n131,Dariana,Hayley,Bednar,(262)347-9364x516,leila14@example.net,zops,b20b6a9f24aadeda70d54e410c3219f61fb063fb\n141,Verna,Arielle,Grant,1-372-548-7538x314,adele.gibson@example.net,uuol,7be9c03d5467d563555c51ebb3eb78e7f90832ec\n151,Hoyt,Mercedes,Wintheiser,1-603-110-0647,stanley.monahan@example.org,bnto,c55795df86182959094b83e27900f7cf44ced570\n161,Mayra,Haley,Hartmann,724-681-4161x51632,terry.kuhlman@example.org,rzxu,ecae473cb54601e01457078ac0cdf4a1ced837bb\n171,Lizeth,Bell,Bartoletti,812.228.0645x91481,celestine11@example.net,mkou,76a93d1d3b7becc932d203beac61d064bd54e947\n181,Nova,Amiya,Feest,766-272-9964,oreynolds@example.com,qrwl,7dce9b688636ee212294c257dd2f6b85c7f65f2e\n\nQuestion: What are the first names of the people in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the 'first_name' column in ascending order\ndf_sorted = df.sort_values(by='first_name')\n\n# Extract the first names into a list\nfirst_names = df_sorted['first_name'].tolist()\n\n# Print the list of first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What are the names of stations that have latitude lower than 37.5?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where latitude is less than 37.5\nfiltered_df = df[df['lat'] < 37.5]\n\n# Get the names of the stations\nstation_names = filtered_df['name'].tolist()\n\n# Print the names of the stations\nprint(station_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What are the names of all stations with a latitude smaller than 37.5?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where latitude is less than 37.5\nfiltered_df = df[df['lat'] < 37.5]\n\n# Get the names of the stations\nstation_names = filtered_df['name'].tolist()\n\n# Print the names of the stations\nprint(station_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: For each city, return the highest latitude among its stations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by city and get the maximum latitude for each city\nmax_latitudes = df.groupby('city')['lat'].max()\n\nprint(max_latitudes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: For each city, what is the highest latitude for its stations?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by city and get the maximum latitude for each city\nmax_latitudes = df.groupby('city')['lat'].max()\n\nprint(max_latitudes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What is the average latitude and longitude of stations located in San Jose city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by city\nsan_jose_df = df[df['city'] == 'San Jose']\n\n# Calculate the mean of lat and long\navg_lat = san_jose_df['lat'].mean()\navg_long = san_jose_df['long'].mean()\n\n# Save the answer in a variable\nanswer = (avg_lat, avg_long)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What is the average latitude and longitude in San Jose?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by city\nsan_jose_df = df[df['city'] == 'San Jose']\n\n# Calculate the mean of lat and long\navg_lat = san_jose_df['lat'].mean()\navg_long = san_jose_df['long'].mean()\n\n# Save the answer in a variable\nanswer = (avg_lat, avg_long)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What is the id of the trip that has the shortest duration?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['duration'] = df['duration'].astype(int)\nshortest_trip_id = df.loc[df['duration'].idxmin(), 'id']\n\nprint(shortest_trip_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What is the id of the shortest trip?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['duration'] = df['duration'].astype(int)\nshortest_trip_id = df.loc[df['duration'].idxmin(), 'id']\n\nprint(shortest_trip_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What is the total and maximum duration of trips with bike id 636?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['bike_id'] == 636]\ntotal_duration = df_filtered['duration'].sum()\nmax_duration = df_filtered['duration'].max()\n\nanswer = (total_duration, max_duration)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What is the total and maximum duration for all trips with the bike id 636?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['bike_id'] == 636]\ntotal_duration = df_filtered['duration'].sum()\nmax_duration = df_filtered['duration'].max()\n\nanswer = (total_duration, max_duration)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: From the trip record, find the number of unique bikes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of unique bikes\nunique_bikes = df['bike_id'].nunique()\n\nprint(unique_bikes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: How many different bike ids are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of unique bikes\nunique_bikes = df['bike_id'].nunique()\n\nprint(unique_bikes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What is the number of distinct cities the stations are located at?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_cities = df['city'].nunique()\n\nprint(unique_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: How many different cities have these stations?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_cities = df['city'].nunique()\n\nprint(unique_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: How many stations does Mountain View city has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by 'city' and 'Mountain View', then count the number of rows\nmountain_view_stations = len(df[df['city'] == 'Mountain View'])\n\nprint(mountain_view_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: How many stations are in Mountain View?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by 'city' and 'Mountain View', then count the number of rows\nmountain_view_stations = len(df[df['city'] == 'Mountain View'])\n\nprint(mountain_view_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: Which bike traveled the most often in zip code 94002?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where zip_code is 94002\ndf_filtered = df[df['zip_code'] == '94002']\n\n# count the frequency of each bike_id\nbike_counts = df_filtered['bike_id'].value_counts()\n\n# get the id of the bike that was used the most\nmost_used_bike = bike_counts.index[0]\n\n# print the id of the bike that was used the most\nprint(most_used_bike)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What is the id of the bike that traveled the most in 94002?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where zip_code is 94002\ndf_filtered = df[df['zip_code'] == '94002']\n\n# count the frequency of each bike_id\nbike_counts = df_filtered['bike_id'].value_counts()\n\n# get the id of the bike that was used the most\nmost_used_bike = bike_counts.index[0]\n\n# print the id of the bike that was used the most\nprint(most_used_bike)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data for zip_code 94107 and find the minimum dew point\nmin_dew_point_94107 = df[df['zip_code'] == 94107]['min_dew_point_f'].min()\n\n# Filter the data for days with minimum dew point smaller than the minimum dew point in 94107\ndays_with_smaller_min_dew_point = df[df['min_dew_point_f'] < min_dew_point_94107]\n\n# Get the dates and zip codes\ndates_and_zip_codes = days_with_smaller_min_dew_point[['date', 'zip_code']]\n\n# Print the dates and zip codes\nprint(dates_and_zip_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data for zip_code 94107 and find the minimum dew point\nmin_dew_point_94107 = df[df['zip_code'] == 94107]['min_dew_point_f'].min()\n\n# Filter the data for days with minimum dew point smaller than the minimum dew point in 94107\ndays_with_smaller_min_dew_point = df[df['min_dew_point_f'] < min_dew_point_94107]\n\n# Get the dates and zip codes\ndates_and_zip_codes = days_with_smaller_min_dew_point[['date', 'zip_code']]\n\n# Print the dates and zip codes\nprint(dates_and_zip_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: In zip code 94107, on which day neither Fog nor Rain was not observed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for zip code 94107\ndf_94107 = df[df['zip_code'] == 94107]\n\n# Find rows where events is neither 'Fog' nor 'Rain'\ndf_result = df_94107[(df_94107['events'] != 'Fog') & (df_94107['events'] != 'Rain')]\n\n# Save the date of these rows in a variable\nanswer = df_result['date'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: On which day has it neither been foggy nor rained in the zip code of 94107?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for zip code 94107\ndf_94107 = df[df['zip_code'] == 94107]\n\n# Find rows where events is neither 'Fog' nor 'Rain'\ndf_result = df_94107[(df_94107['events'] != 'Fog') & (df_94107['events'] != 'Rain')]\n\n# Save the date of these rows in a variable\nanswer = df_result['date'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What are the name, latitude, and city of the station with the lowest latitude?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the station that is located the furthest South\nfurthest_south = df[df.lat == df.lat.min()]\n\n# Save the answer in a variable\nanswer = furthest_south[['name', 'lat', 'city']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What is the name, latitude, and city of the station that is located the furthest South?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the station that is located the furthest South\nfurthest_south = df[df.lat == df.lat.min()]\n\n# Save the answer in a variable\nanswer = furthest_south[['name', 'lat', 'city']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: List the name and the number of stations for all the cities that have at least 15 stations.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'city' and count the number of stations in each city\ncity_stations_count = df.groupby('city')['id'].count()\n\n# Filter the cities that have at least 15 stations\ncities_with_15_stations = city_stations_count[city_stations_count >= 15]\n\n# Print the result\nprint(cities_with_15_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: What is the name of every city that has at least 15 stations and how many stations does it have?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'city' and count the number of stations in each city\ncity_stations_count = df.groupby('city')['id'].count()\n\n# Filter the cities that have at least 15 stations\ncities_with_15_stations = city_stations_count[city_stations_count >= 15]\n\n# Print the result\nprint(cities_with_15_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: Find the zip code in which the average mean visibility is lower than 10.", "response": "import pandas as pd\n\n# Load data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Group data by 'zip_code' and calculate the average mean visibility for each group\naverage_visibility = df.groupby('zip_code')['mean_visibility_miles'].mean()\n\n# Select only those zip codes that have average mean visibility below 10\nzip_codes_below_10 = average_visibility[average_visibility < 10].index.tolist()\n\n# Print the zip codes\nprint(zip_codes_below_10)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: For each zip code, select all those that have an average mean visiblity below 10.", "response": "import pandas as pd\n\n# Load data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Group data by 'zip_code' and calculate the average mean visibility for each group\naverage_visibility = df.groupby('zip_code')['mean_visibility_miles'].mean()\n\n# Select only those zip codes that have average mean visibility below 10\nzip_codes_below_10 = average_visibility[average_visibility < 10].index.tolist()\n\n# Print the zip codes\nprint(zip_codes_below_10)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: List all the cities in a decreasing order of each city's stations' highest latitude.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by city and get the maximum latitude for each city\ncity_max_lat = df.groupby('city')['lat'].max()\n\n# Sort the cities by their maximum latitude in descending order\ncities_sorted = city_max_lat.sort_values(ascending=False)\n\n# Get the names of the sorted cities\nsorted_cities = cities_sorted.index.tolist()\n\nprint(sorted_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,lat,long,dock_count,city,installation_date\n2,San Jose Diridon Caltrain Station,37.329732,-121.90178200000001,27,San Jose,8/6/2013\n3,San Jose Civic Center,37.330698,-121.888979,15,San Jose,8/5/2013\n4,Santa Clara at Almaden,37.333988,-121.894902,11,San Jose,8/6/2013\n5,Adobe on Almaden,37.331415,-121.8932,19,San Jose,8/5/2013\n6,San Pedro Square,37.336721000000004,-121.894074,15,San Jose,8/7/2013\n7,Paseo de San Antonio,37.333798,-121.88694299999999,15,San Jose,8/7/2013\n8,San Salvador at 1st,37.330165,-121.88583100000001,15,San Jose,8/5/2013\n9,Japantown,37.348742,-121.89471499999999,15,San Jose,8/5/2013\n10,San Jose City Hall,37.337391,-121.886995,15,San Jose,8/6/2013\n11,MLK Library,37.335885,-121.88566000000002,19,San Jose,8/6/2013\n\nQuestion: For each city, list their names in decreasing order by their highest station latitude.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by city and get the maximum latitude for each city\ncity_max_lat = df.groupby('city')['lat'].max()\n\n# Sort the cities by their maximum latitude in descending order\ncities_sorted = city_max_lat.sort_values(ascending=False)\n\n# Get the names of the sorted cities\nsorted_cities = cities_sorted.index.tolist()\n\nprint(sorted_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: Find all the zip codes in which the max dew point have never reached 70.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out zip codes where max dew point is greater than or equal to 70\nfiltered_df = df.groupby('zip_code').filter(lambda x: (x['max_dew_point_f'] < 70).all())\n\n# Get all unique zip codes from the filtered DataFrame\nzip_codes = filtered_df['zip_code'].unique()\n\nprint(zip_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: What are all the different zip codes that have a maximum dew point that was always below 70?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out zip codes where max dew point is greater than or equal to 70\nfiltered_df = df.groupby('zip_code').filter(lambda x: (x['max_dew_point_f'] < 70).all())\n\n# Get all unique zip codes from the filtered DataFrame\nzip_codes = filtered_df['zip_code'].unique()\n\nprint(zip_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# calculate the average duration per zip code\navg_duration_per_zip = df.groupby('zip_code')['duration'].mean()\n\n# filter for trips that had a duration equal to or greater than the average in the zip code 94103\nfiltered_df = df[df['duration'] >= avg_duration_per_zip['94103']]\n\n# extract the ids of all such trips\nids = filtered_df['id']\n\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code\n900504,384,8/21/2015 17:03,Howard at 2nd,63,8/21/2015 17:10,San Francisco Caltrain 2 (330 Townsend),69,454,Subscriber,94041\n900505,588,8/21/2015 17:03,South Van Ness at Market,66,8/21/2015 17:13,San Francisco Caltrain 2 (330 Townsend),69,574,Subscriber,95119\n900506,196,8/21/2015 17:04,Market at Sansome,77,8/21/2015 17:07,Harry Bridges Plaza (Ferry Building),50,636,Subscriber,94925\n900507,823,8/21/2015 17:04,Washington at Kearny,46,8/21/2015 17:18,2nd at Townsend,61,187,Subscriber,94103\n900508,1059,8/21/2015 17:04,Beale at Market,56,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,363,Customer,94107\n900509,362,8/21/2015 17:05,Clay at Battery,41,8/21/2015 17:11,Howard at 2nd,63,16,Subscriber,94107\n900511,528,8/21/2015 17:05,Embarcadero at Vallejo,48,8/21/2015 17:14,Temporary Transbay Terminal (Howard at Beale),55,67,Subscriber,94608\n900514,984,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain (Townsend at 4th),70,427,Subscriber,94087\n900515,982,8/21/2015 17:06,Davis at Jackson,42,8/21/2015 17:22,San Francisco Caltrain 2 (330 Townsend),69,603,Subscriber,94107\n900518,422,8/21/2015 17:07,Howard at 2nd,63,8/21/2015 17:14,San Francisco Caltrain 2 (330 Townsend),69,503,Subscriber,94010\n\nQuestion: What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# calculate the average duration per zip code\navg_duration_per_zip = df.groupby('zip_code')['duration'].mean()\n\n# filter for trips that had a duration equal to or greater than the average in the zip code 94103\nfiltered_df = df[df['duration'] >= avg_duration_per_zip['94103']]\n\n# extract the ids of all such trips\nids = filtered_df['id']\n\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: What are the dates in which the mean sea level pressure was between 30.3 and 31?", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for mean sea level pressure between 30.3 and 31\nfiltered_df = df[(df['mean_sea_level_pressure_inches'] >= 30.3) & (df['mean_sea_level_pressure_inches'] <= 31)]\n\n# Extract the dates\ndates = filtered_df['date'].tolist()\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: What are the dates that have an average sea level pressure between 30.3 and 31?", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for mean sea level pressure between 30.3 and 31\nfiltered_df = df[(df['mean_sea_level_pressure_inches'] >= 30.3) & (df['mean_sea_level_pressure_inches'] <= 31)]\n\n# Extract the dates\ndates = filtered_df['date'].tolist()\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the difference between max and min temperatures for each day\ndf['temp_diff'] = df['max_temperature_f'] - df['min_temperature_f']\n\n# Find the day with the smallest temperature difference\nmin_diff_day = df[df['temp_diff'] == df['temp_diff'].min()]\n\n# Save the answer in a variable\nanswer = min_diff_day['date'].values[0], min_diff_day['temp_diff'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndate,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code\n8/29/2013,74,68,61,61,58,56,93,75,57,30.07,30.02,29.97,10,10,10,23,11,28,0,4,,286,94107\n8/30/2013,78,69,60,61,58,56,90,70,50,30.05,30,29.93,10,10,7,29,13,35,0,2,,291,94107\n8/31/2013,71,64,57,57,56,54,93,75,57,30,29.96,29.92,10,10,10,26,15,31,0,4,,284,94107\n9/1/2013,74,66,58,60,56,53,87,68,49,29.96,29.93,29.91,10,10,10,25,13,29,0,4,,284,94107\n9/2/2013,75,69,62,61,60,58,93,77,61,29.97,29.94,29.9,10,10,6,23,12,30,0,6,,277,94107\n9/3/2013,73,67,60,59,56,51,84,65,46,30.02,29.98,29.95,10,10,10,24,15,31,0,2,,276,94107\n9/4/2013,74,68,61,59,57,56,90,72,53,30.05,30.01,29.97,10,10,10,29,19,35,0,4,,269,94107\n9/5/2013,72,66,60,57,56,54,90,74,57,30.04,30,29.97,10,10,10,31,21,37,0,3,,270,94107\n9/6/2013,85,71,56,57,51,45,86,58,29,30,29.92,29.83,10,10,10,24,8,28,0,0,,287,94107\n9/7/2013,88,73,58,64,54,46,86,59,31,29.88,29.85,29.81,10,10,10,21,8,25,0,1,,305,94107\n\nQuestion: What are the days that had the smallest temperature range, and what was that range?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the difference between max and min temperatures for each day\ndf['temp_diff'] = df['max_temperature_f'] - df['min_temperature_f']\n\n# Find the day with the smallest temperature difference\nmin_diff_day = df[df['temp_diff'] == df['temp_diff'].min()]\n\n# Save the answer in a variable\nanswer = min_diff_day['date'].values[0], min_diff_day['temp_diff'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: How many books are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# get the number of books\nnum_books = len(df)\n\nprint(num_books)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: List the writers of the books in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the writers in ascending order\nsorted_writers = df['Writer'].sort_values()\n\n# Print the sorted writers\nprint(sorted_writers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: List the titles of the books in ascending order of issues.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Issues' in ascending order and then by 'Title' in ascending order\ndf = df.sort_values(['Issues', 'Title'], ascending=[True, True])\n\n# Save the titles of the books in ascending order of issues into a variable\ntitles_in_ascending_order = df['Title'].tolist()\n\n# Print the variable\nprint(titles_in_ascending_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: What are the titles of the books whose writer is not \"Elaine Lee\"?", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the writer is not \"Elaine Lee\"\nfiltered_df = df[df['Writer'] != 'Elaine Lee']\n\n# Extract the titles of these books\ntitles = filtered_df['Title'].tolist()\n\n# Save the answer in a variable\nanswer = titles\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: What are the title and issues of the books?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Title' and 'Issues' columns\ntitle_issues = df[['Title', 'Issues']]\n\n# Print the DataFrame\nprint(title_issues)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: What are the dates of publications in descending order of price?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Price' in descending order and 'Publication_Date' in ascending order\ndf = df.sort_values(by=['Price', 'Publication_Date'], ascending=[False, True])\n\n# Select only the 'Publication_Date' column\npublication_dates = df['Publication_Date']\n\n# Save the answer in a variable\nanswer = publication_dates.values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: What are the distinct publishers of publications with price higher than 5000000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include rows where 'Price' is greater than 5000000\ndf_filtered = df[df['Price'] > 5000000]\n\n# Use unique() function to get distinct publishers\ndistinct_publishers = df_filtered['Publisher'].unique()\n\n# Print the distinct publishers\nprint(distinct_publishers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: List the publisher of the publication with the highest price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Price' in descending order\ndf_sorted = df.sort_values('Price', ascending=False)\n\n# Select the first row of the sorted DataFrame\nrow = df_sorted.iloc[0]\n\n# Get the publisher of the publication with the highest price\npublisher_with_highest_price = row['Publisher']\n\nprint(publisher_with_highest_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: List the publication dates of publications with 3 lowest prices.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Price in ascending order\ndf = df.sort_values('Price')\n\n# Select the top 3 rows with the lowest prices\ntop_three_prices = df.head(3)\n\n# Get the publication dates of these publications\npublication_dates = top_three_prices['Publication_Date']\n\n# Print the publication dates\nprint(publication_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: Show publishers that have more than one publication.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of occurrences of each publisher\npublisher_counts = df['Publisher'].value_counts()\n\n# Filter for publishers that have more than one publication\npublishers_multiple_publications = publisher_counts[publisher_counts > 1].index.tolist()\n\n# Print the list of publishers with multiple publications\nprint(publishers_multiple_publications)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: Show different publishers together with the number of publications they have.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\npublishers = df['Publisher'].value_counts()\n\nprint(publishers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: Please show the most common publication date.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Finding the most common publication date\ncommon_date = df['Publication_Date'].mode()[0]\n\n# Printing the most common publication date\nprint(common_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBook_ID,Title,Issues,Writer\n1,The Black Lamb,6.0,Timothy Truman\n2,Bloody Mary,4.0,Garth Ennis\n3,Bloody Mary : Lady Liberty,4.0,Garth Ennis\n4,BrainBanx,6.0,Elaine Lee\n5,Cyberella,12.0,Howard Chaykin\n6,Dead Corps,4.0,Christopher Hinz\n7,The Dome: Ground Zero,1.0,Dave Gibbons\n8,Gemini Blood,9.0,Christopher Hinz\n9,Michael Moorcock's Multiverse,12.0,Michael Moorcock\n10,Sheva's War,5.0,Christopher Moeller\n\nQuestion: List the writers who have written more than one book.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by 'Writer' and count the number of unique 'Book_ID' for each writer\nwriter_counts = df.groupby('Writer')['Book_ID'].nunique()\n\n# Filter writers who have written more than one book\nmultiple_book_writers = writer_counts[writer_counts > 1].index.tolist()\n\n# Save the answer in a variable and print the variable\nprint(multiple_book_writers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to find publishers that have publications with price higher than 10000000\npublishers_high_price = df[df['Price'] > 10000000]['Publisher'].unique()\n\n# Filter dataframe to find publishers that have publications with price lower than 5000000\npublishers_low_price = df[df['Price'] < 5000000]['Publisher'].unique()\n\n# Find common publishers between the two lists\ncommon_publishers = set(publishers_high_price) & set(publishers_low_price)\n\n# Print common publishers\nprint(common_publishers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: What is the number of distinct publication dates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_publication_dates = df['Publication_Date'].nunique()\n\nprint(distinct_publication_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: How many distinct publication dates are there in our record?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_publication_dates = df['Publication_Date'].nunique()\n\nprint(distinct_publication_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPublication_ID,Book_ID,Publisher,Publication_Date,Price\n1,1,Pearson,August 2008,15000000.0\n2,3,Thomson Reuters,March 2008,6000000.0\n3,4,Wiley,June 2006,4100000.0\n4,5,Wiley,October 2005,3000000.0\n5,7,Springer Nature,August 2008,3000000.0\n6,9,Pearson,March 2007,2000000.0\n7,10,Bertelsmann,April 2007,2000000.0\n\nQuestion: Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select rows where the publisher is either \"Person\" or \"Wiley\"\ndf_filtered = df[df['Publisher'].isin(['Person', 'Wiley'])]\n\n# Get the prices of these publications\nprices = df_filtered['Price']\n\n# Print the prices\nprint(prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: How many actors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_actors = len(df)\n\nprint(number_of_actors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: Count the number of actors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_actors = len(df)\n\nprint(number_of_actors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: List the name of actors in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the names of actors alphabetically\nactor_names = df['Name'].sort_values()\n\n# Print the names of actors\nprint(actor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: What are the names of actors, ordered alphabetically?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the names of actors alphabetically\nactor_names = df['Name'].sort_values()\n\n# Print the names of actors\nprint(actor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: What are the characters and duration of actors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Character' and 'Duration' columns\nselected_data = df[['Character', 'Duration']]\n\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: Return the characters and durations for each actor.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Character' and 'Duration' columns\nselected_data = df[['Character', 'Duration']]\n\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: List the name of actors whose age is not 20.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the age is not 20\ndf = df[df['age'] != 20]\n\n# Get the list of actor names\nactor_names = df['Name'].tolist()\n\n# Print the list of actor names\nprint(actor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: What are the names of actors who are not 20 years old?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the age is not 20\ndf = df[df['age'] != 20]\n\n# Get the list of actor names\nactor_names = df['Name'].tolist()\n\n# Print the list of actor names\nprint(actor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: What are the characters of actors in descending order of age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the dataframe by age in descending order\ndf = df.sort_values(by='age', ascending=False)\n\n# Retrieving the characters for actors ordered by age\ncharacters = df['Character'].tolist()\n\n# Printing the characters\nprint(characters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: Return the characters for actors, ordered by age descending.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the dataframe by age in descending order\ndf = df.sort_values(by='age', ascending=False)\n\n# Retrieving the characters for actors ordered by age\ncharacters = df['Character'].tolist()\n\n# Printing the characters\nprint(characters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: What is the duration of the oldest actor?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum age\nmax_age = df['age'].max()\n\n# Get the row with the maximum age\nrow_with_max_age = df[df['age'] == max_age]\n\n# Get the duration of the actor with the maximum age\nanswer = row_with_max_age['Duration'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nActor_ID,Name,Musical_ID,Character,Duration,age\n1,Ray Meagher,1,Alf Stewart,1988—,26\n2,Tom Oliver,1,Lou Carpenter,1988, 1992—,22\n3,Lynne McGranger,2,Irene Roberts,1993—,21\n4,Kate Ritchie,2,Sally Fletcher,1988–2008, 2013,20\n5,Alan Fletcher,4,Karl Kennedy,1994—,20\n6,Jackie Woodburne,6,Susan Kennedy,1994—,20\n7,Ryan Moloney,6,Toadfish Rebecchi,1995, 1996—,18\n8,Ian Smith,6,Harold Bishop,1987–1991, 1996–2009, 2011,17\n9,Stefan Dennis,6,Paul Robinson,1985–1992, 1993, 2004—,17\n\nQuestion: Return the duration of the actor with the greatest age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum age\nmax_age = df['age'].max()\n\n# Get the row with the maximum age\nrow_with_max_age = df[df['age'] == max_age]\n\n# Get the duration of the actor with the maximum age\nanswer = row_with_max_age['Duration'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: What are the names of musicals with nominee \"Bob Fosse\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Nominee'] == 'Bob Fosse']\nmusical_names = df_filtered['Name'].tolist()\n\nprint(musical_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Return the names of musicals who have the nominee Bob Fosse.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Nominee'] == 'Bob Fosse']\nmusical_names = df_filtered['Name'].tolist()\n\nprint(musical_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only those rows where 'Award' is not 'Tony Award'\ndf = df[df['Award'] != 'Tony Award']\n\n# Get the unique nominees from the filtered dataframe\ndistinct_nominees = df['Nominee'].unique()\n\n# Print the distinct nominees\nprint(distinct_nominees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Return the different nominees of musicals that have an award that is not the Tony Award.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only those rows where 'Award' is not 'Tony Award'\ndf = df[df['Award'] != 'Tony Award']\n\n# Get the unique nominees from the filtered dataframe\ndistinct_nominees = df['Nominee'].unique()\n\n# Print the distinct nominees\nprint(distinct_nominees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Show different nominees and the number of musicals they have been nominated.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use groupby to count the number of times each nominee appears in the DataFrame\nnominee_counts = df['Nominee'].value_counts()\n\n# Print the number of times each nominee appears\nprint(nominee_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: How many musicals has each nominee been nominated for?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use groupby to count the number of times each nominee appears in the DataFrame\nnominee_counts = df['Nominee'].value_counts()\n\n# Print the number of times each nominee appears\nprint(nominee_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Please show the nominee who has been nominated the greatest number of times.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where the result is 'Nominated'\nnominated_df = df[df['Result'] == 'Nominated']\n\n# Count the number of times each nominee appears in the filtered dataframe\nnomination_counts = nominated_df['Nominee'].value_counts()\n\n# Find the nominee who has been nominated for the most musicals\nmost_nominated_nominee = nomination_counts.idxmax()\n\n# Save the answer in a variable\nanswer = most_nominated_nominee\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Who is the nominee who has been nominated for the most musicals?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where the result is 'Nominated'\nnominated_df = df[df['Result'] == 'Nominated']\n\n# Count the number of times each nominee appears in the filtered dataframe\nnomination_counts = nominated_df['Nominee'].value_counts()\n\n# Find the nominee who has been nominated for the most musicals\nmost_nominated_nominee = nomination_counts.idxmax()\n\n# Save the answer in a variable\nanswer = most_nominated_nominee\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: List the most common result of the musicals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Result'].value_counts()\n\nanswer = df['Result'].value_counts().idxmax()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Return the most frequent result across all musicals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Result'].value_counts()\n\nanswer = df['Result'].value_counts().idxmax()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: List the nominees that have been nominated more than two musicals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of times each nominee appears in the dataframe\nnominee_counts = df['Nominee'].value_counts()\n\n# Select the nominees that have been nominated more than two times\nmore_than_two = nominee_counts[nominee_counts > 2]\n\n# Save the answer in a variable\nanswer = more_than_two.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Who are the nominees who have been nominated more than two times?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of times each nominee appears in the dataframe\nnominee_counts = df['Nominee'].value_counts()\n\n# Select the nominees that have been nominated more than two times\nmore_than_two = nominee_counts[nominee_counts > 2]\n\n# Save the answer in a variable\nanswer = more_than_two.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Show the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\".", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter data for Tony Award\ntony_award_df = df[df['Award'] == 'Tony Award']\n\n# filter data for Drama Desk Award\ndrama_desk_award_df = df[df['Award'] == 'Drama Desk Award']\n\n# get the nominees who have been nominated for both Tony Award and Drama Desk Award\ncommon_nominees = set(tony_award_df['Nominee']).intersection(set(drama_desk_award_df['Nominee']))\n\n# print the answer\nprint(common_nominees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMusical_ID,Name,Year,Award,Category,Nominee,Result\n1,The Phantom of the Opera,1986,Tony Award,Best Book of a Musical,Bob Fosse,Nominated\n2,Les Misérables,1986,Tony Award,Best Performance by a Leading Actor in a Musical,Cleavant Derricks,Nominated\n3,Wicked,1986,Tony Award,Best Direction of a Musical,Bob Fosse,Nominated\n4,West Side Story,1986,Tony Award,Best Choreography,Bob Fosse,Won\n5,Rent,1986,Drama Desk Award,Outstanding Actor in a Musical,Cleavant Derricks,Nominated\n6,The Book of Mormon,1986,Drama Desk Award,Outstanding Director of a Musical,Bob Fosse,Nominated\n7,Chicago,1986,Drama Desk Award,Outstanding Choreography,Bob Fosse,Won\n\nQuestion: Who are the nominees who have been nominated for both a Tony Award and a Drama Desk Award?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter data for Tony Award\ntony_award_df = df[df['Award'] == 'Tony Award']\n\n# filter data for Drama Desk Award\ndrama_desk_award_df = df[df['Award'] == 'Drama Desk Award']\n\n# get the nominees who have been nominated for both Tony Award and Drama Desk Award\ncommon_nominees = set(tony_award_df['Nominee']).intersection(set(drama_desk_award_df['Nominee']))\n\n# print the answer\nprint(common_nominees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the emails of the user named \"Mary\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the emails of the user named \"Mary\"\nmary_email = df.loc[df['name'] == 'Mary', 'email'].values[0]\n\nprint(mary_email)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: What is the partition id of the user named \"Iron Man\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get the row where name is \"Iron Man\"\niron_man_df = df[df['name'] == 'Iron Man']\n\n# Get the partitionid of Iron Man\npartition_id = iron_man_df['partitionid'].values[0]\n\n# Print the partition id\nprint(partition_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: How many users are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of users\nnum_users = df.shape[0]\n\n# Print the number of users\nprint(num_users)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf1,f2\n1,2\n2,3\n7,1\n1,3\n3,6\n5,6\n5,1\n1,5\n3,4\n\nQuestion: How many followers does each user have?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of rows in the DataFrame\nnum_followers = len(df)\n\n# Print the result\nprint(num_followers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf1,f2\n1,2\n2,3\n7,1\n1,3\n3,6\n5,6\n5,1\n1,5\n3,4\n\nQuestion: Find the number of followers for each user.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'f1' and count the number of 'f2' values for each group\nfollower_count = df.groupby('f1')['f2'].count()\n\n# Print the result\nprint(follower_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,uid,text,createdate\n1,1,Hello I'm Tony Stark.,2018-03-09 20:00:14\n2,3,Today I have went shopping at Laffayette.,2018-03-09 20:01:02\n4,1,My company is hiring interns.,2018-03-12 02:30:30\n5,4,Oh, I only have a few fans.,2018-03-12 02:30:30\n6,6,Let’s celebrate women, fight for equality and support each other,  not just today, but everyday!,2018-03-12 02:30:30\n7,5,I love my new boyfriend.,2018-03-12 02:30:30\n8,4,I feel tired and don't want to write SQLs.,2018-03-12 02:30:30\n9,6,I had a pretty rough time during the last couple of weeks,2018-03-12 02:30:30\n\nQuestion: Find the number of tweets in record.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of tweets\nnum_tweets = len(df)\n\n# Print the number of tweets\nprint(num_tweets)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,uid,text,createdate\n1,1,Hello I'm Tony Stark.,2018-03-09 20:00:14\n2,3,Today I have went shopping at Laffayette.,2018-03-09 20:01:02\n4,1,My company is hiring interns.,2018-03-12 02:30:30\n5,4,Oh, I only have a few fans.,2018-03-12 02:30:30\n6,6,Let’s celebrate women, fight for equality and support each other,  not just today, but everyday!,2018-03-12 02:30:30\n7,5,I love my new boyfriend.,2018-03-12 02:30:30\n8,4,I feel tired and don't want to write SQLs.,2018-03-12 02:30:30\n9,6,I had a pretty rough time during the last couple of weeks,2018-03-12 02:30:30\n\nQuestion: Find the number of users who posted some tweets.", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique uid values\nnum_users = df['uid'].nunique()\n\n# Print the number of users\nprint(num_users)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the name and email of the user whose name contains the word ‘Swift’.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get rows where name contains 'Swift'\nfiltered_df = df[df['name'].str.contains('Swift')]\n\n# Get the name and email of the user\nname_email = filtered_df[['name', 'email']]\n\n# Print the name and email\nprint(name_email)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the names of users whose emails contain ‘superstar’ or ‘edu’.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the rows where the email contains 'superstar' or 'edu'\nfiltered_df = df[df['email'].str.contains('superstar|edu')]\n\n# Extract the names of the users\nnames = filtered_df['name'].tolist()\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,uid,text,createdate\n1,1,Hello I'm Tony Stark.,2018-03-09 20:00:14\n2,3,Today I have went shopping at Laffayette.,2018-03-09 20:01:02\n4,1,My company is hiring interns.,2018-03-12 02:30:30\n5,4,Oh, I only have a few fans.,2018-03-12 02:30:30\n6,6,Let’s celebrate women, fight for equality and support each other,  not just today, but everyday!,2018-03-12 02:30:30\n7,5,I love my new boyfriend.,2018-03-12 02:30:30\n8,4,I feel tired and don't want to write SQLs.,2018-03-12 02:30:30\n9,6,I had a pretty rough time during the last couple of weeks,2018-03-12 02:30:30\n\nQuestion: Return the text of tweets about the topic 'intern'.", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Finding the text containing the topic 'intern'\nintern_tweets = df[df['text'].str.contains('intern')]['text']\n\n# Printing the texts\nfor tweet in intern_tweets:\n    print(tweet)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the name and email of the users who have more than 1000 followers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for users with more than 1000 followers\nfiltered_df = df[df['followers'] > 1000]\n\n# Select the name and email columns of the filtered dataframe\nanswer = filtered_df[['name', 'email']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the name of the user who has the largest number of followers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_followers = df['followers'].max()\nuser_name = df.loc[df['followers'] == max_followers, 'name'].values[0]\nprint(user_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: Find the name and email of the user followed by the least number of people.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmin_followers = df['followers'].min()\nuser_with_least_followers = df[df['followers'] == min_followers][['name', 'email']]\n\nprint(user_with_least_followers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: List the name and number of followers for each user, and sort the results by the number of followers in descending order.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Fill missing values in 'followers' column with 0\ndf['followers'].fillna(0, inplace=True)\n\n# Convert 'followers' column to integer\ndf['followers'] = df['followers'].astype(int)\n\n# Group by 'name' and sum the 'followers'\nresult = df.groupby('name')['followers'].sum().reset_index()\n\n# Sort the result in descending order by 'followers'\nresult.sort_values(by='followers', ascending=False, inplace=True)\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuid,name,email,partitionid,followers\n1,Iron Man,ts@richest.com,1,6662425\n2,Mary,Mary@yale.edu,2,890\n3,Black Widow\n,bw@superhero.com,23,35425845\n4,Susan,susan@gmail.com\n,1,100\n5,Tyler Swift,ts@superstar.com\n,10,99999998\n6,Celine Dion,cd@superstar.com,5,23927492\n7,Natalie Portman,np@superstar.com,5,94375428\n\nQuestion: List the names of 5 users followed by the largest number of other users.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by followers in descending order\ndf_sorted = df.sort_values(by='followers', ascending=False)\n\n# Select the first 5 users\ntop_users = df_sorted.head(5)\n\n# Save the answer in a variable\nanswer = top_users['name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,uid,text,createdate\n1,1,Hello I'm Tony Stark.,2018-03-09 20:00:14\n2,3,Today I have went shopping at Laffayette.,2018-03-09 20:01:02\n4,1,My company is hiring interns.,2018-03-12 02:30:30\n5,4,Oh, I only have a few fans.,2018-03-12 02:30:30\n6,6,Let’s celebrate women, fight for equality and support each other,  not just today, but everyday!,2018-03-12 02:30:30\n7,5,I love my new boyfriend.,2018-03-12 02:30:30\n8,4,I feel tired and don't want to write SQLs.,2018-03-12 02:30:30\n9,6,I had a pretty rough time during the last couple of weeks,2018-03-12 02:30:30\n\nQuestion: List the text of all tweets in the order of date.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert the 'createdate' column to datetime format\ndf['createdate'] = pd.to_datetime(df['createdate'])\n\n# Sort the dataframe by 'createdate'\ndf = df.sort_values('createdate')\n\n# Save the answer in a variable\ntweets_in_order = df['text'].tolist()\n\n# Print the variable\nprint(tweets_in_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the names of all the catalog entries.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the names of all the catalog entries\ncatalog_entry_names = df['catalog_entry_name']\n\nprint(catalog_entry_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: What are all the catalog entry names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the names of all the catalog entries\ncatalog_entry_names = df['catalog_entry_name']\n\nprint(catalog_entry_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nattribute_id,attribute_name,attribute_data_type\n1,Green,Bool\n2,Black,Bool\n3,Yellow,Bool\n4,Sweet,Bool\n\nQuestion: Find the list of attribute data types possessed by more than 3 attribute definitions.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by the 'attribute_data_type' column\ngrouped = df.groupby('attribute_data_type')\n\n# Filter the grouped DataFrame to only include groups with more than 3 members\nfiltered = grouped.filter(lambda x: len(x) > 3)\n\n# Get the unique 'attribute_data_type' values from the filtered DataFrame\nanswer = filtered['attribute_data_type'].unique().tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nattribute_id,attribute_name,attribute_data_type\n1,Green,Bool\n2,Black,Bool\n3,Yellow,Bool\n4,Sweet,Bool\n\nQuestion: What are the attribute data types with more than 3 attribute definitions?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by the 'attribute_data_type' column\ngrouped = df.groupby('attribute_data_type')\n\n# Filter the grouped DataFrame to only include groups with more than 3 members\nfiltered = grouped.filter(lambda x: len(x) > 3)\n\n# Get the unique 'attribute_data_type' values from the filtered DataFrame\nanswer = filtered['attribute_data_type'].unique().tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nattribute_id,attribute_name,attribute_data_type\n1,Green,Bool\n2,Black,Bool\n3,Yellow,Bool\n4,Sweet,Bool\n\nQuestion: What is the attribute data type of the attribute with name \"Green\"?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame to get only the row where the attribute name is \"Green\"\ngreen_df = df[df['attribute_name'] == 'Green']\n\n# Extracting the attribute data type from the filtered DataFrame\nattribute_data_type = green_df['attribute_data_type'].values[0]\n\n# Printing the attribute data type\nprint(attribute_data_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nattribute_id,attribute_name,attribute_data_type\n1,Green,Bool\n2,Black,Bool\n3,Yellow,Bool\n4,Sweet,Bool\n\nQuestion: Find the attribute data type for the attribute named \"Green\".", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame to get only the row where the attribute name is \"Green\"\ngreen_df = df[df['attribute_name'] == 'Green']\n\n# Extracting the attribute data type from the filtered DataFrame\nattribute_data_type = green_df['attribute_data_type'].values[0]\n\n# Printing the attribute data type\nprint(attribute_data_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_level_number,catalog_id,catalog_level_name\n1,1,Category\n8,2,Sub-Category\n9,8,Product\n\nQuestion: Find the name and level of catalog structure with level between 5 and 10.", "response": "import pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to find rows with level between 5 and 10\nfiltered_df = df[(df['catalog_level_number'] > 5) & (df['catalog_level_number'] < 10)]\n\n# Finding the name and level of catalog structure\nresult = filtered_df[['catalog_level_name', 'catalog_level_number']]\n\n# Printing the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_level_number,catalog_id,catalog_level_name\n1,1,Category\n8,2,Sub-Category\n9,8,Product\n\nQuestion: What are the name and level of catalog structure with level number between 5 and 10", "response": "import pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to find rows with level between 5 and 10\nfiltered_df = df[(df['catalog_level_number'] > 5) & (df['catalog_level_number'] < 10)]\n\n# Finding the name and level of catalog structure\nresult = filtered_df[['catalog_level_name', 'catalog_level_number']]\n\n# Printing the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_id,catalog_name,catalog_publisher,date_of_publication,date_of_latest_revision\n1,Chocolate,Koepp-Rutherford handmade chocolate store,2013-03-15 05:09:17,2017-09-26 12:10:36\n2,Coffee Bean,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n3,Lemonade,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n4,Breakfast Tea,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n5,Coco powder,Lidl,2013-03-15 05:09:17,2017-09-26 12:10:36\n6,Latte,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n7,Sparkling Water,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n8,Jam,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n\nQuestion: Find all the catalog publishers whose name contains \"Murray\"", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by rows where 'catalog_publisher' contains the substring 'Murray'\nfiltered_df = df[df['catalog_publisher'].str.contains('Murray')]\n\n# Extract the unique publisher names\npublisher_names = filtered_df['catalog_publisher'].unique()\n\n# Print the publisher names\nfor name in publisher_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_id,catalog_name,catalog_publisher,date_of_publication,date_of_latest_revision\n1,Chocolate,Koepp-Rutherford handmade chocolate store,2013-03-15 05:09:17,2017-09-26 12:10:36\n2,Coffee Bean,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n3,Lemonade,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n4,Breakfast Tea,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n5,Coco powder,Lidl,2013-03-15 05:09:17,2017-09-26 12:10:36\n6,Latte,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n7,Sparkling Water,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n8,Jam,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n\nQuestion: Which catalog publishers have substring \"Murray\" in their names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame by rows where 'catalog_publisher' contains the substring 'Murray'\nfiltered_df = df[df['catalog_publisher'].str.contains('Murray')]\n\n# Extract the unique publisher names\npublisher_names = filtered_df['catalog_publisher'].unique()\n\n# Print the publisher names\nfor name in publisher_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: What is the entry name of the most expensive catalog (in USD)?", "response": "# Python Code:\n\nimport pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum price in USD\nmax_price = df['price_in_dollars'].max()\n\n# Get the corresponding entry name\nentry_name = df.loc[df['price_in_dollars'] == max_price, 'catalog_entry_name'].values[0]\n\n# Print the result\nprint(entry_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the entry name of the catalog with the highest price (in USD).", "response": "# Python Code:\n\nimport pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum price in USD\nmax_price = df['price_in_dollars'].max()\n\n# Get the corresponding entry name\nentry_name = df.loc[df['price_in_dollars'] == max_price, 'catalog_entry_name'].values[0]\n\n# Print the result\nprint(entry_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: What is the product with the highest height? Give me the catalog entry name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum height\nmax_height_row = df[df['height'] == df['height'].max()]\n\n# Save the answer in a variable\nanswer = max_height_row['catalog_entry_name'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Which catalog content has the highest height? Give me the catalog entry name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum height\nmax_height_row = df[df['height'] == df['height'].max()]\n\n# Save the answer in a variable\nanswer = max_height_row['catalog_entry_name'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the name of the product that has the smallest capacity.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the minimum capacity\nmin_capacity = df['capacity'].min()\n\n# Get the catalog entry name for the minimum capacity\ncatalog_name = df.loc[df['capacity'] == min_capacity, 'catalog_entry_name'].values[0]\n\n# Print the catalog name\nprint(catalog_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Which catalog content has the smallest capacity? Return the catalog entry name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the minimum capacity\nmin_capacity = df['capacity'].min()\n\n# Get the catalog entry name for the minimum capacity\ncatalog_name = df.loc[df['capacity'] == min_capacity, 'catalog_entry_name'].values[0]\n\n# Print the catalog name\nprint(catalog_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the names of all the products whose stock number starts with \"2\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Check if the stock number starts with \"2\"\ndf['starts_with_2'] = df['product_stock_number'].str.startswith('2')\n\n# Filter the rows where the stock number starts with \"2\"\ndf_starts_with_2 = df[df['starts_with_2'] == True]\n\n# Get the names of the products\nproduct_names = df_starts_with_2['catalog_entry_name'].tolist()\n\n# Print the names of the products\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Check if the stock number starts with \"2\"\ndf['starts_with_2'] = df['product_stock_number'].str.startswith('2')\n\n# Filter the rows where the stock number starts with \"2\"\ndf_starts_with_2 = df[df['starts_with_2'] == True]\n\n# Get the names of the products\nproduct_names = df_starts_with_2['catalog_entry_name'].tolist()\n\n# Print the names of the products\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the name and capacity of products with price greater than 700 (in USD).", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where price_in_dollars is above 700\nfiltered_df = df[df['price_in_dollars'] > 700]\n\n# Select the catalog_entry_name and capacity columns from the filtered dataframe\nanswer = filtered_df[['catalog_entry_name', 'capacity']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where price_in_dollars is above 700\nfiltered_df = df[df['price_in_dollars'] > 700]\n\n# Select the catalog_entry_name and capacity columns from the filtered dataframe\nanswer = filtered_df[['catalog_entry_name', 'capacity']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_id,catalog_name,catalog_publisher,date_of_publication,date_of_latest_revision\n1,Chocolate,Koepp-Rutherford handmade chocolate store,2013-03-15 05:09:17,2017-09-26 12:10:36\n2,Coffee Bean,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n3,Lemonade,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n4,Breakfast Tea,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n5,Coco powder,Lidl,2013-03-15 05:09:17,2017-09-26 12:10:36\n6,Latte,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n7,Sparkling Water,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n8,Jam,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n\nQuestion: Find the dates on which more than one revisions were made.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_of_latest_revision' to datetime\ndf['date_of_latest_revision'] = pd.to_datetime(df['date_of_latest_revision'])\n\n# Group by 'date_of_latest_revision' and count the number of rows in each group\ngrouped = df.groupby('date_of_latest_revision').size()\n\n# Filter the groups where the count is more than 1\nmore_than_one_revision_days = grouped[grouped > 1].index.tolist()\n\n# Print the days\nprint(more_than_one_revision_days)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_id,catalog_name,catalog_publisher,date_of_publication,date_of_latest_revision\n1,Chocolate,Koepp-Rutherford handmade chocolate store,2013-03-15 05:09:17,2017-09-26 12:10:36\n2,Coffee Bean,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n3,Lemonade,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n4,Breakfast Tea,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n5,Coco powder,Lidl,2013-03-15 05:09:17,2017-09-26 12:10:36\n6,Latte,Murray Coffee shop,2012-04-13 06:37:09,2017-10-26 01:16:51\n7,Sparkling Water,Russel-Gislason Lemon shop,2012-11-27 19:29:22,2017-12-04 06:48:13\n8,Jam,Grady & Kautzer,2011-07-22 04:57:19,2017-03-30 09:15:37\n\nQuestion: On which days more than one revisions were made on catalogs.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_of_latest_revision' to datetime\ndf['date_of_latest_revision'] = pd.to_datetime(df['date_of_latest_revision'])\n\n# Group by 'date_of_latest_revision' and count the number of rows in each group\ngrouped = df.groupby('date_of_latest_revision').size()\n\n# Filter the groups where the count is more than 1\nmore_than_one_revision_days = grouped[grouped > 1].index.tolist()\n\n# Print the days\nprint(more_than_one_revision_days)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: How many products are there in the records?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of products\nnum_products = df.shape[0]\n\n# Print the number of products\nprint(num_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Find the total number of catalog contents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of products\nnum_products = df.shape[0]\n\n# Print the number of products\nprint(num_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: Name all the products with next entry ID greater than 8.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where next_entry_id is greater than 8\nfiltered_df = df[df['next_entry_id'] > 8]\n\n# Print the names of the products\nproduct_names = filtered_df['catalog_entry_name'].tolist()\n\n# Save the answer in a variable\nanswer = product_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncatalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width\n1,1,5,9,7,Cola,89 cp,200.78,159.84,172.17,1,3,9,5\n2,8,6,9,8,Root beer,37 hq,687.59,590.11,471.78,8,6,5,6\n3,8,6,6,1,Cream Soda,52 ee,360.5,202.32,110.32,5,9,7,8\n4,1,7,8,6,Carbonated Water,15 mr,667.89,458.45,349.01,8,6,2,1\n5,9,4,7,6,Ginger Beer,42 cp,616.22,537.66,405.75,5,5,7,9\n6,1,3,4,8,Tizer,61 py,642.37,434.21,331.43,6,6,7,1\n7,9,7,3,3,Vimto,01 ap,745.02,510.32,497.4,6,9,6,5\n8,8,6,5,3,Ramune,53 bg,574.35,441.82,440.52,4,4,7,5\n9,1,7,9,9,Sprite Lemo,24 ec,952.37,703.17,433.82,8,7,1,3\n10,8,5,6,6,Dr Pepper,26 op,777.41,616.54,572.41,1,6,1,6\n\nQuestion: What are the catalog entry names of the products with next entry ID above 8?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where next_entry_id is greater than 8\nfiltered_df = df[df['next_entry_id'] > 8]\n\n# Print the names of the products\nproduct_names = filtered_df['catalog_entry_name'].tolist()\n\n# Save the answer in a variable\nanswer = product_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: How many aircrafts do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of aircrafts\nnum_aircrafts = df.shape[0]\n\nprint(num_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: How many aircrafts exist in the database?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of aircrafts\nnum_aircrafts = df.shape[0]\n\nprint(num_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Show name and distance for all aircrafts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# What are the names and distances for all airplanes?\n\nanswer = df[['name', 'distance']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What are the names and distances for all airplanes?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# What are the names and distances for all airplanes?\n\nanswer = df[['name', 'distance']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Show ids for all aircrafts with more than 1000 distance.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter aircrafts that can cover a distance of more than 1000\nfiltered_df = df[df['distance'] > 1000]\n\n# Get the ids of the aircrafts\nids = filtered_df['aid']\n\n# Print the ids\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What are the ids of all aircrafts that can cover a distance of more than 1000?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter aircrafts that can cover a distance of more than 1000\nfiltered_df = df[df['distance'] > 1000]\n\n# Get the ids of the aircrafts\nids = filtered_df['aid']\n\n# Print the ids\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: How many aircrafts have distance between 1000 and 5000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame based on the distance condition\ndf_filtered = df[(df['distance'] >= 1000) & (df['distance'] <= 5000)]\n\n# Count the number of aircrafts that meet the condition\ncount_aircrafts = df_filtered.shape[0]\n\n# Print the count\nprint(count_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What is the count of aircrafts that have a distance between 1000 and 5000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame based on the distance condition\ndf_filtered = df[(df['distance'] >= 1000) & (df['distance'] <= 5000)]\n\n# Count the number of aircrafts that meet the condition\ncount_aircrafts = df_filtered.shape[0]\n\n# Print the count\nprint(count_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What is the name and distance for aircraft with id 12?", "response": "# Import necessary module\nimport pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the aircraft with an id of 12\nfiltered_data = df[df['aid'] == 12]\n\n# Save the answer in a variable\nanswer = filtered_data[['name', 'distance']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What is the name and distance for the aircraft that has an id of 12?", "response": "# Import necessary module\nimport pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the aircraft with an id of 12\nfiltered_data = df[df['aid'] == 12]\n\n# Save the answer in a variable\nanswer = filtered_data[['name', 'distance']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What is the minimum, average, and maximum distance of all aircrafts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, average and maximum distance\nmin_distance = df['distance'].min()\navg_distance = df['distance'].mean()\nmax_distance = df['distance'].max()\n\n# Save the answers in a variable\nanswer = {\n    'Minimum Distance': min_distance,\n    'Average Distance': avg_distance,\n    'Maximum Distance': max_distance\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Return the minimum, average and maximum distances traveled across all aircrafts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, average and maximum distance\nmin_distance = df['distance'].min()\navg_distance = df['distance'].mean()\nmax_distance = df['distance'].max()\n\n# Save the answers in a variable\nanswer = {\n    'Minimum Distance': min_distance,\n    'Average Distance': avg_distance,\n    'Maximum Distance': max_distance\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Show the id and name of the aircraft with the maximum distance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum distance\nmax_distance = df['distance'].max()\n\n# Find the aircraft that can cover the maximum distance\nmax_distance_aircraft = df[df['distance'] == max_distance]\n\n# Get the id and name of the aircraft\nmax_distance_aircraft_id_name = max_distance_aircraft[['aid', 'name']]\n\n# Print the result\nprint(max_distance_aircraft_id_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What is the id and name of the aircraft that can cover the maximum distance?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum distance\nmax_distance = df['distance'].max()\n\n# Find the aircraft that can cover the maximum distance\nmax_distance_aircraft = df[df['distance'] == max_distance]\n\n# Get the id and name of the aircraft\nmax_distance_aircraft_id_name = max_distance_aircraft[['aid', 'name']]\n\n# Print the result\nprint(max_distance_aircraft_id_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Show the name of aircrafts with top three lowest distances.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_sorted = df.sort_values('distance')\ntop_three_names = df_sorted['name'].head(3)\n\nprint(top_three_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What are the aircrafts with top 3 shortest lengthes? List their names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_sorted = df.sort_values('distance')\ntop_three_names = df_sorted['name'].head(3)\n\nprint(top_three_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: Show names for all aircrafts with distances more than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_distance = df['distance'].mean()\n\n# Get names of aircrafts that can cover more distances than average\nfiltered_df = df[df['distance'] > average_distance]\naircrafts_covering_more_distance = filtered_df['name'].tolist()\n\n# Print the answer\nprint(aircrafts_covering_more_distance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naid,name,distance\n1,Boeing 747-400,8430\n2,Boeing 737-800,3383\n3,Airbus A340-300,7120\n4,British Aerospace Jetstream 41,1502\n5,Embraer ERJ-145,1530\n6,SAAB 340,2128\n7,Piper Archer III,520\n8,Tupolev 154,4103\n16,Schwitzer 2-33,30\n9,Lockheed L1011,6900\n\nQuestion: What are the names of all aircrafts that can cover more distances than average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_distance = df['distance'].mean()\n\n# Get names of aircrafts that can cover more distances than average\nfiltered_df = df[df['distance'] > average_distance]\naircrafts_covering_more_distance = filtered_df['name'].tolist()\n\n# Print the answer\nprint(aircrafts_covering_more_distance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: How many employees do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nnum_of_employees = len(df)\nprint(num_of_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the number of employees?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nnum_of_employees = len(df)\nprint(num_of_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show name and salary for all employees sorted by salary.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by salary\ndf_sorted = df.sort_values(by='salary')\n\n# select the name and salary columns\nresult = df_sorted[['name', 'salary']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the name and salary of all employees in order of salary?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by salary\ndf_sorted = df.sort_values(by='salary')\n\n# select the name and salary columns\nresult = df_sorted[['name', 'salary']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show ids for all employees with at least 100000 salary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get employees who have a salary of at least 100000\nfiltered_df = df[df['salary'] >= 100000]\n\n# Get the id of those employees\nemployee_ids = filtered_df['eid']\n\n# Print the id of those employees\nprint(employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the id of every employee who has at least a salary of  100000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get employees who have a salary of at least 100000\nfiltered_df = df[df['salary'] >= 100000]\n\n# Get the id of those employees\nemployee_ids = filtered_df['eid']\n\n# Print the id of those employees\nprint(employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: How many employees have salary between 100000 and 200000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only employees with salary between 100000 and 200000\nfiltered_df = df[(df['salary'] >= 100000) & (df['salary'] <= 200000)]\n\n# Count the number of employees in the filtered dataframe\nnum_employees = len(filtered_df)\n\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the number of employees that have a salary between 100000 and 200000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only employees with salary between 100000 and 200000\nfiltered_df = df[(df['salary'] >= 100000) & (df['salary'] <= 200000)]\n\n# Count the number of employees in the filtered dataframe\nnum_employees = len(filtered_df)\n\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the name and salary for employee with id 242518965?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where eid is 242518965\nresult = df[df['eid'] == 242518965][['name', 'salary']]\n\n# Save the answer in a variable\nanswer = result.values.tolist()[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the name and salary of the employee with the id 242518965?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where eid is 242518965\nresult = df[df['eid'] == 242518965][['name', 'salary']]\n\n# Save the answer in a variable\nanswer = result.values.tolist()[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show the id and name of the employee with maximum salary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with maximum salary\nmax_salary_idx = df['salary'].idxmax()\n\n# Retrieve the id and name of the employee with maximum salary\nmax_salary_emp = df.loc[max_salary_idx, ['eid', 'name']]\n\n# Print the id and name of the employee with maximum salary\nprint(max_salary_emp)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the id and name of the employee with the highest salary?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with maximum salary\nmax_salary_idx = df['salary'].idxmax()\n\n# Retrieve the id and name of the employee with maximum salary\nmax_salary_emp = df.loc[max_salary_idx, ['eid', 'name']]\n\n# Print the id and name of the employee with maximum salary\nprint(max_salary_emp)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show the name of employees with three lowest salaries.", "response": "# Import necessary libraries\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by salary in ascending order\ndf = df.sort_values(by=['salary'])\n\n# Select the 3 employees with the lowest salaries\nlowest_paid_employees = df['name'].head(3)\n\n# Print the names of the 3 employees with the lowest salaries\nprint(lowest_paid_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the name of the 3 employees who get paid the least?", "response": "# Import necessary libraries\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by salary in ascending order\ndf = df.sort_values(by=['salary'])\n\n# Select the 3 employees with the lowest salaries\nlowest_paid_employees = df['name'].head(3)\n\n# Print the names of the 3 employees with the lowest salaries\nprint(lowest_paid_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show names for all employees with salary more than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nimport numpy as np\n\naverage_salary = df['salary'].mean()\n\nresult = df[df['salary'] > average_salary]['name']\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What are the names of all employees who have a salary higher than average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nimport numpy as np\n\naverage_salary = df['salary'].mean()\n\nresult = df[df['salary'] > average_salary]['name']\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: Show the id and salary of Mark Young.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include employees named Mark Young\nmark_young_df = df[df['name'] == 'Mark Young']\n\n# Check if there is any employee named Mark Young\nif not mark_young_df.empty:\n    # Save the answer in a variable and print it\n    answer = mark_young_df[['eid', 'salary']]\n    print(answer)\nelse:\n    print(\"There is no employee named Mark Young.\")\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,name,salary\n242518965,James Smith,120433\n141582651,Mary Johnson,178345\n11564812,John Williams,153972\n567354612,Lisa Walker,256481\n552455318,Larry West,101745\n550156548,Karen Scott,205187\n390487451,Lawrence Sperry,212156\n274878974,Michael Miller,99890\n254099823,Patricia Jones,24450\n356187925,Robert Brown,44740\n\nQuestion: What is the id and salary of the employee named Mark Young?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include employees named Mark Young\nmark_young_df = df[df['name'] == 'Mark Young']\n\n# Check if there is any employee named Mark Young\nif not mark_young_df.empty:\n    # Save the answer in a variable and print it\n    answer = mark_young_df[['eid', 'salary']]\n    print(answer)\nelse:\n    print(\"There is no employee named Mark Young.\")\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: How many flights do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of flights\nnum_flights = df.shape[0]\n\n# Print the number of flights\nprint(num_flights)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the number of flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of flights\nnum_flights = df.shape[0]\n\n# Print the number of flights\nprint(num_flights)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by departure cities in alphabetical order\ndf = df.sort_values('origin')\n\n# Select the required columns\ndf = df[['flno', 'origin', 'destination']]\n\n# Print the result\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by departure cities in alphabetical order\ndf = df.sort_values('origin')\n\n# Select the required columns\ndf = df[['flno', 'origin', 'destination']]\n\n# Print the result\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show all flight number from Los Angeles.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all flight numbers coming from Los Angeles\nflights_from_LA = df.loc[df['origin'] == 'Los Angeles', 'flno']\n\n# Print the flight numbers\nprint(flights_from_LA)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the numbers of all flights coming from Los Angeles?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all flight numbers coming from Los Angeles\nflights_from_LA = df.loc[df['origin'] == 'Los Angeles', 'flno']\n\n# Print the flight numbers\nprint(flights_from_LA)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show origins of all flights with destination Honolulu.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where destination is 'Honolulu'\nhonolulu_flights = df[df['destination'] == 'Honolulu']\n\n# Extract the 'origin' column from the filtered dataframe\norigins = honolulu_flights['origin']\n\n# Save the answer in a variable\nhonolulu_origins = origins.values.tolist()\n\n# Print the variable\nprint(honolulu_origins)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the origins of all flights that are headed to Honolulu?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where destination is 'Honolulu'\nhonolulu_flights = df[df['destination'] == 'Honolulu']\n\n# Extract the 'origin' column from the filtered dataframe\norigins = honolulu_flights['origin']\n\n# Save the answer in a variable\nhonolulu_origins = origins.values.tolist()\n\n# Print the variable\nprint(honolulu_origins)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for flights from Los Angeles to Honolulu\nla_to_honolulu = df.loc[(df['origin'] == 'Los Angeles') & (df['destination'] == 'Honolulu')]\n\n# Select departure_date and arrival_date columns\ndates = la_to_honolulu[['departure_date', 'arrival_date']]\n\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the departure and arrival dates of all flights from LA to Honolulu?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for flights from Los Angeles to Honolulu\nla_to_honolulu = df.loc[(df['origin'] == 'Los Angeles') & (df['destination'] == 'Honolulu')]\n\n# Select departure_date and arrival_date columns\ndates = la_to_honolulu[['departure_date', 'arrival_date']]\n\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show flight number for all flights with more than 2000 distance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to include only rows where the distance is greater than 2000\ndf_filtered = df[df['distance'] > 2000]\n\n# Save the answer in a variable\nanswer = df_filtered['flno'].values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the numbers of all flights that can cover a distance of more than 2000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to include only rows where the distance is greater than 2000\ndf_filtered = df[df['distance'] > 2000]\n\n# Save the answer in a variable\nanswer = df_filtered['flno'].values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the average price for flights from Los Angeles to Honolulu.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include flights from Los Angeles (origin) to Honolulu (destination)\nla_to_honolulu = df[(df['origin'] == 'Los Angeles') & (df['destination'] == 'Honolulu')]\n\n# Calculate the average price\naverage_price = la_to_honolulu['price'].mean()\n\n# Print the average price\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the average price for flights from LA to Honolulu?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include flights from Los Angeles (origin) to Honolulu (destination)\nla_to_honolulu = df[(df['origin'] == 'Los Angeles') & (df['destination'] == 'Honolulu')]\n\n# Calculate the average price\naverage_price = la_to_honolulu['price'].mean()\n\n# Print the average price\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show origin and destination for flights with price higher than 300.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe where price is greater than 300\ndf_filtered = df[df['price'] > 300]\n\n# Select origin and destination columns\ndf_answer = df_filtered[['origin', 'destination']]\n\n# Print the answer\nprint(df_answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the origin and destination for all flights whose price is higher than 300?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe where price is greater than 300\ndf_filtered = df[df['price'] > 300]\n\n# Select origin and destination columns\ndf_answer = df_filtered[['origin', 'destination']]\n\n# Print the answer\nprint(df_answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show the flight number and distance of the flight with maximum price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the maximum price\nmax_price = df['price'].max()\n\n# Get the flight number and distance for the maximum price\nmax_price_flight = df[df['price'] == max_price][['flno', 'distance']]\n\nprint(max_price_flight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What is the flight number and its distance for the one with the maximum price?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the maximum price\nmax_price = df['price'].max()\n\n# Get the flight number and distance for the maximum price\nmax_price_flight = df[df['price'] == max_price][['flno', 'distance']]\n\nprint(max_price_flight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show the flight number of flights with three lowest distances.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the flights with lowest 3 distances\nlowest_distances = df.nsmallest(3, 'distance')\n\n# Show the flight numbers of these flights\nflight_numbers = lowest_distances['flno']\n\n# Save the answer in a variable\nanswer = flight_numbers.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the numbers of the shortest flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the flights with lowest 3 distances\nlowest_distances = df.nsmallest(3, 'distance')\n\n# Show the flight numbers of these flights\nflight_numbers = lowest_distances['flno']\n\n# Save the answer in a variable\nanswer = flight_numbers.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show all origins and the number of flights from each origin.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of flights from each origin\norigin_counts = df['origin'].value_counts()\n\nprint(origin_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: For each origin, how many flights came from there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of flights from each origin\norigin_counts = df['origin'].value_counts()\n\nprint(origin_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Show all destinations and the number of flights to each destination.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndestinations = df['destination'].value_counts()\n\nprint(destinations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What are the destinations and number of flights to each one?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndestinations = df['destination'].value_counts()\n\nprint(destinations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Which origin has most number of flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the origin with the most number of flights\nmost_flights_origin = df['origin'].value_counts().idxmax()\n\nprint(most_flights_origin)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What place has the most flights coming from there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the origin with the most number of flights\nmost_flights_origin = df['origin'].value_counts().idxmax()\n\nprint(most_flights_origin)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: Which destination has least number of flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nflights_per_destination = df.groupby('destination').size()\n\nfewest_flights_destination = flights_per_destination.idxmin()\n\nprint(fewest_flights_destination)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nflno,origin,destination,distance,departure_date,arrival_date,price,aid\n99,Los Angeles,Washington D.C.,2308,04/12/2005 09:30,04/12/2005 09:40,235.98,1\n13,Los Angeles,Chicago,1749,04/12/2005 08:45,04/12/2005 08:45,220.98,3\n346,Los Angeles,Dallas,1251,04/12/2005 11:50,04/12/2005 07:05,182,2\n387,Los Angeles,Boston,2606,04/12/2005 07:03,04/12/2005 05:03,261.56,6\n7,Los Angeles,Sydney,7487,04/12/2005 05:30,04/12/2005 11:10,278.56,3\n2,Los Angeles,Tokyo,5478,04/12/2005 06:30,04/12/2005 03:55,780.99,9\n33,Los Angeles,Honolulu,2551,04/12/2005 09:15,04/12/2005 11:15,375.23,7\n34,Los Angeles,Honolulu,2551,04/12/2005 12:45,04/12/2005 03:18,425.98,5\n76,Chicago,Los Angeles,1749,04/12/2005 08:32,04/12/2005 10:03,220.98,9\n68,Chicago,New York,802,04/12/2005 09:00,04/12/2005 12:02,202.45,10\n\nQuestion: What destination has the fewest number of flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nflights_per_destination = df.groupby('destination').size()\n\nfewest_flights_destination = flights_per_destination.idxmin()\n\nprint(fewest_flights_destination)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,aid\n11564812,2\n11564812,10\n90873519,6\n141582651,2\n141582651,10\n141582651,12\n142519864,1\n142519864,2\n142519864,3\n142519864,7\n\nQuestion: How many employees have certificate.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique employee IDs, which represent the number of employees with a certificate\nnum_employees = df['eid'].nunique()\n\n# Print the answer\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\neid,aid\n11564812,2\n11564812,10\n90873519,6\n141582651,2\n141582651,10\n141582651,12\n142519864,1\n142519864,2\n142519864,3\n142519864,7\n\nQuestion: What is the count of distinct employees with certificates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique employee IDs, which represent the number of employees with a certificate\nnum_employees = df['eid'].nunique()\n\n# Print the answer\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: How many allergies are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_allergies = len(df)\n\nprint(num_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: How many allergy entries are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_allergies = len(df)\n\nprint(num_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Show all allergy types.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get unique allergy types\nallergy_types = df['AllergyType'].unique()\n\n# Save the answer in a variable\nanswer = allergy_types\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What are the different allergy types?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get unique allergy types\nallergy_types = df['AllergyType'].unique()\n\n# Save the answer in a variable\nanswer = allergy_types\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Show all allergies and their types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What are the allergies and their types?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Show all allergies with type food.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfood_allergies = df[df['AllergyType'] == 'food']['Allergy'].tolist()\n\nprint(food_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What are all the different food allergies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfood_allergies = df[df['AllergyType'] == 'food']['Allergy'].tolist()\n\nprint(food_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What is the type of allergy Cat?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the allergy type for 'Cat'\ncat_allergy_type = df.loc[df['Allergy'] == 'Cat', 'AllergyType'].values\n\n# If cat has an allergy, save the allergy type, otherwise save 'No Allergies'\nif len(cat_allergy_type) > 0:\n    cat_allergy_type = cat_allergy_type[0]\nelse:\n    cat_allergy_type = 'No Allergies'\n\n# Print the cat's allergy type\nprint(cat_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What is allergy type of a cat allergy?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the allergy type for 'Cat'\ncat_allergy_type = df.loc[df['Allergy'] == 'Cat', 'AllergyType'].values\n\n# If cat has an allergy, save the allergy type, otherwise save 'No Allergies'\nif len(cat_allergy_type) > 0:\n    cat_allergy_type = cat_allergy_type[0]\nelse:\n    cat_allergy_type = 'No Allergies'\n\n# Print the cat's allergy type\nprint(cat_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: How many allergies have type animal?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Create a new DataFrame for animal allergies\nanimal_allergies = df[df['AllergyType'] == 'animal']\n\n# Count the number of animal type allergies\nanimal_allergy_count = len(animal_allergies)\n\nprint(animal_allergy_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: How many animal type allergies exist?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Create a new DataFrame for animal allergies\nanimal_allergies = df[df['AllergyType'] == 'animal']\n\n# Count the number of animal type allergies\nanimal_allergy_count = len(animal_allergies)\n\nprint(animal_allergy_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Show all allergy types and the number of allergies in each type.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by allergy type and count the number of allergies in each type\nallergy_types_count = df.groupby('AllergyType').size()\n\n# Print the result\nprint(allergy_types_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: What are the allergy types and how many allergies correspond to each one?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by allergy type and count the number of allergies in each type\nallergy_types_count = df.groupby('AllergyType').size()\n\n# Print the result\nprint(allergy_types_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Which allergy type has most number of allergies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['AllergyType'].value_counts()\n\nmost_common_allergy_type = allergy_counts.idxmax()\n\nprint(most_common_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Which allergy type is most common?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['AllergyType'].value_counts()\n\nmost_common_allergy_type = allergy_counts.idxmax()\n\nprint(most_common_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Which allergy type has least number of allergies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['AllergyType'].value_counts()\n\nmin_allergy_type = allergy_counts.idxmin()\n\nprint(min_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAllergy,AllergyType\nEggs,food\nNuts,food\nMilk,food\nShellfish,food\nAnchovies,food\nWheat,food\nSoy,food\nRagweed,environmental\nTree Pollen,environmental\nGrass Pollen,environmental\n\nQuestion: Which allergy type is the least common?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['AllergyType'].value_counts()\n\nmin_allergy_type = allergy_counts.idxmin()\n\nprint(min_allergy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_students = len(df)\n\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the total number of students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_students = len(df)\n\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many different advisors are listed?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the count of unique advisors\nadvisor_count = df['Advisor'].nunique()\n\n# Print the count\nprint(advisor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many advisors are there?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the count of unique advisors\nadvisor_count = df['Advisor'].nunique()\n\n# Print the count\nprint(advisor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all majors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique majors\nmajors = df['Major'].unique()\n\nprint(majors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the different majors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique majors\nmajors = df['Major'].unique()\n\nprint(majors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all cities where students live.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncities = df['city_code'].unique()\n\nprint(cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What cities do students live in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncities = df['city_code'].unique()\n\nprint(cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show first name, last name, age for all female students. Their sex is F.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for females\ndf_female = df[df['Sex'] == 'F']\n\n# Select columns of interest\ndf_output = df_female[['Fname', 'LName', 'Age']]\n\n# Print the output\nprint(df_output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the full names and ages for all female students whose sex is F?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for females\ndf_female = df[df['Sex'] == 'F']\n\n# Select columns of interest\ndf_output = df_female[['Fname', 'LName', 'Age']]\n\n# Print the output\nprint(df_output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show student ids for all male students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering out the rows where Sex is 'M'\nmale_students = df[df['Sex'] == 'M']\n\n# Getting the student ids for male students\nmale_student_ids = male_students['StuID']\n\nprint(male_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the student ids for all male students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering out the rows where Sex is 'M'\nmale_students = df[df['Sex'] == 'M']\n\n# Getting the student ids for male students\nmale_student_ids = male_students['StuID']\n\nprint(male_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are age 18?", "response": "import pandas as pd\n\n# read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame to only include students of age 18\ndf_age_18 = df[df['Age'] == 18]\n\n# count the number of students of age 18\nnum_students_age_18 = len(df_age_18)\n\n# print the number of students of age 18\nprint(num_students_age_18)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are 18 years old?", "response": "import pandas as pd\n\n# read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame to only include students of age 18\ndf_age_18 = df[df['Age'] == 18]\n\n# count the number of students of age 18\nnum_students_age_18 = len(df_age_18)\n\n# print the number of students of age 18\nprint(num_students_age_18)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all student ids who are older than 20.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Age' column is greater than 20\nfiltered_df = df[df['Age'] > 20]\n\n# Create a list of all unique 'StuID' values from the filtered DataFrame\nstudent_ids = filtered_df['StuID'].unique().tolist()\n\n# Print the list of student IDs\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the student ids for students over 20 years old?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Age' column is greater than 20\nfiltered_df = df[df['Age'] > 20]\n\n# Create a list of all unique 'StuID' values from the filtered DataFrame\nstudent_ids = filtered_df['StuID'].unique().tolist()\n\n# Print the list of student IDs\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which city does the student whose last name is \"Kim\" live in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the last name\nkim_df = df[df['LName'] == 'Kim']\n\n# get the city of the student whose family name is Kim\ncity = kim_df['city_code'].values[0]\n\nprint(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Give the city that the student whose family name is Kim lives in.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the last name\nkim_df = df[df['LName'] == 'Kim']\n\n# get the city of the student whose family name is Kim\ncity = kim_df['city_code'].values[0]\n\nprint(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Who is the advisor of student with ID 1004?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['StuID'] == 1004]['Advisor']\nanswer = df_filtered.values[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Who advises student 1004?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['StuID'] == 1004]['Advisor']\nanswer = df_filtered.values[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students live in HKG or CHI?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['city_code'].isin(['HKG', 'CHI'])]\nnum_students = df_filtered['StuID'].nunique()\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Give the number of students living in either HKG or CHI.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['city_code'].isin(['HKG', 'CHI'])]\nnum_students = df_filtered['StuID'].nunique()\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show the minimum, average, and maximum age of all students.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, mean, and maximum age\nmin_age = df['Age'].min()\nmean_age = df['Age'].mean()\nmax_age = df['Age'].max()\n\n# Save the answers in variables\nanswer = {\n    'Minimum Age': min_age,\n    'Mean Age': mean_age,\n    'Maximum Age': max_age\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the minimum, mean, and maximum age across all students?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, mean, and maximum age\nmin_age = df['Age'].min()\nmean_age = df['Age'].mean()\nmax_age = df['Age'].max()\n\n# Save the answers in variables\nanswer = {\n    'Minimum Age': min_age,\n    'Mean Age': mean_age,\n    'Maximum Age': max_age\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the last name of the youngest student?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by age in ascending order\ndf = df.sort_values(by='Age')\n\n# Get the last name of the youngest student\nlast_name = df.iloc[0]['LName']\n\nprint(last_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Provide the last name of the youngest student.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by age in ascending order\ndf = df.sort_values(by='Age')\n\n# Get the last name of the youngest student\nlast_name = df.iloc[0]['LName']\n\nprint(last_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show the student id of the oldest student.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'Age' in descending order\nsorted_df = df.sort_values('Age', ascending=False)\n\n# Get the first row of the sorted dataframe\noldest_student = sorted_df.iloc[0]\n\n# Get the student id of the oldest student\noldest_student_id = oldest_student['StuID']\n\n# Print the student id of the oldest student\nprint(oldest_student_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What student id corresponds to the oldest student?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'Age' in descending order\nsorted_df = df.sort_values('Age', ascending=False)\n\n# Get the first row of the sorted dataframe\noldest_student = sorted_df.iloc[0]\n\n# Get the student id of the oldest student\noldest_student_id = oldest_student['StuID']\n\n# Print the student id of the oldest student\nprint(oldest_student_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all majors and corresponding number of students.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by major and count number of students\nmajor_count = df.groupby('Major').size()\n\n# Print the result\nprint(major_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there for each major?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by major and count number of students\nmajor_count = df.groupby('Major').size()\n\n# Print the result\nprint(major_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which major has most number of students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students for each major\nmajor_counts = df['Major'].value_counts()\n\n# Get the major with the most students\nmajor_with_most_students = major_counts.idxmax()\n\nprint(major_with_most_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the largest major?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students for each major\nmajor_counts = df['Major'].value_counts()\n\n# Get the major with the most students\nmajor_with_most_students = major_counts.idxmax()\n\nprint(major_with_most_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all ages and corresponding number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nage_distribution = df['Age'].value_counts()\n\nprint(age_distribution)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How old is each student and how many students are each age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nage_distribution = df['Age'].value_counts()\n\nprint(age_distribution)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show the average age for male and female students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Sex' and calculate the mean 'Age' for each group\ngrouped = df.groupby('Sex')['Age'].mean()\n\n# Print the average ages\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the average ages for male and female students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Sex' and calculate the mean 'Age' for each group\ngrouped = df.groupby('Sex')['Age'].mean()\n\n# Print the average ages\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all cities and corresponding number of students.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by city_code and count the number of students in each city\ncity_counts = df.groupby('city_code')['StuID'].count()\n\n# Print the city counts\nprint(city_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students live in each city?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by city_code and count the number of students in each city\ncity_counts = df.groupby('city_code')['StuID'].count()\n\n# Print the city counts\nprint(city_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show all advisors and corresponding number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nadvisor_count = df['Advisor'].value_counts()\n\nprint(advisor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students does each advisor have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nadvisor_count = df['Advisor'].value_counts()\n\nprint(advisor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which advisor has most number of students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_students_advisor = df['Advisor'].value_counts().index[0]\nprint(most_students_advisor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Give the advisor with the most students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_students_advisor = df['Advisor'].value_counts().index[0]\nprint(most_students_advisor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: How many students have cat allergies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Allergy'] = df['Allergy'].str.lower()\n\n# Filter the dataframe for students with cat allergies\ncat_allergy_students = df[df['Allergy'] == 'cat']\n\n# Count the number of students with cat allergies\ncat_allergy_count = len(cat_allergy_students)\n\n# Print the result\nprint(cat_allergy_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: How many students are affected by cat allergies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Allergy'] = df['Allergy'].str.lower()\n\n# Filter the dataframe for students with cat allergies\ncat_allergy_students = df[df['Allergy'] == 'cat']\n\n# Count the number of students with cat allergies\ncat_allergy_count = len(cat_allergy_students)\n\n# Print the result\nprint(cat_allergy_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: Show all student IDs who have at least two allergies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'StuID' and filter the groups with more than one allergy\nstudents_with_multiple_allergies = df.groupby('StuID').filter(lambda x: len(x) > 1)['StuID'].unique()\n\nprint(students_with_multiple_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: What are the students ids of students who have more than one allergy?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'StuID' and filter the groups with more than one allergy\nstudents_with_multiple_allergies = df.groupby('StuID').filter(lambda x: len(x) > 1)['StuID'].unique()\n\nprint(students_with_multiple_allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: Which allergy has most number of students affected?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['Allergy'].value_counts()\nmost_common_allergy = allergy_counts.idxmax()\n\nprint(most_common_allergy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: Which allergy is the most common?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nallergy_counts = df['Allergy'].value_counts()\nmost_common_allergy = allergy_counts.idxmax()\n\nprint(most_common_allergy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: Show all allergies with number of students affected.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use value_counts() to count the number of students affected by each allergy\nallergies = df['Allergy'].value_counts()\n\n# Print the allergies with the number of students affected\nprint(allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Allergy\n1001,Cat\n1002,Shellfish\n1002,Tree Pollen\n1003,Dog\n1004,Nuts\n1005,Nuts\n1005,Tree Pollen\n1006,Nuts\n1007,Ragweed\n1007,Tree Pollen\n\nQuestion: How many students have each different allergy?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use value_counts() to count the number of students affected by each allergy\nallergies = df['Allergy'].value_counts()\n\n# Print the allergies with the number of students affected\nprint(allergies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: A list of the top 5 countries by number of invoices. List country name and number of invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by country and count number of invoices\ninvoices_by_country = df.groupby('billing_country').size()\n\n# Sort the countries by number of invoices and get top 5\ntop_5_countries = invoices_by_country.sort_values(ascending=False).head(5)\n\n# Print the top 5 countries\nprint(top_5_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: What are the top 5 countries by number of invoices and how many do they have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by country and count number of invoices\ninvoices_by_country = df.groupby('billing_country').size()\n\n# Sort the countries by number of invoices and get top 5\ntop_5_countries = invoices_by_country.sort_values(ascending=False).head(5)\n\n# Print the top 5 countries\nprint(top_5_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: List every album's title.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all album titles\nalbum_titles = df['title']\n\n# Print the album titles\nprint(album_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: What are the titles of all the albums?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all album titles\nalbum_titles = df['title']\n\n# Print the album titles\nprint(album_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: List every album ordered by album title in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the titles in ascending order\nsorted_titles = df['title'].sort_values()\n\nprint(sorted_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: What are the titles of all the albums alphabetically ascending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the titles in ascending order\nsorted_titles = df['title'].sort_values()\n\nprint(sorted_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: List every album whose title starts with A in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include albums whose title starts with 'A'\ndf_A = df[df['title'].str.startswith('A')]\n\n# Sort the dataframe in alphabetical order by title\ndf_A = df_A.sort_values('title')\n\n# Save the answer in a variable\nanswer = df_A['title'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,title,artist_id\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: What are the titles of all albums that start with A in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include albums whose title starts with 'A'\ndf_A = df[df['title'].str.startswith('A')]\n\n# Sort the dataframe in alphabetical order by title\ndf_A = df_A.sort_values('title')\n\n# Save the answer in a variable\nanswer = df_A['title'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: List total amount of  invoice from Chicago, IL.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter invoices billed from Chicago\nchicago_invoices = df[df['billing_city'] == 'Chicago']\n\n# Calculate the total amount\ntotal_amount = chicago_invoices['total'].sum()\n\nprint(total_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: What are the total amount of money in the invoices billed from Chicago, Illinois?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter invoices billed from Chicago\nchicago_invoices = df[df['billing_city'] == 'Chicago']\n\n# Calculate the total amount\ntotal_amount = chicago_invoices['total'].sum()\n\nprint(total_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: List the number of invoices from Chicago, IL.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where billing_city is 'Chicago' and billing_state is 'IL'\nchicago_df = df[(df['billing_city'] == 'Chicago') & (df['billing_state'] == 'IL')]\n\n# Count the number of rows in the filtered dataframe\ncount = chicago_df.shape[0]\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: How many invoices were billed from Chicago, IL?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where billing_city is 'Chicago' and billing_state is 'IL'\nchicago_df = df[(df['billing_city'] == 'Chicago') & (df['billing_state'] == 'IL')]\n\n# Count the number of rows in the filtered dataframe\ncount = chicago_df.shape[0]\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: List the number of invoices from the US, grouped by state.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where billing_country is 'USA'\nus_df = df[df['billing_country'] == 'USA']\n\n# Group the filtered dataframe by billing_state and count the number of invoices in each group\ninvoice_count_by_state = us_df.groupby('billing_state').size()\n\n# Print the result\nprint(invoice_count_by_state)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total\n1,2,2007-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2007-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2007-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2007-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2007-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2007-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2007-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2007-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2007-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2007-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: How many invoices were billed from each state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the rows where billing_country is 'USA'\nus_df = df[df['billing_country'] == 'USA']\n\n# Group the filtered dataframe by billing_state and count the number of invoices in each group\ninvoice_count_by_state = us_df.groupby('billing_state').size()\n\n# Print the result\nprint(invoice_count_by_state)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: Eduardo Martins is a customer at which company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where first_name is \"Eduardo\" and last_name is \"Martins\"\neduardo_martins_df = df[(df['first_name'] == 'Eduardo') & (df['last_name'] == 'Martins')]\n\n# Extract the company name from the filtered dataframe\ncompany_name = eduardo_martins_df['company'].values[0]\n\nprint(company_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: What is the company where Eduardo Martins is a customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where first_name is \"Eduardo\" and last_name is \"Martins\"\neduardo_martins_df = df[(df['first_name'] == 'Eduardo') & (df['last_name'] == 'Martins')]\n\n# Extract the company name from the filtered dataframe\ncompany_name = eduardo_martins_df['company'].values[0]\n\nprint(company_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: What is Astrid Gruber's email and phone number?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include Astrid Gruber\nastrid_gruber = df[df['first_name'] == 'Astrid']\n\n# Select the email and phone number\nastrid_info = astrid_gruber[['email', 'phone']]\n\n# Print the result\nprint(astrid_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: What is the email and phone number of Astrid Gruber the customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include Astrid Gruber\nastrid_gruber = df[df['first_name'] == 'Astrid']\n\n# Select the email and phone number\nastrid_info = astrid_gruber[['email', 'phone']]\n\n# Print the result\nprint(astrid_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: How many customers live in Prague city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the city is 'Prague'\nprague_customers = df[df['city'] == 'Prague']\n\n# Count the number of customers in Prague\nnum_prague_customers = prague_customers.shape[0]\n\n# Save the answer in a variable and print it\nprint(num_prague_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: How many customers live in the city of Prague?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the city is 'Prague'\nprague_customers = df[df['city'] == 'Prague']\n\n# Count the number of customers in Prague\nnum_prague_customers = prague_customers.shape[0]\n\n# Save the answer in a variable and print it\nprint(num_prague_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: How many customers in state of CA?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe by the 'state' column\ndf_ca = df[df['state'] == 'CA']\n\n# Count the number of customers in the filtered dataframe\nnum_customers_in_ca = df_ca.shape[0]\n\n# Print the answer\nprint(num_customers_in_ca)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: How many customers are from California?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe by the 'state' column\ndf_ca = df[df['state'] == 'CA']\n\n# Count the number of customers in the filtered dataframe\nnum_customers_in_ca = df_ca.shape[0]\n\n# Print the answer\nprint(num_customers_in_ca)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: What country does Roberto Almeida live?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the row where first_name is 'Roberto' and last_name is 'Almeida'\nroberto_row = df[(df['first_name'] == 'Roberto') & (df['last_name'] == 'Almeida')]\n\n# Save the country of Roberto Almeida in a variable\ncountry = roberto_row['country'].values[0] if not roberto_row.empty else 'Unknown'\n\n# Print the variable\nprint(country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: In which country does Roberto Almeida?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the row where first_name is 'Roberto' and last_name is 'Almeida'\nroberto_row = df[(df['first_name'] == 'Roberto') & (df['last_name'] == 'Almeida')]\n\n# Save the country of Roberto Almeida in a variable\ncountry = roberto_row['country'].values[0] if not roberto_row.empty else 'Unknown'\n\n# Print the variable\nprint(country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is the title, phone and hire date of Nancy Edwards?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the query method to find the employee named Nancy Edwards\nnancy_edwards = df.query('first_name == \"Nancy\" and last_name == \"Edwards\"')\n\n# Save the answer in a variable and print it\nanswer = nancy_edwards[['title', 'phone', 'hire_date']].values[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is the title, phone number and hire date for the employee named Nancy Edwards?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the query method to find the employee named Nancy Edwards\nnancy_edwards = df.query('first_name == \"Nancy\" and last_name == \"Edwards\"')\n\n# Save the answer in a variable and print it\nanswer = nancy_edwards[['title', 'phone', 'hire_date']].values[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: find the full name of employees who report to Nancy Edwards?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# find the id of Nancy Edwards\nnancy_id = df.loc[df['first_name'] == 'Nancy', 'id'].values[0]\n\n# find the first and last name of the employee who reports to Nancy Edwards\nreporting_to_nancy = df.loc[df['reports_to'] == nancy_id, ['first_name', 'last_name']]\n\n# print the answer\nprint(reporting_to_nancy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is the first and last name of the employee who reports to Nancy Edwards?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# find the id of Nancy Edwards\nnancy_id = df.loc[df['first_name'] == 'Nancy', 'id'].values[0]\n\n# find the first and last name of the employee who reports to Nancy Edwards\nreporting_to_nancy = df.loc[df['reports_to'] == nancy_id, ['first_name', 'last_name']]\n\n# print the answer\nprint(reporting_to_nancy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is the address of employee Nancy Edwards?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnancy_address = df.loc[df['first_name'] == 'Nancy', 'address'].values[0]\nprint(nancy_address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is Nancy Edwards's address?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnancy_address = df.loc[df['first_name'] == 'Nancy', 'address'].values[0]\nprint(nancy_address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: How many employees are living in Canada?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only employees who live in Canada\ncanadian_employees = df[df['country'] == 'Canada']\n\n# Count the number of employees who live in Canada\ncanadian_employee_count = canadian_employees.shape[0]\n\n# Print the number of employees who live in Canada\nprint(canadian_employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: How many employees live in Canada?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only employees who live in Canada\ncanadian_employees = df[df['country'] == 'Canada']\n\n# Count the number of employees who live in Canada\ncanadian_employee_count = canadian_employees.shape[0]\n\n# Print the number of employees who live in Canada\nprint(canadian_employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is employee Nancy Edwards's phone number?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame for Nancy Edwards\nnancy_edwards = df[df['first_name'] == 'Nancy']\n\n# Select the phone number\nphone_number = nancy_edwards['phone'].values[0]\n\n# Print the phone number\nprint(phone_number)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What is the the phone number of Nancy Edwards?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame for Nancy Edwards\nnancy_edwards = df[df['first_name'] == 'Nancy']\n\n# Select the phone number\nphone_number = nancy_edwards['phone'].values[0]\n\n# Print the phone number\nprint(phone_number)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: Who is the youngest employee in the company? List employee's first and last name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert birth_date column to datetime format\ndf['birth_date'] = pd.to_datetime(df['birth_date'])\n\n# Find the youngest employee\nyoungest_employee = df.loc[df['birth_date'] == df['birth_date'].max(), ['first_name', 'last_name']]\n\n# Save the answer in a variable\nanswer = youngest_employee.values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What si the youngest employee's first and last name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert birth_date column to datetime format\ndf['birth_date'] = pd.to_datetime(df['birth_date'])\n\n# Find the youngest employee\nyoungest_employee = df.loc[df['birth_date'] == df['birth_date'].max(), ['first_name', 'last_name']]\n\n# Save the answer in a variable\nanswer = youngest_employee.values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: List top 10 employee work longest in the company. List employee's first and last name.", "response": "import pandas as pd\nfrom datetime import datetime\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# convert the 'hire_date' column to datetime format\ndf['hire_date'] = pd.to_datetime(df['hire_date'])\n\n# calculate the length of service\ndf['length_of_service'] = (datetime.now() - df['hire_date']).dt.days\n\n# sort the dataframe by 'length_of_service' in descending order\ndf = df.sort_values(by='length_of_service', ascending=False)\n\n# get the first and last names of the top 10 longest-serving employees\nanswer = df[['first_name', 'last_name']].head(10)\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What are the first and last names of the top 10 longest-serving employees?", "response": "import pandas as pd\nfrom datetime import datetime\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# convert the 'hire_date' column to datetime format\ndf['hire_date'] = pd.to_datetime(df['hire_date'])\n\n# calculate the length of service\ndf['length_of_service'] = (datetime.now() - df['hire_date']).dt.days\n\n# sort the dataframe by 'length_of_service' in descending order\ndf = df.sort_values(by='length_of_service', ascending=False)\n\n# get the first and last names of the top 10 longest-serving employees\nanswer = df[['first_name', 'last_name']].head(10)\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: Find the number of employees whose title is IT Staff from each city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_it_staff = df[df['title'] == 'IT Staff']\nresult = df_it_staff['city'].value_counts()\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: How many employees who are IT staff are from each city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_it_staff = df[df['title'] == 'IT Staff']\nresult = df_it_staff['city'].value_counts()\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,MPEG audio file\n2,Protected AAC audio file\n3,Protected MPEG-4 video file\n4,Purchased AAC audio file\n5,AAC audio file\n\nQuestion: List all media types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmedia_types = df['name'].tolist()\n\nprint(media_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,MPEG audio file\n2,Protected AAC audio file\n3,Protected MPEG-4 video file\n4,Purchased AAC audio file\n5,AAC audio file\n\nQuestion: What are the names of all the media types?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmedia_types = df['name'].tolist()\n\nprint(media_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,Rock\n2,Jazz\n3,Metal\n4,Alternative & Punk\n5,Rock And Roll\n6,Blues\n7,Latin\n8,Reggae\n9,Pop\n10,Soundtrack\n\nQuestion: List all different genre types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_genres = df['name'].unique().tolist()\n\nprint(unique_genres)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,Rock\n2,Jazz\n3,Metal\n4,Alternative & Punk\n5,Rock And Roll\n6,Blues\n7,Latin\n8,Reggae\n9,Pop\n10,Soundtrack\n\nQuestion: What are the different names of the genres?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_genres = df['name'].unique().tolist()\n\nprint(unique_genres)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,Music\n2,Movies\n3,TV Shows\n4,Audiobooks\n5,90’s Music\n6,Audiobooks\n7,Movies\n8,Music\n9,Music Videos\n10,TV Shows\n\nQuestion: List the name of all playlist.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'name' column into a list and store in a variable\nplaylist_names = df['name'].tolist()\n\n# Print the list of playlist names\nprint(playlist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name\n1,Music\n2,Movies\n3,TV Shows\n4,Audiobooks\n5,90’s Music\n6,Audiobooks\n7,Movies\n8,Music\n9,Music Videos\n10,TV Shows\n\nQuestion: What are the names of all the playlists?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'name' column into a list and store in a variable\nplaylist_names = df['name'].tolist()\n\n# Print the list of playlist names\nprint(playlist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: Who is the composer of track Fast As a Shark?", "response": "import pandas as pd\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the track \"Fast As a Shark\"\ntrack = df[df['name'] == \"Fast As a Shark\"]\n\n# Get the composer of the track \"Fast As a Shark\"\ncomposer = track['composer'].values[0]\n\n# Print the composer\nprint(composer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: What is the composer who created the track \"Fast As a Shark\"?", "response": "import pandas as pd\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the track \"Fast As a Shark\"\ntrack = df[df['name'] == \"Fast As a Shark\"]\n\n# Get the composer of the track \"Fast As a Shark\"\ncomposer = track['composer'].values[0]\n\n# Print the composer\nprint(composer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: How long does track Fast As a Shark has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntrack = df[df['name'] == \"Fast As a Shark\"]\n\nlength_in_milliseconds = track['milliseconds'].values[0]\n\nprint(length_in_milliseconds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: How many milliseconds long is Fast As a Shark?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntrack = df[df['name'] == \"Fast As a Shark\"]\n\nlength_in_milliseconds = track['milliseconds'].values[0]\n\nprint(length_in_milliseconds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: How much is the track Fast As a Shark?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for the track 'Fast As a Shark'\nfiltered_df = df[df['name'] == \"Fast As a Shark\"]\n\n# Getting the unit price of the track\nunit_price = filtered_df['unit_price'].values[0]\n\n# Printing the answer\nprint(unit_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: What is the unit price of the tune \"Fast As a Shark\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for the track 'Fast As a Shark'\nfiltered_df = df[df['name'] == \"Fast As a Shark\"]\n\n# Getting the unit price of the track\nunit_price = filtered_df['unit_price'].values[0]\n\n# Printing the answer\nprint(unit_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: How many editors are there?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of editors\nnum_editors = df.shape[0]\n\n# Print the number of editors\nprint(num_editors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: List the names of editors in ascending order of age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by 'Age' in ascending order\ndf = df.sort_values(by='Age', ascending=True)\n\n# Get the list of editor names in ascending order of age\nnames_in_ascending_order_of_age = df['Name'].tolist()\n\n# Print the names\nprint(names_in_ascending_order_of_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: What are the names and ages of editors?", "response": "import pandas as pd\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the columns 'Name' and 'Age'\ndf_names_ages = df[['Name', 'Age']]\n\n# Print the dataframe\nprint(df_names_ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: List the names of editors who are older than 25.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the editors older than 25\nold_editors = df[df['Age'] > 25]\n\n# Extract the names of the old editors\nold_editor_names = old_editors['Name'].tolist()\n\n# Print the names of the old editors\nprint(old_editor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: Show the names of editors of age either 24 or 25.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Age is either 24 or 25\ndf_filtered = df[df['Age'].isin([24, 25])]\n\n# Get the names of the editors\nnames = df_filtered['Name'].tolist()\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: What is the name of the youngest editor?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Finding the minimum age\nmin_age = df['Age'].min()\n\n# Finding the name of the editor with the minimum age\nyoungest_editor_name = df[df['Age'] == min_age]['Name'].values[0]\n\n# Printing the name of the youngest editor\nprint(youngest_editor_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEditor_ID,Name,Age\n1,Kamila Porczyk,34.0\n2,Anna Powierza,35.0\n3,Marek Siudym,21.0\n4,Piotr Pręgowski,43.0\n5,Szymon Wydra,20.0\n6,Władysław Grzywna,24.0\n7,Mariusz Zalejski,25.0\n8,Grażyna Wolszczak,54.0\n9,Maria Góralczyk,38.0\n\nQuestion: What are the different ages of editors? Show each age along with the number of editors of that age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of editors for each age\nage_count = df['Age'].value_counts()\n\n# Print the result\nprint(age_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nJournal_ID,Date,Theme,Sales\n1,September 9, 2001,Miami Dolphins,798\n2,September 23, 2001,at Jacksonville Jaguars,994\n4,October 7, 2001,at Baltimore Ravens,7494\n5,October 14, 2001,Tampa Bay Buccaneers,4798\n6,October 21, 2001,at Detroit Lions,2940\n7,October 29, 2001,at Pittsburgh Steelers,1763\n8,November 4, 2001,Jacksonville Jaguars,1232\n9,November 12, 2001,Baltimore Ravens,6532\n10,November 18, 2001,at Cincinnati Bengals,3421\n11,November 25, 2001,Pittsburgh Steelers,3342\n\nQuestion: Show the distinct themes of journals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Remove duplicates\ndf_distinct = df.drop_duplicates(subset='Theme')\n\n# Get the 'Theme' column\nthemes = df_distinct['Theme']\n\n# Print the themes\nprint(themes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: How many accounts do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Count the number of accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Show ids, customer ids, names for all accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the columns of interest\ndf = df[['account_id', 'customer_id', 'account_name']]\n\n# Save the answer in a variable\nanswer = df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: What are the account ids, customer ids, and account names for all the accounts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the columns of interest\ndf = df[['account_id', 'customer_id', 'account_name']]\n\n# Save the answer in a variable\nanswer = df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Show other account details for account with name 338.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naccount_name_338 = df.loc[df['account_name'] == 338, 'other_account_details'].values[0]\nprint(account_name_338)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: What are the other account details for the account with the name 338?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naccount_name_338 = df.loc[df['account_name'] == 338, 'other_account_details'].values[0]\nprint(account_name_338)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Show all customer ids and the number of accounts for each customer.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of accounts for each customer\ncustomer_accounts = df.groupby('customer_id')['account_id'].count()\n\n# print the result\nprint(customer_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: How many accounts are there for each customer id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of accounts for each customer\ncustomer_accounts = df.groupby('customer_id')['account_id'].count()\n\n# print the result\nprint(customer_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Show the customer id and number of accounts with most accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'customer_id' and count the number of accounts for each customer\ncustomer_counts = df['customer_id'].value_counts()\n\n# Get the customer id and number of accounts with most accounts\nmost_accounts = customer_counts.idxmax(), customer_counts.max()\n\n# Print the result\nprint(most_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: What is the customer id of the customer with the most accounts, and how many accounts does this person have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'customer_id' and count the number of accounts for each customer\ncustomer_counts = df['customer_id'].value_counts()\n\n# Get the customer id and number of accounts with most accounts\nmost_accounts = customer_counts.idxmax(), customer_counts.max()\n\n# Print the result\nprint(most_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: How many customers have an account?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique customer_id\nnum_customers = df['customer_id'].nunique()\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,account_name,other_account_details\n1,6,338,Regular\n2,14,562,VIP\n3,9,162,VIP\n4,12,038,Regular\n5,13,858,Regular\n6,12,262,Regular\n7,9,621,Regular\n8,8,381,Regular\n9,9,546,Regular\n10,4,767,VIP\n\nQuestion: Count the number of customers who hold an account.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique customer_id\nnum_customers = df['customer_id'].nunique()\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: How many customers do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of customers\nnum_customers = df.shape[0]\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: Count the number of customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of customers\nnum_customers = df.shape[0]\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: Show ids, first names, last names, and phones for all customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting the required columns\ndf_selected = df[['customer_id', 'customer_first_name', 'customer_last_name', 'customer_phone']]\n\n# Printing the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: What are the ids, full names, and phones of each customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting the required columns\ndf_selected = df[['customer_id', 'customer_first_name', 'customer_last_name', 'customer_phone']]\n\n# Printing the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: What is the phone and email for customer with first name Aniyah and last name Feest?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on first name and last name\ndf_filtered = df[(df['customer_first_name'] == 'Aniyah') & (df['customer_last_name'] == 'Feest')]\n\n# Get the phone and email from the filtered dataframe\nphone_email = df_filtered[['customer_phone', 'customer_email']]\n\n# Print the phone and email\nprint(phone_email)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details\n1,Aniyah,Feest,55975 Theodore Estates\nLake Brody, VT 57078,(673)872-5338,fahey.dorian@example.com,\n2,Susie,Wiza,6478 Moen Isle Suite 910\nSchimmelmouth, VT 96364-4898,679-845-8645x94312,idickinson@example.com,\n3,Marcel,Brekke,1965 Abernathy Plains\nPort Lilla, LA 44867,1-511-656-6664,nichole.rodriguez@example.com,\n4,Art,Turcotte,6862 Domenic Port\nNew Elbert, DE 86980-8517,941-213-6716x675,enrique59@example.com,\n5,Armani,Farrell,3031 Ludwig Square\nUnaview, SC 86336-3287,224-123-1012,dauer@example.net,\n6,Kiel,Schinner,19935 Allie Bypass Apt. 409\nColeberg, FL 69194-5357,1-564-044-3909,ebert.omer@example.net,\n7,Izabella,Erdman,23793 Athena Inlet Apt. 455\nSchmidtmouth, NH 15794,751.049.9948,kling.catalina@example.com,\n8,Elyssa,Lind,094 Julianne Mill\nWebstertown, KY 91980-4004,+12(6)9024410984,dell13@example.com,\n9,Faustino,Langworth,0748 Lola Union Apt. 874\nReynoldsfurt, NM 94584-3767,284.749.0453,ahomenick@example.org,\n10,Axel,Effertz,936 Lula Overpass\nEast Alisonville, NH 14890,+90(8)1290735932,kyra.murazik@example.org,\n\nQuestion: Return the phone and email of the customer with the first name Aniyah and last name Feest.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on first name and last name\ndf_filtered = df[(df['customer_first_name'] == 'Aniyah') & (df['customer_last_name'] == 'Feest')]\n\n# Get the phone and email from the filtered dataframe\nphone_email = df_filtered[['customer_phone', 'customer_email']]\n\n# Print the phone and email\nprint(phone_email)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: Show all transaction types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntransaction_types = df['transaction_type'].unique()\n\nprint(transaction_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: What are the different types of transactions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntransaction_types = df['transaction_type'].unique()\n\nprint(transaction_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: Show the number of transaction types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique transaction types\nunique_transactions = df['transaction_type'].unique()\n\n# Get the count of unique transaction types\ncount_unique_transactions = len(unique_transactions)\n\nprint(count_unique_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: How many different types of transactions are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique transaction types\nunique_transactions = df['transaction_type'].unique()\n\n# Get the count of unique transaction types\ncount_unique_transactions = len(unique_transactions)\n\nprint(count_unique_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: Show the transaction type and the number of transactions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntransaction_counts = df['transaction_type'].value_counts()\n\nprint(transaction_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: What are the different transaction types, and how many transactions of each have taken place?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntransaction_counts = df['transaction_type'].value_counts()\n\nprint(transaction_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: What is the transaction type that has processed the greatest total amount in transactions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by transaction type and sum the transaction amounts\ngrouped = df.groupby('transaction_type')['transaction_amount'].sum()\n\n# Find the transaction type that has processed the greatest total amount\nmax_transaction_type = grouped.idxmax()\n\nprint(max_transaction_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: Return the type of transaction with the highest total amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by transaction type and sum the transaction amounts\ngrouped = df.groupby('transaction_type')['transaction_amount'].sum()\n\n# Find the transaction type that has processed the greatest total amount\nmax_transaction_type = grouped.idxmax()\n\nprint(max_transaction_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: Show the account id and the number of transactions for each account", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by account_id and count the number of transactions\ntransaction_count = df.groupby('account_id').size()\n\nprint(transaction_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,925,15,1,Payment,2018-03-24 06:41:41,1701.23,,\n2,494,3,2,Refund,2018-03-24 12:08:55,1931.76,,\n3,642,4,3,Payment,2018-03-24 09:08:27,486.56,,\n4,457,15,4,Refund,2018-03-23 21:59:28,1336.21,,\n5,947,13,5,Refund,2018-03-23 21:43:32,357.06,,\n6,958,12,6,Refund,2018-03-24 11:48:28,1967.75,,\n7,368,1,6,Refund,2018-03-24 05:13:42,1483.05,,\n8,924,6,7,Refund,2018-03-24 14:47:05,1194.48,,\n9,296,9,6,Payment,2018-03-24 05:31:43,1475.56,,\n10,495,5,7,Payment,2018-03-24 05:45:57,1795.66,,\n\nQuestion: What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by account_id and count the number of transactions\ntransaction_count = df.groupby('account_id').size()\n\nprint(transaction_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: How many tracks do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_tracks = len(df)\n\nprint(num_tracks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Count the number of tracks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_tracks = len(df)\n\nprint(num_tracks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Show the name and location for all tracks.", "response": "# Required libraries\nimport pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Select the columns 'Name' and 'Location'\ndf_selected = df[['Name', 'Location']]\n\n# Print the selected data\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What are the names and locations of all tracks?", "response": "# Required libraries\nimport pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Select the columns 'Name' and 'Location'\ndf_selected = df[['Name', 'Location']]\n\n# Print the selected data\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Show names and seatings, ordered by seating for all tracks opened after 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter tracks opened after 2000\ndf_filtered = df[df['Year_Opened'] > 2000]\n\n# Select names and seatings\nanswer = df_filtered[['Name', 'Seating']]\n\n# Order by seating\nanswer = answer.sort_values('Seating')\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What are the names and seatings for all tracks opened after 2000, ordered by seating?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter tracks opened after 2000\ndf_filtered = df[df['Year_Opened'] > 2000]\n\n# Select names and seatings\nanswer = df_filtered[['Name', 'Seating']]\n\n# Order by seating\nanswer = answer.sort_values('Seating')\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What is the name, location and seating for the most recently opened track?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Year_Opened', ascending=False)\nresult = df[['Name', 'Location', 'Seating']].iloc[0]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Return the name, location, and seating of the track that was opened in the most recent year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Year_Opened', ascending=False)\nresult = df[['Name', 'Location', 'Seating']].iloc[0]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What is the minimum, maximum, and average seating for all tracks.", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# compute the minimum, maximum, and average seating across all tracks\nmin_seating = df['Seating'].min()\nmax_seating = df['Seating'].max()\navg_seating = df['Seating'].mean()\n\n# save the answer in a variable\nanswer = {'Minimum Seating': min_seating, 'Maximum Seating': max_seating, 'Average Seating': avg_seating}\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Return the minimum, maximum, and average seating across all tracks.", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# compute the minimum, maximum, and average seating across all tracks\nmin_seating = df['Seating'].min()\nmax_seating = df['Seating'].max()\navg_seating = df['Seating'].mean()\n\n# save the answer in a variable\nanswer = {'Minimum Seating': min_seating, 'Maximum Seating': max_seating, 'Average Seating': avg_seating}\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Show the name, location, open year for all tracks with a seating higher than the average.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average seating\naverage_seating = df['Seating'].mean()\n\n# Filter the DataFrame to only include tracks with seating higher than the average\ndf_filtered = df[df['Seating'] > average_seating]\n\n# Select the desired columns\nresult = df_filtered[['Name', 'Location', 'Year_Opened']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What are the names, locations, and years of opening for tracks with seating higher than average?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average seating\naverage_seating = df['Seating'].mean()\n\n# Filter the DataFrame to only include tracks with seating higher than the average\ndf_filtered = df[df['Seating'] > average_seating]\n\n# Select the desired columns\nresult = df_filtered[['Name', 'Location', 'Year_Opened']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: What are distinct locations where tracks are located?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the different locations\nlocations = df['Location'].unique()\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrack_ID,Name,Location,Seating,Year_Opened\n1,Auto Club Speedway,Fontana, CA,92000.0,1997.0\n2,Chicagoland Speedway,Joliet, IL,75000.0,2001.0\n3,Darlington Raceway,Darlington, SC,63000.0,1950.0\n4,Daytona International Speedway,Daytona Beach, FL,168000.0,1959.0\n5,Homestead-Miami Speedway,Homestead, FL,65000.0,1995.0\n6,Kansas Speedway,Kansas City, KS,81687.0,2001.0\n7,Martinsville Speedway,Ridgeway, VA,65000.0,1947.0\n8,Michigan International Speedway,Brooklyn, MI,137243.0,1968.0\n9,Phoenix International Raceway,Avondale, AZ,76812.0,1964.0\n\nQuestion: Give the different locations of tracks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the different locations\nlocations = df['Location'].unique()\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: How many races are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of races\nnum_races = df.shape[0]\n\nprint(num_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: Count the number of races.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of races\nnum_races = df.shape[0]\n\nprint(num_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: What are the distinct classes that races can have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique classes\ndistinct_classes = df['Class'].unique()\n\n# Print the distinct classes\nprint(distinct_classes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: Return the different classes of races.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique classes\ndistinct_classes = df['Class'].unique()\n\n# Print the distinct classes\nprint(distinct_classes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: Show name, class, and date for all races.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting the required columns\ndf_selected = df[['Name', 'Class', 'Date']]\n\n# Printing the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: What are the names, classes, and dates for all races?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting the required columns\ndf_selected = df[['Name', 'Class', 'Date']]\n\n# Printing the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: Show the race class and number of races in each class.", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'Class' and count the number of races in each class\nraces_by_class = df.groupby('Class').size()\n\n# Print the result\nprint(races_by_class)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: What are the different classes of races, and how many races correspond to each?", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'Class' and count the number of races in each class\nraces_by_class = df.groupby('Class').size()\n\n# Print the result\nprint(races_by_class)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: What is the race class with most number of races.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each class\nclass_counts = df['Class'].value_counts()\n\n# Get the class with the highest count\nmost_common_class = class_counts.idxmax()\n\nprint(most_common_class)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: Give the class of races that is most common.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each class\nclass_counts = df['Class'].value_counts()\n\n# Get the class with the highest count\nmost_common_class = class_counts.idxmax()\n\nprint(most_common_class)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: List the race class with at least two races.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by class and count the number of races\nrace_count_by_class = df.groupby('Class').size()\n\n# Filter the classes with at least two races\nclasses_with_two_or_more_races = race_count_by_class[race_count_by_class >= 2].index.tolist()\n\nprint(classes_with_two_or_more_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRace_ID,Name,Class,Date,Track_ID\n1,Rolex 24 At Daytona,DP/GT,January 26 January 27,1\n2,Gainsco Grand Prix of Miami,DP/GT,March 29,2\n3,Mexico City 250,DP/GT,April 19,2\n4,Bosch Engineering 250 at VIR,GT,April 27,4\n5,RumBum.com 250,DP/GT,May 17,5\n6,Lime Rock GT Classic 250,GT,May 26,6\n7,Sahlen's Six Hours of the Glen,DP/GT,June 7,7\n\nQuestion: What are the classes of races that have two or more corresponding races?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by class and count the number of races\nrace_count_by_class = df.groupby('Class').size()\n\n# Filter the classes with at least two races\nclasses_with_two_or_more_races = race_count_by_class[race_count_by_class >= 2].index.tolist()\n\nprint(classes_with_two_or_more_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: How many members have the black membership card?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for rows with 'Black' membership card\nblack_members = df[df['Membership_card'] == 'Black']\n\n# Count the number of rows in the filtered dataframe\nnum_black_members = black_members.shape[0]\n\n# Print the answer\nprint(num_black_members)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Find the number of members living in each address.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use value_counts() function to get the count of members living in each address\naddress_count = df['Address'].value_counts()\n\n# Save the answer in a variable\nanswer = address_count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Give me the names of members whose address is in Harford or Waterbury.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where Address is in Harford or Waterbury\nfiltered_data = df[df['Address'].isin(['Harford', 'Waterbury'])]\n\n# Extract the names of the members\nmember_names = filtered_data['Name'].tolist()\n\n# Save the answer in a variable\nanswer = member_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Find the ids and names of members who are under age 30 or with black membership card.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get members who are under 30 or with black membership card\nfiltered_df = df[(df['Age'] < 30) | (df['Membership_card'] == 'Black')]\n\n# Get the ids and names of the members\nresult = filtered_df[['Member_ID', 'Name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\nselected_df = df[['Time_of_purchase', 'Age', 'Address']]\n\n# Sort the DataFrame by 'Time_of_purchase'\nsorted_df = selected_df.sort_values('Time_of_purchase')\n\n# Print the sorted DataFrame\nprint(sorted_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Which membership card has more than 5 members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Membership_card' and count the number of members\ngrouped = df.groupby('Membership_card').size()\n\n# Find the card(s) with more than 5 members\nanswer = grouped[grouped > 5].index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Which address has both members younger than 30 and members older than 40?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame for members younger than 30 and older than 40\nyounger_than_30 = df[df['Age'] < 30]\nolder_than_40 = df[df['Age'] > 40]\n\n# Find the common addresses\ncommon_addresses = set(younger_than_30['Address']).intersection(set(older_than_40['Address']))\n\n# Save the answer in a variable\nanswer = common_addresses\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for members living in Hartford and Waterbury addresses\nhartford_members = df[df['Address'] == 'Hartford']['Membership_card'].unique()\nwaterbury_members = df[df['Address'] == 'Waterbury']['Membership_card'].unique()\n\n# Find the intersection of the membership cards\ncommon_membership_cards = set(hartford_members) & set(waterbury_members)\n\n# Save the answer in a variable\nanswer = common_membership_cards\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: How many members are not living in Hartford?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out members living in Hartford\nmembers_not_in_hartford = df[df['Address'] != 'Hartford']\n\n# Count the number of members not living in Hartford\ncount_members_not_in_hartford = len(members_not_in_hartford)\n\nprint(count_members_not_in_hartford)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address\n1,Ashby, Lazale,Black,29,18,5,Hartford\n2,Breton, Robert,White,67,41,4,Waterbury\n3,Campbell, Jessie,Black,34,20,6,Hartford\n4,Cobb, Sedrick,Black,51,27,2,Waterbury\n5,Hayes, Steven,White,50,44,3,Cheshire\n6,Komisarjevsky, Joshua,White,33,26,2,Cheshire\n7,Peeler, Russell,Black,42,26,6,Bridgeport\n8,Reynolds, Richard,Black,45,24,1,Waterbury\n9,Rizzo, Todd,White,35,18,4,Waterbury\n10,Webb, Daniel,Black,51,27,22,Hartford\n\nQuestion: Which address do not have any member with the black membership card?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Membership_card' is 'Black'\nblack_members_df = df[df['Membership_card'] == 'Black']\n\n# Get unique addresses\nunique_addresses = df['Address'].unique()\n\n# Filter addresses that do not appear in 'black_members_df'\nnon_black_members_addresses = [address for address in unique_addresses if address not in black_members_df['Address'].values]\n\n# Save the answer in a variable\nanswer = non_black_members_addresses\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Address,Num_of_staff,Score,Open_Year\n1,1200 Main Street,13,42.0,2010\n2,1111 Main Street,19,38.0,2008\n3,1330 Baltimore Street,42,36.0,2010\n4,909 Walnut Street,27,32.0,2010\n5,414 E. 12th Street,24,30.0,2011\n6,1201 Walnut Street,34,30.0,2010\n7,2345 McGee Street,425,40.0,2008\n8,909 Main Street,28,30.0,2011\n9,1100 Main Street,23,30.0,2006\n10,324 E. 11th Street,16,28.0,2008\n\nQuestion: Show the shop addresses ordered by their opening year.", "response": "import pandas as pd\n\n# Read the CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Open_Year' in ascending order\ndf_sorted = df.sort_values('Open_Year')\n\n# Select the 'Address' column from the sorted dataframe\naddresses = df_sorted['Address']\n\n# Print the addresses\nprint(addresses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Address,Num_of_staff,Score,Open_Year\n1,1200 Main Street,13,42.0,2010\n2,1111 Main Street,19,38.0,2008\n3,1330 Baltimore Street,42,36.0,2010\n4,909 Walnut Street,27,32.0,2010\n5,414 E. 12th Street,24,30.0,2011\n6,1201 Walnut Street,34,30.0,2010\n7,2345 McGee Street,425,40.0,2008\n8,909 Main Street,28,30.0,2011\n9,1100 Main Street,23,30.0,2006\n10,324 E. 11th Street,16,28.0,2008\n\nQuestion: Find the id and address of the shops whose score is below the average score.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average score\naverage_score = df['Score'].mean()\n\n# Filter shops whose score is below the average\nshops_below_average = df[df['Score'] < average_score][['Shop_ID', 'Address']]\n\n# Print the result\nprint(shops_below_average)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHH_ID,Shop_ID,Month,Num_of_shaff_in_charge\n1,1,May,10\n2,1,April,12\n3,10,June,15\n4,5,July,5\n5,1,May,10\n6,1,April,12\n7,2,June,5\n8,3,July,15\n9,3,May,3\n10,3,April,4\n\nQuestion: Which month has the most happy hours?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of entries for each month\nmonth_counts = df['Month'].value_counts()\n\n# Get the month with the most entries\nmost_happy_hours_month = month_counts.idxmax()\n\n# Print the month with the most happy hours\nprint(most_happy_hours_month)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHH_ID,Shop_ID,Month,Num_of_shaff_in_charge\n1,1,May,10\n2,1,April,12\n3,10,June,15\n4,5,July,5\n5,1,May,10\n6,1,April,12\n7,2,June,5\n8,3,July,15\n9,3,May,3\n10,3,April,4\n\nQuestion: Which months have more than 2 happy hours?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by month and count the number of happy hours\nmonth_count = df.groupby('Month')['HH_ID'].count()\n\n# Filter months with more than 2 happy hours\nmonths_more_than_2 = month_count[month_count > 2]\n\n# Save the answer in a variable\nanswer = months_more_than_2.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAlbumId,Title,ArtistId\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: How many albums are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of albums\nnum_albums = len(df)\n\n# Print the result\nprint(num_albums)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAlbumId,Title,ArtistId\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: Find the number of albums.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of albums\nnum_albums = len(df)\n\n# Print the result\nprint(num_albums)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGenreId,Name\n1,Rock\n2,Jazz\n3,Metal\n4,Alternative & Punk\n5,Rock And Roll\n6,Blues\n7,Latin\n8,Reggae\n9,Pop\n10,Soundtrack\n\nQuestion: List the names of all music genres.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the names of music genres\ngenre_names = df['Name'].tolist()\n\n# Print the names of music genres\nprint(genre_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGenreId,Name\n1,Rock\n2,Jazz\n3,Metal\n4,Alternative & Punk\n5,Rock And Roll\n6,Blues\n7,Latin\n8,Reggae\n9,Pop\n10,Soundtrack\n\nQuestion: What are the names of different music genres?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the names of music genres\ngenre_names = df['Name'].tolist()\n\n# Print the names of music genres\nprint(genre_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What are the first names and last names of the employees who live in Calgary city.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include employees living in Calgary\ncalgary_employees = df[df['City'] == 'Calgary']\n\n# Extract the 'FirstName' and 'LastName' columns to get the full names\nfull_names = calgary_employees[['FirstName', 'LastName']]\n\n# Print the full names\nprint(full_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: Find the full names of employees living in the city of Calgary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include employees living in Calgary\ncalgary_employees = df[df['City'] == 'Calgary']\n\n# Extract the 'FirstName' and 'LastName' columns to get the full names\nfull_names = calgary_employees[['FirstName', 'LastName']]\n\n# Print the full names\nprint(full_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoiceId,CustomerId,InvoiceDate,BillingAddress,BillingCity,BillingState,BillingCountry,BillingPostalCode,Total\n1,2,2009-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2009-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2009-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2009-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2009-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2009-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2009-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2009-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2009-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2009-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: What are the distinct billing countries of the invoices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the different billing countries for all invoices\nbilling_countries = df['BillingCountry'].unique()\n\nprint(billing_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoiceId,CustomerId,InvoiceDate,BillingAddress,BillingCity,BillingState,BillingCountry,BillingPostalCode,Total\n1,2,2009-01-01 00:00:00,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,1.98\n2,4,2009-01-02 00:00:00,Ullevålsveien 14,Oslo,,Norway,0171,3.96\n3,8,2009-01-03 00:00:00,Grétrystraat 63,Brussels,,Belgium,1000,5.94\n4,14,2009-01-06 00:00:00,8210 111 ST NW,Edmonton,AB,Canada,T6G 2C7,8.91\n5,23,2009-01-11 00:00:00,69 Salem Street,Boston,MA,USA,2113,13.86\n6,37,2009-01-19 00:00:00,Berger Straße 10,Frankfurt,,Germany,60316,0.99\n7,38,2009-02-01 00:00:00,Barbarossastraße 19,Berlin,,Germany,10779,1.98\n8,40,2009-02-01 00:00:00,8, Rue Hanovre,Paris,,France,75002,1.98\n9,42,2009-02-02 00:00:00,9, Place Louis Barthou,Bordeaux,,France,33000,3.96\n10,46,2009-02-03 00:00:00,3 Chatham Street,Dublin,Dublin,Ireland,,5.94\n\nQuestion: Find the different billing countries for all invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the different billing countries for all invoices\nbilling_countries = df['BillingCountry'].unique()\n\nprint(billing_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtistId,Name\n1,AC/DC\n2,Accept\n3,Aerosmith\n4,Alanis Morissette\n5,Alice In Chains\n6,Antônio Carlos Jobim\n7,Apocalyptica\n8,Audioslave\n9,BackBeat\n10,Billy Cobham\n\nQuestion: Find the names of all artists that have \"a\" in their names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where the 'Name' column contains the letter 'a'\nfiltered_df = df[df['Name'].str.contains('a', case=False)]\n\n# Get the names of the artists\nartists_with_a = filtered_df['Name'].tolist()\n\nprint(artists_with_a)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtistId,Name\n1,AC/DC\n2,Accept\n3,Aerosmith\n4,Alanis Morissette\n5,Alice In Chains\n6,Antônio Carlos Jobim\n7,Apocalyptica\n8,Audioslave\n9,BackBeat\n10,Billy Cobham\n\nQuestion: What are the names of artist who have the letter 'a' in their names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where the 'Name' column contains the letter 'a'\nfiltered_df = df[df['Name'].str.contains('a', case=False)]\n\n# Get the names of the artists\nartists_with_a = filtered_df['Name'].tolist()\n\nprint(artists_with_a)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrackId,Name,AlbumId,MediaTypeId,GenreId,Composer,Milliseconds,Bytes,UnitPrice\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: Find the names of all the tracks that contain the word \"you\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the str.contains() function to find all the rows that contain the word 'you'\n# Convert the resulting boolean Series to a list to get the names of the tracks\ntrack_names = df.loc[df['Name'].str.contains('you', case=False), 'Name'].tolist()\n\nprint(track_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrackId,Name,AlbumId,MediaTypeId,GenreId,Composer,Milliseconds,Bytes,UnitPrice\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: What are the names of tracks that contain the the word you in them?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the str.contains() function to find all the rows that contain the word 'you'\n# Convert the resulting boolean Series to a list to get the names of the tracks\ntrack_names = df.loc[df['Name'].str.contains('you', case=False), 'Name'].tolist()\n\nprint(track_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomerId,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email,SupportRepId\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for rows where the email is \"luisg@embraer.com.br\"\nfiltered_df = df[df['Email'] == 'luisg@embraer.com.br']\n\n# Accessing the 'FirstName' and 'LastName' of the filtered dataframe\nfull_name = filtered_df[['FirstName', 'LastName']].values[0]\n\n# Printing the full name\nprint(full_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomerId,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email,SupportRepId\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: Find the full name of the customer with the email \"luisg@embraer.com.br\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for rows where the email is \"luisg@embraer.com.br\"\nfiltered_df = df[df['Email'] == 'luisg@embraer.com.br']\n\n# Accessing the 'FirstName' and 'LastName' of the filtered dataframe\nfull_name = filtered_df[['FirstName', 'LastName']].values[0]\n\n# Printing the full name\nprint(full_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomerId,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email,SupportRepId\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: How many customers have email that contains \"gmail.com\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to get the customers with gmail.com\ngmail_customers = df[df['Email'].str.contains(\"gmail.com\")]\n\n# Getting the number of customers\nnum_customers = gmail_customers.shape[0]\n\nprint(\"Number of customers with gmail.com: \", num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomerId,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email,SupportRepId\n1,Luís,Gonçalves,Embraer - Empresa Brasileira de Aeronáutica S.A.,Av. Brigadeiro Faria Lima, 2170,São José dos Campos,SP,Brazil,12227-000,+55 (12) 3923-5555,+55 (12) 3923-5566,luisg@embraer.com.br,3\n2,Leonie,Köhler,,Theodor-Heuss-Straße 34,Stuttgart,,Germany,70174,+49 0711 2842222,,leonekohler@surfeu.de,5\n3,François,Tremblay,,1498 rue Bélanger,Montréal,QC,Canada,H2G 1A7,+1 (514) 721-4711,,ftremblay@gmail.com,3\n4,Bjørn,Hansen,,Ullevålsveien 14,Oslo,,Norway,0171,+47 22 44 22 22,,bjorn.hansen@yahoo.no,4\n5,František,Wichterlová,JetBrains s.r.o.,Klanova 9/506,Prague,,Czech Republic,14700,+420 2 4172 5555,+420 2 4172 5555,frantisekw@jetbrains.com,4\n6,Helena,Holý,,Rilská 3174/6,Prague,,Czech Republic,14300,+420 2 4177 0449,,hholy@gmail.com,5\n7,Astrid,Gruber,,Rotenturmstraße 4, 1010 Innere Stadt,Vienne,,Austria,1010,+43 01 5134505,,astrid.gruber@apple.at,5\n8,Daan,Peeters,,Grétrystraat 63,Brussels,,Belgium,1000,+32 02 219 03 03,,daan_peeters@apple.be,4\n9,Kara,Nielsen,,Sønder Boulevard 51,Copenhagen,,Denmark,1720,+453 3331 9991,,kara.nielsen@jubii.dk,4\n10,Eduardo,Martins,Woodstock Discos,Rua Dr. Falcão Filho, 155,São Paulo,SP,Brazil,01007-010,+55 (11) 3033-5446,+55 (11) 3033-4564,eduardo@woodstock.com.br,4\n\nQuestion: Count the number of customers that have an email containing \"gmail.com\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to get the customers with gmail.com\ngmail_customers = df[df['Email'].str.contains(\"gmail.com\")]\n\n# Getting the number of customers\nnum_customers = gmail_customers.shape[0]\n\nprint(\"Number of customers with gmail.com: \", num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: How many distinct cities does the employees live in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Using nunique() function to get number of unique values\nnum_cities = df['City'].nunique()\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: Find the number of different cities that employees live in.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Using nunique() function to get number of unique values\nnum_cities = df['City'].nunique()\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: List the phone numbers of all employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphone_numbers = df['Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What are the phone numbers for each employee?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphone_numbers = df['Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAlbumId,Title,ArtistId\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: Please list all album titles in alphabetical order.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get all the album titles and sort them in alphabetical order\nalbum_titles = df['Title'].sort_values()\n\n# Print the album titles\nprint(album_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAlbumId,Title,ArtistId\n1,For Those About To Rock We Salute You,1\n2,Balls to the Wall,2\n3,Restless and Wild,2\n4,Let There Be Rock,1\n5,Big Ones,3\n6,Jagged Little Pill,4\n7,Facelift,5\n8,Warner 25 Anos,6\n9,Plays Metallica By Four Cellos,7\n10,Audioslave,8\n\nQuestion: What are all the album titles, in alphabetical order?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get all the album titles and sort them in alphabetical order\nalbum_titles = df['Title'].sort_values()\n\n# Print the album titles\nprint(album_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: What are the birth dates of employees living in Edmonton?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame to only include employees living in Edmonton\nedmonton_df = df[df['City'] == 'Edmonton']\n\n# select the 'BirthDate' column\nbirth_dates = edmonton_df['BirthDate']\n\n# print the birth dates\nprint(birth_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email\n1,Adams,Andrew,General Manager,,1962-02-18 00:00:00,2002-08-14 00:00:00,11120 Jasper Ave NW,Edmonton,AB,Canada,T5K 2N1,+1 (780) 428-9482,+1 (780) 428-3457,andrew@chinookcorp.com\n2,Edwards,Nancy,Sales Manager,1,1958-12-08 00:00:00,2002-05-01 00:00:00,825 8 Ave SW,Calgary,AB,Canada,T2P 2T3,+1 (403) 262-3443,+1 (403) 262-3322,nancy@chinookcorp.com\n3,Peacock,Jane,Sales Support Agent,2,1973-08-29 00:00:00,2002-04-01 00:00:00,1111 6 Ave SW,Calgary,AB,Canada,T2P 5M5,+1 (403) 262-3443,+1 (403) 262-6712,jane@chinookcorp.com\n4,Park,Margaret,Sales Support Agent,2,1947-09-19 00:00:00,2003-05-03 00:00:00,683 10 Street SW,Calgary,AB,Canada,T2P 5G3,+1 (403) 263-4423,+1 (403) 263-4289,margaret@chinookcorp.com\n5,Johnson,Steve,Sales Support Agent,2,1965-03-03 00:00:00,2003-10-17 00:00:00,7727B 41 Ave,Calgary,AB,Canada,T3B 1Y7,1 (780) 836-9987,1 (780) 836-9543,steve@chinookcorp.com\n6,Mitchell,Michael,IT Manager,1,1973-07-01 00:00:00,2003-10-17 00:00:00,5827 Bowness Road NW,Calgary,AB,Canada,T3B 0C5,+1 (403) 246-9887,+1 (403) 246-9899,michael@chinookcorp.com\n7,King,Robert,IT Staff,6,1970-05-29 00:00:00,2004-01-02 00:00:00,590 Columbia Boulevard West,Lethbridge,AB,Canada,T1K 5N8,+1 (403) 456-9986,+1 (403) 456-8485,robert@chinookcorp.com\n8,Callahan,Laura,IT Staff,6,1968-01-09 00:00:00,2004-03-04 00:00:00,923 7 ST NW,Lethbridge,AB,Canada,T1H 1Y8,+1 (403) 467-3351,+1 (403) 467-8772,laura@chinookcorp.com\n\nQuestion: Find the birth dates corresponding to employees who live in the city of Edmonton.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame to only include employees living in Edmonton\nedmonton_df = df[df['City'] == 'Edmonton']\n\n# select the 'BirthDate' column\nbirth_dates = edmonton_df['BirthDate']\n\n# print the birth dates\nprint(birth_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrackId,Name,AlbumId,MediaTypeId,GenreId,Composer,Milliseconds,Bytes,UnitPrice\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: What are the distinct unit prices of all tracks?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct unit prices\ndistinct_unit_prices = df['UnitPrice'].unique()\n\n# Print the distinct unit prices\nprint(distinct_unit_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrackId,Name,AlbumId,MediaTypeId,GenreId,Composer,Milliseconds,Bytes,UnitPrice\n1,For Those About To Rock (We Salute You),1,1,1,Angus Young, Malcolm Young, Brian Johnson,343719,11170334,0.99\n2,Balls to the Wall,2,2,1,,342562,5510424,0.99\n3,Fast As a Shark,3,2,1,F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman,230619,3990994,0.99\n4,Restless and Wild,3,2,1,F. Baltes, R.A. Smith-Diesel, S. Kaufman, U. Dirkscneider & W. Hoffman,252051,4331779,0.99\n5,Princess of the Dawn,3,2,1,Deaffy & R.A. Smith-Diesel,375418,6290521,0.99\n6,Put The Finger On You,1,1,1,Angus Young, Malcolm Young, Brian Johnson,205662,6713451,0.99\n7,Let's Get It Up,1,1,1,Angus Young, Malcolm Young, Brian Johnson,233926,7636561,0.99\n8,Inject The Venom,1,1,1,Angus Young, Malcolm Young, Brian Johnson,210834,6852860,0.99\n9,Snowballed,1,1,1,Angus Young, Malcolm Young, Brian Johnson,203102,6599424,0.99\n10,Evil Walks,1,1,1,Angus Young, Malcolm Young, Brian Johnson,263497,8611245,0.99\n\nQuestion: Find the distinct unit prices for tracks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct unit prices\ndistinct_unit_prices = df['UnitPrice'].unique()\n\n# Print the distinct unit prices\nprint(distinct_unit_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Find all the phone numbers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphone_numbers = df['Customer_Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: What are all the phone numbers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphone_numbers = df['Customer_Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: What are the customer phone numbers under the policy \"Life Insurance\"?", "response": "import pandas as pd\n\n# Load the csv data into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the policy type code being \"Life Insurance\"\nlife_insurance_df = df[df['policy_type_code'] == 'Life Insurance']\n\n# Save the phone numbers of the customers with \"Life Insurance\" policy in a variable\nlife_insurance_phone_numbers = life_insurance_df['Customer_Phone'].tolist()\n\n# Print the variable\nprint(life_insurance_phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: What are the phone numbers of customers using the policy with the code \"Life Insurance\"?", "response": "import pandas as pd\n\n# Load the csv data into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the policy type code being \"Life Insurance\"\nlife_insurance_df = df[df['policy_type_code'] == 'Life Insurance']\n\n# Save the phone numbers of the customers with \"Life Insurance\" policy in a variable\nlife_insurance_phone_numbers = life_insurance_df['Customer_Phone'].tolist()\n\n# Print the variable\nprint(life_insurance_phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Which policy type has the most records in the database?", "response": "import pandas as pd\n\n# Load the data from csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of occurrences of each policy type\npolicy_type_counts = df['policy_type_code'].value_counts()\n\n# Find the policy type with the most records\nmost_common_policy_type = policy_type_counts.idxmax()\n\n# Print the answer\nprint(most_common_policy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Which policy type appears most frequently in the available policies?", "response": "import pandas as pd\n\n# Load the data from csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of occurrences of each policy type\npolicy_type_counts = df['policy_type_code'].value_counts()\n\n# Find the policy type with the most records\nmost_common_policy_type = policy_type_counts.idxmax()\n\n# Print the answer\nprint(most_common_policy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: What are all the customer phone numbers under the most popular policy type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common policy type\nmost_common_policy_type = df['policy_type_code'].value_counts().idxmax()\n\n# Filter the dataframe by the most common policy type and get the Customer_Phone column\nphone_numbers = df[df['policy_type_code'] == most_common_policy_type]['Customer_Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Find the phone numbers of customers using the most common policy type among the available policies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common policy type\nmost_common_policy_type = df['policy_type_code'].value_counts().idxmax()\n\n# Filter the dataframe by the most common policy type and get the Customer_Phone column\nphone_numbers = df[df['policy_type_code'] == most_common_policy_type]['Customer_Phone']\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Find the policy type used by more than 4 customers.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'policy_type_code' and count unique 'Policy_ID' for each group\npolicy_counts = df.groupby('policy_type_code')['Policy_ID'].nunique()\n\n# Filter the groups where the count is more than 4\nresult = policy_counts[policy_counts > 4]\n\n# Save the answer in a variable\nanswer = result.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,policy_type_code,Customer_Phone\n246,Life Insurance,+16(2)5838999222\n257,Property Insurance,242.763.9214\n300,Property Insurance,1-416-503-7735x94204\n301,Property Insurance,(777)537-7792\n346,Mortgage Insurance,1-446-940-9907x257\n366,Mortgage Insurance,(379)862-8274x12620\n472,Mortgage Insurance,+85(6)1302858396\n583,Travel Insurance,1-797-927-3585x9321\n586,Life Insurance,991.642.6485x822\n630,Property Insurance,813.178.8211x557\n\nQuestion: Find the policy types more than 4 customers use. Show their type code.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'policy_type_code' and count unique 'Policy_ID' for each group\npolicy_counts = df.groupby('policy_type_code')['Policy_ID'].nunique()\n\n# Filter the groups where the count is more than 4\nresult = policy_counts[policy_counts > 4]\n\n# Save the answer in a variable\nanswer = result.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nService_ID,Service_name\n1,New policy application\n4,Close a policy\n6,Change a policy\n9,Upgrade a policy\n\nQuestion: List all the services in the alphabetical order.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the services in alphabetical order\nsorted_services = df['Service_name'].sort_values()\n\n# Print the sorted services\nprint(sorted_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nService_ID,Service_name\n1,New policy application\n4,Close a policy\n6,Change a policy\n9,Upgrade a policy\n\nQuestion: Give me a list of all the service names sorted alphabetically.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the services in alphabetical order\nsorted_services = df['Service_name'].sort_values()\n\n# Print the sorted services\nprint(sorted_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nService_ID,Service_name\n1,New policy application\n4,Close a policy\n6,Change a policy\n9,Upgrade a policy\n\nQuestion: How many services are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_services = df.shape[0]\n\nprint(num_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nService_ID,Service_name\n1,New policy application\n4,Close a policy\n6,Change a policy\n9,Upgrade a policy\n\nQuestion: Count the total number of available services.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_services = df.shape[0]\n\nprint(num_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_name\n194,America Jaskolski\n214,Ellsworth Paucek\n256,Mrs. Hanna Willms\n562,Dr. Diana Rath\n582,Selena Gerhold\n641,Dayana Robel\n682,Mr. Edwardo Blanda I\n756,Mr. Randal Lynch III\n805,Mrs. Liza Heller V\n826,Mrs. Lilly Graham III\n\nQuestion: Find the IDs of customers whose name contains \"Diana\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where 'Customer_name' column contains 'Diana'\nfiltered_df = df[df['Customer_name'].str.contains('Diana')]\n\n# Get the IDs of the customers\ncustomer_ids = filtered_df['Customer_ID'].tolist()\n\n# Print the IDs of the customers\nprint(customer_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_name\n194,America Jaskolski\n214,Ellsworth Paucek\n256,Mrs. Hanna Willms\n562,Dr. Diana Rath\n582,Selena Gerhold\n641,Dayana Robel\n682,Mr. Edwardo Blanda I\n756,Mr. Randal Lynch III\n805,Mrs. Liza Heller V\n826,Mrs. Lilly Graham III\n\nQuestion: What are the IDs of customers who have \"Diana\" in part of their names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where 'Customer_name' column contains 'Diana'\nfiltered_df = df[df['Customer_name'].str.contains('Diana')]\n\n# Get the IDs of the customers\ncustomer_ids = filtered_df['Customer_ID'].tolist()\n\n# Print the IDs of the customers\nprint(customer_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Effective_Date,Settlement_Amount\n161,717,2009-11-20,6451.65\n176,641,1971-06-29,1588.45\n205,604,1978-09-09,9814.39\n208,428,2003-12-28,8827.06\n393,360,2006-04-19,8013.95\n543,309,1972-03-02,2722.67\n544,311,1973-10-27,9164.1\n604,228,2014-12-09,2138.96\n616,145,1995-04-02,3101.3\n628,134,2001-07-02,1721.17\n\nQuestion: What are the maximum and minimum settlement amount on record?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum and minimum settlement amount\nmax_amount = df['Settlement_Amount'].max()\nmin_amount = df['Settlement_Amount'].min()\n\n# Save the answers in variables\nmax_min_amount = {'max': max_amount, 'min': min_amount}\n\n# Print the answer\nprint(max_min_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Effective_Date,Settlement_Amount\n161,717,2009-11-20,6451.65\n176,641,1971-06-29,1588.45\n205,604,1978-09-09,9814.39\n208,428,2003-12-28,8827.06\n393,360,2006-04-19,8013.95\n543,309,1972-03-02,2722.67\n544,311,1973-10-27,9164.1\n604,228,2014-12-09,2138.96\n616,145,1995-04-02,3101.3\n628,134,2001-07-02,1721.17\n\nQuestion: Find the maximum and minimum settlement amount.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum and minimum settlement amount\nmax_amount = df['Settlement_Amount'].max()\nmin_amount = df['Settlement_Amount'].min()\n\n# Save the answers in variables\nmax_min_amount = {'max': max_amount, 'min': min_amount}\n\n# Print the answer\nprint(max_min_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_name\n194,America Jaskolski\n214,Ellsworth Paucek\n256,Mrs. Hanna Willms\n562,Dr. Diana Rath\n582,Selena Gerhold\n641,Dayana Robel\n682,Mr. Edwardo Blanda I\n756,Mr. Randal Lynch III\n805,Mrs. Liza Heller V\n826,Mrs. Lilly Graham III\n\nQuestion: List all the customers in increasing order of IDs.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe in ascending order by 'Customer_ID'\nsorted_df = df.sort_values('Customer_ID')\n\n# Print the sorted dataframe\nprint(sorted_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_name\n194,America Jaskolski\n214,Ellsworth Paucek\n256,Mrs. Hanna Willms\n562,Dr. Diana Rath\n582,Selena Gerhold\n641,Dayana Robel\n682,Mr. Edwardo Blanda I\n756,Mr. Randal Lynch III\n805,Mrs. Liza Heller V\n826,Mrs. Lilly Graham III\n\nQuestion: What is the ordered list of customer ids?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe in ascending order by 'Customer_ID'\nsorted_df = df.sort_values('Customer_ID')\n\n# Print the sorted dataframe\nprint(sorted_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: How many kinds of enzymes are there?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the total number of enzymes\ntotal_enzymes = df.shape[0]\n\n# Print the total number of enzymes\nprint(\"Total number of enzymes: \", total_enzymes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What is the total count of enzymes?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the total number of enzymes\ntotal_enzymes = df.shape[0]\n\n# Print the total number of enzymes\nprint(\"Total number of enzymes: \", total_enzymes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: List the name of enzymes in descending lexicographical order.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the 'name' column in descending order\nsorted_df = df.sort_values('name', ascending=False)\n\n# Save the sorted 'name' column in a variable\nanswer = sorted_df['name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What are the names of enzymes in descending order?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the 'name' column in descending order\nsorted_df = df.sort_values('name', ascending=False)\n\n# Save the sorted 'name' column in a variable\nanswer = sorted_df['name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: List the names and the locations that the enzymes can make an effect.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Product' is not 'none'\nfiltered_df = df[df['Product'] != 'none']\n\n# Create a new dataframe with 'name' and 'Location' columns\nresult_df = filtered_df[['name', 'Location']]\n\n# Print the result dataframe\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What are the names and locations of all enzymes listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Product' is not 'none'\nfiltered_df = df[df['Product'] != 'none']\n\n# Create a new dataframe with 'name' and 'Location' columns\nresult_df = filtered_df[['name', 'Location']]\n\n# Print the result dataframe\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'OMIM' column to integer\ndf['OMIM'] = df['OMIM'].astype(int)\n\n# Find the maximum 'OMIM' value\nmax_omim = df['OMIM'].max()\n\n# Print the maximum 'OMIM' value\nprint(max_omim)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What is the maximum OMIM value in the database?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'OMIM' column to integer\ndf['OMIM'] = df['OMIM'].astype(int)\n\n# Find the maximum 'OMIM' value\nmax_omim = df['OMIM'].max()\n\n# Print the maximum 'OMIM' value\nprint(max_omim)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where location is 'Cytosol'\nfiltered_df = df[df['Location'] == 'Cytosol']\n\n# Create a new DataFrame with necessary columns\nresult_df = filtered_df[['Product', 'Chromosome', 'Porphyria']]\n\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where location is 'Cytosol'\nfiltered_df = df[df['Location'] == 'Cytosol']\n\n# Create a new DataFrame with necessary columns\nresult_df = filtered_df[['Product', 'Chromosome', 'Porphyria']]\n\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What are the names of enzymes who does not produce 'Heme'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the Product is not 'Heme'\ndf_filtered = df[df['Product'] != 'Heme']\n\n# Get the names of the enzymes\nenzyme_names = df_filtered['name'].tolist()\n\n# Print the names\nprint(enzyme_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What are the names of enzymes whose product is not 'Heme'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the Product is not 'Heme'\ndf_filtered = df[df['Product'] != 'Heme']\n\n# Get the names of the enzymes\nenzyme_names = df_filtered['name'].tolist()\n\n# Print the names\nprint(enzyme_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: What are the names and trade names of the medicines which has 'Yes' value in the FDA record?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['FDA_approved'] == 'Yes']\nanswer = df[['name', 'Trade_Name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: What are the names and trade names of the medcines that are FDA approved?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['FDA_approved'] == 'Yes']\nanswer = df[['name', 'Trade_Name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: How many medicines have the FDA approval status 'No' ?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where FDA_approved is 'No'\ndf_not_approved = df[df['FDA_approved'] == 'No']\n\n# Count the number of medicines not approved\nnum_not_approved = df_not_approved.shape[0]\n\n# Print the number of medicines not approved\nprint(num_not_approved)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: How many medicines were not approved by the FDA?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where FDA_approved is 'No'\ndf_not_approved = df[df['FDA_approved'] == 'No']\n\n# Count the number of medicines not approved\nnum_not_approved = df_not_approved.shape[0]\n\n# Print the number of medicines not approved\nprint(num_not_approved)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: How many distinct FDA approval statuses are there for the medicines?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the distinct FDA approval statuses\nnum_distinct_approvals = df['FDA_approved'].nunique()\n\n# Print the number of distinct FDA approval statuses\nprint(num_distinct_approvals)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: How many different FDA approval statuses exist for medicines?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the distinct FDA approval statuses\nnum_distinct_approvals = df['FDA_approved'].nunique()\n\n# Print the number of distinct FDA approval statuses\nprint(num_distinct_approvals)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: Which enzyme names have the substring \"ALA\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'name' contains 'ALA'\nfiltered_df = df[df['name'].str.contains('ALA')]\n\n# Get the names of the enzymes\nenzyme_names = filtered_df['name'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = enzyme_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Location,Product,Chromosome,OMIM,Porphyria\n1,ALA synthase,Mitochondrion,δ-Aminolevulinic acid,3p21.1,125290,none\n2,ALA dehydratase,Cytosol,Porphobilinogen,9q34,125270,ALA-Dehydratase deficiency\n3,PBG deaminase,Cytosol,Hydroxymethyl bilane,11q23.3,176000,acute intermittent porphyria\n4,Uroporphyrinogen III synthase,Cytosol,Uroporphyrinogen III,10q25.2-q26.3,606938,congenital erythropoietic porphyria\n5,Uroporphyrinogen III decarboxylase,Cytosol,Coproporphyrinogen III,1p34,176100,porphyria cutanea tarda\n6,Coproporphyrinogen III oxidase,Mitochondrion,Protoporphyrinogen IX,3q12,121300,coproporphyria\n7,Protoporphyrinogen oxidase,Mitochondrion,Protoporphyrin IX,1q22,600923,variegate porphyria\n8,Ferrochelatase,Mitochondrion,Heme,18q21.3,177000,erythropoietic protoporphyria\n\nQuestion: What are the names of enzymes that include the string 'ALA'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'name' contains 'ALA'\nfiltered_df = df[df['name'].str.contains('ALA')]\n\n# Get the names of the enzymes\nenzyme_names = filtered_df['name'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = enzyme_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: find the number of medicines offered by each trade.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntrade_counts = df['Trade_Name'].value_counts()\n\nprint(trade_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Trade_Name,FDA_approved\n1,Amisulpride,Solian,No\n2,Aripiprazole,Abilify,Yes\n3,Asenapine,Saphris,Yes\n4,Blonanserin,Lonasen,No\n5,Carpipramine,Prazinil,No\n6,Clocapramine,Clofekton,No\n7,Clozapine,Clozaril,Yes\n8,Iloperidone,Fanapt,Yes\n9,Lurasidone,Latuda,Yes\n10,Melperone,Buronil,No\n\nQuestion: How many medicines are offered by each trade name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntrade_counts = df['Trade_Name'].value_counts()\n\nprint(trade_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: List all schools and their nicknames in the order of founded year.", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Founded' column\ndf = df.sort_values(by='Founded')\n\n# Create a new dataframe with only 'School' and 'Nickname' columns\ndf_schools_and_nicknames = df[['School', 'Nickname']]\n\n# Print the dataframe\nprint(df_schools_and_nicknames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the different schools and their nicknames, ordered by their founding years?", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Founded' column\ndf = df.sort_values(by='Founded')\n\n# Create a new dataframe with only 'School' and 'Nickname' columns\ndf_schools_and_nicknames = df[['School', 'Nickname']]\n\n# Print the dataframe\nprint(df_schools_and_nicknames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: List all public schools and their locations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_public_schools = df[df['Affiliation'] == 'Public']\n\npublic_schools = df_public_schools[['School', 'Location']]\n\nprint(public_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the public schools and what are their locations?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_public_schools = df[df['Affiliation'] == 'Public']\n\npublic_schools = df_public_schools[['School', 'Location']]\n\nprint(public_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: When was the school with the largest enrollment founded?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# find the row with the maximum enrollment\nmax_enrollment_row = df.loc[df['Enrollment'].idxmax()]\n\n# get the founded year for the school with the largest enrollment\nfounded_year = max_enrollment_row['Founded']\n\n# print the founded year\nprint(founded_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Return the founded year for the school with the largest enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# find the row with the maximum enrollment\nmax_enrollment_row = df.loc[df['Enrollment'].idxmax()]\n\n# get the founded year for the school with the largest enrollment\nfounded_year = max_enrollment_row['Founded']\n\n# print the founded year\nprint(founded_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find the founded year of the newest non public school.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to find non public schools\nnon_public_schools = df[df['Affiliation'] != 'Public']\n\n# Sort the non public schools by 'Founded' in descending order\nnon_public_schools_sorted = non_public_schools.sort_values(by='Founded', ascending=False)\n\n# Save the answer in a variable\nnewest_non_public_school = non_public_schools_sorted['Founded'].iloc[0]\n\n# Print the answer\nprint(newest_non_public_school)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What is the founded year of the non public school that was founded most recently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to find non public schools\nnon_public_schools = df[df['Affiliation'] != 'Public']\n\n# Sort the non public schools by 'Founded' in descending order\nnon_public_schools_sorted = non_public_schools.sort_values(by='Founded', ascending=False)\n\n# Save the answer in a variable\nnewest_non_public_school = non_public_schools_sorted['Founded'].iloc[0]\n\n# Print the answer\nprint(newest_non_public_school)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_ID,School_ID,Team_Name,ACC_Regular_Season,ACC_Percent,ACC_Home,ACC_Road,All_Games,All_Games_Percent,All_Home,All_Road,All_Neutral\n1,1,North Carolina,14–2,.875,6–2,8–0,35–2,0.946,14–2,13–0,9–1\n2,2,Duke,13–3,.813,7–1,6–2,28–6,0.824,15–1,8–2,5–3\n3,4,Clemson,10–6,.625,7–1,3–5,24–10,0.706,14–2,6–5,4–3\n4,5,Virginia Tech,9–7,.563,6–2,3–5,21–14,0.6,14–3,4–8,3–3\n\nQuestion: How many schools are in the basketball match?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of schools in the match\nnum_schools = df['School_ID'].nunique()\n\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_ID,School_ID,Team_Name,ACC_Regular_Season,ACC_Percent,ACC_Home,ACC_Road,All_Games,All_Games_Percent,All_Home,All_Road,All_Neutral\n1,1,North Carolina,14–2,.875,6–2,8–0,35–2,0.946,14–2,13–0,9–1\n2,2,Duke,13–3,.813,7–1,6–2,28–6,0.824,15–1,8–2,5–3\n3,4,Clemson,10–6,.625,7–1,3–5,24–10,0.706,14–2,6–5,4–3\n4,5,Virginia Tech,9–7,.563,6–2,3–5,21–14,0.6,14–3,4–8,3–3\n\nQuestion: Count the number of schools that have had basketball matches.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of schools in the match\nnum_schools = df['School_ID'].nunique()\n\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the average enrollment size of the universities that are founded before 1850?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only universities founded before 1850\ndf_filtered = df[df['Founded'] < 1850]\n\n# Calculate the average enrollment size\naverage_enrollment = df_filtered['Enrollment'].mean()\n\n# Print the average enrollment size\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Return the average enrollment of universities founded before 1850.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only universities founded before 1850\ndf_filtered = df[df['Founded'] < 1850]\n\n# Calculate the average enrollment size\naverage_enrollment = df_filtered['Enrollment'].mean()\n\n# Print the average enrollment size\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Show the enrollment and primary_conference of the oldest college.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the minimum founded year\nmin_founded_year = df['Founded'].min()\n\n# Get the details of the school which was founded the earliest\nearliest_school = df[df['Founded'] == min_founded_year]\n\n# Get the enrollment and primary conference\nanswer = earliest_school[['Enrollment', 'Primary_conference']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the enrollment and primary conference for the university which was founded the earliest?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the minimum founded year\nmin_founded_year = df['Founded'].min()\n\n# Get the details of the school which was founded the earliest\nearliest_school = df[df['Founded'] == min_founded_year]\n\n# Get the enrollment and primary conference\nanswer = earliest_school[['Enrollment', 'Primary_conference']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What is the total and minimum enrollment of all schools?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the Enrollment column to numeric type\ndf['Enrollment'] = pd.to_numeric(df['Enrollment'], errors='coerce')\n\n# Get the minimum and sum of Enrollment\nminimum_enrollment = df['Enrollment'].min()\ntotal_enrollment = df['Enrollment'].sum()\n\n# Save the answer in a variable and print the variable\nanswer = {'Minimum Enrollment': minimum_enrollment, 'Total Enrollment': total_enrollment}\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Return the total and minimum enrollments across all schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the Enrollment column to numeric type\ndf['Enrollment'] = pd.to_numeric(df['Enrollment'], errors='coerce')\n\n# Get the minimum and sum of Enrollment\nminimum_enrollment = df['Enrollment'].min()\ntotal_enrollment = df['Enrollment'].sum()\n\n# Save the answer in a variable and print the variable\nanswer = {'Minimum Enrollment': minimum_enrollment, 'Total Enrollment': total_enrollment}\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find the total student enrollment for different affiliation type schools.", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by the 'Affiliation' column and sum the 'Enrollment' column\ntotal_enrollment = df.groupby('Affiliation')['Enrollment'].sum()\n\n# Print the total student enrollment for different affiliation type schools\nprint(total_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the total enrollments of universities of each affiliation type?", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by the 'Affiliation' column and sum the 'Enrollment' column\ntotal_enrollment = df.groupby('Affiliation')['Enrollment'].sum()\n\n# Print the total student enrollment for different affiliation type schools\nprint(total_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find the schools that were either founded after 1850 or public.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter schools that were either founded after 1850 or public\nfiltered_df = df[(df['Founded'] > 1850) | (df['Affiliation'] == 'Public')]\n\n# Save the answer in a variable\nanswer = filtered_df['School'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the schools that were either founded before 1850 or are public?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter schools that were either founded after 1850 or public\nfiltered_df = df[(df['Founded'] > 1850) | (df['Affiliation'] == 'Public')]\n\n# Save the answer in a variable\nanswer = filtered_df['School'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find how many different affiliation types there are.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Counting the number of different affiliation types\nnum_affiliation_types = df['Affiliation'].nunique()\n\nprint(num_affiliation_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Count the number of different affiliation types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Counting the number of different affiliation types\nnum_affiliation_types = df['Affiliation'].nunique()\n\nprint(num_affiliation_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find how many school locations have the word 'NY'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Location' column contains 'NY'\ndf_NY = df[df['Location'].str.contains('NY')]\n\n# Count the number of rows in the filtered dataframe\ncount_NY = df_NY.shape[0]\n\nprint(count_NY)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: How many universities have a location that contains NY?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Location' column contains 'NY'\ndf_NY = df[df['Location'].str.contains('NY')]\n\n# Count the number of rows in the filtered dataframe\ncount_NY = df_NY.shape[0]\n\nprint(count_NY)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find the number of universities that have over a 20000 enrollment size for each affiliation type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter universities with over 20000 enrollment size\nover_20k_df = df[df['Enrollment'] > 20000]\n\n# Group by affiliation type and count universities\naffiliation_counts = over_20k_df.groupby('Affiliation').size()\n\n# Print affiliation counts\nprint(affiliation_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the different affiliations, and how many schools with each have an enrollment size of above 20000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter universities with over 20000 enrollment size\nover_20k_df = df[df['Enrollment'] > 20000]\n\n# Group by affiliation type and count universities\naffiliation_counts = over_20k_df.groupby('Affiliation').size()\n\n# Print affiliation counts\nprint(affiliation_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include colleges founded after 1850\ndf = df[df['Founded'] > 1850]\n\n# Group the dataframe by affiliation type and calculate the sum of enrollment for each group\naffiliation_enrollment = df.groupby('Affiliation')['Enrollment'].sum()\n\n# Print the result\nprint(affiliation_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include colleges founded after 1850\ndf = df[df['Founded'] > 1850]\n\n# Group the dataframe by affiliation type and calculate the sum of enrollment for each group\naffiliation_enrollment = df.groupby('Affiliation')['Enrollment'].sum()\n\n# Print the result\nprint(affiliation_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: What is the maximum enrollment across all schools?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_enrollment = df['Enrollment'].max()\nprint(max_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference\n1,University of Delaware,Newark, DE,1743.0,Public,19067.0,Fightin' Blue Hens,Colonial Athletic Association ( D-I )\n2,Lebanon Valley College,Annville, PA,1866.0,Private/Methodist,2100.0,Flying Dutchmen,MAC Commonwealth Conference ( D-III )\n3,University of Rhode Island,Kingston, RI,1892.0,Public,19095.0,Rams,Atlantic 10 Conference ( D-I )\n4,Rutgers University,New Brunswick, NJ,1766.0,Public,56868.0,Scarlet Knights,American Athletic Conference ( D-I )\n5,Stony Brook University,Stony Brook, NY,1957.0,Public,23997.0,Seawolves,America East Conference ( D-I )\n\nQuestion: Return the maximum enrollment across all schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_enrollment = df['Enrollment'].max()\nprint(max_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_ID,School_ID,Team_Name,ACC_Regular_Season,ACC_Percent,ACC_Home,ACC_Road,All_Games,All_Games_Percent,All_Home,All_Road,All_Neutral\n1,1,North Carolina,14–2,.875,6–2,8–0,35–2,0.946,14–2,13–0,9–1\n2,2,Duke,13–3,.813,7–1,6–2,28–6,0.824,15–1,8–2,5–3\n3,4,Clemson,10–6,.625,7–1,3–5,24–10,0.706,14–2,6–5,4–3\n4,5,Virginia Tech,9–7,.563,6–2,3–5,21–14,0.6,14–3,4–8,3–3\n\nQuestion: List names of all teams in the basketball competition, ordered by all home scores in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Split the All_Home column into two new columns\ndf[['All_Home_Wins','All_Home_Losses']] = df['All_Home'].str.split('–',expand=True)\n\n# Convert the new columns to integer type\ndf[['All_Home_Wins','All_Home_Losses']] = df[['All_Home_Wins','All_Home_Losses']].astype(int)\n\n# Sort the teams by the number of wins at home in descending order\nsorted_df = df.sort_values(by='All_Home_Wins', ascending=False)\n\n# Save the answer in a variable and print it\nteam_names = sorted_df['Team_Name'].values.tolist()\nprint(team_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_ID,School_ID,Team_Name,ACC_Regular_Season,ACC_Percent,ACC_Home,ACC_Road,All_Games,All_Games_Percent,All_Home,All_Road,All_Neutral\n1,1,North Carolina,14–2,.875,6–2,8–0,35–2,0.946,14–2,13–0,9–1\n2,2,Duke,13–3,.813,7–1,6–2,28–6,0.824,15–1,8–2,5–3\n3,4,Clemson,10–6,.625,7–1,3–5,24–10,0.706,14–2,6–5,4–3\n4,5,Virginia Tech,9–7,.563,6–2,3–5,21–14,0.6,14–3,4–8,3–3\n\nQuestion: What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Split the All_Home column into two new columns\ndf[['All_Home_Wins','All_Home_Losses']] = df['All_Home'].str.split('–',expand=True)\n\n# Convert the new columns to integer type\ndf[['All_Home_Wins','All_Home_Losses']] = df[['All_Home_Wins','All_Home_Losses']].astype(int)\n\n# Sort the teams by the number of wins at home in descending order\nsorted_df = df.sort_values(by='All_Home_Wins', ascending=False)\n\n# Save the answer in a variable and print it\nteam_names = sorted_df['Team_Name'].values.tolist()\nprint(team_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: the names of models that launched between 2002 and 2004.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert Launch_year column to numeric\ndf['Launch_year'] = pd.to_numeric(df['Launch_year'], errors='coerce')\n\n# Filter models launched between 2002 and 2004\nfiltered_df = df[(df['Launch_year'] >= 2002) & (df['Launch_year'] <= 2004)]\n\n# Extract the Model_name column\nmodel_names = filtered_df['Model_name'].tolist()\n\n# Print model names\nprint(model_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: Which model has the least amount of RAM? List the model name and the amount of RAM.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out models with no RAM information\ndf = df[df['RAM_MiB'].notna()]\n\n# Find the model with the least amount of RAM\nmin_ram_model = df[df['RAM_MiB'] == df['RAM_MiB'].min()]\n\n# Save the answer in a variable\nanswer = (min_ram_model['Model_name'].iloc[0], min_ram_model['RAM_MiB'].iloc[0])\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: How many phone hardware models are produced by the company named \"Nokia Corporation\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame by \"Nokia Corporation\"\nnokia_df = df[df['Company_name'] == 'Nokia Corporation']\n\n# Count the number of unique hardware models\nnum_models = nokia_df['Hardware_Model_name'].nunique()\n\nprint(num_models)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for rows where 'Accreditation_type' contains 'Full'\nfull_accreditation_df = df[df['Accreditation_type'].str.contains('Full')]\n\n# List the 'Hardware_Model_name' and 'Company_name' of the filtered DataFrame\nanswer = full_accreditation_df[['Hardware_Model_name', 'Company_name']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Company_name' and count the number of unique 'Hardware_Model_name' for each company\ncompany_counts = df.groupby('Company_name')['Hardware_Model_name'].nunique()\n\n# Find the company with the least number of phone models\nmin_company = company_counts.idxmin()\nmin_count = company_counts.min()\n\n# Save the answer in a variable and print the variable\nanswer = (min_company, min_count)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: List the name of the company that produced more than one phone model.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncompany_counts = df['Company_name'].value_counts()\ncompanies_more_than_one_model = company_counts[company_counts > 1].index.tolist()\n\nprint(companies_more_than_one_model)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGraphics_mode,Char_cells,Pixels,Hardware_colours,used_kb,map,Type\n0.0,80 × 32,640 × 256,2.0,20.0,3000–7FFF,Graphics\n1.0,40 × 32,320 × 256,4.0,20.0,3000–7FFF,Graphics\n2.0,20 × 32,160 × 256,8.0,20.0,3000–7FFF,Graphics\n3.0,80 × 25,640 × 200,2.0,16.0,4000–7FFF,Text\n4.0,40 × 32,320 × 256,2.0,10.0,5800–7FFF,Graphics\n5.0,20 × 32,160 × 256,4.0,10.0,5800–7FFF,Graphics\n6.0,40 × 25,320 × 200,2.0,8.0,6000–7FFF,Text\n\nQuestion: List the maximum, minimum and average number of used kb in screen mode.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the 'used_kb' column to numeric type\ndf['used_kb'] = pd.to_numeric(df['used_kb'], errors='coerce')\n\n# Compute the maximum, minimum and average number of 'used_kb'\nmax_used_kb = df['used_kb'].max()\nmin_used_kb = df['used_kb'].min()\navg_used_kb = df['used_kb'].mean()\n\n# Save the answers in a variable\nanswer = {\n    'max_used_kb': max_used_kb,\n    'min_used_kb': min_used_kb,\n    'avg_used_kb': avg_used_kb\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: Find the number of phones for each accreditation type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Accreditation_type' and count the number of rows for each group\ncounts = df.groupby('Accreditation_type').size()\n\n# Print the counts\nprint(counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: How many phones belongs to each accreditation type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Accreditation_type' and count the number of rows for each group\ncounts = df.groupby('Accreditation_type').size()\n\n# Print the counts\nprint(counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode\nSony Mobile Communications,XPERIA T, XPERIA J,Full,joyn Hot Fixes,Approved (awarded 15.11.12),X5,1\nLG Electronics,LG-P760,Full,joyn Hot Fixes,Approved (awarded 19.11.12),X51v,3\nNokia Corporation,Lumia 920, Lumia 820, Lumia 620,Full,joyn Hot Fixes,Approved (awarded 05.12.12),X5,4\nSamsung Electronics Co Ltd,GT-I9300,Full,joyn,Approved (awarded 23.10.12),X30 low-end,5\nHTC Corporation,Z520e,Provisional,joyn,Approved (valid until 14.09.13),X3i,6\nSamsung Electronics Co Ltd,GT-I9100,Provisional,joyn,Approved (valid until 06.04.13),X50 Advanced,1\nNokia Corporation,Nokia 700,Provisional,joyn,Approved (valid until 03.05.13),X5,2\nHuawei Technologies Co.Ltd.,U8815 Asura,Provisional,joyn,Approved (valid until 03.05.13),X50 Standard,3\n\nQuestion: Find the accreditation level that more than 3 phones use.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the frequency of each accreditation level\naccreditation_counts = df['Accreditation_level'].value_counts()\n\n# Find the accreditation level that more than 3 phones use\naccreditation_level = accreditation_counts[accreditation_counts > 3].index[0]\n\n# Print the accreditation level\nprint(\"The accreditation level that more than 3 phones use is:\", accreditation_level)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: Find the details for all chip models.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Display the details for all chip models\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: How many models do not have the wifi function?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for rows where WiFi is 'No'\nno_wifi_df = df[df['WiFi'] == 'No']\n\n# Count number of rows in filtered dataframe\nno_wifi_count = no_wifi_df.shape[0]\n\n# Print the count\nprint(no_wifi_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: Count the number of chip model that do not have wifi.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for rows where WiFi is 'No'\nno_wifi_df = df[df['WiFi'] == 'No']\n\n# Count number of rows in filtered dataframe\nno_wifi_count = no_wifi_df.shape[0]\n\n# Print the count\nprint(no_wifi_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nModel_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth\nX5,2002.0,32.0,32.0,1CFII,1SD,No,No\nX5 high end,2002.0,64.0,48.0,1CFII,1SD,No,No\nX3 Basic,2003.0,32.0,32.0,1SD,No,No\nX3 Advanced,2003.0,64.0,64.0,1SD,No,No\nX3i,2003.0,64.0,64.0,1SD,802.11b,No\nX30 low-end,2004.0,32.0,32.0,1SD,No,No\nX30 mid-range,2004.0,64.0,64.0,1SD,802.11b,1.1\nX30 high-end,2004.0,64.0,64.0,1SD,802.11b,1.1\nX50 Standard,2004.0,64.0,64.0,1CFII,1SD,No,Yes\nX50 Advanced,2004.0,64.0,128.0,1CFII,1SD,802.11b,Yes\n\nQuestion: List all the model names sorted by their launch year.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by launch_year\nsorted_df = df.sort_values('Launch_year')\n\n# Get the model names from the sorted data\nmodel_names = sorted_df['Model_name'].tolist()\n\n# Print the model names\nprint(model_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: How many countries are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of countries\nnum_countries = df.shape[0]\n\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: Count the number of countries.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of countries\nnum_countries = df.shape[0]\n\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: Show the country name and capital of all countries.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Question: What are the names and capitals of each country?\n# Solution\nanswer = df[['Country_name', 'Capital']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: What are the names and capitals of each country?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Question: What are the names and capitals of each country?\n# Solution\nanswer = df[['Country_name', 'Capital']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: Show all official native languages that contain the word \"English\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on condition\ndf_filtered = df[df['Official_native_language'].str.contains('English')]\n\n# Select only Official_native_language column\nofficial_languages = df_filtered['Official_native_language']\n\n# Print the result\nprint(official_languages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_id,Country_name,Capital,Official_native_language\n1,Indonesia,Jakarta,Bahasa Indonesia\n2,Iran,Tehran,Persian ( Arabic script )\n3,Iraq,Baghdad,Arabic ( Arabic script ) Kurdish\n4,Ireland,Dublin,Irish English\n5,Isle of Man,Douglas,English Manx\n6,United States,Washington,English\n\nQuestion: What are the official native languages that contain the string \"English\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on condition\ndf_filtered = df[df['Official_native_language'].str.contains('English')]\n\n# Select only Official_native_language column\nofficial_languages = df_filtered['Official_native_language']\n\n# Print the result\nprint(official_languages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show all distinct positions of matches.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get all distinct positions\npositions = df['Position'].unique()\n\n# Print the positions\nprint(positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the different positions for match season?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get all distinct positions\npositions = df['Position'].unique()\n\n# Print the positions\nprint(positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the distinct position of players from college UCLA or Duke.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'College' is either 'UCLA' or 'Duke'\nfiltered_df = df[df['College'].isin(['UCLA', 'Duke'])]\n\n# Get the distinct positions of the players from college UCLA or Duke\npositions = filtered_df['Position'].unique()\n\n# Print the positions\nfor position in positions:\n    print(position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the different positions of players from UCLA or Duke colleges?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'College' is either 'UCLA' or 'Duke'\nfiltered_df = df[df['College'].isin(['UCLA', 'Duke'])]\n\n# Get the distinct positions of the players from college UCLA or Duke\npositions = filtered_df['Position'].unique()\n\n# Print the positions\nfor position in positions:\n    print(position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the draft pick numbers and draft classes of players whose positions are defenders.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include players whose position is \"Defender\"\ndf_defenders = df[df['Position'] == 'Defender']\n\n# Extract the draft pick numbers and draft classes for defenders\nanswer = df_defenders[['Draft_Pick_Number', 'Draft_Class']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the draft pick numbers and draft classes for players who play the Defender position?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include players whose position is \"Defender\"\ndf_defenders = df[df['Position'] == 'Defender']\n\n# Extract the draft pick numbers and draft classes for defenders\nanswer = df_defenders[['Draft_Pick_Number', 'Draft_Class']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Years_Played,Total_WL,Singles_WL,Doubles_WL,Team\n1,Cho Soong-Jae (630),1 (2011),2–0,1–0,1–0,1\n2,Chung Hong (717),1 (2011),0–0,0–0,0–0,1\n3,Im Kyu-tae (492),8 (2003–2005, 2007–2011),6–9,5–7,1–2,1\n4,Jeong Suk-Young (793),2 (2010–2011),1–2,1–2,0–0,1\n5,Kim Hyun-Joon (908),2 (2010–2011),3–4,2–1,1–3,2\n6,Kim Young-Jun (474),4 (2003–2004, 2010–2011),6–4,6–3,0–1,4\n7,Lim Yong-Kyu (288),3 (2009–2011),7–6,5–6,2–0,6\n8,Seol Jae-Min (none),2 (2010-2011),2–2,0–0,2–2,1\n9,An Jae-Sung,3 (2005, 2007–2008),4–3,3–2,1–1,1\n10,Bae Nam-Ju,2 (1988, 1990),1–3,0–2,1–1,8\n\nQuestion: Show the players and the years played.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Player' and 'Years_Played' columns\nanswer = df[['Player', 'Years_Played']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Years_Played,Total_WL,Singles_WL,Doubles_WL,Team\n1,Cho Soong-Jae (630),1 (2011),2–0,1–0,1–0,1\n2,Chung Hong (717),1 (2011),0–0,0–0,0–0,1\n3,Im Kyu-tae (492),8 (2003–2005, 2007–2011),6–9,5–7,1–2,1\n4,Jeong Suk-Young (793),2 (2010–2011),1–2,1–2,0–0,1\n5,Kim Hyun-Joon (908),2 (2010–2011),3–4,2–1,1–3,2\n6,Kim Young-Jun (474),4 (2003–2004, 2010–2011),6–4,6–3,0–1,4\n7,Lim Yong-Kyu (288),3 (2009–2011),7–6,5–6,2–0,6\n8,Seol Jae-Min (none),2 (2010-2011),2–2,0–0,2–2,1\n9,An Jae-Sung,3 (2005, 2007–2008),4–3,3–2,1–1,1\n10,Bae Nam-Ju,2 (1988, 1990),1–3,0–2,1–1,8\n\nQuestion: Who are the different players and how many years has each played?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Player' and 'Years_Played' columns\nanswer = df[['Player', 'Years_Played']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_id,Name\n1,Columbus Crew\n2,Evalyn Feil\n3,Anais VonRueden\n4,Miami Fusion\n5,Enrique Osinski\n6,Brown Erdman\n7,Los Angeles Galaxy\n8,Berneice Hand\n9,Ryley Goldner\n10,D.C. United\n\nQuestion: Show all team names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nteam_names = df['Name'].tolist()\n\nprint(team_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTeam_id,Name\n1,Columbus Crew\n2,Evalyn Feil\n3,Anais VonRueden\n4,Miami Fusion\n5,Enrique Osinski\n6,Brown Erdman\n7,Los Angeles Galaxy\n8,Berneice Hand\n9,Ryley Goldner\n10,D.C. United\n\nQuestion: What are the names of all teams?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nteam_names = df['Name'].tolist()\n\nprint(team_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the position of players and the corresponding number of players.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by the 'Position' column and count the number of players in each position\nposition_count = df.groupby('Position').size()\n\n# Print the position count\nprint(position_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: How many players played each position?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by the 'Position' column and count the number of players in each position\nposition_count = df.groupby('Position').size()\n\n# Print the position count\nprint(position_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the most common position of players in match seasons.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the most common position among players in match seasons\nmost_common_position = df['Position'].mode()[0]\n\n# Print the most common position\nprint(most_common_position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What is the position that is most common among players in match seasons?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the most common position among players in match seasons\nmost_common_position = df['Position'].mode()[0]\n\n# Print the most common position\nprint(most_common_position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the top 3 most common colleges of players in match seasons.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncollege_counts = df['College'].value_counts()\ntop_three_colleges = college_counts[:3].index.tolist()\n\nprint(top_three_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the three colleges from which the most players are from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncollege_counts = df['College'].value_counts()\ntop_three_colleges = college_counts[:3].index.tolist()\n\nprint(top_three_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the name of colleges that have at least two players.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the dataframe by 'College' and count the number of players in each group\ngrouped = df.groupby('College').count()\n\n# Select only the groups with more than one player\nfiltered = grouped[grouped['Player'] > 1]\n\n# Get the names of the colleges with more than one player\nanswer = filtered.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the names of all colleges that have two or more players?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the dataframe by 'College' and count the number of players in each group\ngrouped = df.groupby('College').count()\n\n# Select only the groups with more than one player\nfiltered = grouped[grouped['Player'] > 1]\n\n# Get the names of the colleges with more than one player\nanswer = filtered.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Show the name of colleges that have at least two players in descending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncolleges_with_multiple_players = df.groupby('College').filter(lambda x: len(x) >= 2)['College'].unique()\ncolleges_with_multiple_players.sort()\n\nprint(colleges_with_multiple_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: What are the names of colleges that have two or more players, listed in descending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncolleges_with_multiple_players = df.groupby('College').filter(lambda x: len(x) >= 2)['College'].unique()\ncolleges_with_multiple_players.sort()\n\nprint(colleges_with_multiple_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Which college have both players with position midfielder and players with position defender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on player positions\nmidfielders_df = df[df['Position'] == 'Midfielder']\ndefenders_df = df[df['Position'] == 'Defender']\n\n# Concatenate dataframes and remove duplicates\nmerged_df = pd.concat([midfielders_df, defenders_df]).drop_duplicates()\n\n# Select the 'College' column\ncolleges = merged_df['College']\n\n# Print colleges\nfor college in colleges:\n    print(college)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSeason,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College\n1996.0,Steve Ralston Category:Articles with hCards,Midfielder,6,1,18,1996 MLS College Draft,Florida International\n1997.0,Mike Duhaney Category:Articles with hCards,Defender,6,2,87,1996 MLS Inaugural Player Draft,UNLV\n1998.0,Ben Olsen Category:Articles with hCards,Midfielder,4,3,2,Project-40,Virginia\n1999.0,Jay Heaps Category:Articles with hCards,Defender,5,4,5,1999 MLS College Draft,Duke\n2000.0,Carlos Bocanegra Category:Articles with hCards,Defender,5,5,4,2000 MLS SuperDraft,UCLA\n2001.0,Rodrigo Faria Category:Articles with hCards,Forward,4,5,13,2001 MLS SuperDraft,Concordia College\n2002.0,Kyle Martino Category:Articles with hCards,Midfielder,6,3,8,2002 MLS SuperDraft,Virginia\n2003.0,Damani Ralph Category:Articles with hCards,Forward,1,2,18,2003 MLS SuperDraft,Connecticut\n2004.0,Clint Dempsey Category:Articles with hCards,Midfielder,6,3,8,2004 MLS SuperDraft,Furman\n2005.0,Michael Parkhurst Category:Articles with hCards,Defender,6,4,9,2005 MLS SuperDraft,Wake Forest\n\nQuestion: Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on player positions\nmidfielders_df = df[df['Position'] == 'Midfielder']\ndefenders_df = df[df['Position'] == 'Defender']\n\n# Concatenate dataframes and remove duplicates\nmerged_df = pd.concat([midfielders_df, defenders_df]).drop_duplicates()\n\n# Select the 'College' column\ncolleges = merged_df['College']\n\n# Print colleges\nfor college in colleges:\n    print(college)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: How many climbers are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of climbers\nnum_climbers = len(df)\n\nprint(num_climbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: Count the number of climbers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of climbers\nnum_climbers = len(df)\n\nprint(num_climbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: List the names of climbers in descending order of points.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Points' column to numeric type\ndf['Points'] = pd.to_numeric(df['Points'], errors='coerce')\n\n# Sort the dataframe by 'Points' in descending order\ndf = df.sort_values(by='Points', ascending=False)\n\n# Get the names of climbers in descending order of points\nnames = df['Name'].tolist()\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: What are the names of the climbers, ordered by points descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Points' column to numeric type\ndf['Points'] = pd.to_numeric(df['Points'], errors='coerce')\n\n# Sort the dataframe by 'Points' in descending order\ndf = df.sort_values(by='Points', ascending=False)\n\n# Get the names of climbers in descending order of points\nnames = df['Name'].tolist()\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: List the names of climbers whose country is not Switzerland.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the country is not Switzerland\nfiltered_df = df[df['Country'] != 'Switzerland']\n\n# Get the names of the climbers from the filtered DataFrame\nclimbers = filtered_df['Name'].tolist()\n\n# Print the names of the climbers\nprint(climbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: What are the names of climbers who are not from the country of Switzerland?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the country is not Switzerland\nfiltered_df = df[df['Country'] != 'Switzerland']\n\n# Get the names of the climbers from the filtered DataFrame\nclimbers = filtered_df['Name'].tolist()\n\n# Print the names of the climbers\nprint(climbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: What is the maximum point for climbers whose country is United Kingdom?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to contain only rows where the Country is 'United Kingdom'\ndf_UK = df[df['Country'] == 'United Kingdom']\n\n# Finding the maximum point for climbers from United Kingdom\nmax_point = df_UK['Points'].max()\n\nprint(max_point)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: Return the maximum number of points for climbers from the United Kingdom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to contain only rows where the Country is 'United Kingdom'\ndf_UK = df[df['Country'] == 'United Kingdom']\n\n# Finding the maximum point for climbers from United Kingdom\nmax_point = df_UK['Points'].max()\n\nprint(max_point)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: How many distinct countries are the climbers from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique countries\nnum_countries = df['Country'].nunique()\n\n# Print the result\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: Count the number of different countries that climbers are from.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique countries\nnum_countries = df['Country'].nunique()\n\n# Print the result\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What are the names of mountains in ascending alphabetical order?", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Name' column in ascending order\ndf = df.sort_values('Name')\n\n# Save the answer in a variable\nmountain_names = df['Name'].tolist()\n\n# Print the variable\nprint(mountain_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Give the names of mountains in alphabetical order.", "response": "import pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Name' column in ascending order\ndf = df.sort_values('Name')\n\n# Save the answer in a variable\nmountain_names = df['Name'].tolist()\n\n# Print the variable\nprint(mountain_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What are the countries of mountains with height bigger than 5000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out mountains with height bigger than 5000\nfiltered_df = df[df['Height'] > 5000]\n\n# Get the list of countries of these mountains\ncountries = filtered_df['Country'].tolist()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Return the countries of the mountains that have a height larger than 5000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out mountains with height bigger than 5000\nfiltered_df = df[df['Height'] > 5000]\n\n# Get the list of countries of these mountains\ncountries = filtered_df['Country'].tolist()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What is the name of the highest mountain?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum height\nhighest_mountain = df.loc[df['Height'].idxmax()]\n\n# Get the name of the highest mountain\nhighest_mountain_name = highest_mountain['Name']\n\n# Print the name of the highest mountain\nprint(highest_mountain_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Return the name of the mountain with the greatest height.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum height\nhighest_mountain = df.loc[df['Height'].idxmax()]\n\n# Get the name of the highest mountain\nhighest_mountain_name = highest_mountain['Name']\n\n# Print the name of the highest mountain\nprint(highest_mountain_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: List the distinct ranges of the mountains with the top 3 prominence.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by prominence in descending order\ndf = df.sort_values(by='Prominence', ascending=False)\n\n# Get the top 3 mountains with highest prominence\ntop_3_mountains = df.head(3)\n\n# Get the different ranges of the 3 mountains with the highest prominence\nranges = top_3_mountains['Range'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = ranges\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What are the different ranges of the 3 mountains with the highest prominence?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by prominence in descending order\ndf = df.sort_values(by='Prominence', ascending=False)\n\n# Get the top 3 mountains with highest prominence\ntop_3_mountains = df.head(3)\n\n# Get the different ranges of the 3 mountains with the highest prominence\nranges = top_3_mountains['Range'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = ranges\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: Please show the countries and the number of climbers from each country.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of climbers from each country\nclimbers_from_each_country = df['Country'].value_counts()\n\nprint(climbers_from_each_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClimber_ID,Name,Country,Time,Points,Mountain_ID\n1,Klaus Enders,West Germany,1:13.05.6,15.0,1\n2,Siegfried Schauzu,West Germany,1:14.56.4,12.0,1\n3,Hans Luthringhauser,West Germany,1:16.58.0,10.0,2\n4,Jean Claude Castella,Switzerland,1:17.16.0,8.0,2\n5,Horst Owesle,West Germany,1:17.22.0,6.0,2\n6,Georg Auerbacher,West Germany,1:18.14.6,5.0,3\n7,Arseneus Butscher,West Germany,1:21.35.6,4.0,5\n8,Charlie Freedman,United Kingdom,1:25.02.8,3.0,5\n9,L Currie,United Kingdom,1:25.40.6,2.0,7\n10,Mick Horsepole,United Kingdom,1:27.28.8,1.0,7\n\nQuestion: How many climbers are from each country?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of climbers from each country\nclimbers_from_each_country = df['Country'].value_counts()\n\nprint(climbers_from_each_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: List the countries that have more than one mountain.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\ncountry_counts = df['Country'].value_counts()\n\nmultiple_mountain_countries = country_counts[country_counts > 1].index.tolist()\n\nprint(multiple_mountain_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Which countries have more than one mountain?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\ncountry_counts = df['Country'].value_counts()\n\nmultiple_mountain_countries = country_counts[country_counts > 1].index.tolist()\n\nprint(multiple_mountain_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where height is greater than 5600\ndf_high = df[df['Height'] > 5600]\n\n# Filter rows where height is less than 5200\ndf_low = df[df['Height'] < 5200]\n\n# Find common countries in both dataframes\ncommon_countries = set(df_high['Country']) & set(df_low['Country'])\n\n# Save the answer\nanswer = common_countries\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What are the countries that have both mountains that are higher than 5600 and lower than 5200?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where height is greater than 5600\ndf_high = df[df['Height'] > 5600]\n\n# Filter rows where height is less than 5200\ndf_low = df[df['Height'] < 5200]\n\n# Find common countries in both dataframes\ncommon_countries = set(df_high['Country']) & set(df_low['Country'])\n\n# Save the answer\nanswer = common_countries\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Show the range that has the most number of mountains.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of mountains in each range\nrange_counts = df['Range'].value_counts()\n\n# Find the range with the most mountains\nmax_range = range_counts.idxmax()\n\nprint(max_range)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Which range contains the most mountains?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of mountains in each range\nrange_counts = df['Range'].value_counts()\n\n# Find the range with the most mountains\nmax_range = range_counts.idxmax()\n\nprint(max_range)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: Show the names of mountains with height more than 5000 or prominence more than 1000.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['Height'] > 5000) | (df['Prominence'] > 1000)]\n\n# Save the answer in a variable\nanswer = filtered_df['Name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMountain_ID,Name,Height,Prominence,Range,Country\n1,Kibo (Uhuru Pk),5895.0,5885.0,Kilimanjaro,Tanzania\n2,Mount Kenya (Batian),5199.0,3825.0,Mount Kenya,Kenya\n3,Mawenzi (Hans Meyer Pk),5148.0,850.0,Kilimanjaro,Tanzania\n4,Ngaliema / Mt Stanley (Margherita Pk),5109.0,3951.0,Rwenzori,DR Congo Uganda\n5,Mount Kenya (Lenana),4985.0,130.0,Mount Kenya,Kenya\n6,Ngaliema / Mt Stanley (Savoia Pk),4977.0,110.0,Rwenzori,Uganda\n7,Duwoni / Mt Speke (Vittorio Emanuele Pk),4890.0,720.0,Rwenzori,Uganda\n\nQuestion: What are the names of mountains that have a height of over 5000 or a prominence of over 1000?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['Height'] > 5000) | (df['Prominence'] > 1000)]\n\n# Save the answer in a variable\nanswer = filtered_df['Name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: How many body builders are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique body builders\nnum_body_builders = df['Body_Builder_ID'].nunique()\n\nprint(num_body_builders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: List the total scores of body builders in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the total scores of body builders in ascending order\nsorted_scores = df['Total'].sort_values()\n\nprint(sorted_scores)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: List the snatch score and clean jerk score of body builders in ascending order of snatch score.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Snatch' column in ascending order\ndf = df.sort_values('Snatch')\n\n# Select only 'Snatch' and 'Clean_Jerk' columns\nsnatch_clean_jerk = df[['Snatch', 'Clean_Jerk']]\n\n# Print the sorted dataframe\nprint(snatch_clean_jerk)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: What is the average snatch score of body builders?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_snatch = df['Snatch'].mean()\n\nprint(average_snatch)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: What are the clean and jerk score of the body builder with the highest total score?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Total' and get the max value\nhighest_total = df['Total'].max()\n\n# Get the row with the highest total\nhighest_total_row = df[df['Total'] == highest_total]\n\n# Get the 'Clean_Jerk' score for the row with the highest total\nclean_jerk_score = highest_total_row['Clean_Jerk'].values[0]\n\nprint(\"Clean and jerk score of the body builder with the highest total score:\", clean_jerk_score)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Birth_Date,Birth_Place\n1,Jack Campbell,182.0,80.0,January 1, 1992,Port Huron, Michigan\n2,Ty Conklin,192.0,90.0,March 30, 1976,Anchorage, Alaska\n3,Al Montoya,195.0,100.0,February 13, 1985,Glenview, Illinois\n4,Mark Fayne,215.0,102.0,May 5, 1987,Nashua, New Hampshire\n5,Cam Fowler,196.0,89.0,December 5, 1991,Farmington Hills, Michigan\n6,Jake Gardiner,205.0,92.0,July 4, 1990,Minnetonka, Minnesota\n\nQuestion: What are the birthdays of people in ascending order of height?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Height'\ndf_sorted = df.sort_values('Height')\n\n# Select the 'Birth_Date' column\nbirthdays = df_sorted['Birth_Date']\n\nprint(birthdays)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Birth_Date,Birth_Place\n1,Jack Campbell,182.0,80.0,January 1, 1992,Port Huron, Michigan\n2,Ty Conklin,192.0,90.0,March 30, 1976,Anchorage, Alaska\n3,Al Montoya,195.0,100.0,February 13, 1985,Glenview, Illinois\n4,Mark Fayne,215.0,102.0,May 5, 1987,Nashua, New Hampshire\n5,Cam Fowler,196.0,89.0,December 5, 1991,Farmington Hills, Michigan\n6,Jake Gardiner,205.0,92.0,July 4, 1990,Minnetonka, Minnesota\n\nQuestion: List each birth place along with the number of people from there.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbirth_place_count = df['Birth_Place'].value_counts()\n\nprint(birth_place_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Birth_Date,Birth_Place\n1,Jack Campbell,182.0,80.0,January 1, 1992,Port Huron, Michigan\n2,Ty Conklin,192.0,90.0,March 30, 1976,Anchorage, Alaska\n3,Al Montoya,195.0,100.0,February 13, 1985,Glenview, Illinois\n4,Mark Fayne,215.0,102.0,May 5, 1987,Nashua, New Hampshire\n5,Cam Fowler,196.0,89.0,December 5, 1991,Farmington Hills, Michigan\n6,Jake Gardiner,205.0,92.0,July 4, 1990,Minnetonka, Minnesota\n\nQuestion: What is the most common birth place of people?", "response": "# import pandas library\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the frequency of each birth place\nbirth_place_count = df['Birth_Place'].value_counts()\n\n# find the most common birth place\nmost_common_birth_place = birth_place_count.idxmax()\n\n# print the most common birth place\nprint(most_common_birth_place)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Birth_Date,Birth_Place\n1,Jack Campbell,182.0,80.0,January 1, 1992,Port Huron, Michigan\n2,Ty Conklin,192.0,90.0,March 30, 1976,Anchorage, Alaska\n3,Al Montoya,195.0,100.0,February 13, 1985,Glenview, Illinois\n4,Mark Fayne,215.0,102.0,May 5, 1987,Nashua, New Hampshire\n5,Cam Fowler,196.0,89.0,December 5, 1991,Farmington Hills, Michigan\n6,Jake Gardiner,205.0,92.0,July 4, 1990,Minnetonka, Minnesota\n\nQuestion: List the height and weight of people in descending order of height.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Height', ascending=False)\nanswer = df[['Height','Weight']]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: Show all information about each body builder.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Birth_Date,Birth_Place\n1,Jack Campbell,182.0,80.0,January 1, 1992,Port Huron, Michigan\n2,Ty Conklin,192.0,90.0,March 30, 1976,Anchorage, Alaska\n3,Al Montoya,195.0,100.0,February 13, 1985,Glenview, Illinois\n4,Mark Fayne,215.0,102.0,May 5, 1987,Nashua, New Hampshire\n5,Cam Fowler,196.0,89.0,December 5, 1991,Farmington Hills, Michigan\n6,Jake Gardiner,205.0,92.0,July 4, 1990,Minnetonka, Minnesota\n\nQuestion: How many distinct birth places are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_birth_places = df['Birth_Place'].nunique()\n\nprint(distinct_birth_places)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBody_Builder_ID,People_ID,Snatch,Clean_Jerk,Total\n1,1,142.5,175.0,317.5\n2,2,137.5,177.5,315.0\n3,3,140.0,175.0,315.0\n4,5,137.5,175.0,312.5\n5,6,130.0,162.5,292.5\n\nQuestion: What is the minimum snatch score?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmin_snatch_score = df['Snatch'].min()\nprint(min_snatch_score)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Representative_ID,Date,Votes,Vote_Percent,Seats,Place\n1,1,July 1942,9423.0,16.2,6.0,3.0\n2,2,October 1942,11059.0,18.5,10.0,1.0\n3,4,1946,13049.0,19.5,10.0,2.0\n4,5,1949,14077.0,19.5,9.0,2.0\n5,7,1953,12422.0,16.0,7.0,3.0\n\nQuestion: How many elections are there?", "response": "import pandas as pd\n\n# Read the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique election IDs\nnum_elections = df['Election_ID'].nunique()\n\n# Print the number of elections\nprint(num_elections)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Representative_ID,Date,Votes,Vote_Percent,Seats,Place\n1,1,July 1942,9423.0,16.2,6.0,3.0\n2,2,October 1942,11059.0,18.5,10.0,1.0\n3,4,1946,13049.0,19.5,10.0,2.0\n4,5,1949,14077.0,19.5,9.0,2.0\n5,7,1953,12422.0,16.0,7.0,3.0\n\nQuestion: List the votes of elections in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nvotes = df['Votes'].tolist()\nvotes.sort(reverse=True)\n\nprint(votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Representative_ID,Date,Votes,Vote_Percent,Seats,Place\n1,1,July 1942,9423.0,16.2,6.0,3.0\n2,2,October 1942,11059.0,18.5,10.0,1.0\n3,4,1946,13049.0,19.5,10.0,2.0\n4,5,1949,14077.0,19.5,9.0,2.0\n5,7,1953,12422.0,16.0,7.0,3.0\n\nQuestion: List the dates and vote percents of elections.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Extract the dates and vote percents\ndates_vote_percents = df[['Date', 'Vote_Percent']]\n\n# Print the result\nprint(dates_vote_percents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Representative_ID,Date,Votes,Vote_Percent,Seats,Place\n1,1,July 1942,9423.0,16.2,6.0,3.0\n2,2,October 1942,11059.0,18.5,10.0,1.0\n3,4,1946,13049.0,19.5,10.0,2.0\n4,5,1949,14077.0,19.5,9.0,2.0\n5,7,1953,12422.0,16.0,7.0,3.0\n\nQuestion: What are the minimum and maximum vote percents of elections?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Extract the minimum and maximum vote percents\nmin_vote_percent = df['Vote_Percent'].min()\nmax_vote_percent = df['Vote_Percent'].max()\n\n# Save the answers in variables\nmin_max_vote_percent = (min_vote_percent, max_vote_percent)\n\n# Print the variables\nprint(min_max_vote_percent)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What are the names and parties of representatives?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnames_and_parties = df[['Name', 'Party']]\n\nprint(names_and_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What are the names of representatives whose party is not \"Republican\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only representatives whose party is not \"Republican\"\nnot_republican_df = df[df['Party'] != 'Republican']\n\n# Get the names of these representatives\nnames = not_republican_df['Name'].values\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What are the life spans of representatives from New York state or Indiana state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame\nfiltered_df = df[df['State'].isin(['New York', 'Indiana'])]\n\n# Select the 'Lifespan' column\nlifespans = filtered_df['Lifespan']\n\n# Print the lifespans\nprint(lifespans)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What are the different parties of representative? Show the party name and the number of representatives in each party.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the 'Party' column to count the number of representatives in each party\nparty_counts = df['Party'].value_counts()\n\n# Print the counts\nprint(party_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What parties have at least three representatives?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include parties with at least three representatives\nparty_counts = df['Party'].value_counts()\nparties_with_three_or_more_reps = party_counts[party_counts >= 3].index.tolist()\n\n# Print the parties with at least three representatives\nprint(parties_with_three_or_more_reps)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: What states have at least two representatives?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of representatives per state\nstate_counts = df['State'].value_counts()\n\n# Filter for states with at least two representatives\nstates_with_two_or_more_reps = state_counts[state_counts >= 2].index.tolist()\n\n# Print the answer\nprint(states_with_two_or_more_reps)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: Show the parties that have both representatives in New York state and representatives in Pennsylvania state.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter for the representatives in New York and Pennsylvania states\nny_df = df[df['State'] == 'New York']\npa_df = df[df['State'] == 'Pennsylvania']\n\n# Find the common parties in both states\ncommon_parties = set(ny_df['Party']).intersection(set(pa_df['Party']))\n\n# Print the common parties\nprint(common_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRepresentative_ID,Name,State,Party,Lifespan\n1,Dan Quayle,Indiana,Republican,1947–\n2,John Quayle,New York,Democratic,1868–1930\n3,Al Quie,Minnesota,Republican,1923–\n4,James M. Quigley,Pennsylvania,Democratic,1918–\n5,Jimmy Quillen,Tennessee,Republican,1916–2003\n6,Jack Quinn,New York,Republican,1951–\n7,James L. Quinn,Pennsylvania,Democratic,1875–1960\n\nQuestion: How many distinct parties are there for representatives?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_parties = df['Party'].nunique()\n\nprint(distinct_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: How many apartment bookings are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_bookings = len(df)\n\nprint(total_bookings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: Count the total number of apartment bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_bookings = len(df)\n\nprint(total_bookings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: Show the start dates and end dates of all the apartment bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbooking_dates = df[['booking_start_date', 'booking_end_date']]\n\nprint(booking_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: What are the start date and end date of each apartment booking?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbooking_dates = df[['booking_start_date', 'booking_end_date']]\n\nprint(booking_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Show all distinct building descriptions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_descriptions = df['building_description'].unique()\n\nprint(distinct_descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Give me a list of all the distinct building descriptions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_descriptions = df['building_description'].unique()\n\nprint(distinct_descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Show the short names of the buildings managed by \"Emma\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbuildings_managed_by_emma = df.loc[df['building_manager'] == 'Emma', 'building_short_name']\n\nprint(buildings_managed_by_emma)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Which buildings does \"Emma\" manage? Give me the short names of the buildings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbuildings_managed_by_emma = df.loc[df['building_manager'] == 'Emma', 'building_short_name']\n\nprint(buildings_managed_by_emma)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Show the addresses and phones of all the buildings managed by \"Brenden\".", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to find the buildings managed by \"Brenden\"\nfiltered_df = df[df['building_manager'] == 'Brenden']\n\n# Get the addresses and phones of the filtered buildings\naddresses_phones = filtered_df[['building_address', 'building_phone']]\n\n# Print the addresses and phones\nprint(addresses_phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: What are the address and phone number of the buildings managed by \"Brenden\"?", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to find the buildings managed by \"Brenden\"\nfiltered_df = df[df['building_manager'] == 'Brenden']\n\n# Get the addresses and phones of the filtered buildings\naddresses_phones = filtered_df[['building_address', 'building_phone']]\n\n# Print the addresses and phones\nprint(addresses_phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: What are the building full names that contain the word \"court\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe by the condition that the 'building_full_name' column contains 'court'\ndf_filtered = df[df['building_full_name'].str.contains('court', case=False)]\n\n# Save the answer in a variable\nanswer = df_filtered['building_full_name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone\n133,Normandie Court,Normandie Court,Studio,7950 Casper Vista Apt. 176\nMarquiseberg, CA 70496,Emma,(948)040-1064x387\n153,Mercedes House,Mercedes House,Studio,354 Otto Villages\nCharliefort, VT 71664,Brenden,915-617-2408x832\n191,The Eugene,The Eugene,Flat,71537 Gorczany Inlet\nWisozkburgh, AL 08256,Melyssa,(609)946-0491\n196,VIA 57 WEST,VIA 57 WEST,Studio,959 Ethel Viaduct\nWest Efrainburgh, DE 40074,Kathlyn,681.772.2454\n225,Columbus Square,Columbus Square,Studio,0703 Danika Mountains Apt. 362\nMohrland, AL 56839-5028,Kyle,1-724-982-9507x640\n532,Avalon Park,Avalon Park,Duplex,6827 Kessler Parkway Suite 908\nAhmedberg, WI 48788,Albert,376-017-3538\n556,Peter Cooper Village,Peter Cooper Village,Flat,861 Narciso Glens Suite 392\nEast Ottis, ND 73970,Darlene,1-224-619-0295x13195\n624,Stuyvesant Town,Stuyvesant Town,Studio,101 Queenie Mountains Suite 619\nNew Korbinmouth, KS 88726-1376,Marie,(145)411-6406\n644,The Anthem,The Anthem,Flat,50804 Mason Isle Suite 844\nWest Whitney, ID 66511,Ewald,(909)086-5221x3455\n673,Barclay Tower,Barclay Tower,Flat,1579 Runte Forges Apt. 548\nLeuschkeland, OK 12009-8683,Rogers,1-326-267-3386x613\n\nQuestion: Find all the building full names containing the word \"court\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe by the condition that the 'building_full_name' column contains 'court'\ndf_filtered = df[df['building_full_name'].str.contains('court', case=False)]\n\n# Save the answer in a variable\nanswer = df_filtered['building_full_name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What is the minimum and maximum number of bathrooms of all the apartments?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbathroom_count = df['bathroom_count'].agg(['min', 'max'])\n\nprint(bathroom_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Give me the minimum and maximum bathroom count among all the apartments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbathroom_count = df['bathroom_count'].agg(['min', 'max'])\n\nprint(bathroom_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What is the average number of bedrooms of all apartments?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of bedrooms\navg_bedrooms = df['bedroom_count'].mean()\n\n# Print the average number of bedrooms\nprint(avg_bedrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Find the average number of bedrooms of all the apartments.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of bedrooms\navg_bedrooms = df['bedroom_count'].mean()\n\n# Print the average number of bedrooms\nprint(avg_bedrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return the apartment number and the number of rooms for each apartment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'apt_number' and 'room_count' columns\napt_and_rooms = df[['apt_number', 'room_count']]\n\n# Print the result\nprint(apt_and_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What are the apartment number and the room count of each apartment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'apt_number' and 'room_count' columns\napt_and_rooms = df[['apt_number', 'room_count']]\n\n# Print the result\nprint(apt_and_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What is the average number of rooms of apartments with type code \"Studio\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'apt_type_code' is 'Studio'\ndf_studio = df[df['apt_type_code'] == 'Studio']\n\n# Calculate the average number of rooms for the filtered dataframe\navg_rooms = df_studio['room_count'].mean()\n\n# Print the answer\nprint(avg_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Find the average room count of the apartments that have the \"Studio\" type code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'apt_type_code' is 'Studio'\ndf_studio = df[df['apt_type_code'] == 'Studio']\n\n# Calculate the average number of rooms for the filtered dataframe\navg_rooms = df_studio['room_count'].mean()\n\n# Print the answer\nprint(avg_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return the apartment numbers of the apartments with type code \"Flat\".", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to include only rows where apartment type is 'Flat'\nflat_apts = df[df['apt_type_code'] == 'Flat']\n\n# Extracting the apartment numbers of the filtered dataframe\napt_numbers = flat_apts['apt_number'].tolist()\n\n# Printing the list of apartment numbers\nprint(apt_numbers)\n\n# Saving the answer in a variable\nanswer = apt_numbers\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Which apartments have type code \"Flat\"? Give me their apartment numbers.", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to include only rows where apartment type is 'Flat'\nflat_apts = df[df['apt_type_code'] == 'Flat']\n\n# Extracting the apartment numbers of the filtered dataframe\napt_numbers = flat_apts['apt_number'].tolist()\n\n# Printing the list of apartment numbers\nprint(apt_numbers)\n\n# Saving the answer in a variable\nanswer = apt_numbers\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: Return the first names and last names of all guests", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf[['guest_first_name', 'guest_last_name']]\n\nanswer = df[['guest_first_name', 'guest_last_name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: What are the first names and last names of all the guests?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf[['guest_first_name', 'guest_last_name']]\n\nanswer = df[['guest_first_name', 'guest_last_name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: Return the date of birth for all the guests with gender code \"Male\".", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where gender_code is 'Male'\nmale_df = df[df['gender_code'] == 'Male']\n\n# Select the 'date_of_birth' column from the filtered DataFrame\ndob_male = male_df['date_of_birth']\n\n# Print the dates of birth of all the guests whose gender is 'Male'\nprint(dob_male)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: What are dates of birth of all the guests whose gender is \"Male\"?", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where gender_code is 'Male'\nmale_df = df[df['gender_code'] == 'Male']\n\n# Select the 'date_of_birth' column from the filtered DataFrame\ndob_male = male_df['date_of_birth']\n\n# Print the dates of birth of all the guests whose gender is 'Male'\nprint(dob_male)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: Show the booking status code and the corresponding number of bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbooking_status_counts = df['booking_status_code'].value_counts()\n\nprint(booking_status_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date\n258,10,2,Provisional,2016-09-26 17:13:49,2017-10-07 11:38:48\n279,15,15,Provisional,2016-04-01 06:28:08,2017-10-25 11:08:42\n337,8,5,Provisional,2017-03-13 16:20:14,2018-02-19 16:59:08\n343,4,13,Confirmed,2016-08-04 10:33:00,2017-09-29 12:43:50\n365,9,12,Confirmed,2017-02-11 14:34:14,2017-10-07 20:47:19\n401,7,14,Provisional,2016-05-24 20:09:38,2017-10-03 01:56:21\n497,10,8,Confirmed,2016-07-25 02:57:04,2017-09-28 11:08:15\n526,8,7,Confirmed,2016-11-26 05:04:31,2018-02-25 15:15:37\n575,6,3,Provisional,2017-05-13 18:17:20,2017-10-06 11:15:58\n577,12,2,Provisional,2017-03-04 02:23:49,2018-02-06 16:57:05\n\nQuestion: How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbooking_status_counts = df['booking_status_code'].value_counts()\n\nprint(booking_status_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return all the apartment numbers sorted by the room count in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('room_count')\n\nsorted_apt_numbers = df['apt_number'].tolist()\n\nprint(sorted_apt_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Sort the apartment numbers in ascending order of room count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('room_count')\n\nsorted_apt_numbers = df['apt_number'].tolist()\n\nprint(sorted_apt_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return the apartment number with the largest number of bedrooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_bedrooms = df['bedroom_count'].max()\nmax_bedroom_apt = df[df['bedroom_count'] == max_bedrooms]['apt_number'].values[0]\n\nprint(max_bedroom_apt)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What is the apartment number of the apartment with the most beds?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_bedrooms = df['bedroom_count'].max()\nmax_bedroom_apt = df[df['bedroom_count'] == max_bedrooms]['apt_number'].values[0]\n\nprint(max_bedroom_apt)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each apartment type code\napt_type_counts = df['apt_type_code'].value_counts()\n\n# Sort the counts in ascending order\napt_type_counts = apt_type_counts.sort_values()\n\n# Print the counts\nprint(apt_type_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each apartment type code\napt_type_counts = df['apt_type_code'].value_counts()\n\n# Sort the counts in ascending order\napt_type_counts = apt_type_counts.sort_values()\n\n# Print the counts\nprint(apt_type_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show the top 3 apartment type codes sorted by the average number of rooms in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'apt_type_code' and calculate the average 'room_count' for each group\ngrouped = df.groupby('apt_type_code')['room_count'].mean()\n\n# Sort the groups by average 'room_count' in descending order\nsorted_grouped = grouped.sort_values(ascending=False)\n\n# Get the top 3\ntop_three = sorted_grouped.head(3)\n\n# Save the answer in a variable\ntop_three_apt_types = top_three.index.tolist()\n\n# Print the variable\nprint(top_three_apt_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: What are the top three apartment types in terms of the average room count? Give me the", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'apt_type_code' and calculate the average 'room_count' for each group\ngrouped = df.groupby('apt_type_code')['room_count'].mean()\n\n# Sort the groups by average 'room_count' in descending order\nsorted_grouped = grouped.sort_values(ascending=False)\n\n# Get the top 3\ntop_three = sorted_grouped.head(3)\n\n# Save the answer in a variable\ntop_three_apt_types = top_three.index.tolist()\n\n# Print the variable\nprint(top_three_apt_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrouped = df.groupby('apt_type_code').sum()\n\nmax_rooms = grouped['room_count'].idxmax()\n\nmax_bathrooms = df[df['apt_type_code'] == max_rooms]['bathroom_count'].values[0]\n\nmax_bedrooms = df[df['apt_type_code'] == max_rooms]['bedroom_count'].values[0]\n\nanswer = (max_rooms, max_bathrooms, max_bedrooms)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrouped = df.groupby('apt_type_code').sum()\n\nmax_rooms = grouped['room_count'].idxmax()\n\nmax_bathrooms = df[df['apt_type_code'] == max_rooms]['bathroom_count'].values[0]\n\nmax_bedrooms = df[df['apt_type_code'] == max_rooms]['bedroom_count'].values[0]\n\nanswer = (max_rooms, max_bathrooms, max_bedrooms)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show the most common apartment type code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common apartment type code\nmost_common_apt_type = df['apt_type_code'].mode()[0]\n\n# Print the most common apartment type\nprint(most_common_apt_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Which apartment type code appears the most often?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common apartment type code\nmost_common_apt_type = df['apt_type_code'].mode()[0]\n\n# Print the most common apartment type\nprint(most_common_apt_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show the most common apartment type code among apartments with more than 1 bathroom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include apartments with more than one bathroom\ndf = df[df['bathroom_count'] > 1]\n\n# Count the frequency of each apartment type code\ncounts = df['apt_type_code'].value_counts()\n\n# Find the most common apartment type code\nmost_common_apt_type_code = counts.idxmax()\n\n# Print the most common apartment type code\nprint(most_common_apt_type_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Which apartment type code is the most common among apartments with more than one bathroom?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include apartments with more than one bathroom\ndf = df[df['bathroom_count'] > 1]\n\n# Count the frequency of each apartment type code\ncounts = df['apt_type_code'].value_counts()\n\n# Find the most common apartment type code\nmost_common_apt_type_code = counts.idxmax()\n\n# Print the most common apartment type code\nprint(most_common_apt_type_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Show each apartment type code, and the maximum and minimum number of rooms for each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'apt_type_code' and then apply min and max functions to 'room_count' column\ndf_grouped = df.groupby('apt_type_code')['room_count'].agg(['min', 'max'])\n\n# Reset index to make 'apt_type_code' a column\ndf_grouped = df_grouped.reset_index()\n\n# Print the dataframe\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count\n1,808,Flat,Suite 645,1,3,7\n2,624,Flat,Apt. 585,2,4,5\n3,225,Studio,Apt. 908,1,6,7\n4,225,Duplex,Suite 749,1,5,8\n5,744,Flat,Suite 307,2,4,9\n6,191,Studio,Apt. 187,3,5,9\n7,790,Studio,Suite 088,2,4,6\n8,153,Flat,Suite 693,2,3,9\n9,624,Studio,Apt. 940,1,4,8\n10,225,Duplex,Apt. 859,2,3,6\n\nQuestion: Return each apartment type code along with the maximum and minimum number of rooms among each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'apt_type_code' and then apply min and max functions to 'room_count' column\ndf_grouped = df.groupby('apt_type_code')['room_count'].agg(['min', 'max'])\n\n# Reset index to make 'apt_type_code' a column\ndf_grouped = df_grouped.reset_index()\n\n# Print the dataframe\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: Show each gender code and the corresponding count of guests sorted by the count in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of each gender code\ngender_counts = df['gender_code'].value_counts()\n\n# Sort the counts in descending order\nsorted_counts = gender_counts.sort_values(ascending=False)\n\n# Print the sorted gender codes and counts\nprint(sorted_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nguest_id,gender_code,guest_first_name,guest_last_name,date_of_birth\n1,Male,Kip,DuBuque,1995-11-04 07:09:57\n2,Unknown,Rebeca,Runolfsdottir,1974-05-12 21:53:58\n3,Female,Keon,Treutel,1974-08-20 09:28:05\n4,Female,Gabe,Bode,2007-09-11 19:01:39\n5,Female,Lou,Grady,1997-01-15 17:37:40\n6,Unknown,Josefina,Jerde,1978-03-08 04:43:04\n7,Female,Mozell,Toy,1997-01-20 17:11:31\n8,Unknown,Keith,Hoeger,2001-06-18 20:05:55\n9,Female,Crystal,Runolfsson,1971-01-04 04:22:58\n10,Female,Nikki,Lehner,1980-06-20 18:15:39\n\nQuestion: Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of each gender code\ngender_counts = df['gender_code'].value_counts()\n\n# Sort the counts in descending order\nsorted_counts = gender_counts.sort_values(ascending=False)\n\n# Print the sorted gender codes and counts\nprint(sorted_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstadium_id,id,Season,Date,Home_team,Away_team,Score,Competition\n1,1,2007,18 May 2007,Quruvchi,Pakhtakor,1–1,League\n2,2,2007,22 September 2007,Pakhtakor,Quruvchi,0–0,League\n3,3,2007,9 December 2007,Pakhtakor,Quruvchi,0–0 (7:6),Cup\n4,4,2008,10 July 2008,Pakhtakor,Quruvchi,1–1,League\n5,5,2008,16 August 2008,Bunyodkor,Pakhtakor,1–1,League\n6,6,2008,31 October 2008,Bunyodkor,Pakhtakor,3–1,Cup\n7,7,2009,12 July 2009,Bunyodkor,Pakhtakor,2–1,League\n8,8,2009,14 October 2009,Pakhtakor,Bunyodkor,0–0,League\n9,9,2009,8 August 2009,Pakhtakor,Bunyodkor,1–0,Cup\n10,10,2010,14 March 2010,Bunyodkor,Pakhtakor,2–1,League\n\nQuestion: How many games are held after season 2007?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['Season'] > 2007]\nnumber_of_games = len(df)\nprint(number_of_games)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstadium_id,id,Season,Date,Home_team,Away_team,Score,Competition\n1,1,2007,18 May 2007,Quruvchi,Pakhtakor,1–1,League\n2,2,2007,22 September 2007,Pakhtakor,Quruvchi,0–0,League\n3,3,2007,9 December 2007,Pakhtakor,Quruvchi,0–0 (7:6),Cup\n4,4,2008,10 July 2008,Pakhtakor,Quruvchi,1–1,League\n5,5,2008,16 August 2008,Bunyodkor,Pakhtakor,1–1,League\n6,6,2008,31 October 2008,Bunyodkor,Pakhtakor,3–1,Cup\n7,7,2009,12 July 2009,Bunyodkor,Pakhtakor,2–1,League\n8,8,2009,14 October 2009,Pakhtakor,Bunyodkor,0–0,League\n9,9,2009,8 August 2009,Pakhtakor,Bunyodkor,1–0,Cup\n10,10,2010,14 March 2010,Bunyodkor,Pakhtakor,2–1,League\n\nQuestion: List the dates of games by the home team name in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by Home_team in descending order\ndf = df.sort_values(by='Home_team', ascending=False)\n\n# Select only the Date column\ndates = df['Date']\n\n# Save the answer in a variable and print the variable\nanswer = dates.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstadium_id,id,Season,Date,Home_team,Away_team,Score,Competition\n1,1,2007,18 May 2007,Quruvchi,Pakhtakor,1–1,League\n2,2,2007,22 September 2007,Pakhtakor,Quruvchi,0–0,League\n3,3,2007,9 December 2007,Pakhtakor,Quruvchi,0–0 (7:6),Cup\n4,4,2008,10 July 2008,Pakhtakor,Quruvchi,1–1,League\n5,5,2008,16 August 2008,Bunyodkor,Pakhtakor,1–1,League\n6,6,2008,31 October 2008,Bunyodkor,Pakhtakor,3–1,Cup\n7,7,2009,12 July 2009,Bunyodkor,Pakhtakor,2–1,League\n8,8,2009,14 October 2009,Pakhtakor,Bunyodkor,0–0,League\n9,9,2009,8 August 2009,Pakhtakor,Bunyodkor,1–0,Cup\n10,10,2010,14 March 2010,Bunyodkor,Pakhtakor,2–1,League\n\nQuestion: List the season, home team, away team of all the games.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# select the columns that we are interested in\ndf_selected = df[['Season', 'Home_team', 'Away_team']]\n\n# print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ngame_id,id,Player,Injury,Number_of_matches,Source\n1,1,Davide Santon,Clean-up surgery on his right knee,12,inter.it\n2,2,Maicon,Knee problem,2,inter.it\n3,3,Dejan Stanković,Hamstring muscle strain in his left thigh,2,inter.it\n4,4,Wesley Sneijder,Foot injury,1,inter.it\n5,5,Diego Milito,Slight thigh strain in right leg,1,inter.it\n5,6,Javier Zanetti,Post-traumatic pneumothrorax,4,inter.it\n6,7,Walter Samuel,Right thigh muscle strain,3,inter.it\n6,8,Thiago Motta,Surgery on his right knee,10,inter.it\n6,9,Goran Pandev,Ankle problem,3,inter.it\n8,10,Iván Córdoba,Sustained a biceps femoris strain in his left leg,1,inter.it\n\nQuestion: What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter out the players who suffer from knee injury\ndf_no_knee_injury = df[df['Injury'] != 'Knee problem']\n\n# select the columns 'Player', 'Number_of_matches', and 'Source'\nresult = df_no_knee_injury[['Player', 'Number_of_matches', 'Source']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ngame_id,id,Player,Injury,Number_of_matches,Source\n1,1,Davide Santon,Clean-up surgery on his right knee,12,inter.it\n2,2,Maicon,Knee problem,2,inter.it\n3,3,Dejan Stanković,Hamstring muscle strain in his left thigh,2,inter.it\n4,4,Wesley Sneijder,Foot injury,1,inter.it\n5,5,Diego Milito,Slight thigh strain in right leg,1,inter.it\n5,6,Javier Zanetti,Post-traumatic pneumothrorax,4,inter.it\n6,7,Walter Samuel,Right thigh muscle strain,3,inter.it\n6,8,Thiago Motta,Surgery on his right knee,10,inter.it\n6,9,Goran Pandev,Ankle problem,3,inter.it\n8,10,Iván Córdoba,Sustained a biceps femoris strain in his left leg,1,inter.it\n\nQuestion: How many different kinds of information sources are there for injury accidents?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the data from the CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Use the 'Source' column to find the unique sources and count them\nnum_sources = df['Source'].nunique()\n\n# Save the answer in a variable and print it\nprint(num_sources)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Home_Games,Average_Attendance,Total_Attendance,Capacity_Percentage\n1,Cowboys Stadium,8,87047.0,696377.0,108.8\n2,FedExField,8,83172.0,665380.0,90.7\n3,New Meadowlands Stadium,8,79019.0,632156.0,95.8\n4,New Meadowlands Stadium,8,78596.0,628768.0,95.3\n5,Invesco Field at Mile High,8,74908.0,599264.0,98.4\n6,Bank of America Stadium,8,72620.0,580965.0,98.4\n7,M&T Bank Stadium,8,71227.0,569817.0,100.3\n8,Reliant Stadium,8,71080.0,568643.0,100.0\n9,Lambeau Field,8,70795.0,566362.0,97.1\n10,Louisiana Superdome,8,70038.0,560304.0,96.0\n\nQuestion: Which stadium name contains the substring \"Bank\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find stadium names that contain the substring \"Bank\"\nbank_stadiums = df[df['name'].str.contains('Bank')]['name']\n\n# Save the answer in a variable\nanswer = bank_stadiums.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,player_api_id,player_name,player_fifa_api_id,birthday,height,weight\n1,505942,Aaron Appindangoye,218353,1992-02-29 00:00:00,182.88,187\n2,155782,Aaron Cresswell,189615,1989-12-15 00:00:00,170.18,146\n3,162549,Aaron Doran,186170,1991-05-13 00:00:00,170.18,163\n4,30572,Aaron Galindo,140161,1982-05-08 00:00:00,182.88,198\n5,23780,Aaron Hughes,17725,1979-11-08 00:00:00,182.88,154\n6,27316,Aaron Hunt,158138,1986-09-04 00:00:00,182.88,161\n7,564793,Aaron Kuhl,221280,1996-01-30 00:00:00,172.72,146\n8,30895,Aaron Lennon,152747,1987-04-16 00:00:00,165.1,139\n9,528212,Aaron Lennox,206592,1993-02-19 00:00:00,190.5,181\n10,101042,Aaron Meijers,188621,1987-10-28 00:00:00,175.26,170\n\nQuestion: What is the average weight of all players?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Calculate the average weight\naverage_weight = df['weight'].mean()\n\n# Print the average weight\nprint(average_weight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: How many performances are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_performances = len(df)\n\nprint(number_of_performances)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: List the hosts of performances in ascending order of attendance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf = df.sort_values(by='Attendance')\nhosts = df['Host'].tolist()\n\nprint(hosts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: What are the dates and locations of performances?", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Extract the Dates and Locations columns\ndates_locations = df[['Date', 'Location']]\n\n# Save the answer in a variable\nanswer = dates_locations\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include performances at \"TD Garden\" or \"Bell Centre\"\ndf_filtered = df[df['Location'].isin(['TD Garden', 'Bell Centre'])]\n\n# Print the attendances of these performances\nanswer = df_filtered['Attendance']\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: What is the average number of attendees for performances?", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of attendees\naverage_attendees = df['Attendance'].mean()\n\n# Print the average number of attendees\nprint(average_attendees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: What is the date of the performance with the highest number of attendees?", "response": "import pandas as pd\n\n# read the CSV file\ndf = pd.read_csv('data.csv')\n\n# find the index of the maximum attendance\nmax_attendance_index = df['Attendance'].idxmax()\n\n# get the date of the performance with the highest number of attendees\nhighest_attendance_date = df.at[max_attendance_index, 'Date']\n\n# print the date\nprint(highest_attendance_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: Show different locations and the number of performances at each location.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of performances at each location\nlocations = df['Location'].value_counts()\n\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: Show the most common location of performances.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the most common location\nmost_common_location = df['Location'].mode()[0]\n\n# Print the most common location\nprint(most_common_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformance_ID,Date,Host,Location,Attendance\n1.0,February 2,Boston Bruins,TD Garden,165\n2.0,February 4,New York Rangers,Madison Square Garden,1820\n3.0,February 5,Atlanta Thrashers,Verizon Center,1878\n4.0,February 7,Pittsburgh Penguins,Verizon Center,1877\n5.0,February 10,Montreal Canadiens,Bell Centre,2173\n6.0,February 11,Ottawa Senators,Scotiabank Place,1982\n\nQuestion: Show the locations that have at least two performances.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nlocation_counts = df['Location'].value_counts()\nlocations_with_multiple_performances = location_counts[location_counts > 1].index.tolist()\n\nprint(locations_with_multiple_performances)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Find the buildings which have rooms with capacity more than 50.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows where capacity is greater than 50\ndf_filtered = df[df['capacity'] > 50]\n\n# Get the distinct buildings\ndistinct_buildings = df_filtered['building'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = distinct_buildings.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: What are the distinct buildings with capacities of greater than 50?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows where capacity is greater than 50\ndf_filtered = df[df['capacity'] > 50]\n\n# Get the distinct buildings\ndistinct_buildings = df_filtered['building'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = distinct_buildings.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Count the number of rooms that are not in the Lamberton building.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to exclude rows where building is Lamberton\ndf_not_lamberton = df[df['building'] != 'Lamberton']\n\n# Count the number of rooms in the filtered dataframe\nnum_rooms_not_lamberton = df_not_lamberton.shape[0]\n\nprint(num_rooms_not_lamberton)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: How many classrooms are not in Lamberton?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to exclude rows where building is Lamberton\ndf_not_lamberton = df[df['building'] != 'Lamberton']\n\n# Count the number of rooms in the filtered dataframe\nnum_rooms_not_lamberton = df_not_lamberton.shape[0]\n\nprint(num_rooms_not_lamberton)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: What is the name and building of the departments whose budget is more than the average budget?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average budget\naverage_budget = df['budget'].mean()\n\n# Filter the dataframe for departments with budget more than the average budget\nfiltered_df = df[df['budget'] > average_budget]\n\n# Get the names and buildings of the departments\nanswer = filtered_df[['dept_name', 'building']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Give the name and building of the departments with greater than average budget.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average budget\naverage_budget = df['budget'].mean()\n\n# Filter the dataframe for departments with budget more than the average budget\nfiltered_df = df[df['budget'] > average_budget]\n\n# Get the names and buildings of the departments\nanswer = filtered_df[['dept_name', 'building']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Find the room number of the rooms which can sit 50 to 100 students and their buildings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the capacity is between 50 and 100\nfiltered_df = df[(df['capacity'] >= 50) & (df['capacity'] <= 100)]\n\n# Select the 'building' and 'room_number' columns from the filtered DataFrame\nresult = filtered_df[['building', 'room_number']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the capacity is between 50 and 100\nfiltered_df = df[(df['capacity'] >= 50) & (df['capacity'] <= 100)]\n\n# Select the 'building' and 'room_number' columns from the filtered DataFrame\nresult = filtered_df[['building', 'room_number']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Find the name and building of the department with the highest budget.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with the max budget\nmax_budget_index = df['budget'].idxmax()\n\n# Get the department name and building for the row with the max budget\nmax_budget_dept_name = df.loc[max_budget_index, 'dept_name']\nmax_budget_building = df.loc[max_budget_index, 'building']\n\n# Save the answer in a variable and print the variable\nanswer = (max_budget_dept_name, max_budget_building)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: What is the department name and corresponding building for the department with the greatest budget?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with the max budget\nmax_budget_index = df['budget'].idxmax()\n\n# Get the department name and building for the row with the max budget\nmax_budget_dept_name = df.loc[max_budget_index, 'dept_name']\nmax_budget_building = df.loc[max_budget_index, 'building']\n\n# Save the answer in a variable and print the variable\nanswer = (max_budget_dept_name, max_budget_building)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: What is the name of the student who has the highest total credits in the History department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include rows where 'dept_name' is 'History'\nhistory_df = df[df['dept_name'] == 'History']\n\n# Sort 'history_df' by 'tot_cred' in descending order and select the first row\nhighest_credits = history_df.sort_values(by='tot_cred', ascending=False).iloc[0]['name']\n\nprint(highest_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: Give the name of the student in the History department with the most credits.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include rows where 'dept_name' is 'History'\nhistory_df = df[df['dept_name'] == 'History']\n\n# Sort 'history_df' by 'tot_cred' in descending order and select the first row\nhighest_credits = history_df.sort_values(by='tot_cred', ascending=False).iloc[0]['name']\n\nprint(highest_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: How many rooms does the Lamberton building have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'building' is 'Lamberton'\nlamberton_df = df[df['building'] == 'Lamberton']\n\n# Count the number of rows in the filtered dataframe\nclassroom_count = lamberton_df.shape[0]\n\n# Print the count\nprint(classroom_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Count the number of classrooms in Lamberton.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'building' is 'Lamberton'\nlamberton_df = df[df['building'] == 'Lamberton']\n\n# Count the number of rows in the filtered dataframe\nclassroom_count = lamberton_df.shape[0]\n\n# Print the count\nprint(classroom_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ns_ID,i_ID\n24746,19368\n79352,95030\n76672,22591\n14182,77346\n44985,31955\n96052,73623\n35175,90643\n44271,58558\n40897,73623\n92839,25946\n\nQuestion: How many students have advisors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstudents_with_advisors = df[df['i_ID'].notnull()]\n\nanswer = len(students_with_advisors)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ns_ID,i_ID\n24746,19368\n79352,95030\n76672,22591\n14182,77346\n44985,31955\n96052,73623\n35175,90643\n44271,58558\n40897,73623\n92839,25946\n\nQuestion: Count the number of students who have advisors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstudents_with_advisors = df[df['i_ID'].notnull()]\n\nanswer = len(students_with_advisors)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: How many departments offer courses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique departments\ndept_count = df['dept_name'].nunique()\n\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Count the number of departments which offer courses.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique departments\ndept_count = df['dept_name'].nunique()\n\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: How many different courses offered by Physics department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_physics = df[df['dept_name'] == 'Physics']\n\nnum_courses_physics = len(df_physics)\n\nprint(num_courses_physics)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Count the number of courses in the Physics department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_physics = df[df['dept_name'] == 'Physics']\n\nnum_courses_physics = len(df_physics)\n\nprint(num_courses_physics)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: How many different instructors have taught some course?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the unique instructors (represented by ID)\nunique_instructors = df['ID'].nunique()\n\n# Print the number of unique instructors\nprint(unique_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: Count the number of distinct instructors who have taught a course.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the unique instructors (represented by ID)\nunique_instructors = df['ID'].nunique()\n\n# Print the number of unique instructors\nprint(unique_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Find the total budgets of the Marketing or Finance department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_marketing = df[df['dept_name'] == 'Marketing']\ndf_finance = df[df['dept_name'] == 'Finance']\n\ntotal_budget = df_marketing['budget'].sum() + df_finance['budget'].sum()\n\nprint(total_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: What is the sum of budgets of the Marketing and Finance departments?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_marketing = df[df['dept_name'] == 'Marketing']\ndf_finance = df[df['dept_name'] == 'Finance']\n\ntotal_budget = df_marketing['budget'].sum() + df_finance['budget'].sum()\n\nprint(total_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the department name of the instructor whose name contains 'Soisalon'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the instructor whose name contains 'Soisalon'\ninstructor = df[df['name'].str.contains('Soisalon')]\n\n# Get the department name of the instructor\ndept_name = instructor['dept_name'].values[0]\n\n# Print the department name\nprint(dept_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What is the name of the department with an instructure who has a name like 'Soisalon'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the instructor whose name contains 'Soisalon'\ninstructor = df[df['name'].str.contains('Soisalon')]\n\n# Get the department name of the instructor\ndept_name = instructor['dept_name'].values[0]\n\n# Print the department name\nprint(dept_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: How many rooms whose capacity is less than 50 does the Lamberton building have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Lamberton building and rooms with capacity less than 50\nfiltered_data = df[(df['building'] == 'Lamberton') & (df['capacity'] < 50)]\n\n# Get the count of filtered data\ncount = filtered_data.shape[0]\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Count the number of rooms in Lamberton with capacity lower than 50.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Lamberton building and rooms with capacity less than 50\nfiltered_data = df[(df['building'] == 'Lamberton') & (df['capacity'] < 50)]\n\n# Get the count of filtered data\ncount = filtered_data.shape[0]\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Find the name and budget of departments whose budgets are more than the average budget.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\navg_budget = df['budget'].mean()\n\ndepartments_with_higher_budget = df[df['budget'] > avg_budget][['dept_name', 'budget']]\n\nprint(departments_with_higher_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: What are the names and budgets of departments with budgets greater than the average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\navg_budget = df['budget'].mean()\n\ndepartments_with_higher_budget = df[df['budget'] > avg_budget][['dept_name', 'budget']]\n\nprint(departments_with_higher_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: what is the name of the instructor who is in Statistics department and earns the lowest salary?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only instructors in the Statistics department\nstat_df = df[df['dept_name'] == 'Statistics']\n\n# Find the instructor with the lowest salary in the Statistics department\nlowest_earning = stat_df[stat_df.salary == stat_df.salary.min()]\n\n# Save the answer in a variable\nanswer = lowest_earning['name'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Give the name of the lowest earning instructor in the Statistics department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only instructors in the Statistics department\nstat_df = df[df['dept_name'] == 'Statistics']\n\n# Find the instructor with the lowest salary in the Statistics department\nlowest_earning = stat_df[stat_df.salary == stat_df.salary.min()]\n\n# Save the answer in a variable\nanswer = lowest_earning['name'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the title of course that is provided by both Statistics and Psychology departments.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the dept_name is either 'Statistics' or 'Psychology'\nfiltered_df = df[df['dept_name'].isin(['Statistics', 'Psychology'])]\n\n# Group by title and count the number of unique department names for each course\ncount_df = filtered_df.groupby('title')['dept_name'].nunique().reset_index(name='count')\n\n# Filter the count_df to only include rows where the count is 2 (i.e., the course is listed in both departments)\nanswer_df = count_df[count_df['count'] == 2]\n\n# Save the answer in a variable\nanswer = answer_df['title'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: What is the title of a course that is listed in both the Statistics and Psychology departments?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the dept_name is either 'Statistics' or 'Psychology'\nfiltered_df = df[df['dept_name'].isin(['Statistics', 'Psychology'])]\n\n# Group by title and count the number of unique department names for each course\ncount_df = filtered_df.groupby('title')['dept_name'].nunique().reset_index(name='count')\n\n# Filter the count_df to only include rows where the count is 2 (i.e., the course is listed in both departments)\nanswer_df = count_df[count_df['count'] == 2]\n\n# Save the answer in a variable\nanswer = answer_df['title'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the title of course that is provided by Statistics but not Psychology departments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the courses offered by 'Statistics' department but not by 'Psychology'\ncourses_in_statistics = set(df.loc[df['dept_name'] == 'Statistics', 'title'])\ncourses_in_psychology = set(df.loc[df['dept_name'] == 'Psychology', 'title'])\n\nresult = courses_in_statistics.difference(courses_in_psychology)\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: What are the titles of courses that are in the Statistics department but not the Psychology department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the courses offered by 'Statistics' department but not by 'Psychology'\ncourses_in_statistics = set(df.loc[df['dept_name'] == 'Statistics', 'title'])\ncourses_in_psychology = set(df.loc[df['dept_name'] == 'Psychology', 'title'])\n\nresult = courses_in_statistics.difference(courses_in_psychology)\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Fall of 2009\ndf_fall_2009 = df[df['semester'] == 'Fall']\ndf_fall_2009 = df_fall_2009[df_fall_2009['year'] == 2009]\n\n# Filter data for Spring of 2010\ndf_spring_2010 = df[df['semester'] == 'Spring']\ndf_spring_2010 = df_spring_2010[df_spring_2010['year'] == 2010]\n\n# Find IDs that were taught in Fall of 2009 but not in Spring of 2010\nanswer = set(df_fall_2009['ID'].unique()) - set(df_spring_2010['ID'].unique())\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Fall of 2009\ndf_fall_2009 = df[df['semester'] == 'Fall']\ndf_fall_2009 = df_fall_2009[df_fall_2009['year'] == 2009]\n\n# Filter data for Spring of 2010\ndf_spring_2010 = df[df['semester'] == 'Spring']\ndf_spring_2010 = df_spring_2010[df_spring_2010['year'] == 2010]\n\n# Find IDs that were taught in Fall of 2009 but not in Spring of 2010\nanswer = set(df_fall_2009['ID'].unique()) - set(df_spring_2010['ID'].unique())\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the names of the top 3 departments that provide the largest amount of courses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'dept_name' and count the number of courses in each department\ndepartment_counts = df.groupby('dept_name').size().sort_values(ascending=False)\n\n# Get the names of the 3 departments with the most courses\ntop_3_departments = department_counts.head(3).index.tolist()\n\n# Print the result\nprint(top_3_departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: What are the names of the 3 departments with the most courses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'dept_name' and count the number of courses in each department\ndepartment_counts = df.groupby('dept_name').size().sort_values(ascending=False)\n\n# Get the names of the 3 departments with the most courses\ntop_3_departments = department_counts.head(3).index.tolist()\n\n# Print the result\nprint(top_3_departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the name of the department that offers the highest total credits?", "response": "# Import required libraries\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'dept_name' and sum the 'credits' for each department\ndept_credits = df.groupby('dept_name')['credits'].sum()\n\n# Find the department with the maximum total credits\nmax_credits_dept = dept_credits.idxmax()\n\n# Print the department name\nprint(max_credits_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: What is the name of the department with the most credits?", "response": "# Import required libraries\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'dept_name' and sum the 'credits' for each department\ndept_credits = df.groupby('dept_name')['credits'].sum()\n\n# Find the department with the maximum total credits\nmax_credits_dept = dept_credits.idxmax()\n\n# Print the department name\nprint(max_credits_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: List the names of all courses ordered by their titles and credits.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'title' and 'credits'\ndf = df.sort_values(['title', 'credits'])\n\n# Select the 'title' column and convert it into a list\ncourse_list = df['title'].tolist()\n\n# Print the list\nprint(course_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Given the titles of all courses, in order of titles and credits.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'title' and 'credits'\ndf = df.sort_values(['title', 'credits'])\n\n# Select the 'title' column and convert it into a list\ncourse_list = df['title'].tolist()\n\n# Print the list\nprint(course_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Which department has the lowest budget?", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the row with the minimum budget\nmin_budget_row = df[df['budget'] == df['budget'].min()]\n\n# Get the name of the department with the lowest budget\ndept_with_min_budget = min_budget_row['dept_name'].values[0]\n\n# Print the name of the department with the lowest budget\nprint(dept_with_min_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: Give the name of the department with the lowest budget.", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the row with the minimum budget\nmin_budget_row = df[df['budget'] == df['budget'].min()]\n\n# Get the name of the department with the lowest budget\ndept_with_min_budget = min_budget_row['dept_name'].values[0]\n\n# Print the name of the department with the lowest budget\nprint(dept_with_min_budget)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: List the names and buildings of all departments sorted by the budget from large to small.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by budget in descending order\nsorted_df = df.sort_values('budget', ascending=False)\n\n# Select the 'dept_name' and 'building' columns\nanswer = sorted_df[['dept_name', 'building']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_name,building,budget\nCivil Eng.,Chandler,255041.46\nBiology,Candlestick,647610.55\nHistory,Taylor,699140.86\nPhysics,Wrigley,942162.76\nMarketing,Lambeau,210627.58\nPol. Sci.,Whitman,573745.09\nEnglish,Palmer,611042.66\nAccounting,Saucon,441840.92\nComp. Sci.,Lamberton,106378.69\nLanguages,Linderman,601283.6\n\nQuestion: What are the names and buildings of the deparments, sorted by budget descending?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by budget in descending order\nsorted_df = df.sort_values('budget', ascending=False)\n\n# Select the 'dept_name' and 'building' columns\nanswer = sorted_df[['dept_name', 'building']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Who is the instructor with the highest salary?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_paid_instructor = df[df['salary'] == df['salary'].max()]\n\ninstructor_name = highest_paid_instructor['name'].values[0]\n\nprint(instructor_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Give the name of the highest paid instructor.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_paid_instructor = df[df['salary'] == df['salary'].max()]\n\ninstructor_name = highest_paid_instructor['name'].values[0]\n\nprint(instructor_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: List the information of all instructors ordered by their salary in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'salary' in ascending order\ndf_sorted = df.sort_values('salary')\n\n# Print the sorted dataframe\nprint(df_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Give all information regarding instructors, in order of salary from least to greatest.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'salary' in ascending order\ndf_sorted = df.sort_values('salary')\n\n# Print the sorted dataframe\nprint(df_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: Find the name of the students and their department names sorted by their total credits in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values(by='tot_cred')\n\noutput = df[['name', 'dept_name']]\n\nprint(output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: What are the names of students and their respective departments, ordered by number of credits from least to greatest?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values(by='tot_cred')\n\noutput = df[['name', 'dept_name']]\n\nprint(output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Find the number of rooms with more than 50 capacity for each building.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'capacity' is greater than 50\nfiltered_df = df[df['capacity'] > 50]\n\n# Group the filtered dataframe by 'building' and count the number of rooms in each building\nroom_counts = filtered_df.groupby('building').size()\n\n# Print the number of rooms in each building\nprint(room_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: How many rooms in each building have a capacity of over 50?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'capacity' is greater than 50\nfiltered_df = df[df['capacity'] > 50]\n\n# Group the filtered dataframe by 'building' and count the number of rooms in each building\nroom_counts = filtered_df.groupby('building').size()\n\n# Print the number of rooms in each building\nprint(room_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: Find the maximum and average capacity among rooms in each building.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'building' and then aggregate to get the maximum and average capacity\ngrouped = df.groupby('building').agg({'capacity': ['max', 'mean']})\n\n# Rename the columns\ngrouped.columns = ['max_capacity', 'avg_capacity']\n\n# Reset the index to make 'building' a column again\ngrouped = grouped.reset_index()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding,room_number,capacity\nLamberton,134,10\nChandler,375,10\nFairchild,145,27\nNassau,45,92\nGrace,40,34\nWhitman,134,120\nLamberton,143,10\nTaylor,812,115\nSaucon,113,109\nPainter,86,97\n\nQuestion: What are the greatest and average capacity for rooms in each building?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'building' and then aggregate to get the maximum and average capacity\ngrouped = df.groupby('building').agg({'capacity': ['max', 'mean']})\n\n# Rename the columns\ngrouped.columns = ['max_capacity', 'avg_capacity']\n\n# Reset the index to make 'building' a column again\ngrouped = grouped.reset_index()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the title of the course that is offered by more than one department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'title' and count the number of unique 'dept_name' for each course\ngrouped = df.groupby('title')['dept_name'].nunique()\n\n# Filter the courses that are offered by more than one department\nresult = grouped[grouped > 1].index.tolist()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: What are the titles of courses that are offered in more than one department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'title' and count the number of unique 'dept_name' for each course\ngrouped = df.groupby('title')['dept_name'].nunique()\n\n# Filter the courses that are offered by more than one department\nresult = grouped[grouped > 1].index.tolist()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: Find the total credits of courses provided by different department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use groupby function to group by department and then sum the credits\ndepartment_credits = df.groupby('dept_name')['credits'].sum()\n\n# Print the result\nprint(department_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,title,dept_name,credits\n787,C  Programming,Mech. Eng.,4\n238,The Music of Donovan,Mech. Eng.,3\n608,Electron Microscopy,Mech. Eng.,3\n539,International Finance,Comp. Sci.,3\n278,Greek Tragedy,Statistics,4\n972,Greek Tragedy,Psychology,4\n391,Virology,Biology,3\n814,Compiler Design,Elec. Eng.,3\n272,Geology,Mech. Eng.,3\n612,Mobile Computing,Physics,3\n\nQuestion: How many total credits are offered by each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use groupby function to group by department and then sum the credits\ndepartment_credits = df.groupby('dept_name')['credits'].sum()\n\n# Print the result\nprint(department_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the overall average salary\naverage_salary = df['salary'].mean()\n\n# Group by department and calculate the average salary\ndept_avg_salary = df.groupby('dept_name')['salary'].mean()\n\n# Filter departments with average salary greater than the overall average\nfiltered_depts = dept_avg_salary[dept_avg_salary > average_salary]\n\n# For each of these departments, find the minimum salary\nmin_salaries = df[df['dept_name'].isin(filtered_depts.index)]\\\n    .groupby('dept_name')['salary'].min()\n\n# Print the minimum salary in these departments\nprint(min_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What is the lowest salary in departments with average salary greater than the overall average.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the overall average salary\naverage_salary = df['salary'].mean()\n\n# Group by department and calculate the average salary\ndept_avg_salary = df.groupby('dept_name')['salary'].mean()\n\n# Filter departments with average salary greater than the overall average\nfiltered_depts = dept_avg_salary[dept_avg_salary > average_salary]\n\n# For each of these departments, find the minimum salary\nmin_salaries = df[df['dept_name'].isin(filtered_depts.index)]\\\n    .groupby('dept_name')['salary'].min()\n\n# Print the minimum salary in these departments\nprint(min_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,sec_id,semester,year,building,room_number,time_slot_id\n313,1,Fall,2010,Chandler,804,N\n747,1,Spring,2004,Gates,314,K\n443,1,Spring,2010,Whitman,434,O\n893,1,Fall,2007,Fairchild,145,B\n663,1,Spring,2005,Fairchild,145,D\n457,1,Spring,2001,Saucon,844,D\n445,1,Spring,2001,Alumni,547,J\n559,1,Fall,2002,Lamberton,134,J\n239,1,Fall,2006,Taylor,183,C\n802,1,Spring,2003,Saucon,113,J\n\nQuestion: Find the number of courses provided in each semester and year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of courses provided in each semester and year\ncounts = df.groupby(['semester', 'year']).size()\n\n# Save the answer in a variable\nresult = counts.to_frame('Number of Courses').reset_index()\n\n# Print the variable\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,sec_id,semester,year,building,room_number,time_slot_id\n313,1,Fall,2010,Chandler,804,N\n747,1,Spring,2004,Gates,314,K\n443,1,Spring,2010,Whitman,434,O\n893,1,Fall,2007,Fairchild,145,B\n663,1,Spring,2005,Fairchild,145,D\n457,1,Spring,2001,Saucon,844,D\n445,1,Spring,2001,Alumni,547,J\n559,1,Fall,2002,Lamberton,134,J\n239,1,Fall,2006,Taylor,183,C\n802,1,Spring,2003,Saucon,113,J\n\nQuestion: How many courses are provided in each semester and year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of courses provided in each semester and year\ncounts = df.groupby(['semester', 'year']).size()\n\n# Save the answer in a variable\nresult = counts.to_frame('Number of Courses').reset_index()\n\n# Print the variable\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,sec_id,semester,year,building,room_number,time_slot_id\n313,1,Fall,2010,Chandler,804,N\n747,1,Spring,2004,Gates,314,K\n443,1,Spring,2010,Whitman,434,O\n893,1,Fall,2007,Fairchild,145,B\n663,1,Spring,2005,Fairchild,145,D\n457,1,Spring,2001,Saucon,844,D\n445,1,Spring,2001,Alumni,547,J\n559,1,Fall,2002,Lamberton,134,J\n239,1,Fall,2006,Taylor,183,C\n802,1,Spring,2003,Saucon,113,J\n\nQuestion: Find the year and semester when offers the largest number of courses.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by year and semester and count the number of courses\ncourse_counts = df.groupby(['year', 'semester']).size()\n\n# Find the year and semester with the most courses\nmax_courses = course_counts.idxmax()\n\n# Print the year and semester with the most courses\nprint(max_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,sec_id,semester,year,building,room_number,time_slot_id\n313,1,Fall,2010,Chandler,804,N\n747,1,Spring,2004,Gates,314,K\n443,1,Spring,2010,Whitman,434,O\n893,1,Fall,2007,Fairchild,145,B\n663,1,Spring,2005,Fairchild,145,D\n457,1,Spring,2001,Saucon,844,D\n445,1,Spring,2001,Alumni,547,J\n559,1,Fall,2002,Lamberton,134,J\n239,1,Fall,2006,Taylor,183,C\n802,1,Spring,2003,Saucon,113,J\n\nQuestion: What is the year and semester with the most courses?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by year and semester and count the number of courses\ncourse_counts = df.groupby(['year', 'semester']).size()\n\n# Find the year and semester with the most courses\nmax_courses = course_counts.idxmax()\n\n# Print the year and semester with the most courses\nprint(max_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: Find the name of department has the highest amount of students?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the name of the department with the highest enrollment\nmax_enrollment_dept = df.groupby('dept_name').size().idxmax()\n\n# Print the name of the department with the highest enrollment\nprint(max_enrollment_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: What is the name of the deparment with the highest enrollment?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the name of the department with the highest enrollment\nmax_enrollment_dept = df.groupby('dept_name').size().idxmax()\n\n# Print the name of the department with the highest enrollment\nprint(max_enrollment_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: Find the total number of students in each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndept_count = df['dept_name'].value_counts()\n\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,tot_cred\n24746,Schrefl,History,4\n79352,Rumat,Finance,100\n76672,Miliko,Statistics,116\n14182,Moszkowski,Civil Eng.,73\n44985,Prieto,Biology,91\n96052,Marcol,Cybernetics,15\n35175,Quimby,History,4\n44271,Sowerby,English,108\n40897,Coppens,Math,58\n92839,Cirsto,Math,115\n\nQuestion: How many students are in each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndept_count = df['dept_name'].value_counts()\n\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year,grade\n65901,401,1,Fall,2003,C-\n24932,802,1,Spring,2003,B-\n61332,200,1,Spring,2007,A-\n73492,760,1,Spring,2004,A \n65715,843,1,Fall,2010,B+\n58300,408,1,Spring,2007,B-\n760,571,1,Spring,2004,B \n69730,313,1,Fall,2010,A \n94836,626,1,Fall,2006,C+\n49391,603,1,Fall,2003,B-\n\nQuestion: Find the semester and year which has the least number of student taking any class.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'semester' and 'year', and count the number of students in each group\ngrouped = df.groupby(['semester', 'year']).size()\n\n# Find the semester-year with the fewest students\nmin_students = grouped.idxmin()\n\n# Print the semester-year with the fewest students\nprint(min_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year,grade\n65901,401,1,Fall,2003,C-\n24932,802,1,Spring,2003,B-\n61332,200,1,Spring,2007,A-\n73492,760,1,Spring,2004,A \n65715,843,1,Fall,2010,B+\n58300,408,1,Spring,2007,B-\n760,571,1,Spring,2004,B \n69730,313,1,Fall,2010,A \n94836,626,1,Fall,2006,C+\n49391,603,1,Fall,2003,B-\n\nQuestion: Which semeseter and year had the fewest students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'semester' and 'year', and count the number of students in each group\ngrouped = df.groupby(['semester', 'year']).size()\n\n# Find the semester-year with the fewest students\nmin_students = grouped.idxmin()\n\n# Print the semester-year with the fewest students\nprint(min_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the name of the department which has the highest average salary of professors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Compute the average salary for each department\navg_salary_dept = df.groupby('dept_name')['salary'].mean()\n\n# Find the department with the highest average salary\nhighest_avg_salary_dept = avg_salary_dept.idxmax()\n\nprint(highest_avg_salary_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Which department has the highest average instructor salary?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Compute the average salary for each department\navg_salary_dept = df.groupby('dept_name')['salary'].mean()\n\n# Find the department with the highest average salary\nhighest_avg_salary_dept = avg_salary_dept.idxmax()\n\nprint(highest_avg_salary_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary of instructors in the Physics department\navg_physics_salary = df[df['dept_name'] == 'Physics']['salary'].mean()\n\n# Filter the dataframe to find instructors whose salary is below the average salary of the Physics department\nfiltered_df = df[df['salary'] < avg_physics_salary]\n\n# Create a new dataframe with only the 'name' and 'salary' columns of the filtered dataframe\nresult = filtered_df[['name', 'salary']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary of instructors in the Physics department\navg_physics_salary = df[df['dept_name'] == 'Physics']['salary'].mean()\n\n# Filter the dataframe to find instructors whose salary is below the average salary of the Physics department\nfiltered_df = df[df['salary'] < avg_physics_salary]\n\n# Create a new dataframe with only the 'name' and 'salary' columns of the filtered dataframe\nresult = filtered_df[['name', 'salary']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the names of all instructors in computer science department", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where dept_name is 'Comp. Sci.'\ncomp_sci_instructors = df[df['dept_name'] == 'Comp. Sci.']\n\n# Save the names of the instructors in a variable\nnames = comp_sci_instructors['name'].tolist()\n\n# Print the variable\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the names of all instructors in the Comp. Sci. department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where dept_name is 'Comp. Sci.'\ncomp_sci_instructors = df[df['dept_name'] == 'Comp. Sci.']\n\n# Save the names of the instructors in a variable\nnames = comp_sci_instructors['name'].tolist()\n\n# Print the variable\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the names of all instructors in Comp. Sci. department with salary > 80000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only instructors in the Comp. Sci. department who earn more than 80000\ncs_instructors = df[(df['dept_name'] == 'Comp. Sci.') & (df['salary'] > 80000)]\n\n# Save the names of these instructors in a variable\ninstructor_names = cs_instructors['name'].tolist()\n\n# Print the variable\nprint(instructor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the names of the instructors in the Comp. Sci. department who earn more than 80000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only instructors in the Comp. Sci. department who earn more than 80000\ncs_instructors = df[(df['dept_name'] == 'Comp. Sci.') & (df['salary'] > 80000)]\n\n# Save the names of these instructors in a variable\ninstructor_names = cs_instructors['name'].tolist()\n\n# Print the variable\nprint(instructor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: List in alphabetic order the names of all distinct instructors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'name' column and get the unique values\nnames = df['name'].unique()\n\n# Sort the names\nnames.sort()\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: List the distinct names of the instructors, ordered by name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'name' column and get the unique values\nnames = df['name'].unique()\n\n# Sort the names\nnames.sort()\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the salaries of all distinct instructors that are less than the largest salary.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the largest salary\nmax_salary = df['salary'].max()\n\n# Filter the dataframe to get instructors with salary less than the max salary\nfiltered_df = df[df['salary'] < max_salary]\n\n# Get the salaries of all distinct instructors\nsalaries = filtered_df['salary'].unique()\n\n# Print the salaries\nprint(salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the distinct salaries of all instructors who earned less than the maximum salary?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the largest salary\nmax_salary = df['salary'].max()\n\n# Filter the dataframe to get instructors with salary less than the max salary\nfiltered_df = df[df['salary'] < max_salary]\n\n# Get the salaries of all distinct instructors\nsalaries = filtered_df['salary'].unique()\n\n# Print the salaries\nprint(salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: Find the total number of instructors who teach a course in the Spring 2010 semester.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include Spring semester in 2010\ndf_spring_2010 = df[(df['semester'] == 'Spring') & (df['year'] == 2010)]\n\n# Count the number of unique IDs\nnum_instructors = df_spring_2010['ID'].nunique()\n\nprint(num_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,course_id,sec_id,semester,year\n34175,747,1,Spring,2004\n3199,169,1,Spring,2007\n6569,445,1,Spring,2001\n28097,808,1,Fall,2003\n22591,962,1,Spring,2008\n90376,158,1,Fall,2008\n3199,561,1,Fall,2006\n34175,274,1,Fall,2002\n34175,571,1,Spring,2004\n79081,345,1,Spring,2008\n\nQuestion: How many instructors teach a course in the Spring of 2010?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include Spring semester in 2010\ndf_spring_2010 = df[(df['semester'] == 'Spring') & (df['year'] == 2010)]\n\n# Count the number of unique IDs\nnum_instructors = df_spring_2010['ID'].nunique()\n\nprint(num_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the salary of the first instructor in the Biology department\nbiology_salary = df.loc[df['dept_name'] == 'Biology', 'salary'].iloc[0]\n\n# Find names of instructors with salary greater than the biology department's salary\nanswer = df.loc[df['salary'] > biology_salary, 'name']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the names of instructors who earn more than at least one instructor from the Biology department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the salary of the first instructor in the Biology department\nbiology_salary = df.loc[df['dept_name'] == 'Biology', 'salary'].iloc[0]\n\n# Find names of instructors with salary greater than the biology department's salary\nanswer = df.loc[df['salary'] > biology_salary, 'name']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum salary in the Biology department\nmax_biology_salary = df[df['dept_name'] == 'Biology']['salary'].max()\n\n# Filter instructors with a salary higher than the max in Biology\nhigher_salary_instructors = df[df['salary'] > max_biology_salary]['name']\n\n# Print the names of instructors with higher salary than in Biology\nprint(higher_salary_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,dept_name,salary\n63395,McKinnon,Cybernetics,94333.99\n78699,Pingr,Statistics,59303.62\n96895,Mird,Marketing,119921.41\n4233,Luo,English,88791.45\n4034,Murata,Athletics,61387.56\n50885,Konstantinides,Languages,32570.5\n79653,Levine,Elec. Eng.,89805.83\n50330,Shuming,Physics,108011.81\n80759,Queiroz,Biology,45538.32\n73623,Sullivan,Elec. Eng.,90038.09\n\nQuestion: What are the names of all instructors with a higher salary than any of the instructors in the Biology department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum salary in the Biology department\nmax_biology_salary = df[df['dept_name'] == 'Biology']['salary'].max()\n\n# Filter instructors with a salary higher than the max in Biology\nhigher_salary_instructors = df[df['salary'] > max_biology_salary]['name']\n\n# Print the names of instructors with higher salary than in Biology\nprint(higher_salary_instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDebate_ID,Date,Venue,Num_of_Audience\n1,October 21, 2011,Manama , Bahrain,342\n2,December 17, 2014,Doha , Qatar,134\n3,August 3, 2015,Manama , Bahrain,90\n4,October 27, 2015,Manama , Bahrain,209\n5,January 12, 2017,Dubai , UAE,313\n6,January 21, 2017,Abu Dhabi , UAE,159\n\nQuestion: How many debates are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_debates = df.shape[0]\nprint(total_debates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDebate_ID,Date,Venue,Num_of_Audience\n1,October 21, 2011,Manama , Bahrain,342\n2,December 17, 2014,Doha , Qatar,134\n3,August 3, 2015,Manama , Bahrain,90\n4,October 27, 2015,Manama , Bahrain,209\n5,January 12, 2017,Dubai , UAE,313\n6,January 21, 2017,Abu Dhabi , UAE,159\n\nQuestion: List the venues of debates in ascending order of the number of audience.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# split the 'Venue' column into 'City' and 'Country'\ndf[['City', 'Country']] = df['Venue'].str.split(', ', expand=True)\n\n# sort the dataframe by 'Num_of_Audience'\ndf = df.sort_values('Num_of_Audience')\n\n# create a list of venues in ascending order of the number of audience\nvenues = df['Venue'].tolist()\n\n# print the list of venues\nprint(venues)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDebate_ID,Date,Venue,Num_of_Audience\n1,October 21, 2011,Manama , Bahrain,342\n2,December 17, 2014,Doha , Qatar,134\n3,August 3, 2015,Manama , Bahrain,90\n4,October 27, 2015,Manama , Bahrain,209\n5,January 12, 2017,Dubai , UAE,313\n6,January 21, 2017,Abu Dhabi , UAE,159\n\nQuestion: What are the date and venue of each debate?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Creating a new dataframe with only Date and Venue\ndf_new = df[['Date', 'Venue']]\n\nprint(df_new)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDebate_ID,Date,Venue,Num_of_Audience\n1,October 21, 2011,Manama , Bahrain,342\n2,December 17, 2014,Doha , Qatar,134\n3,August 3, 2015,Manama , Bahrain,90\n4,October 27, 2015,Manama , Bahrain,209\n5,January 12, 2017,Dubai , UAE,313\n6,January 21, 2017,Abu Dhabi , UAE,159\n\nQuestion: List the dates of debates with number of audience bigger than 150", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to include only debates with number of audience bigger than 150\nfiltered_df = df[df['Num_of_Audience'] > 150]\n\n# Save the answer in a variable\nanswer = filtered_df['Date']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,District,Name,Party,Age\n1,New York 1,Luther C. Carter,Republican,35\n2,New York 2,James Humphrey,Republican,38\n3,New York 3,Daniel Sickles,Democratic,46\n4,New York 4,Thomas J. Barr,Independent Democrat,48\n5,New York 5,William B. Maclay,Democratic,36\n6,New York 6,John Cochrane,Democratic,46\n7,New York 7,George Briggs,Republican,42\n8,New York 8,Horace F. Clark,Anti-Lecompton Democrat,45\n9,New York 9,John B. Haskin,Anti-Lecompton Democrat,43\n10,New York 10,Charles Van Wyck,Republican,36\n\nQuestion: Show the names of people aged either 35 or 36.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[(df['Age'] == 35) | (df['Age'] == 36)]\nanswer = df['Name'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,District,Name,Party,Age\n1,New York 1,Luther C. Carter,Republican,35\n2,New York 2,James Humphrey,Republican,38\n3,New York 3,Daniel Sickles,Democratic,46\n4,New York 4,Thomas J. Barr,Independent Democrat,48\n5,New York 5,William B. Maclay,Democratic,36\n6,New York 6,John Cochrane,Democratic,46\n7,New York 7,George Briggs,Republican,42\n8,New York 8,Horace F. Clark,Anti-Lecompton Democrat,45\n9,New York 9,John B. Haskin,Anti-Lecompton Democrat,43\n10,New York 10,Charles Van Wyck,Republican,36\n\nQuestion: What is the party of the youngest people?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum age\nmin_age = df['Age'].min()\n\n# Get the party of the person with minimum age\nparty_of_youngest = df[df['Age'] == min_age]['Party'].values[0]\n\n# Print the party of the youngest person\nprint(party_of_youngest)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,District,Name,Party,Age\n1,New York 1,Luther C. Carter,Republican,35\n2,New York 2,James Humphrey,Republican,38\n3,New York 3,Daniel Sickles,Democratic,46\n4,New York 4,Thomas J. Barr,Independent Democrat,48\n5,New York 5,William B. Maclay,Democratic,36\n6,New York 6,John Cochrane,Democratic,46\n7,New York 7,George Briggs,Republican,42\n8,New York 8,Horace F. Clark,Anti-Lecompton Democrat,45\n9,New York 9,John B. Haskin,Anti-Lecompton Democrat,43\n10,New York 10,Charles Van Wyck,Republican,36\n\nQuestion: Show different parties of people along with the number of people in each party.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of people in each party\nparty_counts = df['Party'].value_counts()\n\n# print the party counts\nprint(party_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,District,Name,Party,Age\n1,New York 1,Luther C. Carter,Republican,35\n2,New York 2,James Humphrey,Republican,38\n3,New York 3,Daniel Sickles,Democratic,46\n4,New York 4,Thomas J. Barr,Independent Democrat,48\n5,New York 5,William B. Maclay,Democratic,36\n6,New York 6,John Cochrane,Democratic,46\n7,New York 7,George Briggs,Republican,42\n8,New York 8,Horace F. Clark,Anti-Lecompton Democrat,45\n9,New York 9,John B. Haskin,Anti-Lecompton Democrat,43\n10,New York 10,Charles Van Wyck,Republican,36\n\nQuestion: Show the party that has the most people.", "response": "# Importing pandas\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Counting the frequency of each party\nparty_count = df['Party'].value_counts()\n\n# Finding the party with the most people\nmost_popular_party = party_count.idxmax()\n\n# Printing the party with the most people\nprint(most_popular_party)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDebate_ID,Date,Venue,Num_of_Audience\n1,October 21, 2011,Manama , Bahrain,342\n2,December 17, 2014,Doha , Qatar,134\n3,August 3, 2015,Manama , Bahrain,90\n4,October 27, 2015,Manama , Bahrain,209\n5,January 12, 2017,Dubai , UAE,313\n6,January 21, 2017,Abu Dhabi , UAE,159\n\nQuestion: Show the distinct venues of debates", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_venues = df['Venue'].unique()\n\nprint(distinct_venues)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n252,America Jaskolski\n263,Ellsworth Paucek\n334,Mrs. Hanna Willms\n380,Dr. Diana Rath\n430,Selena Gerhold\n435,Lauriane Ferry PhD\n520,Sydnie Friesen\n588,Dayana Robel\n593,Mr. Edwardo Blanda I\n799,Augustine Kerluke\n\nQuestion: List the names of all the customers in alphabetical order.", "response": "# Import pandas\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Extract the customer names and sort them in alphabetical order\nsorted_names = sorted(df['Customer_Details'].tolist())\n\n# Save the answer in a variable and print the variable\nanswer = sorted_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n252,America Jaskolski\n263,Ellsworth Paucek\n334,Mrs. Hanna Willms\n380,Dr. Diana Rath\n430,Selena Gerhold\n435,Lauriane Ferry PhD\n520,Sydnie Friesen\n588,Dayana Robel\n593,Mr. Edwardo Blanda I\n799,Augustine Kerluke\n\nQuestion: Sort the customer names in alphabetical order.", "response": "# Import pandas\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Extract the customer names and sort them in alphabetical order\nsorted_names = sorted(df['Customer_Details'].tolist())\n\n# Save the answer in a variable and print the variable\nanswer = sorted_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: Which type of policy is most frequently used? Give me the policy type code.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the frequency of each policy type\npolicy_type_counts = df['Policy_Type_Code'].value_counts()\n\n# Get the policy type with the highest count\nmost_frequent_policy_type = policy_type_counts.idxmax()\n\n# Print the most frequent policy type\nprint(most_frequent_policy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: Find the type code of the most frequently used policy.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the frequency of each policy type\npolicy_type_counts = df['Policy_Type_Code'].value_counts()\n\n# Get the policy type with the highest count\nmost_frequent_policy_type = policy_type_counts.idxmax()\n\n# Print the most frequent policy type\nprint(most_frequent_policy_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: Find all the policy types that are used by more than 2 customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of unique customers for each policy type\npolicy_counts = df['Policy_Type_Code'].value_counts()\n\n# Filter the policies that are chosen by more than 2 customers\npopular_policies = policy_counts[policy_counts > 2]\n\n# Get the policy type codes\npopular_policy_codes = popular_policies.index.tolist()\n\n# Print the policy type codes\nprint(popular_policy_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: Which types of policy are chosen by more than 2 customers? Give me the policy type codes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of unique customers for each policy type\npolicy_counts = df['Policy_Type_Code'].value_counts()\n\n# Filter the policies that are chosen by more than 2 customers\npopular_policies = policy_counts[policy_counts > 2]\n\n# Get the policy type codes\npopular_policy_codes = popular_policies.index.tolist()\n\n# Print the policy type codes\nprint(popular_policy_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n252,America Jaskolski\n263,Ellsworth Paucek\n334,Mrs. Hanna Willms\n380,Dr. Diana Rath\n430,Selena Gerhold\n435,Lauriane Ferry PhD\n520,Sydnie Friesen\n588,Dayana Robel\n593,Mr. Edwardo Blanda I\n799,Augustine Kerluke\n\nQuestion: Find the names of customers whose name contains \"Diana\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the names of customers whose name contains \"Diana\"\nfiltered_df = df[df['Customer_Details'].str.contains('Diana')]\n\n# Saving the answer in a variable\nanswer = filtered_df['Customer_Details']\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n252,America Jaskolski\n263,Ellsworth Paucek\n334,Mrs. Hanna Willms\n380,Dr. Diana Rath\n430,Selena Gerhold\n435,Lauriane Ferry PhD\n520,Sydnie Friesen\n588,Dayana Robel\n593,Mr. Edwardo Blanda I\n799,Augustine Kerluke\n\nQuestion: Which customers have the substring \"Diana\" in their names? Return the customer details.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the names of customers whose name contains \"Diana\"\nfiltered_df = df[df['Customer_Details'].str.contains('Diana')]\n\n# Saving the answer in a variable\nanswer = filtered_df['Customer_Details']\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: Find the number of records of each policy type and its type code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Policy_Type_Code' and count the number of records for each policy type\npolicy_type_count = df.groupby('Policy_Type_Code')['Policy_ID'].count()\n\n# Print the result\nprint(policy_type_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n125,808,Deputy,2018-02-10 08:56:30,2018-03-18 09:17:26\n151,380,Jurisdiction,2017-12-20 06:02:31,2017-09-16 22:04:13\n287,334,Jurisdiction,2017-03-16 18:16:52,2017-11-24 06:36:51\n299,857,Uniformed,2018-03-13 12:30:19,2018-01-22 05:24:10\n507,858,Uniformed,2017-03-19 03:11:19,2017-11-01 00:41:27\n518,808,Uniformed,2016-05-11 14:56:17,2018-03-15 05:02:00\n626,435,Uniformed,2016-05-14 19:09:36,2018-01-18 06:17:36\n628,430,Deputy,2018-09-19 17:22:07,2018-01-01 23:58:06\n703,380,Deputy,2016-06-04 00:10:01,2018-01-19 22:45:33\n708,252,Normal,2018-07-21 10:36:53,2018-03-07 13:52:47\n\nQuestion: For each policy type, return its type code and its count in the record.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Policy_Type_Code' and count the number of records for each policy type\npolicy_type_count = df.groupby('Policy_Type_Code')['Policy_ID'].count()\n\n# Print the result\nprint(policy_type_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_Processing_ID,Claim_ID,Claim_Outcome_Code,Claim_Stage_ID,Staff_ID\n118,28,In progress,1,771\n145,62,In progress,1,589\n213,27,In progress,1,589\n221,45,Disputed,1,427\n242,15,In progress,3,673\n243,15,Settled,1,687\n309,34,Disputed,3,771\n342,15,In progress,3,673\n480,45,In progress,1,822\n659,62,Settled,3,510\n\nQuestion: How many distinct claim outcome codes are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique claim outcome codes\nunique_codes = df['Claim_Outcome_Code'].unique()\n\n# Count the number of unique codes\nnum_unique_codes = len(unique_codes)\n\n# Print the number of unique codes\nprint(num_unique_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_Processing_ID,Claim_ID,Claim_Outcome_Code,Claim_Stage_ID,Staff_ID\n118,28,In progress,1,771\n145,62,In progress,1,589\n213,27,In progress,1,589\n221,45,Disputed,1,427\n242,15,In progress,3,673\n243,15,Settled,1,687\n309,34,Disputed,3,771\n342,15,In progress,3,673\n480,45,In progress,1,822\n659,62,Settled,3,510\n\nQuestion: Count the number of distinct claim outcome codes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique claim outcome codes\nunique_codes = df['Claim_Outcome_Code'].unique()\n\n# Count the number of unique codes\nnum_unique_codes = len(unique_codes)\n\n# Print the number of unique codes\nprint(num_unique_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: Show the number of accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: How many accounts are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: How many customers have opened an account?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique customer_id\nnum_customers = df['customer_id'].nunique()\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: Count the number of customers who have an account.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique customer_id\nnum_customers = df['customer_id'].nunique()\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: Show the id, the date of account opened, the account name, and other account detail for all accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# select the columns to be displayed\ndf_selected = df[['account_id', 'date_account_opened', 'account_name', 'other_account_details']]\n\n# print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: What are the ids, date opened, name, and other details for all accounts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# select the columns to be displayed\ndf_selected = df[['account_id', 'date_account_opened', 'account_name', 'other_account_details']]\n\n# print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: How many accounts does each customer have? List the number and customer id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naccounts_per_customer = df['customer_id'].value_counts()\n\nprint(accounts_per_customer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naccount_id,customer_id,date_account_opened,account_name,other_account_details\n1,8,2016-07-30 22:22:24,900,Regular\n2,3,2017-05-29 16:45:17,520,VIP\n3,8,2012-05-04 18:50:32,323,Regular\n4,15,2011-03-29 15:06:59,390,VIP\n5,15,2014-08-11 18:15:14,935,Regular\n6,12,2014-05-30 12:16:52,371,Regular\n7,13,2015-11-03 08:04:15,398,VIP\n8,9,2009-06-13 11:41:52,710,Regular\n9,8,2010-10-22 13:33:45,337,Regular\n10,15,2016-04-25 21:49:17,429,VIP\n\nQuestion: Count the number of accounts corresponding to each customer id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naccounts_per_customer = df['customer_id'].value_counts()\n\nprint(accounts_per_customer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_middle_initial,customer_last_name,gender,email_address,login_name,login_password,phone_number,town_city,state_county_province,country\n1,Dee,A,Larkin,1,thora.torphy@example.org,xhartmann,77789d292604ea04406f,241.796.1219x37862,North Nellie,WestVirginia,USA\n2,Brennon,H,Weimann,0,roosevelt.collier@example.org,shayne.lesch,ce97a3e4539347daab96,(943)219-4234x415,South Isabell,Oklahoma,USA\n3,Joesph,K,Schaefer,0,homenick.ambrose@example.net,feeney.lauriane,a6c7a7064c36b038d402,(488)524-5345,New Nikolas,Arkansas,USA\n4,Zita,L,Trantow,0,destinee06@example.com,rubye.padberg,eb32d2933362d38faff7,(193)465-6674x4952,Ellaburgh,Colorado,USA\n5,Murl,B,Shanahan,1,jovani64@example.com,jankunding,398c1603aec3e9de2684,1-546-447-9843x13741,North Helmerbury,Idaho,USA\n6,Vesta,E,Leuschke,1,philip94@example.org,zdeckow,bdbc3c18cf28303c4f6a,+69(0)7149212554,North Devonte,Mississippi,USA\n7,Dangelo,M,Spinka,1,zullrich@example.net,camilla.dubuque,180a37476c537e78d3de,1-904-787-7320,West Khaliltown,Kansas,USA\n8,Meaghan,M,Keeling,0,pyundt@example.org,lowe.wilber,e67856613cd71f1b2884,06015518212,Kenshire,Mississippi,USA\n9,Abbey,B,Ruecker,0,anastacio45@example.org,dubuque.gina,d7629de5171fe29106c8,1-344-593-4896x425,Bruenchester,California,USA\n10,Devin,V,Glover,0,udeckow@example.com,ypowlowski,604f9062a5a0de83ef9d,197-955-3766,Lake Eusebiomouth,Florida,USA\n\nQuestion: Show the number of customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of customers\nnum_customers = df.shape[0]\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_middle_initial,customer_last_name,gender,email_address,login_name,login_password,phone_number,town_city,state_county_province,country\n1,Dee,A,Larkin,1,thora.torphy@example.org,xhartmann,77789d292604ea04406f,241.796.1219x37862,North Nellie,WestVirginia,USA\n2,Brennon,H,Weimann,0,roosevelt.collier@example.org,shayne.lesch,ce97a3e4539347daab96,(943)219-4234x415,South Isabell,Oklahoma,USA\n3,Joesph,K,Schaefer,0,homenick.ambrose@example.net,feeney.lauriane,a6c7a7064c36b038d402,(488)524-5345,New Nikolas,Arkansas,USA\n4,Zita,L,Trantow,0,destinee06@example.com,rubye.padberg,eb32d2933362d38faff7,(193)465-6674x4952,Ellaburgh,Colorado,USA\n5,Murl,B,Shanahan,1,jovani64@example.com,jankunding,398c1603aec3e9de2684,1-546-447-9843x13741,North Helmerbury,Idaho,USA\n6,Vesta,E,Leuschke,1,philip94@example.org,zdeckow,bdbc3c18cf28303c4f6a,+69(0)7149212554,North Devonte,Mississippi,USA\n7,Dangelo,M,Spinka,1,zullrich@example.net,camilla.dubuque,180a37476c537e78d3de,1-904-787-7320,West Khaliltown,Kansas,USA\n8,Meaghan,M,Keeling,0,pyundt@example.org,lowe.wilber,e67856613cd71f1b2884,06015518212,Kenshire,Mississippi,USA\n9,Abbey,B,Ruecker,0,anastacio45@example.org,dubuque.gina,d7629de5171fe29106c8,1-344-593-4896x425,Bruenchester,California,USA\n10,Devin,V,Glover,0,udeckow@example.com,ypowlowski,604f9062a5a0de83ef9d,197-955-3766,Lake Eusebiomouth,Florida,USA\n\nQuestion: Count the number of customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of customers\nnum_customers = df.shape[0]\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_middle_initial,customer_last_name,gender,email_address,login_name,login_password,phone_number,town_city,state_county_province,country\n1,Dee,A,Larkin,1,thora.torphy@example.org,xhartmann,77789d292604ea04406f,241.796.1219x37862,North Nellie,WestVirginia,USA\n2,Brennon,H,Weimann,0,roosevelt.collier@example.org,shayne.lesch,ce97a3e4539347daab96,(943)219-4234x415,South Isabell,Oklahoma,USA\n3,Joesph,K,Schaefer,0,homenick.ambrose@example.net,feeney.lauriane,a6c7a7064c36b038d402,(488)524-5345,New Nikolas,Arkansas,USA\n4,Zita,L,Trantow,0,destinee06@example.com,rubye.padberg,eb32d2933362d38faff7,(193)465-6674x4952,Ellaburgh,Colorado,USA\n5,Murl,B,Shanahan,1,jovani64@example.com,jankunding,398c1603aec3e9de2684,1-546-447-9843x13741,North Helmerbury,Idaho,USA\n6,Vesta,E,Leuschke,1,philip94@example.org,zdeckow,bdbc3c18cf28303c4f6a,+69(0)7149212554,North Devonte,Mississippi,USA\n7,Dangelo,M,Spinka,1,zullrich@example.net,camilla.dubuque,180a37476c537e78d3de,1-904-787-7320,West Khaliltown,Kansas,USA\n8,Meaghan,M,Keeling,0,pyundt@example.org,lowe.wilber,e67856613cd71f1b2884,06015518212,Kenshire,Mississippi,USA\n9,Abbey,B,Ruecker,0,anastacio45@example.org,dubuque.gina,d7629de5171fe29106c8,1-344-593-4896x425,Bruenchester,California,USA\n10,Devin,V,Glover,0,udeckow@example.com,ypowlowski,604f9062a5a0de83ef9d,197-955-3766,Lake Eusebiomouth,Florida,USA\n\nQuestion: Show the number of customers for each gender.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers for each gender\ngender_counts = df['gender'].value_counts()\n\n# Print the number of customers for each gender\nprint(gender_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_first_name,customer_middle_initial,customer_last_name,gender,email_address,login_name,login_password,phone_number,town_city,state_county_province,country\n1,Dee,A,Larkin,1,thora.torphy@example.org,xhartmann,77789d292604ea04406f,241.796.1219x37862,North Nellie,WestVirginia,USA\n2,Brennon,H,Weimann,0,roosevelt.collier@example.org,shayne.lesch,ce97a3e4539347daab96,(943)219-4234x415,South Isabell,Oklahoma,USA\n3,Joesph,K,Schaefer,0,homenick.ambrose@example.net,feeney.lauriane,a6c7a7064c36b038d402,(488)524-5345,New Nikolas,Arkansas,USA\n4,Zita,L,Trantow,0,destinee06@example.com,rubye.padberg,eb32d2933362d38faff7,(193)465-6674x4952,Ellaburgh,Colorado,USA\n5,Murl,B,Shanahan,1,jovani64@example.com,jankunding,398c1603aec3e9de2684,1-546-447-9843x13741,North Helmerbury,Idaho,USA\n6,Vesta,E,Leuschke,1,philip94@example.org,zdeckow,bdbc3c18cf28303c4f6a,+69(0)7149212554,North Devonte,Mississippi,USA\n7,Dangelo,M,Spinka,1,zullrich@example.net,camilla.dubuque,180a37476c537e78d3de,1-904-787-7320,West Khaliltown,Kansas,USA\n8,Meaghan,M,Keeling,0,pyundt@example.org,lowe.wilber,e67856613cd71f1b2884,06015518212,Kenshire,Mississippi,USA\n9,Abbey,B,Ruecker,0,anastacio45@example.org,dubuque.gina,d7629de5171fe29106c8,1-344-593-4896x425,Bruenchester,California,USA\n10,Devin,V,Glover,0,udeckow@example.com,ypowlowski,604f9062a5a0de83ef9d,197-955-3766,Lake Eusebiomouth,Florida,USA\n\nQuestion: How many customers are there of each gender?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers for each gender\ngender_counts = df['gender'].value_counts()\n\n# Print the number of customers for each gender\nprint(gender_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: How many transactions do we have?", "response": "import pandas as pd\n\n# load the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of transactions\nnum_transactions = df['transaction_id'].count()\n\n# print the number of transactions\nprint(num_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: Count the number of transactions.", "response": "import pandas as pd\n\n# load the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of transactions\nnum_transactions = df['transaction_id'].count()\n\n# print the number of transactions\nprint(num_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: What is the average, minimum, maximum, and total transaction amount?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the statistics\nstats = df['transaction_amount'].agg(['mean', 'min', 'max', 'sum'])\n\n# Print the statistics\nprint(stats)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: Return the average, minimum, maximum, and total transaction amounts.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the statistics\nstats = df['transaction_amount'].agg(['mean', 'min', 'max', 'sum'])\n\n# Print the statistics\nprint(stats)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: Show ids for all transactions whose amounts are greater than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average transaction amount\naverage_amount = df['transaction_amount'].mean()\n\n# Get the ids of transactions whose amounts are greater than the average\nids = df.loc[df['transaction_amount'] > average_amount, 'transaction_id']\n\n# Print the ids\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: What are the ids for transactions that have an amount greater than the average amount of a transaction?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average transaction amount\naverage_amount = df['transaction_amount'].mean()\n\n# Get the ids of transactions whose amounts are greater than the average\nids = df.loc[df['transaction_amount'] > average_amount, 'transaction_id']\n\n# Print the ids\nprint(ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: Show the account id with most number of transactions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_transactions_account = df['account_id'].value_counts().index[0]\n\nprint(most_transactions_account)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: What is the id of the account with the most transactions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_transactions_account = df['account_id'].value_counts().index[0]\n\nprint(most_transactions_account)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,production_type_code,unit_price,product_name,product_color,product_size\n1,4,Food,617.95,Coffee Bean,Red,Medium\n2,4,Books,558.49,Learning French,Yellow,Medium\n3,8,Electronics,563.58,Fans,Black,Medium\n4,8,Electronics,985.78,Hard Drive,Black,Small\n5,7,DVDs,682.06,Arts,Yellow,Small\n6,7,Books,469.71,Art History,Yellow,Small\n7,5,Books,409.83,Learning English,Red,Large\n8,1,Books,49.62,Menus,Black,Small\n9,8,Food,694.31,Beer Menus,Black,Small\n10,9,Electronics,937.85,TV,Red,Medium\n\nQuestion: Show all product sizes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique product sizes\nproduct_sizes = df['product_size'].unique()\n\n# Print unique product sizes\nprint(product_sizes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,production_type_code,unit_price,product_name,product_color,product_size\n1,4,Food,617.95,Coffee Bean,Red,Medium\n2,4,Books,558.49,Learning French,Yellow,Medium\n3,8,Electronics,563.58,Fans,Black,Medium\n4,8,Electronics,985.78,Hard Drive,Black,Small\n5,7,DVDs,682.06,Arts,Yellow,Small\n6,7,Books,469.71,Art History,Yellow,Small\n7,5,Books,409.83,Learning English,Red,Large\n8,1,Books,49.62,Menus,Black,Small\n9,8,Food,694.31,Beer Menus,Black,Small\n10,9,Electronics,937.85,TV,Red,Medium\n\nQuestion: What are the different product sizes?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique product sizes\nproduct_sizes = df['product_size'].unique()\n\n# Print unique product sizes\nprint(product_sizes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,production_type_code,unit_price,product_name,product_color,product_size\n1,4,Food,617.95,Coffee Bean,Red,Medium\n2,4,Books,558.49,Learning French,Yellow,Medium\n3,8,Electronics,563.58,Fans,Black,Medium\n4,8,Electronics,985.78,Hard Drive,Black,Small\n5,7,DVDs,682.06,Arts,Yellow,Small\n6,7,Books,469.71,Art History,Yellow,Small\n7,5,Books,409.83,Learning English,Red,Large\n8,1,Books,49.62,Menus,Black,Small\n9,8,Food,694.31,Beer Menus,Black,Small\n10,9,Electronics,937.85,TV,Red,Medium\n\nQuestion: Show all product colors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all product colors\nproduct_colors = df['product_color'].unique()\n\n# Print all product colors\nprint(product_colors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,production_type_code,unit_price,product_name,product_color,product_size\n1,4,Food,617.95,Coffee Bean,Red,Medium\n2,4,Books,558.49,Learning French,Yellow,Medium\n3,8,Electronics,563.58,Fans,Black,Medium\n4,8,Electronics,985.78,Hard Drive,Black,Small\n5,7,DVDs,682.06,Arts,Yellow,Small\n6,7,Books,469.71,Art History,Yellow,Small\n7,5,Books,409.83,Learning English,Red,Large\n8,1,Books,49.62,Menus,Black,Small\n9,8,Food,694.31,Beer Menus,Black,Small\n10,9,Electronics,937.85,TV,Red,Medium\n\nQuestion: What are the different product colors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all product colors\nproduct_colors = df['product_color'].unique()\n\n# Print all product colors\nprint(product_colors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: Show the invoice number and the number of transactions for each invoice.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'invoice_number' and count the number of transactions in each group\ntransactions_count = df.groupby('invoice_number').size()\n\n# Save the answer in a variable\nanswer = transactions_count\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details\n1,13,12,Payment,2018-03-15 21:13:57,613.96,,\n2,9,1,Payment,2018-03-13 13:27:46,368.46,,\n3,6,1,Refund,2018-03-03 01:50:25,1598.25,,\n4,9,12,Payment,2018-03-10 13:46:48,540.73,,\n5,9,2,Payment,2018-03-23 04:56:12,1214.22,,\n6,12,3,Refund,2018-03-22 21:58:37,1903.41,,\n7,13,14,Payment,2018-03-12 03:06:52,1585.03,,\n8,14,15,Payment,2018-03-11 21:57:47,1425.41,,\n9,8,12,Payment,2018-03-07 04:32:54,1517.77,,\n10,6,15,Payment,2018-03-14 19:09:07,1477.57,,\n\nQuestion: How many transactions correspond to each invoice number?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'invoice_number' and count the number of transactions in each group\ntransactions_count = df.groupby('invoice_number').size()\n\n# Save the answer in a variable\nanswer = transactions_count\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,order_id,invoice_date\n1,9,2018-03-01 16:40:48\n2,9,2018-03-20 00:21:41\n3,3,2018-03-05 08:47:33\n4,9,2018-02-28 19:01:06\n5,13,2018-03-07 02:04:32\n6,8,2018-03-16 21:57:43\n7,10,2018-03-13 07:27:38\n8,10,2018-03-19 17:06:30\n9,12,2018-03-16 11:01:06\n10,11,2018-03-01 01:44:08\n\nQuestion: How many invoices do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of invoices\nnum_invoices = df.shape[0]\n\n# Print the number of invoices\nprint(num_invoices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,order_id,invoice_date\n1,9,2018-03-01 16:40:48\n2,9,2018-03-20 00:21:41\n3,3,2018-03-05 08:47:33\n4,9,2018-02-28 19:01:06\n5,13,2018-03-07 02:04:32\n6,8,2018-03-16 21:57:43\n7,10,2018-03-13 07:27:38\n8,10,2018-03-19 17:06:30\n9,12,2018-03-16 11:01:06\n10,11,2018-03-01 01:44:08\n\nQuestion: Count the number of invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of invoices\nnum_invoices = df.shape[0]\n\n# Print the number of invoices\nprint(num_invoices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,order_id,invoice_date\n1,9,2018-03-01 16:40:48\n2,9,2018-03-20 00:21:41\n3,3,2018-03-05 08:47:33\n4,9,2018-02-28 19:01:06\n5,13,2018-03-07 02:04:32\n6,8,2018-03-16 21:57:43\n7,10,2018-03-13 07:27:38\n8,10,2018-03-19 17:06:30\n9,12,2018-03-16 11:01:06\n10,11,2018-03-01 01:44:08\n\nQuestion: Show the order ids and the number of invoices for each order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by order_id and count the number of invoices for each order\norder_counts = df.groupby('order_id').size()\n\n# Print the result\nprint(order_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,order_id,invoice_date\n1,9,2018-03-01 16:40:48\n2,9,2018-03-20 00:21:41\n3,3,2018-03-05 08:47:33\n4,9,2018-02-28 19:01:06\n5,13,2018-03-07 02:04:32\n6,8,2018-03-16 21:57:43\n7,10,2018-03-13 07:27:38\n8,10,2018-03-19 17:06:30\n9,12,2018-03-16 11:01:06\n10,11,2018-03-01 01:44:08\n\nQuestion: How many invoices correspond to each order id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by order_id and count the number of invoices for each order\norder_counts = df.groupby('order_id').size()\n\n# Print the result\nprint(order_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: Show the order ids and the number of items in each order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by order_id and count the number of items in each order\norder_item_counts = df.groupby('order_id')['order_item_id'].count()\n\nprint(order_item_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: How many order items correspond to each order id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by order_id and count the number of items in each order\norder_item_counts = df.groupby('order_id')['order_item_id'].count()\n\nprint(order_item_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: Show the product ids and the number of unique orders containing each product.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'product_id' and count unique 'order_id'\nproduct_orders = df.groupby('product_id')['order_id'].nunique()\n\nprint(product_orders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: How many distinct order ids correspond to each product?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'product_id' and count unique 'order_id'\nproduct_orders = df.groupby('product_id')['order_id'].nunique()\n\nprint(product_orders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: Show order ids and the number of products in each order.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'order_id' and count the number of unique 'product_id' for each 'order_id'\nanswer = df.groupby('order_id')['product_id'].nunique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: How many different products correspond to each order id?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'order_id' and count the number of unique 'product_id' for each 'order_id'\nanswer = df.groupby('order_id')['product_id'].nunique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: Show order ids and the total quantity in each order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# load the data\ndf = pd.read_csv('data.csv')\n\n# group by order_id and calculate the sum of product_quantity\ngrouped_data = df.groupby('order_id')['product_quantity'].sum()\n\n# print the result\nprint(grouped_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id,product_quantity,other_order_item_details\n1,4,4,6,\n2,4,10,7,\n3,15,5,4,\n4,1,3,9,\n5,2,14,3,\n6,13,12,8,\n7,1,15,3,\n8,10,4,4,\n9,14,5,1,\n10,13,9,2,\n\nQuestion: Give the order ids for all orders, as well as the total product quantity in each.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# load the data\ndf = pd.read_csv('data.csv')\n\n# group by order_id and calculate the sum of product_quantity\ngrouped_data = df.groupby('order_id')['product_quantity'].sum()\n\n# print the result\nprint(grouped_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: How many churches opened before 1850 are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Converting Open_Date column to int type\ndf['Open_Date'] = df['Open_Date'].astype(int)\n\n# Filtering out churches opened before 1850\nchurches_before_1850 = df[df['Open_Date'] < 1850]\n\n# Getting the count of such churches\ncount_churches = len(churches_before_1850)\n\n# Printing the answer\nprint(count_churches)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: Show the name, open date, and organizer for all churches.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf_selected = df[['Name', 'Open_Date', 'Organized_by']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: List all church names in descending order of opening date.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert Open_Date to datetime format\ndf['Open_Date'] = pd.to_datetime(df['Open_Date'])\n\n# Sort the dataframe by Open_Date in descending order\ndf = df.sort_values(by='Open_Date', ascending=False)\n\n# Get the list of church names in descending order of opening date\nchurch_names_sorted = df['Name'].tolist()\n\n# Print the list of church names\nprint(church_names_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: Show the organizer and name for churches that opened between 1830 and 1840.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Open_Date' column to integer\ndf['Open_Date'] = df['Open_Date'].astype(int)\n\n# Filter the dataframe for rows where 'Open_Date' is between 1830 and 1840\nfiltered_df = df[(df['Open_Date'] >= 1830) & (df['Open_Date'] <= 1840)]\n\n# Select the 'Organized_by' and 'Name' columns for the filtered rows\nanswer = filtered_df[['Organized_by', 'Name']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: Show all opening years and the number of churches that opened in that year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the Open_Date column to datetime format\ndf['Open_Date'] = pd.to_datetime(df['Open_Date'], format='%Y')\n\n# Extract the year from the Open_Date column\ndf['Year'] = df['Open_Date'].dt.year\n\n# Group by year and count the number of churches\nanswer = df.groupby('Year')['Church_ID'].count()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Name,Organized_by,Open_Date,Continuation_of\n1,Pure Church of Christ,Wycam Clark,1831,Church of Christ\n2,Independent Church,– Hoton,1832,Church of Christ\n3,Church of Christ,Ezra Booth,1836,Church of the Latter Day Saints\n4,Church of Christ (Parrishite),Warren Parrish,1837,Church of the Latter Day Saints\n5,Alston Church,Isaac Russell,1839,Church of Jesus Christ of Latter Day Saints\n6,Church of Christ,William Chubby,1830,Church of Jesus Christ of Latter Day Saints\n7,Church of Jesus Christ, the Bride, the Lamb's Wife,George M. Hinkle,1840,Church of Jesus Christ of Latter Day Saints\n8,Church of Christ,Hiram Page,1842,Church of Jesus Christ of Latter Day Saints\n9,True Church of Jesus Christ of Latter Day Saints,William Law,1844,Church of Jesus Christ of Latter Day Saints\n\nQuestion: Show the name and opening year for three churches that opened most recently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'Open_Date' in descending order and select the first three rows\ndf_recent = df.sort_values(by='Open_Date', ascending=False).head(3)\n\n# Create a new dataframe with 'Name' and 'Open_Date' columns\ndf_recent = df_recent[['Name', 'Open_Date']]\n\n# Print the result\nprint(df_recent)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Country,Is_Male,Age\n1,Mike Weir,Canada,T,34\n2,Juli Hanson,Sweden,F,32\n3,Ricky Barnes,United States,T,30\n4,Summer Duval,United States,F,30\n5,Todd Hamilton,United States,T,27\n6,Annie Mediate,United States,F,26\n7,Lucas Glover,United States,T,31\n8,Joe O'Hair,United States,F,31\n9,Graeme McDowell,Northern Ireland,T,34\n10,Jamie Mickelson,United States,F,36\n\nQuestion: How many female people are older than 30 in our record?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data to include only female people older than 30\nfiltered_df = df[(df['Is_Male'] == 'F') & (df['Age'] > 30)]\n\n# Count the number of such people\nnum_females_older_than_30 = len(filtered_df)\n\n# Print the result\nprint(num_females_older_than_30)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Country,Is_Male,Age\n1,Mike Weir,Canada,T,34\n2,Juli Hanson,Sweden,F,32\n3,Ricky Barnes,United States,T,30\n4,Summer Duval,United States,F,30\n5,Todd Hamilton,United States,T,27\n6,Annie Mediate,United States,F,26\n7,Lucas Glover,United States,T,31\n8,Joe O'Hair,United States,F,31\n9,Graeme McDowell,Northern Ireland,T,34\n10,Jamie Mickelson,United States,F,36\n\nQuestion: Show the minimum, maximum, and average age for all people.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, maximum, and average age\nmin_age = df['Age'].min()\nmax_age = df['Age'].max()\navg_age = df['Age'].mean()\n\n# Save the answers in a dictionary\nage_statistics = {\"Minimum Age\": min_age, \"Maximum Age\": max_age, \"Average Age\": avg_age}\n\n# Print the dictionary\nprint(age_statistics)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Country,Is_Male,Age\n1,Mike Weir,Canada,T,34\n2,Juli Hanson,Sweden,F,32\n3,Ricky Barnes,United States,T,30\n4,Summer Duval,United States,F,30\n5,Todd Hamilton,United States,T,27\n6,Annie Mediate,United States,F,26\n7,Lucas Glover,United States,T,31\n8,Joe O'Hair,United States,F,31\n9,Graeme McDowell,Northern Ireland,T,34\n10,Jamie Mickelson,United States,F,36\n\nQuestion: Show the name and country for all people whose age is smaller than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_age = df['Age'].mean()\n\nfiltered_df = df[df['Age'] < average_age]\n\nresult = filtered_df[['Name', 'Country']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChurch_ID,Male_ID,Female_ID,Year\n1,1,2,2014\n3,3,4,2015\n5,5,6,2016\n4,7,8,2016\n\nQuestion: How many weddings are there in year 2016?", "response": "import pandas as pd\n\n# Read CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Year is 2016\ndf_2016 = df[df['Year'] == 2016]\n\n# Count the number of rows in the filtered DataFrame\nnum_weddings_2016 = df_2016.shape[0]\n\n# Print the result\nprint(num_weddings_2016)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Country,Is_Male,Age\n1,Mike Weir,Canada,T,34\n2,Juli Hanson,Sweden,F,32\n3,Ricky Barnes,United States,T,30\n4,Summer Duval,United States,F,30\n5,Todd Hamilton,United States,T,27\n6,Annie Mediate,United States,F,26\n7,Lucas Glover,United States,T,31\n8,Joe O'Hair,United States,F,31\n9,Graeme McDowell,Northern Ireland,T,34\n10,Jamie Mickelson,United States,F,36\n\nQuestion: Show all countries and the number of people from each country.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of people from each country\ncountries = df['Country'].value_counts()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: How many artists do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_artists = df.shape[0]\n\nprint(num_artists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Count the number of artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_artists = df.shape[0]\n\nprint(num_artists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Show all artist name, age, and country ordered by the yeared they joined.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by 'Year_Join'\ndf = df.sort_values('Year_Join')\n\n# Select columns 'Name', 'Age', and 'Country'\ndf = df[['Name', 'Age', 'Country']]\n\n# Save the answer in a variable\nanswer = df\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: What are the names, ages, and countries of artists, sorted by the year they joined?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by 'Year_Join'\ndf = df.sort_values('Year_Join')\n\n# Select columns 'Name', 'Age', and 'Country'\ndf = df[['Name', 'Age', 'Country']]\n\n# Save the answer in a variable\nanswer = df\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: What are all distinct country for artists?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_countries = df['Country'].unique()\n\nprint(distinct_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Return the different countries for artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_countries = df['Country'].unique()\n\nprint(distinct_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Show all artist names and the year joined who are not from United States.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only artists who are not from the United States\nnon_us_artists = df[df['Country'] != 'United States']\n\n# Create a new DataFrame with only the 'Name' and 'Year_Join' columns\nnon_us_artists_subset = non_us_artists[['Name', 'Year_Join']]\n\n# Print the new DataFrame\nprint(non_us_artists_subset)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: What are the names and year of joining for artists that do not have the country \"United States\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only artists who are not from the United States\nnon_us_artists = df[df['Country'] != 'United States']\n\n# Create a new DataFrame with only the 'Name' and 'Year_Join' columns\nnon_us_artists_subset = non_us_artists[['Name', 'Year_Join']]\n\n# Print the new DataFrame\nprint(non_us_artists_subset)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: How many artists are above age 46 and joined after 1990?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only artists above age 46 and joined after 1990\nfiltered_df = df[(df['Age'] > 46) & (df['Year_Join'] > 1990)]\n\n# Count the number of artists that meet the criteria\nartists_count = filtered_df.shape[0]\n\n# Print the answer\nprint(artists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Count the number of artists who are older than 46 and joined after 1990.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only artists above age 46 and joined after 1990\nfiltered_df = df[(df['Age'] > 46) & (df['Year_Join'] > 1990)]\n\n# Count the number of artists that meet the criteria\nartists_count = filtered_df.shape[0]\n\n# Print the answer\nprint(artists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: What is the average and minimum age of all artists from United States.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for artists from United States\nus_artists = df[df['Country'] == 'United States']\n\n# Compute the average and minimum age\naverage_age = us_artists['Age'].mean()\nmin_age = us_artists['Age'].min()\n\n# Save the answer in a variable\nanswer = (average_age, min_age)\n\n# Print the answer\nprint(\"The average and minimum age of all artists from United States are: \", answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Return the average and minimum ages across artists from the United States.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for artists from United States\nus_artists = df[df['Country'] == 'United States']\n\n# Compute the average and minimum age\naverage_age = us_artists['Age'].mean()\nmin_age = us_artists['Age'].min()\n\n# Save the answer in a variable\nanswer = (average_age, min_age)\n\n# Print the answer\nprint(\"The average and minimum age of all artists from United States are: \", answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: What is the name of the artist who joined latest?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the latest year\nlatest_year = df['Year_Join'].max()\n\n# Find the name of the artist who joined latest\nname_of_latest_artist = df[df['Year_Join'] == latest_year]['Name'].values[0]\n\nprint(\"The name of the artist who joined latest is: \", name_of_latest_artist)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Name,Country,Year_Join,Age\n1,Vijay Singh,Fiji,1998,45\n2,John Daly,United States,1991,46\n3,Paul Azinger,United States,1993,47\n4,Jeff Sluman,United States,1988,57\n5,Mark Brooks,United States,1996,48\n6,Nick Price,Zimbabwe,1994,48\n7,Larry Nelson,United States,1981,50\n\nQuestion: Return the name of the artist who has the latest join year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the latest year\nlatest_year = df['Year_Join'].max()\n\n# Find the name of the artist who joined latest\nname_of_latest_artist = df[df['Year_Join'] == latest_year]['Name'].values[0]\n\nprint(\"The name of the artist who joined latest is: \", name_of_latest_artist)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: How many exhibition are there in year 2005 or after?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the Year is 2005 or later\ndf_filtered = df[df['Year'] >= 2005]\n\n# Count the number of rows in the filtered dataframe\ncount = df_filtered.shape[0]\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: Count the number of exhibitions that happened in or after 2005.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the Year is 2005 or later\ndf_filtered = df[df['Year'] >= 2005]\n\n# Count the number of rows in the filtered dataframe\ncount = df_filtered.shape[0]\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: Show theme and year for all exhibitions with ticket prices lower than 15.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where ticket price is less than 15\nfiltered_df = df[df['Ticket_Price'] < 15]\n\n# Select the 'Theme' and 'Year' columns from the filtered dataframe\ntheme_year = filtered_df[['Theme', 'Year']]\n\n# Print the result\nprint(theme_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: What are the theme and year for all exhibitions that have a ticket price under 15?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where ticket price is less than 15\nfiltered_df = df[df['Ticket_Price'] < 15]\n\n# Select the 'Theme' and 'Year' columns from the filtered dataframe\ntheme_year = filtered_df[['Theme', 'Year']]\n\n# Print the result\nprint(theme_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for exhibitions before 2009\ndf_before_2009 = df[df['Year'] < 2009]\n\n# Calculate the average, minimum, and maximum ticket prices\naverage_ticket_price = df_before_2009['Ticket_Price'].mean()\nmin_ticket_price = df_before_2009['Ticket_Price'].min()\nmax_ticket_price = df_before_2009['Ticket_Price'].max()\n\n# Save the answers in variables\nanswer = {'average': average_ticket_price, 'minimum': min_ticket_price, 'maximum': max_ticket_price}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for exhibitions before 2009\ndf_before_2009 = df[df['Year'] < 2009]\n\n# Calculate the average, minimum, and maximum ticket prices\naverage_ticket_price = df_before_2009['Ticket_Price'].mean()\nmin_ticket_price = df_before_2009['Ticket_Price'].min()\nmax_ticket_price = df_before_2009['Ticket_Price'].max()\n\n# Save the answers in variables\nanswer = {'average': average_ticket_price, 'minimum': min_ticket_price, 'maximum': max_ticket_price}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: Show theme and year for all exhibitions in an descending order of ticket price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Ticket_Price', ascending=False)\nresult = df[['Theme', 'Year']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nExhibition_ID,Year,Theme,Artist_ID,Ticket_Price\n1,2004,Santa Claus,1,19.95\n2,2005,Christmas stocking,2,19.95\n3,2006,Santa Claus and Rudolph the Red-Nosed Reindeer,4,14.95\n4,2007,Christmas Tree,1,16.95\n5,2008,Spring,6,29.95\n6,2009,Summer,3,9.95\n\nQuestion: What are the themes and years for exhibitions, sorted by ticket price descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Ticket_Price', ascending=False)\nresult = df[['Theme', 'Year']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ni_id,title\n0,pear\n1,orange\n2,apple\n3,shampoo\n4,avocado\n5,comb\n6,blue hoodie\n7,cup\n\nQuestion: Find the id of the item whose title is \"orange\".", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row where the title is 'orange'\norange_row = df[df['title'] == 'orange']\n\n# Save the id of the item (i_id) in a variable\norange_id = orange_row['i_id'].values[0]\n\n# Print the variable\nprint(orange_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ni_id,title\n0,pear\n1,orange\n2,apple\n3,shampoo\n4,avocado\n5,comb\n6,blue hoodie\n7,cup\n\nQuestion: List all information in the item table.", "response": "import pandas as pd\n\n# Load data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Print all information in the item table\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\na_id,u_id,i_id,rating,rank\n1,1,1,10,1\n2,2,1,5,2\n3,1,4,7,3\n4,2,7,10,7\n5,2,5,7,4\n6,1,3,5,5\n7,2,7,6,6\n\nQuestion: Find the number of reviews.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of reviews\nnum_reviews = df.shape[0]\n\n# Print the number of reviews\nprint(num_reviews)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nu_id,name\n1,Helen\n2,Mark\n3,Terry\n4,Nancy\n5,Rosie\n6,Roxi\n7,Emily\n\nQuestion: How many users are there?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of users\nnum_users = len(df)\n\n# Print the number of users\nprint(num_users)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\na_id,u_id,i_id,rating,rank\n1,1,1,10,1\n2,2,1,5,2\n3,1,4,7,3\n4,2,7,10,7\n5,2,5,7,4\n6,1,3,5,5\n7,2,7,6,6\n\nQuestion: Find the highest rank of all reviews.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Find the highest rank\nhighest_rank = df['rank'].min()\n\n# Print the highest rank\nprint(highest_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\na_id,u_id,i_id,rating,rank\n1,1,1,10,1\n2,2,1,5,2\n3,1,4,7,3\n4,2,7,10,7\n5,2,5,7,4\n6,1,3,5,5\n7,2,7,6,6\n\nQuestion: How many different users wrote some reviews?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique users\nnum_users = df['u_id'].nunique()\n\n# Print the number of unique users\nprint(num_users)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\na_id,u_id,i_id,rating,rank\n1,1,1,10,1\n2,2,1,5,2\n3,1,4,7,3\n4,2,7,10,7\n5,2,5,7,4\n6,1,3,5,5\n7,2,7,6,6\n\nQuestion: How many different items were reviewed by some users?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique item IDs\nnum_items_reviewed = df['i_id'].nunique()\n\nprint(num_items_reviewed)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ni_id,title\n0,pear\n1,orange\n2,apple\n3,shampoo\n4,avocado\n5,comb\n6,blue hoodie\n7,cup\n\nQuestion: List the titles of all items in alphabetic order .", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the titles in alphabetic order\nsorted_titles = df['title'].sort_values()\n\n# Print the sorted titles\nprint(sorted_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: How many players are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# The number of players is equivalent to the number of rows in the DataFrame\nnum_players = df.shape[0]\n\nprint(num_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: List the names of players in ascending order of votes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Votes' column\ndf_sorted = df.sort_values('Votes')\n\n# Save the names of players in a variable\nplayer_names = df_sorted['Player_name'].tolist()\n\n# Print the variable\nprint(player_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: What are the gender and occupation of players?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Create a new dataframe with the 'Gender' and 'Occupation' columns\ngender_occupation = df[['Gender', 'Occupation']]\n\n# Print the new dataframe\nprint(gender_occupation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: List the name and residence for players whose occupation is not \"Researcher\".", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter out rows where the 'Occupation' column is not 'Researcher'\nfiltered_df = df[df['Occupation'] != 'Researcher']\n\n# Select 'Player_name' and 'Residence' columns\nanswer = filtered_df[['Player_name', 'Residence']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the data\nfiltered_df = df[df['Residence'].isin(['Brandon', 'Birtle'])]\n\n# Show the names of sponsors\nsponsor_names = filtered_df['Sponsor_name'].tolist()\n\nprint(sponsor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: What is the name of the player with the largest number of votes?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum number of votes\nmax_votes = df['Votes'].max()\n\n# Get the row with the maximum number of votes\nplayer_with_max_votes = df[df['Votes'] == max_votes]\n\n# Get the name of the player with the maximum number of votes\nplayer_name = player_with_max_votes['Player_name'].values[0]\n\n# Print the name of the player with the maximum number of votes\nprint(player_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: Show different occupations along with the number of players in each occupation.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\noccupation_counts = df['Occupation'].value_counts()\n\nprint(occupation_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: Please show the most common occupation of players.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Occupation' column to a list\noccupations = df['Occupation'].tolist()\n\n# Find the most common occupation\nmost_common_occupation = max(set(occupations), key=occupations.count)\n\nprint(most_common_occupation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: Show the residences that have at least two players.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nresidence_counts = df['Residence'].value_counts()\n\nresidence_with_two_players = residence_counts[residence_counts >= 2].index.tolist()\n\nprint(\"Residences that have at least two players: \", residence_with_two_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank\n1,Brandon—Souris,Jean Luc Bouché,M,Brandon,Locomotive Engineer,6055,2nd\n2,Charleswood—St. James—Assiniboia,Fiona Shiells,F,Winnipeg,Ministerial Assistant,7190,3rd\n3,Churchill,Niki Ashton,F,Thompson,Researcher,8734,1st\n4,Dauphin—Swan River—Marquette,Ron Strynadka,M,Birtle,Retired,4914,2nd\n5,Elmwood—Transcona,Jim Maloway,M,Winnipeg,Small Businessman,14355,1st\n6,Kildonan—St. Paul,Ross Eadie,M,Winnipeg,Self Employed / Consultant,12093,2nd\n7,Portage—Lisgar,Mohamed Alli,M,Winnipeg,Distribution Centre Associate,2353,4th\n8,Provencher,Ross C. Martin,M,Oakbank,Design Coordinator,4947,2nd\n9,Saint Boniface,Matt Schaubroeck,M,Winnipeg,Student,5502,3rd\n10,Selkirk—Interlake,Patricia Cordner,F,Selkirk,Retired,9506,2nd\n\nQuestion: Show the residences that have both a player of gender \"M\" and a player of gender \"F\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the data by residence and gender\ngrouped = df.groupby(['Residence', 'Gender'])\n\n# Filter out the residences where there are both male and female players\nfiltered = grouped.filter(lambda x: len(x) > 1)\n\n# Get the unique residences\nresidences = filtered['Residence'].unique()\n\n# Save the answer in a variable and print it\nanswer = \", \".join(residences)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: How many gymnasts are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of gymnasts\ngymnast_count = df['Gymnast_ID'].nunique()\n\nprint(gymnast_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: Count the number of gymnasts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of gymnasts\ngymnast_count = df['Gymnast_ID'].nunique()\n\nprint(gymnast_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: List the total points of gymnasts in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf = df.sort_values('Total_Points', ascending=False)\n\nanswer = df['Total_Points'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: What are the total points for all gymnasts, ordered by total points descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf = df.sort_values('Total_Points', ascending=False)\n\nanswer = df['Total_Points'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: List the total points of gymnasts in descending order of floor exercise points.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort data by 'Floor_Exercise_Points' in descending order\ndf_sorted = df.sort_values('Floor_Exercise_Points', ascending=False)\n\n# Get total points of gymnasts\ntotal_points = df_sorted['Total_Points']\n\n# Print total points of gymnasts, ordered by their floor exercise points descending\nprint(total_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: What are the total points of gymnasts, ordered by their floor exercise points descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort data by 'Floor_Exercise_Points' in descending order\ndf_sorted = df.sort_values('Floor_Exercise_Points', ascending=False)\n\n# Get total points of gymnasts\ntotal_points = df_sorted['Total_Points']\n\n# Print total points of gymnasts, ordered by their floor exercise points descending\nprint(total_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: What is the average horizontal bar points for all gymnasts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_h_bar_points = df['Horizontal_Bar_Points'].mean()\n\nprint(average_h_bar_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points\n1,9.725,9.737,9.512,9.575,9.762,9.75,58.061\n2,9.7,9.625,9.625,9.65,9.587,9.737,57.924\n4,8.987,9.75,9.75,9.65,9.787,9.725,57.649\n6,9.762,9.325,9.475,9.762,9.562,9.55,57.436\n7,9.687,9.675,9.3,9.537,9.725,9.5,57.424\n8,9.65,9.712,9.487,9.637,9.5,9.412,57.398\n10,9.412,9.525,9.712,9.55,9.625,9.55,57.374\n\nQuestion: Return the average horizontal bar points across all gymnasts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_h_bar_points = df['Horizontal_Bar_Points'].mean()\n\nprint(average_h_bar_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: What are the names of people in ascending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values(by='Name')\n\nnames_in_ascending_order = df['Name'].tolist()\n\nprint(names_in_ascending_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: Return the names of people, ordered alphabetically.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values(by='Name')\n\nnames_in_ascending_order = df['Name'].tolist()\n\nprint(names_in_ascending_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: What is the age of the tallest person?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out the person with the greatest height\nmax_height_person = df[df['Height'] == df['Height'].max()]\n\n# Get the age of the person with the greatest height\nmax_height_age = max_height_person['Age'].values[0]\n\nprint(max_height_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: Return the age of the person with the greatest height.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out the person with the greatest height\nmax_height_person = df[df['Height'] == df['Height'].max()]\n\n# Get the age of the person with the greatest height\nmax_height_age = max_height_person['Age'].values[0]\n\nprint(max_height_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: List the names of the top 5 oldest people.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Age' in descending order\ndf_sorted = df.sort_values(by='Age', ascending=False)\n\n# Select top 5 names\ntop_5_names = df_sorted['Name'].head(5)\n\n# Print the names\nprint(top_5_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: What are the names of the five oldest people?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Age' in descending order\ndf_sorted = df.sort_values(by='Age', ascending=False)\n\n# Select top 5 names\ntop_5_names = df_sorted['Name'].head(5)\n\n# Print the names\nprint(top_5_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: Show the hometowns shared by people older than 23 and younger than 20.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only people older than 23\ndf_older = df[df['Age'] > 23]\n\n# Filter the dataframe to include only people younger than 20\ndf_younger = df[df['Age'] < 20]\n\n# Get the shared hometowns\nshared_hometowns = set(df_older['Hometown']).intersection(df_younger['Hometown'])\n\n# Print the shared hometowns\nfor hometown in shared_hometowns:\n    print(hometown)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: From which hometowns did both people older than 23 and younger than 20 come from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only people older than 23\ndf_older = df[df['Age'] > 23]\n\n# Filter the dataframe to include only people younger than 20\ndf_younger = df[df['Age'] < 20]\n\n# Get the shared hometowns\nshared_hometowns = set(df_older['Hometown']).intersection(df_younger['Hometown'])\n\n# Print the shared hometowns\nfor hometown in shared_hometowns:\n    print(hometown)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: How many distinct hometowns did these people have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Create a variable to store the count of unique hometowns\nnum_hometowns = df['Hometown'].nunique()\n\n# Print the variable\nprint(num_hometowns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Age,Height,Hometown\n1,Paul Hamm,24.0,1.71,Santo Domingo\n2,Lorraine Súarez Carmona,21.0,1.75,Bonao\n3,Ashley Pérez Cabrera,19.0,1.7,Miami\n4,Elizabeth Quiñónez Aroyo,20.0,1.71,Santo Domingo\n5,Eve Tatiana Cruz Oviedo,19.0,1.72,Santo Domingo\n6,Nadia Caba Rodríguez,22.0,1.79,Santo Domingo\n7,Clary Sermina Delgado Cid,21.0,1.75,Santiago de los Caballeros\n8,Marina Castro Medina,20.0,1.76,Santo Domingo\n9,Rosa Clarissa Ortíz Melo,23.0,1.81,La Romana\n10,Endis de los Santos Álvarez,24.0,1.72,Los Alcarrizos\n\nQuestion: Count the number of different hometowns of these people.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Create a variable to store the count of unique hometowns\nnum_hometowns = df['Hometown'].nunique()\n\n# Print the variable\nprint(num_hometowns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,name\n1,Brown\n2,Wang\n3,O'mahony\n4,Weeks\n5,Granger\n6,Porter\n7,Wesley\n\nQuestion: How many accounts are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of accounts\nnum_accounts = df.shape[0]\n\nprint(num_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,name\n1,Brown\n2,Wang\n3,O'mahony\n4,Weeks\n5,Granger\n6,Porter\n7,Wesley\n\nQuestion: Count the number of accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of accounts\nnum_accounts = df.shape[0]\n\nprint(num_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,10000.0\n2,2000.0\n3,3000.0\n4,7000.0\n5,10000.0\n6,77.0\n7,7.0\n\nQuestion: What is the total checking balance in all accounts?", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the total checking balance\ntotal_balance = df['balance'].sum()\n\nprint(total_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,10000.0\n2,2000.0\n3,3000.0\n4,7000.0\n5,10000.0\n6,77.0\n7,7.0\n\nQuestion: Find the total balance across checking accounts.", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the total checking balance\ntotal_balance = df['balance'].sum()\n\nprint(total_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,10000.0\n2,2000.0\n3,3000.0\n4,7000.0\n5,10000.0\n6,77.0\n7,7.0\n\nQuestion: Find the average checking balance.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average balance\naverage_balance = df['balance'].mean()\n\n# Print the average balance\nprint(average_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,10000.0\n2,2000.0\n3,3000.0\n4,7000.0\n5,10000.0\n6,77.0\n7,7.0\n\nQuestion: What is the average balance in checking accounts?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average balance\naverage_balance = df['balance'].mean()\n\n# Print the average balance\nprint(average_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,200000.0\n2,999999999.0\n3,230000.0\n4,60.0\n5,80000.0\n6,240.0\n\nQuestion: How many accounts have a savings balance above the average savings balance?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_balance = df['balance'].mean()\n\nhigher_than_average = df[df['balance'] > average_balance]\n\nnum_of_accounts = len(higher_than_average)\n\nprint(num_of_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,balance\n1,200000.0\n2,999999999.0\n3,230000.0\n4,60.0\n5,80000.0\n6,240.0\n\nQuestion: Find the number of accounts with a savings balance that is higher than the average savings balance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_balance = df['balance'].mean()\n\nhigher_than_average = df[df['balance'] > average_balance]\n\nnum_of_accounts = len(higher_than_average)\n\nprint(num_of_accounts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,name\n1,Brown\n2,Wang\n3,O'mahony\n4,Weeks\n5,Granger\n6,Porter\n7,Wesley\n\nQuestion: List all customers’ names in the alphabetical order.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by name in alphabetical order\ndf = df.sort_values(by='name')\n\n# get the names of all customers\ncustomer_names = df['name'].tolist()\n\n# save the answer in a variable and print the variable\nanswer = customer_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustid,name\n1,Brown\n2,Wang\n3,O'mahony\n4,Weeks\n5,Granger\n6,Porter\n7,Wesley\n\nQuestion: What are the names of all the customers in alphabetical order?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by name in alphabetical order\ndf = df.sort_values(by='name')\n\n# get the names of all customers\ncustomer_names = df['name'].tolist()\n\n# save the answer in a variable and print the variable\nanswer = customer_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,market_share\n1,Internet Explorer,28.96\n2,Firefox,18.11\n3,Safari,8.54\n4,Opera,1.2\n\nQuestion: How many main stream browsers whose market share is at least 5 exist?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmainstream_browsers = df[df['market_share'] >= 5]\n\nanswer = len(mainstream_browsers)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,market_share\n1,Internet Explorer,28.96\n2,Firefox,18.11\n3,Safari,8.54\n4,Opera,1.2\n\nQuestion: List the name of browsers in descending order by market share.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'market_share' in descending order\ndf_sorted = df.sort_values('market_share', ascending=False)\n\n# Save the names of the browsers in a variable\nbrowser_names = df_sorted['name'].tolist()\n\n# Print the variable\nprint(browser_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,market_share\n1,Internet Explorer,28.96\n2,Firefox,18.11\n3,Safari,8.54\n4,Opera,1.2\n\nQuestion: List the ids, names and market shares of all browsers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the ids, names and market shares of all browsers\nbrowser_info = df[['id', 'name', 'market_share']]\n\nprint(browser_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,market_share\n1,Internet Explorer,28.96\n2,Firefox,18.11\n3,Safari,8.54\n4,Opera,1.2\n\nQuestion: What is the maximum, minimum and average market share of the listed browsers?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the maximum, minimum and average market share\nmax_market_share = df['market_share'].max()\nmin_market_share = df['market_share'].min()\navg_market_share = df['market_share'].mean()\n\n# Save the answer in a variable and print the variable\nanswer = {'max_market_share': max_market_share, 'min_market_share': min_market_share, 'avg_market_share': avg_market_share}\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,market_share\n1,Internet Explorer,28.96\n2,Firefox,18.11\n3,Safari,8.54\n4,Opera,1.2\n\nQuestion: What is the id and market share of the browser Safari?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include Safari\nsafari_df = df[df['name'] == 'Safari']\n\n# get the id and market share of Safari\nanswer = safari_df[['id', 'market_share']]\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Operating_system,Client,Connection\n1,CACHEbox,Appliance (Linux),End user, ISP,Broadband, Satellite, Wireless, Fiber, DSL\n2,CProxy,Windows,user,up to 756kbit/s\n3,Fasterfox,Windows, Mac, Linux and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n4,fasTun,Any,All,Any\n5,Freewire,Windows, except NT and 95,ISP,Dial-up\n6,Google Web Accelerator (discontinued),Windows,user/Google server,Broadband\n7,Heigh Speed,Windows,All,Any\n8,Netfury,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n9,Nitro,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n10,ONSPEED,Windows, Mac and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n\nQuestion: What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get only the rows that don't have 'Broadband' as the only connection type\ndf_filtered = df[(df['Connection'] != 'Broadband') | (df['Connection'].str.count('Broadband') > 1)]\n\n# Get the name and operating system of the web client accelerators\nanswer = df_filtered[['name', 'Operating_system']]\n\n# Save answer in variable and print it\nanswer_variable = answer\nprint(answer_variable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Operating_system,Client,Connection\n1,CACHEbox,Appliance (Linux),End user, ISP,Broadband, Satellite, Wireless, Fiber, DSL\n2,CProxy,Windows,user,up to 756kbit/s\n3,Fasterfox,Windows, Mac, Linux and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n4,fasTun,Any,All,Any\n5,Freewire,Windows, except NT and 95,ISP,Dial-up\n6,Google Web Accelerator (discontinued),Windows,user/Google server,Broadband\n7,Heigh Speed,Windows,All,Any\n8,Netfury,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n9,Nitro,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n10,ONSPEED,Windows, Mac and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n\nQuestion: How many different kinds of clients are supported by the web clients accelerators?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Drop rows with missing client information\ndf = df.dropna(subset=['Client'])\n\n# Split the 'Client' column into a list of clients\ndf['Client'] = df['Client'].str.split(',')\n\n# Explode the 'Client' column to create a row for each client\ndf = df.explode('Client')\n\n# Strip any leading/trailing whitespace from the client names\ndf['Client'] = df['Client'].str.strip()\n\n# Get the number of unique client names\nnum_unique_clients = df['Client'].nunique()\n\nprint(num_unique_clients)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Operating_system,Client,Connection\n1,CACHEbox,Appliance (Linux),End user, ISP,Broadband, Satellite, Wireless, Fiber, DSL\n2,CProxy,Windows,user,up to 756kbit/s\n3,Fasterfox,Windows, Mac, Linux and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n4,fasTun,Any,All,Any\n5,Freewire,Windows, except NT and 95,ISP,Dial-up\n6,Google Web Accelerator (discontinued),Windows,user/Google server,Broadband\n7,Heigh Speed,Windows,All,Any\n8,Netfury,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n9,Nitro,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n10,ONSPEED,Windows, Mac and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n\nQuestion: Which accelerator name contains substring \"Opera\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering rows where the name contains 'Opera'\ndf_opera = df[df['name'].str.contains('Opera')]\n\n# Getting the name of the accelerator\naccelerator_name = df_opera['name'].values[0]\n\n# Printing the name of the accelerator\nprint(accelerator_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Operating_system,Client,Connection\n1,CACHEbox,Appliance (Linux),End user, ISP,Broadband, Satellite, Wireless, Fiber, DSL\n2,CProxy,Windows,user,up to 756kbit/s\n3,Fasterfox,Windows, Mac, Linux and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n4,fasTun,Any,All,Any\n5,Freewire,Windows, except NT and 95,ISP,Dial-up\n6,Google Web Accelerator (discontinued),Windows,user/Google server,Broadband\n7,Heigh Speed,Windows,All,Any\n8,Netfury,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n9,Nitro,Windows, Mac,End User, ISP,Dial-up, Broadband, DSL, ISDN, Satellite, Wireless\n10,ONSPEED,Windows, Mac and Mobile devices,user,Dialup, Wireless, Broadband, DSL\n\nQuestion: Find the number of web accelerators used for each Operating system.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of web accelerators used for each Operating system\noperating_system_counts = df['Operating_system'].value_counts()\n\nprint(operating_system_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: How many wrestlers are there?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the number of wrestlers\nnum_wrestlers = len(df)\n\n# Print the number of wrestlers\nprint(num_wrestlers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Count the number of wrestlers.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the number of wrestlers\nnum_wrestlers = len(df)\n\n# Print the number of wrestlers\nprint(num_wrestlers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: List the names of wrestlers in descending order of days held.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('Days_held', ascending=False)\n\nwrestlers = df['Name'].tolist()\n\nprint(wrestlers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: What are the names of the wrestlers, ordered descending by days held?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('Days_held', ascending=False)\n\nwrestlers = df['Name'].tolist()\n\nprint(wrestlers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: What is the name of the wrestler with the fewest days held?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the row with the minimum number of days held\nmin_days = df[df['Days_held'] == df['Days_held'].min()]\n\n# Get the name of the wrestler\nwrestler_name = min_days['Name'].values[0]\n\n# Print the answer\nprint(wrestler_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Return the name of the wrestler who had the lowest number of days held.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the row with the minimum number of days held\nmin_days = df[df['Days_held'] == df['Days_held'].min()]\n\n# Get the name of the wrestler\nwrestler_name = min_days['Name'].values[0]\n\n# Print the answer\nprint(wrestler_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get wrestlers whose location is not \"Tokyo,Japan\"\ndf_filtered = df[df['Location'] != 'Tokyo , Japan']\n\n# Get the distinct reigns of wrestlers\ndistinct_reigns = df_filtered['Reign'].unique().tolist()\n\n# Save the answer in a variable\nanswer = distinct_reigns\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Give the different reigns of wrestlers who are not located in Tokyo, Japan.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get wrestlers whose location is not \"Tokyo,Japan\"\ndf_filtered = df[df['Location'] != 'Tokyo , Japan']\n\n# Get the distinct reigns of wrestlers\ndistinct_reigns = df_filtered['Reign'].unique().tolist()\n\n# Save the answer in a variable\nanswer = distinct_reigns\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: What are the names and location of the wrestlers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnames_locations = df[['Name', 'Location']]\n\nprint(names_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Give the names and locations of all wrestlers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnames_locations = df[['Name', 'Location']]\n\nprint(names_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: What are the elimination moves of wrestlers whose team is \"Team Orton\"?", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the Team is 'Team Orton'\nteam_orton_df = df[df['Team'] == 'Team Orton']\n\n# Get the Elimination_Move column for the Team Orton rows\nelimination_moves = team_orton_df['Elimination_Move']\n\n# Print the elimination moves\nprint(elimination_moves)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Return the elimination movies of wrestlers on Team Orton.", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the Team is 'Team Orton'\nteam_orton_df = df[df['Team'] == 'Team Orton']\n\n# Get the Elimination_Move column for the Team Orton rows\nelimination_moves = team_orton_df['Elimination_Move']\n\n# Print the elimination moves\nprint(elimination_moves)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Show different teams in eliminations and the number of eliminations from each team.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Team and count the number of eliminations\nteam_eliminations = df.groupby('Team').size()\n\nprint(team_eliminations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: How many eliminations did each team have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Team and count the number of eliminations\nteam_eliminations = df.groupby('Team').size()\n\nprint(team_eliminations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Show teams that have suffered more than three eliminations.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Team' and count the number of eliminations for each team\nteam_eliminations = df.groupby('Team').size()\n\n# Filter the teams with more than 3 eliminations\nteams_more_than_3_eliminations = team_eliminations[team_eliminations > 3]\n\n# Save the answer in a variable\nanswer = teams_more_than_3_eliminations.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Which teams had more than 3 eliminations?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Team' and count the number of eliminations for each team\nteam_eliminations = df.groupby('Team').size()\n\n# Filter the teams with more than 3 eliminations\nteams_more_than_3_eliminations = team_eliminations[team_eliminations > 3]\n\n# Save the answer in a variable\nanswer = teams_more_than_3_eliminations.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Show the reign and days held of wrestlers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Reign' and 'Days_held' columns\nreign_days_held = df[['Reign', 'Days_held']]\n\n# Print the dataframe\nprint(reign_days_held)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: What are the reigns and days held of all wrestlers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Reign' and 'Days_held' columns\nreign_days_held = df[['Reign', 'Days_held']]\n\n# Print the dataframe\nprint(reign_days_held)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Please show the most common reigns of wrestlers.", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Finding the most common reigns of wrestlers\nmost_common_reigns = df['Reign'].mode()\n\n# Printing the most common reigns\nprint(most_common_reigns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Which reign is the most common among wrestlers?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Finding the most common reigns of wrestlers\nmost_common_reigns = df['Reign'].mode()\n\n# Printing the most common reigns\nprint(most_common_reigns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: List the locations that are shared by more than two wrestlers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nlocation_counts = df['Location'].value_counts()\nshared_locations = location_counts[location_counts > 2]\n\nanswer = shared_locations.index.tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWrestler_ID,Name,Reign,Days_held,Location,Event\n1,Rey Misterio Sr.,1,344,Tijuana , Mexico,Live event\n2,Fishman,1,113,Tijuana , Mexico,Live event\n3,Villaño IV,1,1285,Tijuana , Mexico,Live event\n4,Gran Hamada,1,960,Tokyo , Japan,Live event\n5,El Samurai,1,1,Tokyo , Japan,Live event\n6,The Great Sasuke §,1,99,Tokyo , Japan,Live event\n7,Último Dragón §,1,54,Osaka , Japan,Live event\n8,Jushin Liger §,1,183,Tokyo , Japan,Wrestling World 1997\n9,El Samurai §,2,35,Sapporo , Japan,Live event\n10,Shinjiro Otani §,1,56,Nagoya , Japan,Live event\n\nQuestion: Which locations are shared by more than two wrestlers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nlocation_counts = df['Location'].value_counts()\nshared_locations = location_counts[location_counts > 2]\n\nanswer = shared_locations.index.tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Show the teams that have both wrestlers eliminated by \"Orton\" and wrestlers eliminated by \"Benjamin\".", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'Eliminated_By' is 'Orton' or 'Benjamin'\nfiltered_df = df[df['Eliminated_By'].isin(['Orton', 'Benjamin'])]\n\n# Get the unique values of 'Team' for both 'Orton' and 'Benjamin'\nteams_by_orton = set(filtered_df[filtered_df['Eliminated_By'] == 'Orton']['Team'])\nteams_by_benjamin = set(filtered_df[filtered_df['Eliminated_By'] == 'Benjamin']['Team'])\n\n# Find the intersection of the two sets to get the teams that have both wrestlers eliminated by Orton and Benjamin\ncommon_teams = teams_by_orton & teams_by_benjamin\n\n# Save the answer in a variable and print the variable\nanswer = ', '.join(common_teams)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: What are the teams that have both wrestlers eliminated by Orton and wrestlers eliminated by Benjamin?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'Eliminated_By' is 'Orton' or 'Benjamin'\nfiltered_df = df[df['Eliminated_By'].isin(['Orton', 'Benjamin'])]\n\n# Get the unique values of 'Team' for both 'Orton' and 'Benjamin'\nteams_by_orton = set(filtered_df[filtered_df['Eliminated_By'] == 'Orton']['Team'])\nteams_by_benjamin = set(filtered_df[filtered_df['Eliminated_By'] == 'Benjamin']['Team'])\n\n# Find the intersection of the two sets to get the teams that have both wrestlers eliminated by Orton and Benjamin\ncommon_teams = teams_by_orton & teams_by_benjamin\n\n# Save the answer in a variable and print the variable\nanswer = ', '.join(common_teams)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: What is the number of distinct teams that suffer elimination?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of distinct teams that suffer elimination\nnum_distinct_teams = df['Team'].nunique()\n\nprint(num_distinct_teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: How many different teams have had eliminated wrestlers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of distinct teams that suffer elimination\nnum_distinct_teams = df['Team'].nunique()\n\nprint(num_distinct_teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: Show the times of elimination by \"Punk\" or \"Orton\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include instances where the elimination was done by Punk or Orton\ndf_punk_orton = df[df['Eliminated_By'].isin(['Punk', 'Orton'])]\n\n# Get the times of elimination for these instances\ntimes = df_punk_orton['Time'].tolist()\n\n# Print the times\nprint(times)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time\n1,1,Team Orton,Punk,Go To Sleep,00:11\n2,2,Team Batista,Benjamin,Paydirt,07:38\n3,4,Team Batista,Orton,Rope hung DDT,10:45\n4,5,Team Batista,Rhodes,Silver Spoon DDT,13:06\n5,7,Team Batista,Henry,World's Strongest Slam,14:22\n6,9,Team Orton,Batista,Spear,14:32\n\nQuestion: What are the times of elimination for any instances in which the elimination was done by Punk or Orton?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include instances where the elimination was done by Punk or Orton\ndf_punk_orton = df[df['Eliminated_By'].isin(['Punk', 'Orton'])]\n\n# Get the times of elimination for these instances\ntimes = df_punk_orton['Time'].tolist()\n\n# Print the times\nprint(times)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: How many schools are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_schools = len(df)\n\n# Print the number of schools\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: Count the number of schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_schools = len(df)\n\n# Print the number of schools\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: Show all school names in alphabetical order.", "response": "import pandas as pd\n\n# Load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get all school names and sort them in alphabetical order\nschool_names = df['School_name'].sort_values()\n\n# Print the sorted school names\nprint(school_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: List the name, location, mascot for all schools.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Select the columns of interest\ndf_selected = df[['School_name', 'Location', 'Mascot']]\n\n# Print the selected data\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: What are the mascots for schools with enrollments above the average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average enrollment\naverage_enrollment = df['Enrollment'].mean()\n\n# Filter schools with enrollments above average\nschools_above_average = df[df['Enrollment'] > average_enrollment]\n\n# Get the mascots for these schools\nmascots = schools_above_average['Mascot']\n\nprint(mascots)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: List the name of the school with the smallest enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Enrollment\ndf = df.sort_values(by='Enrollment')\n\n# Get the name of the school with the smallest enrollment\nsmallest_enrollment_school_name = df.iloc[0]['School_name']\n\n# Print the name of the school\nprint(smallest_enrollment_school_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County\n1,Bremen,Bremen,Lions,495,AA,AA,50 Marshall\n2,Culver Community,Culver,Cavaliers,287,A,A,50 Marshall\n3,Glenn,Walkerton,Falcons,605,AAA,AAA,71 St. Joseph\n4,Jimtown,Elkhart,Jimmies,601,AAA,AAA,20 Elkhart\n5,Knox Community,Knox,Redskins,620,AAA,AAA,75 Starke\n6,LaVille,Lakeville,Lancers,379,AA,A,71 St. Joseph\n7,New Prairie 1,New Carlisle,Cougars,852,AAA,AAAA,46 LaPorte 71 St. Joseph\n8,Triton,Bourbon,Trojans,316,A,A,50 Marshall\n\nQuestion: Show each county along with the number of schools and total enrollment in each county.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf2 = df.groupby('County')['School_id'].count().reset_index(name='Number of Schools')\ndf2['Total Enrollment'] = df.groupby('County')['Enrollment'].sum().values\n\nprint(df2)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nendowment_id,School_id,donator_name,amount\n1,1,Monte Plata,9.51\n2,2,San José de Ocoa,9.83\n3,3,Distrito Nacional,9.55\n4,3,Valverde,9.73\n5,3,San Cristóbal,9.05\n6,4,Santo Domingo Este,8.99\n7,4,Santiago,8.85\n8,5,Duarte,8.53\n9,6,Com. Dom. En Estados Unidos,8.43\n10,7,La Vega,8.82\n\nQuestion: List each donator name and the amount of endowment in descending order of the amount of endowment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# sort dataframe by amount in descending order\ndf = df.sort_values(by='amount', ascending=False)\n\n# select only the donator_name and amount columns\ndf = df[['donator_name', 'amount']]\n\n# save the answer in a variable and print it\nanswer = df\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nendowment_id,School_id,donator_name,amount\n1,1,Monte Plata,9.51\n2,2,San José de Ocoa,9.83\n3,3,Distrito Nacional,9.55\n4,3,Valverde,9.73\n5,3,San Cristóbal,9.05\n6,4,Santo Domingo Este,8.99\n7,4,Santiago,8.85\n8,5,Duarte,8.53\n9,6,Com. Dom. En Estados Unidos,8.43\n10,7,La Vega,8.82\n\nQuestion: Show the names of all the donors except those whose donation amount less than 9.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfiltered_df = df[df['amount'] >= 9]\n\nanswer = filtered_df['donator_name'].values\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nendowment_id,School_id,donator_name,amount\n1,1,Monte Plata,9.51\n2,2,San José de Ocoa,9.83\n3,3,Distrito Nacional,9.55\n4,3,Valverde,9.73\n5,3,San Cristóbal,9.05\n6,4,Santo Domingo Este,8.99\n7,4,Santiago,8.85\n8,5,Duarte,8.53\n9,6,Com. Dom. En Estados Unidos,8.43\n10,7,La Vega,8.82\n\nQuestion: List the amount and donor name for the largest amount of donation.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_amount = df['amount'].max()\nmax_donation = df[df['amount'] == max_amount][['donator_name', 'amount']]\n\nprint(max_donation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,Year,Budgeted,total_budget_percent_budgeted,Invested,total_budget_percent_invested,Budget_invested_percent\n2,1999,4979,2.0,2134,2.0,42.9\n2,2000,3666,2.0,5840,2.0,159.3\n2,2001,6803,2.0,8335,2.0,122.5\n3,2002,6803,2.0,8335,2.0,146.9\n1,2003,119527,2.4,85249,2.2,71.3\n4,2004,74849,2.0,95542,2.2,127.6\n5,2005,61283,1.3,140102,2.7,228.8\n5,2006,113531,2.0,146102,2.7,228.6\n\nQuestion: How many budgets are above 3000 in year 2001 or before?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the year is 2001 or before and the budgeted amount is greater than 3000\nfiltered_df = df[(df['Year'] <= 2001) & (df['Budgeted'] > 3000)]\n\n# Count the number of rows in the filtered DataFrame\ncount = len(filtered_df)\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,Year,Budgeted,total_budget_percent_budgeted,Invested,total_budget_percent_invested,Budget_invested_percent\n2,1999,4979,2.0,2134,2.0,42.9\n2,2000,3666,2.0,5840,2.0,159.3\n2,2001,6803,2.0,8335,2.0,122.5\n3,2002,6803,2.0,8335,2.0,146.9\n1,2003,119527,2.4,85249,2.2,71.3\n4,2004,74849,2.0,95542,2.2,127.6\n5,2005,61283,1.3,140102,2.7,228.8\n5,2006,113531,2.0,146102,2.7,228.6\n\nQuestion: Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the year is 2001 or before and the budgeted amount is greater than 3000\nfiltered_df = df[(df['Year'] <= 2001) & (df['Budgeted'] > 3000)]\n\n# Count the number of rows in the filtered DataFrame\ncount = len(filtered_df)\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nendowment_id,School_id,donator_name,amount\n1,1,Monte Plata,9.51\n2,2,San José de Ocoa,9.83\n3,3,Distrito Nacional,9.55\n4,3,Valverde,9.73\n5,3,San Cristóbal,9.05\n6,4,Santo Domingo Este,8.99\n7,4,Santiago,8.85\n8,5,Duarte,8.53\n9,6,Com. Dom. En Estados Unidos,8.43\n10,7,La Vega,8.82\n\nQuestion: Show all donor names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndonor_names = df['donator_name'].tolist()\n\nprint(donor_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_id,Year,Budgeted,total_budget_percent_budgeted,Invested,total_budget_percent_invested,Budget_invested_percent\n2,1999,4979,2.0,2134,2.0,42.9\n2,2000,3666,2.0,5840,2.0,159.3\n2,2001,6803,2.0,8335,2.0,122.5\n3,2002,6803,2.0,8335,2.0,146.9\n1,2003,119527,2.4,85249,2.2,71.3\n4,2004,74849,2.0,95542,2.2,127.6\n5,2005,61283,1.3,140102,2.7,228.8\n5,2006,113531,2.0,146102,2.7,228.6\n\nQuestion: How many budget record has a budget amount smaller than the invested amount?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df[df['Budgeted'] < df['Invested']].shape[0]\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: How many buildings are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the number of buildings\nnum_of_buildings = len(df)\n\n# Printing the number of buildings\nprint(num_of_buildings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: Show the name, street address, and number of floors for all buildings ordered by the number of floors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf = df[['Name', 'Street_address', 'Floors']]\n\n# Order the DataFrame by the number of floors\ndf = df.sort_values(by='Floors')\n\n# Print the DataFrame\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: What is the name of the tallest building?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the index of the tallest building\nmax_height_index = df['Height_feet'].idxmax()\n\n# Get the name of the tallest building\ntallest_building = df.loc[max_height_index, 'Name']\n\n# Print the name of the tallest building\nprint(tallest_building)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: What are the average, maximum, and minimum number of floors for all buildings?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average, maximum, and minimum number of floors\navg_floors = df['Floors'].mean()\nmax_floors = df['Floors'].max()\nmin_floors = df['Floors'].min()\n\n# Save the answers in variables\nanswers = {\n    'average': avg_floors,\n    'maximum': max_floors,\n    'minimum': min_floors\n}\n\n# Print the answers\nprint(answers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: Show the number of buildings with a height above the average or a number of floors above the average.", "response": "import pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculating the average height and number of floors\naverage_height = df['Height_feet'].mean()\naverage_floors = df['Floors'].mean()\n\n# Filtering out the buildings with height above average and number of floors above average\nfiltered_df = df[(df['Height_feet'] > average_height) | (df['Floors'] > average_floors)]\n\n# Counting the number of buildings that meet the criteria\ncount = len(filtered_df)\n\n# Printing the answer\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbuilding_id,Name,Street_address,Years_as_tallest,Height_feet,Floors\n0,Citizens Bank Building,701 North Franklin Street,1913–1915,145,12\n1,Tampa City Hall,315 John F. Kennedy Boulevard,1915–1926,160,10\n2,Floridan Hotel,905 Franklin Street,1926–1966,204,17\n3,Franklin Exchange Building,655 North Franklin Street,1966–1972,280,22\n4,Park Tower,400 North Tampa Street,1972–1981,458,36\n5,One Tampa City Center,201 North Franklin Street,1981–1986,537,39\n6,Bank of America Tower,101 East Kennedy Boulevard,1986–1992,577,42\n7,100 North Tampa,100 North Tampa Street,1992–present,579,42\n\nQuestion: List the names of buildings with at least 200 feet of height and with at least 20 floors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, filter the DataFrame to include only buildings with a height of at least 200 feet\ndf_height = df[df['Height_feet'] >= 200]\n\n# Then, filter the DataFrame to include only buildings with at least 20 floors\ndf_floors = df_height[df_height['Floors'] >= 20]\n\n# Save the names of the buildings that meet both conditions in a variable\nbuildings = df_floors['Name'].tolist()\n\n# Print the variable\nprint(buildings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInstitution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id\n0,Ave Maria University,Ave Maria, Florida,1998.0,Private,1200,Gyrenes,The Sun,1\n1,Dakota State University,Madison, South Dakota,1881.0,Public,3102,Trojans,none,1\n2,Edward Waters College,Jacksonville, Florida,1866.0,Private,800,Tigers,Gulf Coast (GCAC),3\n3,Haskell Indian Nations University,Lawrence, Kansas,1884.0,Tribal,1000,Fighting Indians,MCAC,5\n4,Jamestown College,Jamestown, North Dakota,1883.0,Private,967,Jimmies,none,2\n5,Lindenwood University–Belleville,Belleville, Illinois,2003.0,Private,2600,Lynx,none,0\n6,Mayville State University,Mayville, North Dakota,1889.0,Public,825,Comets,none,0\n7,Menlo College,Atherton, California,1927.0,Private,650,Oaks,CalPac,4\n8,Point University,West Point, Georgia,1937.0,Private,1035,Skyhawks,AAC,7\n9,Valley City State University,Valley City, North Dakota,1890.0,Public,1340,Vikings,none,3\n\nQuestion: Show the names and locations of institutions that are founded after 1990 and have the type \"Private\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the data based on the conditions\nfiltered_data = df[(df['Founded'] > 1990) & (df['Type'] == 'Private')]\n\n# Get the names and locations of the institutions\nresult = filtered_data[['Institution', 'Location']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInstitution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id\n0,Ave Maria University,Ave Maria, Florida,1998.0,Private,1200,Gyrenes,The Sun,1\n1,Dakota State University,Madison, South Dakota,1881.0,Public,3102,Trojans,none,1\n2,Edward Waters College,Jacksonville, Florida,1866.0,Private,800,Tigers,Gulf Coast (GCAC),3\n3,Haskell Indian Nations University,Lawrence, Kansas,1884.0,Tribal,1000,Fighting Indians,MCAC,5\n4,Jamestown College,Jamestown, North Dakota,1883.0,Private,967,Jimmies,none,2\n5,Lindenwood University–Belleville,Belleville, Illinois,2003.0,Private,2600,Lynx,none,0\n6,Mayville State University,Mayville, North Dakota,1889.0,Public,825,Comets,none,0\n7,Menlo College,Atherton, California,1927.0,Private,650,Oaks,CalPac,4\n8,Point University,West Point, Georgia,1937.0,Private,1035,Skyhawks,AAC,7\n9,Valley City State University,Valley City, North Dakota,1890.0,Public,1340,Vikings,none,3\n\nQuestion: Show institution types, along with the number of institutions and total enrollment for each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrouped = df.groupby('Type')\nanswer = grouped.size().reset_index(name='Number of Institutions')\nanswer['Total Enrollment'] = grouped['Enrollment'].sum().values\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInstitution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id\n0,Ave Maria University,Ave Maria, Florida,1998.0,Private,1200,Gyrenes,The Sun,1\n1,Dakota State University,Madison, South Dakota,1881.0,Public,3102,Trojans,none,1\n2,Edward Waters College,Jacksonville, Florida,1866.0,Private,800,Tigers,Gulf Coast (GCAC),3\n3,Haskell Indian Nations University,Lawrence, Kansas,1884.0,Tribal,1000,Fighting Indians,MCAC,5\n4,Jamestown College,Jamestown, North Dakota,1883.0,Private,967,Jimmies,none,2\n5,Lindenwood University–Belleville,Belleville, Illinois,2003.0,Private,2600,Lynx,none,0\n6,Mayville State University,Mayville, North Dakota,1889.0,Public,825,Comets,none,0\n7,Menlo College,Atherton, California,1927.0,Private,650,Oaks,CalPac,4\n8,Point University,West Point, Georgia,1937.0,Private,1035,Skyhawks,AAC,7\n9,Valley City State University,Valley City, North Dakota,1890.0,Public,1340,Vikings,none,3\n\nQuestion: Show the institution type with the largest number of institutions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each unique institution type\ntype_counts = df['Type'].value_counts()\n\n# Find the institution type with the maximum count\nmax_type = type_counts.idxmax()\n\nprint(max_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInstitution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id\n0,Ave Maria University,Ave Maria, Florida,1998.0,Private,1200,Gyrenes,The Sun,1\n1,Dakota State University,Madison, South Dakota,1881.0,Public,3102,Trojans,none,1\n2,Edward Waters College,Jacksonville, Florida,1866.0,Private,800,Tigers,Gulf Coast (GCAC),3\n3,Haskell Indian Nations University,Lawrence, Kansas,1884.0,Tribal,1000,Fighting Indians,MCAC,5\n4,Jamestown College,Jamestown, North Dakota,1883.0,Private,967,Jimmies,none,2\n5,Lindenwood University–Belleville,Belleville, Illinois,2003.0,Private,2600,Lynx,none,0\n6,Mayville State University,Mayville, North Dakota,1889.0,Public,825,Comets,none,0\n7,Menlo College,Atherton, California,1927.0,Private,650,Oaks,CalPac,4\n8,Point University,West Point, Georgia,1937.0,Private,1035,Skyhawks,AAC,7\n9,Valley City State University,Valley City, North Dakota,1890.0,Public,1340,Vikings,none,3\n\nQuestion: Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['Founded'] > 1990) & (df['Enrollment'] >= 1000)]\n\n# Save the answer in a variable\nanswer = filtered_df['Type']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInstitution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id\n0,Ave Maria University,Ave Maria, Florida,1998.0,Private,1200,Gyrenes,The Sun,1\n1,Dakota State University,Madison, South Dakota,1881.0,Public,3102,Trojans,none,1\n2,Edward Waters College,Jacksonville, Florida,1866.0,Private,800,Tigers,Gulf Coast (GCAC),3\n3,Haskell Indian Nations University,Lawrence, Kansas,1884.0,Tribal,1000,Fighting Indians,MCAC,5\n4,Jamestown College,Jamestown, North Dakota,1883.0,Private,967,Jimmies,none,2\n5,Lindenwood University–Belleville,Belleville, Illinois,2003.0,Private,2600,Lynx,none,0\n6,Mayville State University,Mayville, North Dakota,1889.0,Public,825,Comets,none,0\n7,Menlo College,Atherton, California,1927.0,Private,650,Oaks,CalPac,4\n8,Point University,West Point, Georgia,1937.0,Private,1035,Skyhawks,AAC,7\n9,Valley City State University,Valley City, North Dakota,1890.0,Public,1340,Vikings,none,3\n\nQuestion: Show all the distinct institution types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_types = df['Type'].unique()\n\nprint(distinct_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show all the locations where no cinema has capacity over 800.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where capacity is greater than 800\nfiltered_df = df[df['Capacity'] > 800]\n\n# Get the unique locations where no cinema has capacity over 800\nlocations = set(df['Location']) - set(filtered_df['Location'])\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show all the locations where some cinemas were opened in both year 2010 and year 2011.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for years 2010 and 2011\ndf_2010 = df[df['Openning_year'] == 2010]\ndf_2011 = df[df['Openning_year'] == 2011]\n\n# Find the common locations in both years\ncommon_locations = set(df_2010['Location']).intersection(df_2011['Location'])\n\n# Print the common locations\nfor location in common_locations:\n    print(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: How many cinema do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncinema_count = df['Cinema_ID'].count()\nprint(cinema_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Count the number of cinemas.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncinema_count = df['Cinema_ID'].count()\nprint(cinema_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show name, opening year, and capacity for each cinema.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the columns to be displayed\ndf_selected = df[['Name', 'Openning_year', 'Capacity']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show the cinema name and location for cinemas with capacity above average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average capacity\naverage_capacity = df['Capacity'].mean()\n\n# Filter cinemas with capacity above average\nfiltered_df = df[df['Capacity'] > average_capacity]\n\n# Select the desired columns\nresult = filtered_df[['Name', 'Location']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: What are all the locations with a cinema?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique() function to get the distinct locations\ndistinct_locations = df['Location'].unique()\n\n# Print the distinct locations\nprint(distinct_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Find the distinct locations that has a cinema.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique() function to get the distinct locations\ndistinct_locations = df['Location'].unique()\n\n# Print the distinct locations\nprint(distinct_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show all the cinema names and opening years in descending order of opening year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Openning_year', ascending=False)\nanswer = df[['Name', 'Openning_year']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: What are the name and location of the cinema with the largest capacity?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row with the maximum capacity\nmax_capacity = df[df['Capacity'] == df['Capacity'].max()]\n\n# Get the name and location of the cinema with the largest capacity\nname_location = max_capacity[['Name', 'Location']]\n\n# Print the name and location\nprint(name_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to include only cinemas opened in 2011 or later\nfiltered_df = df[df['Openning_year'] >= 2011]\n\n# Calculate the average capacity\naverage_capacity = filtered_df['Capacity'].mean()\n\n# Calculate the minimum capacity\nmin_capacity = filtered_df['Capacity'].min()\n\n# Calculate the maximum capacity\nmax_capacity = filtered_df['Capacity'].max()\n\n# Save the answers in a variable\nanswer = {\n    'Average capacity': average_capacity,\n    'Minimum capacity': min_capacity,\n    'Maximum capacity': max_capacity\n}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show each location and the number of cinemas there.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by Location and count the number of cinemas\nlocation_count = df.groupby('Location').size()\n\n# Print the result\nprint(location_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: What is the location with the most cinemas opened in year 2010 or later?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only cinemas opened in year 2010 or later\ndf_2010_later = df[df['Openning_year'] >= 2010]\n\n# Find the location with the most cinemas opened in year 2010 or later\nlocation_max_cinemas = df_2010_later['Location'].value_counts().idxmax()\n\nprint(location_max_cinemas)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Show all the locations with at least two cinemas with capacity above 300.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Capacity is greater than 300\ndf = df[df['Capacity'] > 300]\n\n# Group the DataFrame by Location and count the number of cinemas in each location\nlocation_counts = df['Location'].value_counts()\n\n# Filter the Series to only include locations with 2 or more cinemas\nlocations_with_multiple_cinemas = location_counts[location_counts >= 2]\n\n# Save the answer in a variable\nanswer = locations_with_multiple_cinemas.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Which locations have 2 or more cinemas with capacity over 300?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Capacity is greater than 300\ndf = df[df['Capacity'] > 300]\n\n# Group the DataFrame by Location and count the number of cinemas in each location\nlocation_counts = df['Location'].value_counts()\n\n# Filter the Series to only include locations with 2 or more cinemas\nlocations_with_multiple_cinemas = location_counts[location_counts >= 2]\n\n# Save the answer in a variable\nanswer = locations_with_multiple_cinemas.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: Show the title and director for all films.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use pandas dataframe's slicing to get only Title and Directed_by columns\ndf_title_director = df[['Title', 'Directed_by']]\n\n# Save the answer in a variable\nanswer = df_title_director\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: What are the title and director of each film?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use pandas dataframe's slicing to get only Title and Directed_by columns\ndf_title_director = df[['Title', 'Directed_by']]\n\n# Save the answer in a variable\nanswer = df_title_director\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: Show all directors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all directors\ndirectors = df['Directed_by'].unique()\n\nprint(directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: Who are all the directors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all directors\ndirectors = df['Directed_by'].unique()\n\nprint(directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: List all directors along with the number of films directed by each director.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndirectors = df['Directed_by'].value_counts()\n\nprint(directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: Find the locations that have more than one movie theater with capacity above 300.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select locations with more than one movie theater with capacity above 300\nlocations = df[df['Capacity'] > 300]['Location'].value_counts()\nlocations = locations[locations > 1].index.tolist()\n\n# Print the locations\nprint(\"Locations with more than one movie theater with capacity above 300: \", locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCinema_ID,Name,Openning_year,Capacity,Location\n1,Codling,2010,1100,County Wicklow\n2,Carrowleagh,2012,368,County Cork\n3,Dublin Array,2015,364,County Dublin\n4,Glenmore,2009,305,County Clare\n5,Glenough,2010,325,County Tipperary\n6,Gortahile,2010,208,County Laois\n7,Grouse Lodge,2011,203,County Tipperary\n8,Moneypoint,2011,225,County Clare\n9,Mount Callan,2011,908,County Clare\n10,Oriel,2013,330,County Louth\n\nQuestion: In which locations are there more than one movie theater with capacity above 300?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select locations with more than one movie theater with capacity above 300\nlocations = df[df['Capacity'] > 300]['Location'].value_counts()\nlocations = locations[locations > 1].index.tolist()\n\n# Print the locations\nprint(\"Locations with more than one movie theater with capacity above 300: \", locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: How many films have the word 'Dummy' in their titles?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the Title contains 'Dummy'\nfiltered_df = df[df['Title'].str.contains('Dummy')]\n\n# Count the number of films\nnum_of_films = len(filtered_df)\n\n# Print the number of films\nprint(num_of_films)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code\n1,26,1,The Case of the Mystery Weekend,Bill Schreiner,September 21–25, 1992,50021–50025\n2,27,2,The Case of the Smart Dummy,Bill Schreiner,September 28–October 2, 1992,50231–50235\n3,28,3,The Case: Off the Record,Bill Schreiner,October 5–9, 1992,50011–50015\n4,29,4,The Case of the Bermuda Triangle,Jesus Salvador Treviño,October 12–16, 1992,50251–50255\n5,30,5,The Case of the Piggy Banker,Bill Schreiner,October 19–23, 1992,50241–50245\n\nQuestion: Count the number of films whose title contains the word 'Dummy'.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the Title contains 'Dummy'\nfiltered_df = df[df['Title'].str.contains('Dummy')]\n\n# Count the number of films\nnum_of_films = len(filtered_df)\n\n# Print the number of films\nprint(num_of_films)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,booking_id,customer_id,payment_type_code,amount_paid_in_full_yn,payment_date,amount_due,amount_paid\n1,6,15,Check,1,2018-03-09 16:28:00,369.52,206.27\n2,9,12,Cash,1,2018-03-03 13:39:44,278.6,666.45\n3,5,7,Credit Card,0,2018-03-22 15:00:23,840.06,135.7\n4,6,1,Check,0,2018-03-22 02:28:11,678.29,668.4\n5,8,11,Cash,1,2018-03-23 20:36:04,830.25,305.65\n6,15,8,Check,0,2018-03-19 12:39:31,410.1,175.54\n7,1,8,Cash,1,2018-03-02 06:25:45,482.26,602.8\n8,9,14,Cash,1,2018-03-12 23:00:55,653.18,505.23\n9,3,7,Direct Debit,0,2018-03-12 23:23:56,686.85,321.58\n10,13,10,Credit Card,1,2018-03-23 13:24:33,486.75,681.21\n\nQuestion: What is the maximum total amount paid by a customer? List the customer id and amount.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by customer_id and sum the amount_paid\ngrouped_data = df.groupby('customer_id')['amount_paid'].sum().reset_index()\n\n# Get the customer id with the maximum total amount paid\nmax_paid_customer = grouped_data[grouped_data['amount_paid'] == grouped_data['amount_paid'].max()]\n\n# Print the customer id and the amount\nprint(max_paid_customer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbooking_id,product_id,returned_yn,returned_late_yn,booked_count,booked_amount\n4,1,1,1,5,309.73\n14,1,1,0,3,102.76\n13,3,1,0,4,151.68\n11,1,1,1,1,344.38\n15,3,1,0,2,236.13\n10,4,1,0,6,123.43\n14,5,1,1,6,351.38\n11,5,1,1,3,146.01\n3,5,1,1,3,189.16\n15,1,1,0,1,398.68\n\nQuestion: What is the id of the product that is booked for 3 times?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data where booked_count equals 3\nfiltered_df = df[df['booked_count'] == 3]\n\n# Find the unique product ids in the filtered data\nproduct_ids = filtered_df['product_id'].unique()\n\n# Print the product ids\nfor id in product_ids:\n    print(id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,daily_hire_cost,product_name,product_description\n1,Cutlery,26.15,Book collection C,Anna Karenina\n2,Cutlery,15.62,Book collection B,War and Peace\n3,Cutlery,39.73,Book collection A,The Great Gatsby\n4,Din_Plates,18.5,DVD collection A,Twilight\n5,Cutlery,39.58,DVD collection B,One Hundred Years of Solitude\n\nQuestion: How many different product types are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of different product types\nnum_product_types = len(df['product_type_code'].unique())\n\nprint(num_product_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,coupon_id,good_or_bad_customer,first_name,last_name,gender_mf,date_became_customer,date_last_hire\n1,12,good,Geovany,Homenick,0,2017-10-20 12:13:17,2018-02-27 18:55:26\n2,14,good,Jailyn,Gerlach,0,2015-04-06 21:18:37,2018-01-30 04:47:13\n3,7,good,Rosalee,Kessler,0,2016-02-03 16:58:11,2018-03-04 21:30:23\n4,12,bad,Reba,Jacobs,1,2016-06-17 14:11:50,2018-02-19 06:04:01\n5,10,good,Ericka,Greenholt,0,2016-08-11 01:50:37,2018-02-25 04:40:15\n6,14,bad,Bridget,Ankunding,1,2015-04-24 02:38:16,2018-02-10 19:44:08\n7,12,good,Marilou,Strosin,1,2015-12-16 08:05:53,2018-02-01 16:48:30\n8,6,good,Elinore,Crona,0,2017-07-27 08:04:22,2018-03-04 08:59:40\n9,7,good,German,Little,1,2017-02-28 14:40:25,2018-03-13 21:20:05\n10,1,bad,Layne,Terry,1,2015-05-05 20:29:01,2018-02-04 08:56:55\n\nQuestion: What are the first name, last name, and gender of all the good customers? Order by their last name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for good customers\ndf_good_customers = df[df['good_or_bad_customer'] == 'good']\n\n# Select the columns we are interested in\ndf_final = df_good_customers[['first_name', 'last_name', 'gender_mf']]\n\n# Order by last name\ndf_final.sort_values('last_name', inplace=True)\n\n# Print the final dataframe\nprint(df_final)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,booking_id,customer_id,payment_type_code,amount_paid_in_full_yn,payment_date,amount_due,amount_paid\n1,6,15,Check,1,2018-03-09 16:28:00,369.52,206.27\n2,9,12,Cash,1,2018-03-03 13:39:44,278.6,666.45\n3,5,7,Credit Card,0,2018-03-22 15:00:23,840.06,135.7\n4,6,1,Check,0,2018-03-22 02:28:11,678.29,668.4\n5,8,11,Cash,1,2018-03-23 20:36:04,830.25,305.65\n6,15,8,Check,0,2018-03-19 12:39:31,410.1,175.54\n7,1,8,Cash,1,2018-03-02 06:25:45,482.26,602.8\n8,9,14,Cash,1,2018-03-12 23:00:55,653.18,505.23\n9,3,7,Direct Debit,0,2018-03-12 23:23:56,686.85,321.58\n10,13,10,Credit Card,1,2018-03-23 13:24:33,486.75,681.21\n\nQuestion: What is the average amount due for all the payments?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average amount due\naverage_amount_due = df['amount_due'].mean()\n\n# Print the average amount due\nprint(average_amount_due)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbooking_id,product_id,returned_yn,returned_late_yn,booked_count,booked_amount\n4,1,1,1,5,309.73\n14,1,1,0,3,102.76\n13,3,1,0,4,151.68\n11,1,1,1,1,344.38\n15,3,1,0,2,236.13\n10,4,1,0,6,123.43\n14,5,1,1,6,351.38\n11,5,1,1,3,146.01\n3,5,1,1,3,189.16\n15,1,1,0,1,398.68\n\nQuestion: What are the maximum, minimum, and average booked count for the products booked?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Compute the statistics\nmax_booked_count = df['booked_count'].max()\nmin_booked_count = df['booked_count'].min()\navg_booked_count = df['booked_count'].mean()\n\n# Save the answer in a variable\nanswer = {'max_booked_count': max_booked_count,\n          'min_booked_count': min_booked_count,\n          'avg_booked_count': avg_booked_count}\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,booking_id,customer_id,payment_type_code,amount_paid_in_full_yn,payment_date,amount_due,amount_paid\n1,6,15,Check,1,2018-03-09 16:28:00,369.52,206.27\n2,9,12,Cash,1,2018-03-03 13:39:44,278.6,666.45\n3,5,7,Credit Card,0,2018-03-22 15:00:23,840.06,135.7\n4,6,1,Check,0,2018-03-22 02:28:11,678.29,668.4\n5,8,11,Cash,1,2018-03-23 20:36:04,830.25,305.65\n6,15,8,Check,0,2018-03-19 12:39:31,410.1,175.54\n7,1,8,Cash,1,2018-03-02 06:25:45,482.26,602.8\n8,9,14,Cash,1,2018-03-12 23:00:55,653.18,505.23\n9,3,7,Direct Debit,0,2018-03-12 23:23:56,686.85,321.58\n10,13,10,Credit Card,1,2018-03-23 13:24:33,486.75,681.21\n\nQuestion: What are all the distinct payment types?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all distinct payment types\npayment_types = df['payment_type_code'].unique()\n\nprint(payment_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,daily_hire_cost,product_name,product_description\n1,Cutlery,26.15,Book collection C,Anna Karenina\n2,Cutlery,15.62,Book collection B,War and Peace\n3,Cutlery,39.73,Book collection A,The Great Gatsby\n4,Din_Plates,18.5,DVD collection A,Twilight\n5,Cutlery,39.58,DVD collection B,One Hundred Years of Solitude\n\nQuestion: What are the daily hire costs for the products with substring 'Book' in its name?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where the product name contains 'Book'\nbooks_df = df[df['product_name'].str.contains('Book')]\n\n# select the 'daily_hire_cost' column from the filtered dataframe\ndaily_hire_costs = books_df['daily_hire_cost']\n\n# print the daily hire costs for the books\nprint(daily_hire_costs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,booking_id,customer_id,payment_type_code,amount_paid_in_full_yn,payment_date,amount_due,amount_paid\n1,6,15,Check,1,2018-03-09 16:28:00,369.52,206.27\n2,9,12,Cash,1,2018-03-03 13:39:44,278.6,666.45\n3,5,7,Credit Card,0,2018-03-22 15:00:23,840.06,135.7\n4,6,1,Check,0,2018-03-22 02:28:11,678.29,668.4\n5,8,11,Cash,1,2018-03-23 20:36:04,830.25,305.65\n6,15,8,Check,0,2018-03-19 12:39:31,410.1,175.54\n7,1,8,Cash,1,2018-03-02 06:25:45,482.26,602.8\n8,9,14,Cash,1,2018-03-12 23:00:55,653.18,505.23\n9,3,7,Direct Debit,0,2018-03-12 23:23:56,686.85,321.58\n10,13,10,Credit Card,1,2018-03-23 13:24:33,486.75,681.21\n\nQuestion: What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['amount_paid'] > 300) | (df['payment_type_code'] == 'Check')]\n\n# Save the answer in a variable\nanswer = filtered_df['payment_date']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,daily_hire_cost,product_name,product_description\n1,Cutlery,26.15,Book collection C,Anna Karenina\n2,Cutlery,15.62,Book collection B,War and Peace\n3,Cutlery,39.73,Book collection A,The Great Gatsby\n4,Din_Plates,18.5,DVD collection A,Twilight\n5,Cutlery,39.58,DVD collection B,One Hundred Years of Solitude\n\nQuestion: What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe\nfiltered_df = df[(df['product_type_code'] == 'Cutlery') & (df['daily_hire_cost'] < 20)]\n\n# Select product_name and product_description columns\nanswer = filtered_df[['product_name', 'product_description']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: How many phones are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of phones\nnum_phones = df.shape[0]\n\nprint(num_phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: List the names of phones in ascending order of price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Price' and then by 'Name' in ascending order\ndf_sorted = df.sort_values(['Price', 'Name'], ascending=[True, True])\n\n# Get the names of the phones in ascending order of price\nphones = df_sorted['Name'].tolist()\n\n# Print the names of the phones\nprint(phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: What are the memories and carriers of phones?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to get only the 'Memory_in_G' and 'Carrier' columns\nanswer = df[['Memory_in_G', 'Carrier']]\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: List the distinct carriers of phones with memories bigger than 32.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to include only phones with memories bigger than 32\ndf_big_memory = df[df['Memory_in_G'] > 32]\n\n# Get the distinct carriers\ndistinct_carriers = df_big_memory['Carrier'].unique()\n\n# Save the answer in a variable\nanswer = distinct_carriers.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: Show the names of phones with carrier either \"Sprint\" or \"TMobile\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter phones with carrier either \"Sprint\" or \"TMobile\"\nfiltered_phones = df.loc[(df['Carrier'] == 'Sprint') | (df['Carrier'] == 'TMobile')]\n\n# Get the names of the filtered phones\nphone_names = filtered_phones['Name']\n\n# Print the phone names\nprint(phone_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: What is the carrier of the most expensive phone?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Price' in descending order\ndf_sorted = df.sort_values('Price', ascending=False)\n\n# The carrier of the most expensive phone is the first row in the sorted DataFrame\nmost_expensive_carrier = df_sorted.iloc[0]['Carrier']\n\nprint(most_expensive_carrier)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: Show different carriers of phones together with the number of phones with each carrier.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncarrier_counts = df['Carrier'].value_counts()\n\nprint(carrier_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: Show the most frequently used carrier of the phones.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_frequent_carrier = df['Carrier'].value_counts().index[0]\n\nprint(most_frequent_carrier)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nName,Phone_ID,Memory_in_G,Carrier,Price\nIPhone 5s,1,32,Sprint,320.0\nIPhone 6,5,128,Sprint,480.0\nIPhone 6s,2,128,TMobile,699.0\nIPhone 7,4,16,TMobile,899.0\nIPhone X,3,64,TMobile,1000.0\n\nQuestion: Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include phones with memory < 32 or > 64\ndf_filtered = df[(df['Memory_in_G'] < 32) | (df['Memory_in_G'] > 64)]\n\n# Find the carriers that have both phones with memory < 32 and > 64\ncarriers = df_filtered['Carrier'].unique().tolist()\ncarriers_with_both_sizes = []\n\nfor carrier in carriers:\n    carrier_df = df_filtered[df_filtered['Carrier'] == carrier]\n    if (carrier_df['Memory_in_G'].min() < 32) and (carrier_df['Memory_in_G'].max() > 64):\n        carriers_with_both_sizes.append(carrier)\n\n# Print the carriers that have both phones with memory < 32 and > 64\nprint(carriers_with_both_sizes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: List the company name and rank for all companies in the decreasing order of their sales.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Sales_billion', ascending=False)\nanswer = df[['Company', 'Rank']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What is the name and rank of every company ordered by descending number of sales?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Sales_billion', ascending=False)\nanswer = df[['Company', 'Rank']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show the company name and the main industry for all companies whose headquarters are not from USA.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the companies not from USA\ndf_not_usa = df[df['Headquarters'] != 'USA']\n\n# Extract the company name and main industry columns\nanswer = df_not_usa[['Company', 'Main_Industry']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What are the companies and main industries of all companies that are not headquartered in the United States?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the companies not from USA\ndf_not_usa = df[df['Headquarters'] != 'USA']\n\n# Extract the company name and main industry columns\nanswer = df_not_usa[['Company', 'Main_Industry']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show all company names and headquarters in the descending order of market value.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Market_Value' in descending order\ndf = df.sort_values('Market_Value', ascending=False)\n\n# Select 'Company' and 'Headquarters' columns\nanswer = df[['Company', 'Headquarters']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What are the names and headquarters of all companies ordered by descending market value?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Market_Value' in descending order\ndf = df.sort_values('Market_Value', ascending=False)\n\n# Select 'Company' and 'Headquarters' columns\nanswer = df[['Company', 'Headquarters']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show minimum, maximum, and average market value for all companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the minimum, maximum, and average market value\nmin_market_value = df['Market_Value'].min()\nmax_market_value = df['Market_Value'].max()\navg_market_value = df['Market_Value'].mean()\n\n# Save the answers in a dictionary\nanswer_dict = {\"Minimum Market Value\": min_market_value,\n               \"Maximum Market Value\": max_market_value,\n               \"Average Market Value\": avg_market_value}\n\n# Print the dictionary\nprint(answer_dict)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What is the minimum, maximum, and average market value for every company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the minimum, maximum, and average market value\nmin_market_value = df['Market_Value'].min()\nmax_market_value = df['Market_Value'].max()\navg_market_value = df['Market_Value'].mean()\n\n# Save the answers in a dictionary\nanswer_dict = {\"Minimum Market Value\": min_market_value,\n               \"Maximum Market Value\": max_market_value,\n               \"Average Market Value\": avg_market_value}\n\n# Print the dictionary\nprint(answer_dict)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show all main industry for all companies.", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Main_Industry' column and print all unique values\nmain_industries = df['Main_Industry'].unique()\n\nprint(main_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What are the different main industries for all companies?", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Main_Industry' column and print all unique values\nmain_industries = df['Main_Industry'].unique()\n\nprint(main_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: List all headquarters and the number of companies in each headquarter.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nheadquarters_count = df['Headquarters'].value_counts()\n\nprint(headquarters_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: For each headquarter, what are the headquarter and how many companies are centered there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nheadquarters_count = df['Headquarters'].value_counts()\n\nprint(headquarters_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: List the main industry with highest total market value and its number of companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Main_Industry' and get the sum of 'Market_Value' for each industry\ntotal_market_value_per_industry = df.groupby('Main_Industry')['Market_Value'].sum()\n\n# Get the maximum total market value\nmax_total_market_value = total_market_value_per_industry.max()\n\n# Get the industries with the maximum total market value\nindustries_with_max_total_market_value = total_market_value_per_industry[total_market_value_per_industry == max_total_market_value].index.tolist()\n\n# Get the total number of companies for each industry with the maximum total market value\ncompanies_per_industry = df[df['Main_Industry'].isin(industries_with_max_total_market_value)].groupby('Main_Industry')['Company_ID'].count()\n\nprint(companies_per_industry)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: For each main industry, what is the total number of companies for the industry with the highest total market value?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Main_Industry' and get the sum of 'Market_Value' for each industry\ntotal_market_value_per_industry = df.groupby('Main_Industry')['Market_Value'].sum()\n\n# Get the maximum total market value\nmax_total_market_value = total_market_value_per_industry.max()\n\n# Get the industries with the maximum total market value\nindustries_with_max_total_market_value = total_market_value_per_industry[total_market_value_per_industry == max_total_market_value].index.tolist()\n\n# Get the total number of companies for each industry with the maximum total market value\ncompanies_per_industry = df[df['Main_Industry'].isin(industries_with_max_total_market_value)].groupby('Main_Industry')['Company_ID'].count()\n\nprint(companies_per_industry)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: Show gas station id, location, and manager_name for all gas stations ordered by open year.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Open_Year'\ndf_sorted = df.sort_values('Open_Year')\n\n# Select the desired columns\ndf_selected = df_sorted[['Station_ID', 'Location', 'Manager_Name']]\n\n# Save the answer in a variable\nanswer = df_selected\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Open_Year'\ndf_sorted = df.sort_values('Open_Year')\n\n# Select the desired columns\ndf_selected = df_sorted[['Station_ID', 'Location', 'Manager_Name']]\n\n# Save the answer in a variable\nanswer = df_selected\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: How many gas station are opened between 2000 and 2005?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where Open_Year is between 2000 and 2005\nfiltered_df = df[(df['Open_Year'] >= 2000) & (df['Open_Year'] <= 2005)]\n\n# Save the number of stations opened between 2000 and 2005 in a variable\nnum_stations = len(filtered_df)\n\n# Print the number of stations opened between 2000 and 2005\nprint(num_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: What is the total number of gas stations that opened between 2000 and 2005?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where Open_Year is between 2000 and 2005\nfiltered_df = df[(df['Open_Year'] >= 2000) & (df['Open_Year'] <= 2005)]\n\n# Save the number of stations opened between 2000 and 2005 in a variable\nnum_stations = len(filtered_df)\n\n# Print the number of stations opened between 2000 and 2005\nprint(num_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: Show all locations and the number of gas stations in each location ordered by the count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by location and count the number of stations in each location\nlocations = df.groupby('Location')['Station_ID'].count().reset_index(name='Count')\n\n# Sort the locations by the count\nsorted_locations = locations.sort_values(by='Count', ascending=False)\n\n# Print the sorted locations\nprint(sorted_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: For each location, how many gas stations are there in order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by location and count the number of stations in each location\nlocations = df.groupby('Location')['Station_ID'].count().reset_index(name='Count')\n\n# Sort the locations by the count\nsorted_locations = locations.sort_values(by='Count', ascending=False)\n\n# Print the sorted locations\nprint(sorted_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show all headquarters with both a company in banking industry and a company in Oil and gas.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter companies in the banking industry\ndf_banking = df[df['Main_Industry'] == 'Banking']\n\n# Filter companies in the 'oil and gas' industry\ndf_oil_and_gas = df[df['Main_Industry'] == 'Oil and gas']\n\n# Find the headquarters that are present in both filtered dataframes\nresult = df_banking[df_banking['Headquarters'].isin(df_oil_and_gas['Headquarters'])]['Headquarters']\n\n# Save the answer in a variable\nanswer = result.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What are the headquarters that have both a company in the banking and 'oil and gas' industries?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter companies in the banking industry\ndf_banking = df[df['Main_Industry'] == 'Banking']\n\n# Filter companies in the 'oil and gas' industry\ndf_oil_and_gas = df[df['Main_Industry'] == 'Oil and gas']\n\n# Find the headquarters that are present in both filtered dataframes\nresult = df_banking[df_banking['Headquarters'].isin(df_oil_and_gas['Headquarters'])]['Headquarters']\n\n# Save the answer in a variable\nanswer = result.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: Show all headquarters without a company in banking industry.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter out companies in the banking industry\nbanking_companies = df[df['Main_Industry'] == 'Banking']['Headquarters']\n\n# Get headquarters of companies not in banking industry\nheadquarters_not_banking = df[~df['Headquarters'].isin(banking_companies)]['Headquarters']\n\n# Save the answer in a variable and print\nanswer = headquarters_not_banking.values\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What are the headquarters without companies that are in the banking industry?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter out companies in the banking industry\nbanking_companies = df[df['Main_Industry'] == 'Banking']['Headquarters']\n\n# Get headquarters of companies not in banking industry\nheadquarters_not_banking = df[~df['Headquarters'].isin(banking_companies)]['Headquarters']\n\n# Save the answer in a variable and print\nanswer = headquarters_not_banking.values\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: Show the manager name with most number of gas stations opened after 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include records after the year 2000\ndf_after_2000 = df[df['Open_Year'] > 2000]\n\n# Get the manager name with the most number of gas stations opened\nmost_stations_manager = df_after_2000['Manager_Name'].value_counts().idxmax()\n\nprint(most_stations_manager)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: What is the name of the manager with the most gas stations that opened after 2000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include records after the year 2000\ndf_after_2000 = df[df['Open_Year'] > 2000]\n\n# Get the manager name with the most number of gas stations opened\nmost_stations_manager = df_after_2000['Manager_Name'].value_counts().idxmax()\n\nprint(most_stations_manager)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: order all gas station locations by the opening year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by 'Open_Year'\ndf_sorted = df.sort_values('Open_Year')\n\n# Get the 'Location' column\nlocations = df_sorted['Location']\n\n# Print the 'Location' column\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name\n1,1998,Herne Hill,BrianWingrave,Russell Denman,Clive Burr\n2,1999,Channel Hill,SimonMarloe,Russell Brown,Rob Jefferies \n3,2000,Reading North,Simon Cope Derek Marloe,James Colin ,Dave Edwards Roger \n4,2002,Herne St,Colin Denman,Martin Garnham,Ray Hughes\n5,2003,Reading,Colin Denman,Martin Freeman,Andrew Russell\n6,2004,Herne Ave,Tom Whit,Simon Gaywood,Tony Gibb\n7,2005,Hennry Hill,Bryan Taylor,James Holland-Leader,Simon Gaywood\n8,2006,Jane Ave,BryanDenman,James Holland-Leader,Simon Gaywood\n9,2007,Maindy Hill,Tony Bristow,JameMarloe,Courtney Rowe\n10,2008,Maindy Ave,Luke Rowe,TonyBristow,Chris Pyatt\n\nQuestion: What are the locations of all the gas stations ordered by opening year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by 'Open_Year'\ndf_sorted = df.sort_values('Open_Year')\n\n# Get the 'Location' column\nlocations = df_sorted['Location']\n\n# Print the 'Location' column\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter dataframe to only include banking companies\ndf_banking = df[df['Main_Industry'] == 'Banking']\n\n# sort dataframe by sales and profits\ndf_sorted = df_banking.sort_values(['Sales_billion', 'Profits_billion'], ascending=[False, False])\n\n# select only relevant columns\ndf_final = df_sorted[['Rank', 'Company', 'Market_Value']]\n\n# print final dataframe\nprint(df_final)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value\n1,1,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2,3,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n3,4,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n4,5,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n5,6,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n6,7,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n7,8,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n8,9,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n9,10,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n10,11,BP,UK,Oil and gas,375.5,25.7,292.5,147.4\n\nQuestion: What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter dataframe to only include banking companies\ndf_banking = df[df['Main_Industry'] == 'Banking']\n\n# sort dataframe by sales and profits\ndf_sorted = df_banking.sort_values(['Sales_billion', 'Profits_billion'], ascending=[False, False])\n\n# select only relevant columns\ndf_final = df_sorted[['Rank', 'Company', 'Market_Value']]\n\n# print final dataframe\nprint(df_final)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_ID,Region_name,Date,Label,Format,Catalogue\n1,United Kingdom,1 July 2002,Parlophone,CD,540 3622\n2,United Kingdom,1 July 2002,Parlophone,2× LP,539 9821\n3,Japan,3 July 2002,Toshiba-EMI,CD,TOCP-66045\n4,United States,16 July 2002,Astralwerks,CD,ASW 40362\n5,United States,16 July 2002,Astralwerks,CD digipak,ASW 40522\n\nQuestion: How many regions do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nregion_count = df['Region_ID'].nunique()\n\nprint(region_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_ID,Region_name,Date,Label,Format,Catalogue\n1,United Kingdom,1 July 2002,Parlophone,CD,540 3622\n2,United Kingdom,1 July 2002,Parlophone,2× LP,539 9821\n3,Japan,3 July 2002,Toshiba-EMI,CD,TOCP-66045\n4,United States,16 July 2002,Astralwerks,CD,ASW 40362\n5,United States,16 July 2002,Astralwerks,CD digipak,ASW 40522\n\nQuestion: Count the number of regions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nregion_count = df['Region_ID'].nunique()\n\nprint(region_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_ID,Region_name,Date,Label,Format,Catalogue\n1,United Kingdom,1 July 2002,Parlophone,CD,540 3622\n2,United Kingdom,1 July 2002,Parlophone,2× LP,539 9821\n3,Japan,3 July 2002,Toshiba-EMI,CD,TOCP-66045\n4,United States,16 July 2002,Astralwerks,CD,ASW 40362\n5,United States,16 July 2002,Astralwerks,CD digipak,ASW 40522\n\nQuestion: Show all distinct region names ordered by their labels.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include the required columns\ndf = df[['Region_name', 'Label']]\n\n# Get the unique region names ordered by labels\nregions_ordered_by_labels = df.sort_values('Label')['Region_name'].unique()\n\n# Save the answer in a variable\nanswer = regions_ordered_by_labels\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_ID,Region_name,Date,Label,Format,Catalogue\n1,United Kingdom,1 July 2002,Parlophone,CD,540 3622\n2,United Kingdom,1 July 2002,Parlophone,2× LP,539 9821\n3,Japan,3 July 2002,Toshiba-EMI,CD,TOCP-66045\n4,United States,16 July 2002,Astralwerks,CD,ASW 40362\n5,United States,16 July 2002,Astralwerks,CD digipak,ASW 40522\n\nQuestion: What are the different region names, ordered by labels?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include the required columns\ndf = df[['Region_name', 'Label']]\n\n# Get the unique region names ordered by labels\nregions_ordered_by_labels = df.sort_values('Label')['Region_name'].unique()\n\n# Save the answer in a variable\nanswer = regions_ordered_by_labels\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: How many parties do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_parties = df['Party_name'].nunique()\n\nprint(num_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Count the number of different parties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_parties = df['Party_name'].nunique()\n\nprint(num_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Show the ministers and the time they took and left office, listed by the time they left office.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Left_office'\ndf = df.sort_values(by='Left_office')\n\n# Select the columns needed for the answer\nanswer = df[['Minister', 'Took_office', 'Left_office']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Left_office'\ndf = df.sort_values(by='Left_office')\n\n# Select the columns needed for the answer\nanswer = df[['Minister', 'Took_office', 'Left_office']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Show the minister who took office after 1961 or before 1959.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data based on the condition\nfiltered_data = df[(df['Took_office'] > 1961) | (df['Took_office'] < 1959)]\n\n# Get the list of ministers\nministers = filtered_data['Minister'].tolist()\n\n# Print the list of ministers\nprint(ministers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Who are the ministers who took office after 1961 or before 1959?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data based on the condition\nfiltered_data = df[(df['Took_office'] > 1961) | (df['Took_office'] < 1959)]\n\n# Get the list of ministers\nministers = filtered_data['Minister'].tolist()\n\n# Print the list of ministers\nprint(ministers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Show all ministers who do not belong to Progress Party.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nministers_not_progress_party = df[df['Party_name'] != 'Progress Party']['Minister'].tolist()\n\nprint(ministers_not_progress_party)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Which ministers are not a part of the Progress Party?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nministers_not_progress_party = df[df['Party_name'] != 'Progress Party']['Minister'].tolist()\n\nprint(ministers_not_progress_party)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Show all ministers and parties they belong to in descending order of the time they took office.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Took_office' in descending order\ndf = df.sort_values('Took_office', ascending=False)\n\n# Select the 'Minister' and 'Party_name' columns\nanswer = df[['Minister', 'Party_name']]\n\n# Save the answer in a variable and print it\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Who are the ministers and what parties do they belong to, listed descending by the times they took office?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Took_office' in descending order\ndf = df.sort_values('Took_office', ascending=False)\n\n# Select the 'Minister' and 'Party_name' columns\nanswer = df[['Minister', 'Party_name']]\n\n# Save the answer in a variable and print it\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Return the minister who left office at the latest time.", "response": "import pandas as pd\n\n# load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# convert the 'Left_office' column to datetime format\ndf['Left_office'] = pd.to_datetime(df['Left_office'], format='%Y')\n\n# find the row with the latest 'Left_office' date\nlatest_left_office = df[df['Left_office'] == df['Left_office'].max()]\n\n# save the minister who left office at the latest time\nminister = latest_left_office['Minister'].values[0]\n\n# print the minister\nprint(minister)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Minister,Took_office,Left_office,Region_ID,Party_name\n1,Dr. Kwame Nkrumah (MP),1957,1958,1,Convention Peoples Party\n2,Kojo Botsio (MP),1958,1959,2,Progress Party\n3,Ebenezer Ako-Adjei (MP),1959,1960,3,3\n4,Imoru Egala (MP),1960,1961,4,Convention Union Party\n5,Ebenezer Ako-Adjei (MP),1961,1962,5,Sinefine Party\n\nQuestion: Which minister left office the latest?", "response": "import pandas as pd\n\n# load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# convert the 'Left_office' column to datetime format\ndf['Left_office'] = pd.to_datetime(df['Left_office'], format='%Y')\n\n# find the row with the latest 'Left_office' date\nlatest_left_office = df[df['Left_office'] == df['Left_office'].max()]\n\n# save the minister who left office at the latest time\nminister = latest_left_office['Minister'].values[0]\n\n# print the minister\nprint(minister)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: How many pilots are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_of_pilots = len(df)\n\nprint(num_of_pilots)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: List the names of pilots in ascending order of rank.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Rank' in ascending order\ndf = df.sort_values(by='Rank', ascending=True)\n\n# Extract the names of the pilots\npilot_names = df['Pilot_name'].tolist()\n\n# Print the names of the pilots\nprint(pilot_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: What are the positions and teams of pilots?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Position' and 'Team' columns\npositions_teams = df[['Position', 'Team']]\n\nprint(positions_teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: List the distinct positions of pilots older than 30.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the pilots older than 30\nfiltered_df = df[df['Age'] > 30]\n\n# Get the distinct positions of the filtered dataframe\npositions = filtered_df['Position'].unique()\n\n# Print the positions\nprint(positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: Show the names of pilots from team \"Bradley\" or \"Fordham\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Team' column is either 'Bradley' or 'Fordham'\nfiltered_df = df[df['Team'].isin(['Bradley', 'Fordham'])]\n\n# Select the 'Pilot_name' column from the filtered dataframe\npilot_names = filtered_df['Pilot_name']\n\n# Print the pilot names\nprint(pilot_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: What is the joined year of the pilot of the highest rank?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the pilot with the highest rank\nhighest_rank_pilot = df[df['Rank'] == df['Rank'].min()]\n\n# Save the answer in a variable\njoined_year = highest_rank_pilot['Join_Year'].values[0]\n\n# Print the variable\nprint(joined_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# count the number of pilots from each nationality\nnationalities = df['Nationality'].value_counts()\n\n# print the results\nprint(nationalities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: Show the most common nationality of pilots.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the most common nationality\nmost_common_nationality = df['Nationality'].mode()[0]\n\n# Print the most common nationality\nprint(most_common_nationality)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team\n1,Patrick O'Bryant,13,33,United States,Center Team,2009,Bradley\n2,Jermaine O'Neal,6,40,United States,Forward-Center Team,2008,Eau Claire High School\n3,Dan O'Sullivan,45,37,United States,Center Team,1999,Fordham\n4,Charles Oakley,34,22,United Kindom,Forward Team,2001,Virginia Union\n5,Hakeem Olajuwon,34,32,Nigeria,Center Team,2010,Houston\n\nQuestion: Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include pilots joining after year 2005\ndf_after_2005 = df[df['Join_Year'] > 2005]\n\n# Filter the dataframe to only include pilots joining before year 2000\ndf_before_2000 = df[df['Join_Year'] < 2000]\n\n# Find the intersection of the two dataframes to get the positions of pilots joining after 2005 and before 2000\npositions = set(df_after_2005['Position']).intersection(set(df_before_2000['Position']))\n\n# Print the positions\nprint(positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_status_code,document_status_description\nworking,currently working on\ndone,mailed\noverdue,mailed late\n\nQuestion: What document status codes do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndocument_status_codes = df['document_status_code'].unique()\n\nprint(document_status_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_status_code,document_status_description\nworking,currently working on\ndone,mailed\noverdue,mailed late\n\nQuestion: What is the description of document status code 'working'?", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Get the description of document status code 'working'\ndescription = df[df['document_status_code'] == 'working']['document_status_description'].values[0]\n\n# Print the description\nprint(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_type_code,document_type_description\nCD,b\nPaper,u\nHard Drive,f\n\nQuestion: What document type codes do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndocument_type_codes = df['document_type_code'].unique()\n\nprint(document_type_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_type_code,document_type_description\nCD,b\nPaper,u\nHard Drive,f\n\nQuestion: What is the description of document type 'Paper'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe by document_type_code equals 'Paper'\npaper_description = df[df['document_type_code'] == 'Paper']['document_type_description'].values[0]\n\nprint(paper_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipping_agent_code,shipping_agent_name,shipping_agent_description\nUP,UPS,g\nUS,USPS,q\nAL,Airline,w\nFE,Fedex,k\nSH,Ship,t\n\nQuestion: What are the shipping agent names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nshipping_agent_names = df['shipping_agent_name'].tolist()\n\nprint(shipping_agent_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipping_agent_code,shipping_agent_name,shipping_agent_description\nUP,UPS,g\nUS,USPS,q\nAL,Airline,w\nFE,Fedex,k\nSH,Ship,t\n\nQuestion: What is the shipping agent code of shipping agent UPS?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nshipping_agent_code_UPS = df.loc[df['shipping_agent_name'] == 'UPS', 'shipping_agent_code'].values[0]\n\nprint(shipping_agent_code_UPS)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrole_code,role_description\nED,Editor\nPT,Photo\nMG,Manager\nPR,Proof Manager\n\nQuestion: What are all role codes?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nrole_codes = df['role_code'].tolist()\n\nprint(role_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrole_code,role_description\nED,Editor\nPT,Photo\nMG,Manager\nPR,Proof Manager\n\nQuestion: What is the description of role code ED?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row where role_code is 'ED'\nrow = df[df['role_code'] == 'ED']\n\n# Get the value in role_description for this row\ndescription = row['role_description'].values[0]\n\nprint(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nemployee_id,role_code,employee_name,other_details\n1,ED,Koby,h\n2,ED,Kenyon,f\n3,PR,Haley,b\n5,PT,Clemens,b\n7,PT,Jordyn,v\n8,MG,Erling,u\n\nQuestion: How many employees do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of employees\nnum_employees = df.shape[0]\n\n# Print the number of employees\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details\n1,working,CD,UP,2008-04-21 20:42:25,19,z\n2,done,Paper,US,1974-05-08 00:00:46,34,h\n3,done,Paper,UP,2014-12-25 17:22:44,93,h\n4,done,Paper,US,1973-11-05 21:48:53,80,q\n7,working,CD,SH,1982-09-27 14:52:15,61,w\n10,overdue,Paper,UP,1976-09-15 19:24:17,8,m\n12,overdue,Hard Drive,US,1996-05-31 06:51:58,69,n\n13,working,CD,UP,2015-04-03 09:36:19,79,y\n14,working,CD,FE,2017-07-02 17:39:09,117,u\n15,overdue,CD,UP,1986-12-14 14:18:59,37,r\n\nQuestion: List all document ids and receipt dates of documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf = df[['document_id', 'receipt_date']]\n\n# Print the selected columns\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details\n1,working,CD,UP,2008-04-21 20:42:25,19,z\n2,done,Paper,US,1974-05-08 00:00:46,34,h\n3,done,Paper,UP,2014-12-25 17:22:44,93,h\n4,done,Paper,US,1973-11-05 21:48:53,80,q\n7,working,CD,SH,1982-09-27 14:52:15,61,w\n10,overdue,Paper,UP,1976-09-15 19:24:17,8,m\n12,overdue,Hard Drive,US,1996-05-31 06:51:58,69,n\n13,working,CD,UP,2015-04-03 09:36:19,79,y\n14,working,CD,FE,2017-07-02 17:39:09,117,u\n15,overdue,CD,UP,1986-12-14 14:18:59,37,r\n\nQuestion: How many documents have the status code done?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where document_status_code is 'done'\ndf_done = df[df['document_status_code'] == 'done']\n\n# Save the answer in a variable\nanswer = len(df_done)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details\n1,working,CD,UP,2008-04-21 20:42:25,19,z\n2,done,Paper,US,1974-05-08 00:00:46,34,h\n3,done,Paper,UP,2014-12-25 17:22:44,93,h\n4,done,Paper,US,1973-11-05 21:48:53,80,q\n7,working,CD,SH,1982-09-27 14:52:15,61,w\n10,overdue,Paper,UP,1976-09-15 19:24:17,8,m\n12,overdue,Hard Drive,US,1996-05-31 06:51:58,69,n\n13,working,CD,UP,2015-04-03 09:36:19,79,y\n14,working,CD,FE,2017-07-02 17:39:09,117,u\n15,overdue,CD,UP,1986-12-14 14:18:59,37,r\n\nQuestion: List the document type code for the document with the id 2.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the document type code for the document with id 2\ndocument_type_code = df.loc[df['document_id'] == 2, 'document_type_code'].values[0]\n\n# Save the answer in a variable\nanswer = document_type_code\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details\n1,working,CD,UP,2008-04-21 20:42:25,19,z\n2,done,Paper,US,1974-05-08 00:00:46,34,h\n3,done,Paper,UP,2014-12-25 17:22:44,93,h\n4,done,Paper,US,1973-11-05 21:48:53,80,q\n7,working,CD,SH,1982-09-27 14:52:15,61,w\n10,overdue,Paper,UP,1976-09-15 19:24:17,8,m\n12,overdue,Hard Drive,US,1996-05-31 06:51:58,69,n\n13,working,CD,UP,2015-04-03 09:36:19,79,y\n14,working,CD,FE,2017-07-02 17:39:09,117,u\n15,overdue,CD,UP,1986-12-14 14:18:59,37,r\n\nQuestion: List the document ids for any documents with the status code done and the type code paper.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df.loc[(df['document_status_code'] == 'done') & (df['document_type_code'] == 'Paper'), 'document_id']\n\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details\n1,working,CD,UP,2008-04-21 20:42:25,19,z\n2,done,Paper,US,1974-05-08 00:00:46,34,h\n3,done,Paper,UP,2014-12-25 17:22:44,93,h\n4,done,Paper,US,1973-11-05 21:48:53,80,q\n7,working,CD,SH,1982-09-27 14:52:15,61,w\n10,overdue,Paper,UP,1976-09-15 19:24:17,8,m\n12,overdue,Hard Drive,US,1996-05-31 06:51:58,69,n\n13,working,CD,UP,2015-04-03 09:36:19,79,y\n14,working,CD,FE,2017-07-02 17:39:09,117,u\n15,overdue,CD,UP,1986-12-14 14:18:59,37,r\n\nQuestion: What is the receipt date of the document with id 3?", "response": "import pandas as pd\n\n# Load data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row with document_id = 3\ndf_filtered = df[df['document_id'] == 3]\n\n# Get the receipt date of the document with id 3\nreceipt_date = df_filtered['receipt_date'].values[0]\n\n# Print the receipt date\nprint(receipt_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,draft_number,draft_details\n1,0,e\n1,2,k\n2,1,v\n2,8,v\n4,9,r\n7,10,m\n10,20,k\n12,11,b\n12,12,r\n13,4,w\n\nQuestion: What is draft detail of the document with id 7?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where document_id equals 7\nfiltered_df = df[df['document_id'] == 7]\n\n# Save the draft details of the document with id 7 in a variable\nanswer = filtered_df['draft_details'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,draft_number,copy_number\n2,8,5\n4,9,6\n23,9,15\n10,20,10\n2,1,4\n1,2,5\n20,17,15\n12,12,10\n\nQuestion: How many draft copies does the document with id 2 have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['document_id'] == 2]\nanswer = len(df_filtered)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,draft_number,copy_number\n2,8,5\n4,9,6\n23,9,15\n10,20,10\n2,1,4\n1,2,5\n20,17,15\n12,12,10\n\nQuestion: Which document has the most draft copies? List its document id and number of draft copies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrouped = df.groupby('document_id')['draft_number'].count()\n\nmax_doc_id = grouped.idxmax()\nmax_draft_copies = grouped.max()\n\nanswer = (max_doc_id, max_draft_copies)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,draft_number,copy_number\n2,8,5\n4,9,6\n23,9,15\n10,20,10\n2,1,4\n1,2,5\n20,17,15\n12,12,10\n\nQuestion: Which documents have more than 1 draft copies? List document id and number of draft copies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of drafts for each document\ndraft_counts = df.groupby('document_id')['draft_number'].nunique()\n\n# Filter out documents with more than 1 draft\nmultiple_drafts = draft_counts[draft_counts > 1]\n\n# Get the document id and number of drafts for the documents with more than 1 draft\nanswer = multiple_drafts.reset_index().rename(columns={'draft_number': 'number_of_draft_copies'})\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,draft_number,copy_number,employee_id\n20,17,15,8\n1,2,5,1\n2,1,4,2\n10,20,10,2\n\nQuestion: For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_grouped = df.groupby('document_id')['employee_id'].nunique()\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDname,Dnumber,Mgr_ssn,Mgr_start_date\nHeadquarters,1,888665555,1981-06-19\nAdministration,4,987654321,1995-01-01\nResearch,5,333445555,1988-05-22\n\nQuestion: List all department names ordered by their starting date.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Mgr_start_date' column to datetime format\ndf['Mgr_start_date'] = pd.to_datetime(df['Mgr_start_date'])\n\n# Sort the DataFrame by the 'Mgr_start_date' column\ndf = df.sort_values('Mgr_start_date')\n\n# Create a list of department names in the sorted order\ndepartment_names = df['Dname'].tolist()\n\n# Print the list of department names\nprint(department_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEssn,Dependent_name,Sex,Bdate,Relationship\n333445555,Alice,F,1986-04-05,Daughter\n333445555,Theodore,M,1983-10-25,Son\n333445555,Joy,F,1958-05-03,Spouse\n987654321,Abner,M,1942-02-28,Spouse\n123456789,Michael,M,1988-01-04,Son\n123456789,Alice,F,1988-12-30,Daughter\n123456789,Elizabeth,F,1967-05-05,Spouse\n\nQuestion: find all dependent names who have a spouse relation with some employee.", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get all the rows where 'Relationship' is 'Spouse'\nspouse_df = df[df['Relationship'] == 'Spouse']\n\n# Get the 'Dependent_name' column values from the filtered DataFrame\ndependent_names = spouse_df['Dependent_name'].tolist()\n\n# Print the dependent names\nprint(dependent_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEssn,Dependent_name,Sex,Bdate,Relationship\n333445555,Alice,F,1986-04-05,Daughter\n333445555,Theodore,M,1983-10-25,Son\n333445555,Joy,F,1958-05-03,Spouse\n987654321,Abner,M,1942-02-28,Spouse\n123456789,Michael,M,1988-01-04,Son\n123456789,Alice,F,1988-12-30,Daughter\n123456789,Elizabeth,F,1967-05-05,Spouse\n\nQuestion: how many female dependents are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\nfemale_dependents = df[df['Sex'] == 'F'].shape[0]\n\nprint(female_dependents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno\nJonh,B,Smith,123456789,1965-01-09,731 Fondren, Houston, TX,M,30000,333445555,5\nFranklin,T,Wong,333445555,1955-12-08,638 Voss, Houston, TX,M,40000,888665555,5\nJoyce,A,English,453453453,1972-07-31,5631 Rice, Houston, TX,F,25000,333445555,5\nRamesh,K,Narayan,666884444,1962-09-15,975 Fire Oak, Humble, TX,M,38000,333445555,5\nJames,E,Borg,888665555,1937-11-10,450 Stone, Houston, TX,M,55000,,1\nJennifier,S,Wallace,987654321,1941-06-20,291 Berry, Bellaire, TX,F,43000,888665555,4\nAhmad,V,Jabbar,987987987,1969-03-29,980 Dallas, Houston, TX,M,25000,987654321,4\nAlicia,J,Zelaya,999887777,1968-01-19,3321 Castle, Spring, TX,F,25000,987654321,4\n\nQuestion: Return the first names and last names of employees who earn more than 30000 in salary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to get employees with salary more than 30000\nhigh_earners = df[df['Salary'] > 30000]\n\n# Get the first names and last names of high earners\nhigh_earners_names = high_earners[['Fname', 'Lname']]\n\n# Print the names\nprint(high_earners_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno\nJonh,B,Smith,123456789,1965-01-09,731 Fondren, Houston, TX,M,30000,333445555,5\nFranklin,T,Wong,333445555,1955-12-08,638 Voss, Houston, TX,M,40000,888665555,5\nJoyce,A,English,453453453,1972-07-31,5631 Rice, Houston, TX,F,25000,333445555,5\nRamesh,K,Narayan,666884444,1962-09-15,975 Fire Oak, Humble, TX,M,38000,333445555,5\nJames,E,Borg,888665555,1937-11-10,450 Stone, Houston, TX,M,55000,,1\nJennifier,S,Wallace,987654321,1941-06-20,291 Berry, Bellaire, TX,F,43000,888665555,4\nAhmad,V,Jabbar,987987987,1969-03-29,980 Dallas, Houston, TX,M,25000,987654321,4\nAlicia,J,Zelaya,999887777,1968-01-19,3321 Castle, Spring, TX,F,25000,987654321,4\n\nQuestion: Find the number of employees of each gender whose salary is lower than 50000.", "response": "# Python code:\n\nimport pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include employees whose salary is less than 50000\ndf_filtered = df[df['Salary'] < 50000]\n\n# Count the number of employees of each gender\ngender_counts = df_filtered['Sex'].value_counts()\n\n# Print the result\nprint(gender_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno\nJonh,B,Smith,123456789,1965-01-09,731 Fondren, Houston, TX,M,30000,333445555,5\nFranklin,T,Wong,333445555,1955-12-08,638 Voss, Houston, TX,M,40000,888665555,5\nJoyce,A,English,453453453,1972-07-31,5631 Rice, Houston, TX,F,25000,333445555,5\nRamesh,K,Narayan,666884444,1962-09-15,975 Fire Oak, Humble, TX,M,38000,333445555,5\nJames,E,Borg,888665555,1937-11-10,450 Stone, Houston, TX,M,55000,,1\nJennifier,S,Wallace,987654321,1941-06-20,291 Berry, Bellaire, TX,F,43000,888665555,4\nAhmad,V,Jabbar,987987987,1969-03-29,980 Dallas, Houston, TX,M,25000,987654321,4\nAlicia,J,Zelaya,999887777,1968-01-19,3321 Castle, Spring, TX,F,25000,987654321,4\n\nQuestion: list the first and last names, and the addresses of all employees in the ascending order of their birth date.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf['Bdate'] = pd.to_datetime(df['Bdate'])\ndf = df.sort_values('Bdate')\n\nanswer = df[['Fname', 'Lname', 'Address']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParticipant_ID,Participant_Type_Code,Participant_Details\n9,Organizer,Karlee Batz\n26,Organizer,Vilma Schinner\n28,Organizer,Lupe Deckow\n36,Organizer,Kenyatta Kuhn\n37,Participant,Miss Kaci Lebsack\n38,Organizer,Macy Mayer DDS\n60,Participant,Dewitt Walter\n63,Participant,Prof. Michelle Maggio Jr.\n64,Participant,Dr. Jaydon Renner\n66,Participant,Justyn Lebsack\n\nQuestion: What are all the the participant ids, type code and details?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParticipant_ID,Participant_Type_Code,Participant_Details\n9,Organizer,Karlee Batz\n26,Organizer,Vilma Schinner\n28,Organizer,Lupe Deckow\n36,Organizer,Kenyatta Kuhn\n37,Participant,Miss Kaci Lebsack\n38,Organizer,Macy Mayer DDS\n60,Participant,Dewitt Walter\n63,Participant,Prof. Michelle Maggio Jr.\n64,Participant,Dr. Jaydon Renner\n66,Participant,Justyn Lebsack\n\nQuestion: How many participants belong to the type 'Organizer'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on Participant_Type_Code and count the number of rows\nnum_organizers = df[df['Participant_Type_Code'] == 'Organizer'].shape[0]\n\n# Print the number of organizers\nprint(num_organizers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nService_ID,Service_Type_Code\n2,Marriage\n5,Death Proof\n6,Birth Proof\n8,Property Change\n\nQuestion: List the type of the services in alphabetical order.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# List the type of the services in alphabetical order\nservices_sorted = sorted(df['Service_Type_Code'].unique())\n\n# Print the list of services\nprint(services_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEvent_ID,Service_ID,Event_Details\n3,5,Success\n8,8,Success\n13,8,Fail\n16,2,Fail\n17,5,Fail\n38,6,Fail\n40,6,Fail\n43,8,Fail\n48,8,Fail\n57,5,Success\n\nQuestion: List the service id and details for the events.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the service id and details for the events\nservice_id_details = df[['Service_ID', 'Event_Details']]\n\nprint(service_id_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParticipant_ID,Participant_Type_Code,Participant_Details\n9,Organizer,Karlee Batz\n26,Organizer,Vilma Schinner\n28,Organizer,Lupe Deckow\n36,Organizer,Kenyatta Kuhn\n37,Participant,Miss Kaci Lebsack\n38,Organizer,Macy Mayer DDS\n60,Participant,Dewitt Walter\n63,Participant,Prof. Michelle Maggio Jr.\n64,Participant,Dr. Jaydon Renner\n66,Participant,Justyn Lebsack\n\nQuestion: What is the most common participant type?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the most common participant type\nmost_common_participant_type = df['Participant_Type_Code'].mode()[0]\n\n# Print the most common participant type\nprint(most_common_participant_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What is the name of the race held most recently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert 'date' column to datetime format\ndf['date'] = pd.to_datetime(df['date'])\n\n# Sort dataframe by date in descending order\ndf = df.sort_values(by='date', ascending=False)\n\n# Get the name of the first race\nmost_recent_race = df.iloc[0]['name']\n\nprint(most_recent_race)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What is the name of the race that occurred most recently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert 'date' column to datetime format\ndf['date'] = pd.to_datetime(df['date'])\n\n# Sort dataframe by date in descending order\ndf = df.sort_values(by='date', ascending=False)\n\n# Get the name of the first race\nmost_recent_race = df.iloc[0]['name']\n\nprint(most_recent_race)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What is the name and date of the most recent race?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the data by date in descending order\ndf_sorted = df.sort_values('date', ascending=False)\n\n# Get the name and date of the first race in the sorted dataframe\nmost_recent_race = df_sorted.iloc[0][['name', 'date']]\n\n# Print the most recent race\nprint(most_recent_race)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What is the name and date of the race that occurred most recently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the data by date in descending order\ndf_sorted = df.sort_values('date', ascending=False)\n\n# Get the name and date of the first race in the sorted dataframe\nmost_recent_race = df_sorted.iloc[0][['name', 'date']]\n\n# Print the most recent race\nprint(most_recent_race)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: Find the names of all races held in 2017.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for races in 2017\ndf_2017 = df[df['year'] == 2017]\n\n# Extract the names of the races\nrace_names = df_2017['name'].tolist()\n\n# Save the answer in a variable\nraces_in_2017 = race_names\n\n# Print the variable\nprint(races_in_2017)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What are the names of all the races that occurred in the year 2017?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for races in 2017\ndf_2017 = df[df['year'] == 2017]\n\n# Extract the names of the races\nrace_names = df_2017['name'].tolist()\n\n# Save the answer in a variable\nraces_in_2017 = race_names\n\n# Print the variable\nprint(races_in_2017)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: Find the distinct names of all races held between 2014 and 2017?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data between 2014 and 2017\ndf_filtered = df[(df['year'] >= 2014) & (df['year'] <= 2017)]\n\n# Find the distinct names of all races\ndistinct_races = df_filtered['name'].unique()\n\n# Print the distinct names of all races\nprint(distinct_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What are the unique names of all race held between 2014 and 2017?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data between 2014 and 2017\ndf_filtered = df[(df['year'] >= 2014) & (df['year'] <= 2017)]\n\n# Find the distinct names of all races\ndistinct_races = df_filtered['name'].unique()\n\n# Print the distinct names of all races\nprint(distinct_races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndriverId,driverRef,number,code,forename,surname,dob,nationality,url\n1,hamilton,44,HAM,Lewis,Hamilton,07/01/1985,British,http://en.wikipedia.org/wiki/Lewis_Hamilton\n2,heidfeld,,HEI,Nick,Heidfeld,10/05/1977,German,http://en.wikipedia.org/wiki/Nick_Heidfeld\n3,rosberg,6,ROS,Nico,Rosberg,27/06/1985,German,http://en.wikipedia.org/wiki/Nico_Rosberg\n4,alonso,14,ALO,Fernando,Alonso,29/07/1981,Spanish,http://en.wikipedia.org/wiki/Fernando_Alonso\n5,kovalainen,,KOV,Heikki,Kovalainen,19/10/1981,Finnish,http://en.wikipedia.org/wiki/Heikki_Kovalainen\n6,nakajima,,NAK,Kazuki,Nakajima,11/01/1985,Japanese,http://en.wikipedia.org/wiki/Kazuki_Nakajima\n7,bourdais,,BOU,S̩bastien,Bourdais,28/02/1979,French,http://en.wikipedia.org/wiki/S%C3%A9bastien_Bourdais\n8,raikkonen,7,RAI,Kimi,R�_ikk̦nen,17/10/1979,Finnish,http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen\n9,kubica,,KUB,Robert,Kubica,07/12/1984,Polish,http://en.wikipedia.org/wiki/Robert_Kubica\n10,glock,,GLO,Timo,Glock,18/03/1982,German,http://en.wikipedia.org/wiki/Timo_Glock\n\nQuestion: Find the forename and surname of drivers whose nationality is German?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ngerman_drivers = df[df['nationality'] == 'German'][['forename', 'surname']]\n\nprint(german_drivers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndriverId,driverRef,number,code,forename,surname,dob,nationality,url\n1,hamilton,44,HAM,Lewis,Hamilton,07/01/1985,British,http://en.wikipedia.org/wiki/Lewis_Hamilton\n2,heidfeld,,HEI,Nick,Heidfeld,10/05/1977,German,http://en.wikipedia.org/wiki/Nick_Heidfeld\n3,rosberg,6,ROS,Nico,Rosberg,27/06/1985,German,http://en.wikipedia.org/wiki/Nico_Rosberg\n4,alonso,14,ALO,Fernando,Alonso,29/07/1981,Spanish,http://en.wikipedia.org/wiki/Fernando_Alonso\n5,kovalainen,,KOV,Heikki,Kovalainen,19/10/1981,Finnish,http://en.wikipedia.org/wiki/Heikki_Kovalainen\n6,nakajima,,NAK,Kazuki,Nakajima,11/01/1985,Japanese,http://en.wikipedia.org/wiki/Kazuki_Nakajima\n7,bourdais,,BOU,S̩bastien,Bourdais,28/02/1979,French,http://en.wikipedia.org/wiki/S%C3%A9bastien_Bourdais\n8,raikkonen,7,RAI,Kimi,R�_ikk̦nen,17/10/1979,Finnish,http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen\n9,kubica,,KUB,Robert,Kubica,07/12/1984,Polish,http://en.wikipedia.org/wiki/Robert_Kubica\n10,glock,,GLO,Timo,Glock,18/03/1982,German,http://en.wikipedia.org/wiki/Timo_Glock\n\nQuestion: What is the first and last name of all the German drivers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ngerman_drivers = df[df['nationality'] == 'German'][['forename', 'surname']]\n\nprint(german_drivers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nconstructorId,constructorRef,name,nationality,url\n1,mclaren,McLaren,British,http://en.wikipedia.org/wiki/McLaren\n2,bmw_sauber,BMW Sauber,German,http://en.wikipedia.org/wiki/BMW_Sauber\n3,williams,Williams,British,http://en.wikipedia.org/wiki/Williams_Grand_Prix_Engineering\n4,renault,Renault,French,http://en.wikipedia.org/wiki/Renault_F1\n5,toro_rosso,Toro Rosso,Italian,http://en.wikipedia.org/wiki/Scuderia_Toro_Rosso\n6,ferrari,Ferrari,Italian,http://en.wikipedia.org/wiki/Scuderia_Ferrari\n7,toyota,Toyota,Japanese,http://en.wikipedia.org/wiki/Toyota_Racing\n8,super_aguri,Super Aguri,Japanese,http://en.wikipedia.org/wiki/Super_Aguri_F1\n9,red_bull,Red Bull,Austrian,http://en.wikipedia.org/wiki/Red_Bull_Racing\n10,force_india,Force India,Indian,http://en.wikipedia.org/wiki/Force_India\n\nQuestion: What are the numbers of constructors for different nationalities?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts() function to get the number of constructors for each nationality\nnationalities_count = df['nationality'].value_counts()\n\nprint(nationalities_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nconstructorId,constructorRef,name,nationality,url\n1,mclaren,McLaren,British,http://en.wikipedia.org/wiki/McLaren\n2,bmw_sauber,BMW Sauber,German,http://en.wikipedia.org/wiki/BMW_Sauber\n3,williams,Williams,British,http://en.wikipedia.org/wiki/Williams_Grand_Prix_Engineering\n4,renault,Renault,French,http://en.wikipedia.org/wiki/Renault_F1\n5,toro_rosso,Toro Rosso,Italian,http://en.wikipedia.org/wiki/Scuderia_Toro_Rosso\n6,ferrari,Ferrari,Italian,http://en.wikipedia.org/wiki/Scuderia_Ferrari\n7,toyota,Toyota,Japanese,http://en.wikipedia.org/wiki/Toyota_Racing\n8,super_aguri,Super Aguri,Japanese,http://en.wikipedia.org/wiki/Super_Aguri_F1\n9,red_bull,Red Bull,Austrian,http://en.wikipedia.org/wiki/Red_Bull_Racing\n10,force_india,Force India,Indian,http://en.wikipedia.org/wiki/Force_India\n\nQuestion: For each nationality, how many different constructors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts() function to get the number of constructors for each nationality\nnationalities_count = df['nationality'].value_counts()\n\nprint(nationalities_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndriverId,driverRef,number,code,forename,surname,dob,nationality,url\n1,hamilton,44,HAM,Lewis,Hamilton,07/01/1985,British,http://en.wikipedia.org/wiki/Lewis_Hamilton\n2,heidfeld,,HEI,Nick,Heidfeld,10/05/1977,German,http://en.wikipedia.org/wiki/Nick_Heidfeld\n3,rosberg,6,ROS,Nico,Rosberg,27/06/1985,German,http://en.wikipedia.org/wiki/Nico_Rosberg\n4,alonso,14,ALO,Fernando,Alonso,29/07/1981,Spanish,http://en.wikipedia.org/wiki/Fernando_Alonso\n5,kovalainen,,KOV,Heikki,Kovalainen,19/10/1981,Finnish,http://en.wikipedia.org/wiki/Heikki_Kovalainen\n6,nakajima,,NAK,Kazuki,Nakajima,11/01/1985,Japanese,http://en.wikipedia.org/wiki/Kazuki_Nakajima\n7,bourdais,,BOU,S̩bastien,Bourdais,28/02/1979,French,http://en.wikipedia.org/wiki/S%C3%A9bastien_Bourdais\n8,raikkonen,7,RAI,Kimi,R�_ikk̦nen,17/10/1979,Finnish,http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen\n9,kubica,,KUB,Robert,Kubica,07/12/1984,Polish,http://en.wikipedia.org/wiki/Robert_Kubica\n10,glock,,GLO,Timo,Glock,18/03/1982,German,http://en.wikipedia.org/wiki/Timo_Glock\n\nQuestion: List the forenames of all distinct drivers in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the forenames of all distinct drivers in alphabetical order\ndistinct_forenames = df['forename'].drop_duplicates().sort_values()\n\n# Print the list of distinct forenames\nprint(distinct_forenames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndriverId,driverRef,number,code,forename,surname,dob,nationality,url\n1,hamilton,44,HAM,Lewis,Hamilton,07/01/1985,British,http://en.wikipedia.org/wiki/Lewis_Hamilton\n2,heidfeld,,HEI,Nick,Heidfeld,10/05/1977,German,http://en.wikipedia.org/wiki/Nick_Heidfeld\n3,rosberg,6,ROS,Nico,Rosberg,27/06/1985,German,http://en.wikipedia.org/wiki/Nico_Rosberg\n4,alonso,14,ALO,Fernando,Alonso,29/07/1981,Spanish,http://en.wikipedia.org/wiki/Fernando_Alonso\n5,kovalainen,,KOV,Heikki,Kovalainen,19/10/1981,Finnish,http://en.wikipedia.org/wiki/Heikki_Kovalainen\n6,nakajima,,NAK,Kazuki,Nakajima,11/01/1985,Japanese,http://en.wikipedia.org/wiki/Kazuki_Nakajima\n7,bourdais,,BOU,S̩bastien,Bourdais,28/02/1979,French,http://en.wikipedia.org/wiki/S%C3%A9bastien_Bourdais\n8,raikkonen,7,RAI,Kimi,R�_ikk̦nen,17/10/1979,Finnish,http://en.wikipedia.org/wiki/Kimi_R%C3%A4ikk%C3%B6nen\n9,kubica,,KUB,Robert,Kubica,07/12/1984,Polish,http://en.wikipedia.org/wiki/Robert_Kubica\n10,glock,,GLO,Timo,Glock,18/03/1982,German,http://en.wikipedia.org/wiki/Timo_Glock\n\nQuestion: What are the first names of all the different drivers in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the forenames of all distinct drivers in alphabetical order\ndistinct_forenames = df['forename'].drop_duplicates().sort_values()\n\n# Print the list of distinct forenames\nprint(distinct_forenames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: List the names of all distinct races in reversed  lexicographic order?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the unique race names and convert to a list\nrace_names = df['name'].unique().tolist()\n\n# Sort the list in reverse alphabetical order\nrace_names.sort(reverse=True)\n\n# Print the sorted list\nprint(race_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What are the different names of all the races in reverse alphabetical order?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the unique race names and convert to a list\nrace_names = df['name'].unique().tolist()\n\n# Sort the list in reverse alphabetical order\nrace_names.sort(reverse=True)\n\n# Print the sorted list\nprint(race_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What are the names of races held between 2009 and 2011?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the races held between 2009 and 2011\ndf_filtered = df[(df['year'] >= 2009) & (df['year'] <= 2011)]\n\n# Get the names of the races\nraces = df_filtered['name'].tolist()\n\nprint(races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nraceId,year,round,circuitId,name,date,time,url\n1,2009,1,1,Australian Grand Prix,2009-03-29,06:00:00,http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix\n2,2009,2,2,Malaysian Grand Prix,2009-04-05,09:00:00,http://en.wikipedia.org/wiki/2009_Malaysian_Grand_Prix\n3,2009,3,17,Chinese Grand Prix,2009-04-19,07:00:00,http://en.wikipedia.org/wiki/2009_Chinese_Grand_Prix\n4,2009,4,3,Bahrain Grand Prix,2009-04-26,12:00:00,http://en.wikipedia.org/wiki/2009_Bahrain_Grand_Prix\n5,2009,5,4,Spanish Grand Prix,2009-05-10,12:00:00,http://en.wikipedia.org/wiki/2009_Spanish_Grand_Prix\n6,2009,6,6,Monaco Grand Prix,2009-05-24,12:00:00,http://en.wikipedia.org/wiki/2009_Monaco_Grand_Prix\n7,2009,7,5,Turkish Grand Prix,2009-06-07,12:00:00,http://en.wikipedia.org/wiki/2009_Turkish_Grand_Prix\n8,2009,8,9,British Grand Prix,2009-06-21,12:00:00,http://en.wikipedia.org/wiki/2009_British_Grand_Prix\n9,2009,9,20,German Grand Prix,2009-07-12,12:00:00,http://en.wikipedia.org/wiki/2009_German_Grand_Prix\n10,2009,10,11,Hungarian Grand Prix,2009-07-26,12:00:00,http://en.wikipedia.org/wiki/2009_Hungarian_Grand_Prix\n\nQuestion: What are the names of all races held between 2009 and 2011?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the races held between 2009 and 2011\ndf_filtered = df[(df['year'] >= 2009) & (df['year'] <= 2011)]\n\n# Get the names of the races\nraces = df_filtered['name'].tolist()\n\nprint(races)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncircuitId,circuitRef,name,location,country,lat,lng,alt,url\n1,albert_park,Albert Park Grand Prix Circuit,Melbourne,Australia,-37.8497,144.968,10,http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\n2,sepang,Sepang International Circuit,Kuala Lumpur,Malaysia,2.76083,101.738,,http://en.wikipedia.org/wiki/Sepang_International_Circuit\n3,bahrain,Bahrain International Circuit,Sakhir,Bahrain,26.0325,50.5106,,http://en.wikipedia.org/wiki/Bahrain_International_Circuit\n4,catalunya,Circuit de Barcelona-Catalunya,Montmel_,Spain,41.57,2.26111,,http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya\n5,istanbul,Istanbul Park,Istanbul,Turkey,40.9517,29.405,,http://en.wikipedia.org/wiki/Istanbul_Park\n6,monaco,Circuit de Monaco,Monte-Carlo,Monaco,43.7347,7.42056,,http://en.wikipedia.org/wiki/Circuit_de_Monaco\n7,villeneuve,Circuit Gilles Villeneuve,Montreal,Canada,45.5,-73.5228,,http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve\n8,magny_cours,Circuit de Nevers Magny-Cours,Magny Cours,France,46.8642,3.16361,,http://en.wikipedia.org/wiki/Circuit_de_Nevers_Magny-Cours\n9,silverstone,Silverstone Circuit,Silverstone,UK,52.0786,-1.01694,,http://en.wikipedia.org/wiki/Silverstone_Circuit\n10,hockenheimring,Hockenheimring,Hockenheim,Germany,49.3278,8.56583,,http://en.wikipedia.org/wiki/Hockenheimring\n\nQuestion: What are the names of circuits that belong to UK or Malaysia?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nuk_malaysia_circuits = df.loc[(df['country'] == 'UK') | (df['country'] == 'Malaysia'), 'name']\n\nprint(uk_malaysia_circuits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncircuitId,circuitRef,name,location,country,lat,lng,alt,url\n1,albert_park,Albert Park Grand Prix Circuit,Melbourne,Australia,-37.8497,144.968,10,http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\n2,sepang,Sepang International Circuit,Kuala Lumpur,Malaysia,2.76083,101.738,,http://en.wikipedia.org/wiki/Sepang_International_Circuit\n3,bahrain,Bahrain International Circuit,Sakhir,Bahrain,26.0325,50.5106,,http://en.wikipedia.org/wiki/Bahrain_International_Circuit\n4,catalunya,Circuit de Barcelona-Catalunya,Montmel_,Spain,41.57,2.26111,,http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya\n5,istanbul,Istanbul Park,Istanbul,Turkey,40.9517,29.405,,http://en.wikipedia.org/wiki/Istanbul_Park\n6,monaco,Circuit de Monaco,Monte-Carlo,Monaco,43.7347,7.42056,,http://en.wikipedia.org/wiki/Circuit_de_Monaco\n7,villeneuve,Circuit Gilles Villeneuve,Montreal,Canada,45.5,-73.5228,,http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve\n8,magny_cours,Circuit de Nevers Magny-Cours,Magny Cours,France,46.8642,3.16361,,http://en.wikipedia.org/wiki/Circuit_de_Nevers_Magny-Cours\n9,silverstone,Silverstone Circuit,Silverstone,UK,52.0786,-1.01694,,http://en.wikipedia.org/wiki/Silverstone_Circuit\n10,hockenheimring,Hockenheimring,Hockenheim,Germany,49.3278,8.56583,,http://en.wikipedia.org/wiki/Hockenheimring\n\nQuestion: What are the names of all the circuits that are in the UK or Malaysia?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nuk_malaysia_circuits = df.loc[(df['country'] == 'UK') | (df['country'] == 'Malaysia'), 'name']\n\nprint(uk_malaysia_circuits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncircuitId,circuitRef,name,location,country,lat,lng,alt,url\n1,albert_park,Albert Park Grand Prix Circuit,Melbourne,Australia,-37.8497,144.968,10,http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\n2,sepang,Sepang International Circuit,Kuala Lumpur,Malaysia,2.76083,101.738,,http://en.wikipedia.org/wiki/Sepang_International_Circuit\n3,bahrain,Bahrain International Circuit,Sakhir,Bahrain,26.0325,50.5106,,http://en.wikipedia.org/wiki/Bahrain_International_Circuit\n4,catalunya,Circuit de Barcelona-Catalunya,Montmel_,Spain,41.57,2.26111,,http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya\n5,istanbul,Istanbul Park,Istanbul,Turkey,40.9517,29.405,,http://en.wikipedia.org/wiki/Istanbul_Park\n6,monaco,Circuit de Monaco,Monte-Carlo,Monaco,43.7347,7.42056,,http://en.wikipedia.org/wiki/Circuit_de_Monaco\n7,villeneuve,Circuit Gilles Villeneuve,Montreal,Canada,45.5,-73.5228,,http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve\n8,magny_cours,Circuit de Nevers Magny-Cours,Magny Cours,France,46.8642,3.16361,,http://en.wikipedia.org/wiki/Circuit_de_Nevers_Magny-Cours\n9,silverstone,Silverstone Circuit,Silverstone,UK,52.0786,-1.01694,,http://en.wikipedia.org/wiki/Silverstone_Circuit\n10,hockenheimring,Hockenheimring,Hockenheim,Germany,49.3278,8.56583,,http://en.wikipedia.org/wiki/Hockenheimring\n\nQuestion: Find the id and location of circuits that belong to France or Belgium?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to keep only the rows that belong to France or Belgium\ndf_filtered = df[df['country'].isin(['France', 'Belgium'])]\n\n# Get the id and location columns of the filtered dataframe\nanswer = df_filtered[['circuitId', 'location']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncircuitId,circuitRef,name,location,country,lat,lng,alt,url\n1,albert_park,Albert Park Grand Prix Circuit,Melbourne,Australia,-37.8497,144.968,10,http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\n2,sepang,Sepang International Circuit,Kuala Lumpur,Malaysia,2.76083,101.738,,http://en.wikipedia.org/wiki/Sepang_International_Circuit\n3,bahrain,Bahrain International Circuit,Sakhir,Bahrain,26.0325,50.5106,,http://en.wikipedia.org/wiki/Bahrain_International_Circuit\n4,catalunya,Circuit de Barcelona-Catalunya,Montmel_,Spain,41.57,2.26111,,http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya\n5,istanbul,Istanbul Park,Istanbul,Turkey,40.9517,29.405,,http://en.wikipedia.org/wiki/Istanbul_Park\n6,monaco,Circuit de Monaco,Monte-Carlo,Monaco,43.7347,7.42056,,http://en.wikipedia.org/wiki/Circuit_de_Monaco\n7,villeneuve,Circuit Gilles Villeneuve,Montreal,Canada,45.5,-73.5228,,http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve\n8,magny_cours,Circuit de Nevers Magny-Cours,Magny Cours,France,46.8642,3.16361,,http://en.wikipedia.org/wiki/Circuit_de_Nevers_Magny-Cours\n9,silverstone,Silverstone Circuit,Silverstone,UK,52.0786,-1.01694,,http://en.wikipedia.org/wiki/Silverstone_Circuit\n10,hockenheimring,Hockenheimring,Hockenheim,Germany,49.3278,8.56583,,http://en.wikipedia.org/wiki/Hockenheimring\n\nQuestion: What are the ids and locations of all circuits in France or Belgium?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to keep only the rows that belong to France or Belgium\ndf_filtered = df[df['country'].isin(['France', 'Belgium'])]\n\n# Get the id and location columns of the filtered dataframe\nanswer = df_filtered[['circuitId', 'location']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: How many technicians are there?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of technicians\nnum_technicians = len(df)\n\n# Print the number of technicians\nprint(num_technicians)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the number of technicians?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of technicians\nnum_technicians = len(df)\n\n# Print the number of technicians\nprint(num_technicians)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: List the names of technicians in ascending order of age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by age in ascending order\ndf_sorted = df.sort_values('Age')\n\n# Get the names of the technicians in ascending order of age\nnames_sorted_by_age = df_sorted['Name'].tolist()\n\nprint(names_sorted_by_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What are the names of the technicians by ascending order of age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by age in ascending order\ndf_sorted = df.sort_values('Age')\n\n# Get the names of the technicians in ascending order of age\nnames_sorted_by_age = df_sorted['Name'].tolist()\n\nprint(names_sorted_by_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What are the team and starting year of technicians?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the team and starting year for each technician\nteam_and_start_year = df[['Team', 'Starting_Year']]\n\n# Print the result\nprint(team_and_start_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the team and starting year for each technician?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the team and starting year for each technician\nteam_and_start_year = df[['Team', 'Starting_Year']]\n\n# Print the result\nprint(team_and_start_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: List the name of technicians whose team is not \"NYY\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data where Team is not \"NYY\"\nfiltered_data = df[df['Team'] != 'NYY']\n\n# Save the answer in a variable\nanswer = filtered_data['Name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the name of the technician whose team is not 'NYY'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data where Team is not \"NYY\"\nfiltered_data = df[df['Team'] != 'NYY']\n\n# Save the answer in a variable\nanswer = filtered_data['Name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: Show the name of technicians aged either 36 or 37", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting rows with Age either 36 or 37\nfiltered_df = df[df['Age'].isin([36, 37])]\n\n# Saving the answer in a variable\nanswer = filtered_df['Name']\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What are the names of the technicians aged either 36 or 37?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Selecting rows with Age either 36 or 37\nfiltered_df = df[df['Age'].isin([36, 37])]\n\n# Saving the answer in a variable\nanswer = filtered_df['Name']\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the starting year of the oldest technicians?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# find the maximum age\nmax_age = df['Age'].max()\n\n# get the starting year of the oldest technicians\noldest_starting_year = df.loc[df['Age'] == max_age, 'Starting_Year'].min()\n\nprint(oldest_starting_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the starting year for the oldest technician?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# find the maximum age\nmax_age = df['Age'].max()\n\n# get the starting year of the oldest technicians\noldest_starting_year = df.loc[df['Age'] == max_age, 'Starting_Year'].min()\n\nprint(oldest_starting_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: Show different teams of technicians and the number of technicians in each team.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of technicians in each team\nteam_counts = df['Team'].value_counts()\n\n# Print the team counts\nprint(team_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: For each team, how many technicians are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of technicians in each team\nteam_counts = df['Team'].value_counts()\n\n# Print the team counts\nprint(team_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: Please show the team that has the most number of technicians.", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Get the team with the most technicians\nmost_technicians_team = df['Team'].value_counts().idxmax()\n\n# Print the team with the most technicians\nprint(most_technicians_team)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What are the teams with the most technicians?", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Get the team with the most technicians\nmost_technicians_team = df['Team'].value_counts().idxmax()\n\n# Print the team with the most technicians\nprint(most_technicians_team)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: Show the team that have at least two technicians.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nteam_counts = df['Team'].value_counts()\nteams_with_multiple_technicians = team_counts[team_counts > 1].index.tolist()\n\nprint(teams_with_multiple_technicians)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What is the team with at least 2 technicians?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nteam_counts = df['Team'].value_counts()\nteams_with_multiple_technicians = team_counts[team_counts > 1].index.tolist()\n\nprint(teams_with_multiple_technicians)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: Show the starting years shared by technicians from team \"CLE\" and \"CWS\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows from teams \"CLE\" and \"CWS\"\ncle_cws = df[(df['Team'] == 'CLE') | (df['Team'] == 'CWS')]\n\n# Find the starting years shared by technicians from both teams\nshared_years = cle_cws['Starting_Year'].value_counts()[cle_cws['Starting_Year'].value_counts() > 1].index.tolist()\n\n# Print the shared starting years\nprint(shared_years)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntechnician_id,Name,Team,Starting_Year,Age\n1.0,Joe Sewell,NYY,2012.0,37\n2.0,John Brown,NYY,2013.0,36\n3.0,Tony Sewell,CLE,2005.0,43\n4.0,Mark Sewell,CLE,2009.0,28\n5.0,Charlie Hollocher,CHC,2002.0,35\n6.0,Lou Boudreau,CLE,2016.0,32\n7.0,Eddie Collins,CWS,2005.0,45\n8.0,Joe Cochrane,CLE,2006.0,46\n9.0,Eddie Collins,CWS,2003.0,47\n10.0,Mickey Cochrane,PHA,2009.0,38\n\nQuestion: What are the starting years shared by the technicians from the team \"CLE\" or \"CWS\"?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows from teams \"CLE\" and \"CWS\"\ncle_cws = df[(df['Team'] == 'CLE') | (df['Team'] == 'CWS')]\n\n# Find the starting years shared by technicians from both teams\nshared_years = cle_cws['Starting_Year'].value_counts()[cle_cws['Starting_Year'].value_counts() > 1].index.tolist()\n\n# Print the shared starting years\nprint(shared_years)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: How many entrepreneurs are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_entrepreneurs = df['Entrepreneur_ID'].nunique()\n\nprint(num_entrepreneurs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Count the number of entrepreneurs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_entrepreneurs = df['Entrepreneur_ID'].nunique()\n\nprint(num_entrepreneurs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: List the companies of entrepreneurs in descending order of money requested.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by Money_Requested in descending order\ndf_sorted = df.sort_values('Money_Requested', ascending=False)\n\n# Get the list of companies in the sorted order\ncompany_list = df_sorted['Company'].tolist()\n\n# Print the list of companies\nprint(company_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What are the companies of entrepreneurs, ordered descending by amount of money requested?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by Money_Requested in descending order\ndf_sorted = df.sort_values('Money_Requested', ascending=False)\n\n# Get the list of companies in the sorted order\ncompany_list = df_sorted['Company'].tolist()\n\n# Print the list of companies\nprint(company_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: List the companies and the investors of entrepreneurs.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\nselected_data = df[['Company', 'Investor']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What are the companies and investors that correspond to each entrepreneur?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\nselected_data = df[['Company', 'Investor']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What is the average money requested by all entrepreneurs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_money_requested = df['Money_Requested'].mean()\n\nprint(average_money_requested)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Return the average money requested across all entrepreneurs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_money_requested = df['Money_Requested'].mean()\n\nprint(average_money_requested)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Date_of_Birth\n1,Francesco Postiglione,1.9,80.0,1972-04-29\n2,Leonardo Binchi,1.86,57.0,1975-08-27\n3,Fabrizio Buonocore,1.83,45.0,1977-04-28\n4,Marco Gerini,1.72,75.0,1971-08-05\n5,Roberto Calcaterra,1.75,67.0,1972-02-06\n6,Goran Fiorentini,1.78,89.0,1981-11-21\n7,Alberto Angelini,1.82,58.0,1974-09-28\n8,Maurizio Felugo,1.95,76.0,1981-03-04\n\nQuestion: What are the names of people in ascending order of weight?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weight' in ascending order\ndf = df.sort_values('Weight')\n\n# Save the names of the people in ascending order of weight in a variable\nnames_sorted_by_weight = df['Name'].tolist()\n\n# Print the variable\nprint(names_sorted_by_weight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Date_of_Birth\n1,Francesco Postiglione,1.9,80.0,1972-04-29\n2,Leonardo Binchi,1.86,57.0,1975-08-27\n3,Fabrizio Buonocore,1.83,45.0,1977-04-28\n4,Marco Gerini,1.72,75.0,1971-08-05\n5,Roberto Calcaterra,1.75,67.0,1972-02-06\n6,Goran Fiorentini,1.78,89.0,1981-11-21\n7,Alberto Angelini,1.82,58.0,1974-09-28\n8,Maurizio Felugo,1.95,76.0,1981-03-04\n\nQuestion: Return the names of people, ordered by weight ascending.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weight' in ascending order\ndf = df.sort_values('Weight')\n\n# Save the names of the people in ascending order of weight in a variable\nnames_sorted_by_weight = df['Name'].tolist()\n\n# Print the variable\nprint(names_sorted_by_weight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Date_of_Birth\n1,Francesco Postiglione,1.9,80.0,1972-04-29\n2,Leonardo Binchi,1.86,57.0,1975-08-27\n3,Fabrizio Buonocore,1.83,45.0,1977-04-28\n4,Marco Gerini,1.72,75.0,1971-08-05\n5,Roberto Calcaterra,1.75,67.0,1972-02-06\n6,Goran Fiorentini,1.78,89.0,1981-11-21\n7,Alberto Angelini,1.82,58.0,1974-09-28\n8,Maurizio Felugo,1.95,76.0,1981-03-04\n\nQuestion: What is the weight of the shortest person?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# convert 'Height' column to float\ndf['Height'] = df['Height'].astype(float)\n\n# find the minimum 'Height'\nmin_height = df['Height'].min()\n\n# find the weight of the person with minimum 'Height'\nmin_weight = df[df['Height'] == min_height]['Weight'].values[0]\n\n# print the result\nprint(min_weight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Date_of_Birth\n1,Francesco Postiglione,1.9,80.0,1972-04-29\n2,Leonardo Binchi,1.86,57.0,1975-08-27\n3,Fabrizio Buonocore,1.83,45.0,1977-04-28\n4,Marco Gerini,1.72,75.0,1971-08-05\n5,Roberto Calcaterra,1.75,67.0,1972-02-06\n6,Goran Fiorentini,1.78,89.0,1981-11-21\n7,Alberto Angelini,1.82,58.0,1974-09-28\n8,Maurizio Felugo,1.95,76.0,1981-03-04\n\nQuestion: Return the weight of the shortest person.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# convert 'Height' column to float\ndf['Height'] = df['Height'].astype(float)\n\n# find the minimum 'Height'\nmin_height = df['Height'].min()\n\n# find the weight of the person with minimum 'Height'\nmin_weight = df[df['Height'] == min_height]['Weight'].values[0]\n\n# print the result\nprint(min_weight)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?", "response": "# Answer:\n\nimport pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of entrepreneurs for each investor\ninvestor_counts = df['Investor'].value_counts()\n\nprint(investor_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: How many entrepreneurs correspond to each investor?", "response": "# Answer:\n\nimport pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of entrepreneurs for each investor\ninvestor_counts = df['Investor'].value_counts()\n\nprint(investor_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What is the investor that has invested in the most number of entrepreneurs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ninvestor_counts = df['Investor'].value_counts()\n\nmost_investor = investor_counts.idxmax()\n\nprint(most_investor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Return the investor who have invested in the greatest number of entrepreneurs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ninvestor_counts = df['Investor'].value_counts()\n\nmost_investor = investor_counts.idxmax()\n\nprint(most_investor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What are the investors that have invested in at least two entrepreneurs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ninvestor_count = df['Investor'].value_counts()\n\ninvestors_multiple_investments = investor_count[investor_count > 1].index.tolist()\n\nprint(investors_multiple_investments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Return the investors who have invested in two or more entrepreneurs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ninvestor_count = df['Investor'].value_counts()\n\ninvestors_multiple_investments = investor_count[investor_count > 1].index.tolist()\n\nprint(investors_multiple_investments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include entrepreneurs that requested more than 140000\ndf_more_than_140k = df[df['Money_Requested'] > 140000]\n\n# Filter dataframe to only include entrepreneurs that requested less than 120000\ndf_less_than_120k = df[df['Money_Requested'] < 120000]\n\n# Find the investors shared by entrepreneurs that requested more than 140000 and less than 120000\nshared_investors = set(df_more_than_140k['Investor']).intersection(set(df_less_than_120k['Investor']))\n\n# Print the shared investors\nfor investor in shared_investors:\n    print(investor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: What are the investors who have invested in both entrepreneurs who requested more than 140000 and entrepreneurs who requested less than 120000?", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include entrepreneurs that requested more than 140000\ndf_more_than_140k = df[df['Money_Requested'] > 140000]\n\n# Filter dataframe to only include entrepreneurs that requested less than 120000\ndf_less_than_120k = df[df['Money_Requested'] < 120000]\n\n# Find the investors shared by entrepreneurs that requested more than 140000 and less than 120000\nshared_investors = set(df_more_than_140k['Investor']).intersection(set(df_less_than_120k['Investor']))\n\n# Print the shared investors\nfor investor in shared_investors:\n    print(investor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: How many distinct companies are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_companies = df['Company'].nunique()\n\nprint(num_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEntrepreneur_ID,People_ID,Company,Money_Requested,Investor\n1,1,Umbrolly,150000.0,Duncan Bannatyne\n2,2,Grails Ltd,120000.0,Doug Richard\n3,3,Le Beanock,54000.0,Rachel Elnaugh\n4,5,IV Cam,50000.0,Peter Jones\n5,6,Mycorrhizal Systems,75000.0,Simon Woodroffe\n6,8,Elizabeth Galton Ltd,110000.0,Duncan Bannatyne\n\nQuestion: Count the number of different companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_companies = df['Company'].nunique()\n\nprint(num_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: How many perpetrators are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_perpetrators = df['Perpetrator_ID'].nunique()\n\nprint(num_perpetrators)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: List the date of perpetrators in descending order of the number of people killed.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Killed' in descending order and select 'Date'\nanswer = df.sort_values('Killed', ascending=False)['Date']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: List the number of people injured by perpetrators in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Injured' column in ascending order\ndf = df.sort_values(by='Injured')\n\n# Save the answer in a variable and print the variable\ninjured_people = df['Injured'].tolist()\nprint(injured_people)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: What is the average number of people injured by all perpetrators?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of people injured by all perpetrators\naverage_injured = df['Injured'].mean()\n\n# Print the average number of injured people\nprint(average_injured)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: What is the location of the perpetrator with the largest kills.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by Location and sum the Killed\ngrouped = df.groupby('Location')['Killed'].sum()\n\n# Get the location with the maximum kills\nlocation_with_max_kills = grouped.idxmax()\n\nprint('The location of the perpetrator with the largest kills:', location_with_max_kills)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Name,Height,Weight,Home Town\n1,Ron Baxter,6.4,205.0,Los Angeles, CA\n2,Brent Boyd,6.3,185.0,Baton Rouge, LA\n3,Tyrone Brayan,6.7,220.0,Placentia, CA\n4,Rob Cunningham,6.8,215.0,Westport, CT\n5,John Danks,6.6,190.0,Beaver Dam, KY\n6,Ovie Dotson,6.5,200.0,San Antonio, TX\n7,Gary Goodner,6.7,220.0,Denton, TX\n8,Henry Johnson,6.6,190.0,Los Angeles, CA\n9,Jim Krivacs,6.1,160.0,Indianapolis, IN\n10,John Moore,6.1,170.0,Altoona, PA\n\nQuestion: What are the names of people in ascending order of height?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Height' in ascending order and get the 'Name' column\nsorted_names = df.sort_values('Height')['Name']\n\n# Save the sorted names into a variable\nsorted_names_var = sorted_names.tolist()\n\n# Print the variable\nprint(sorted_names_var)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Country' and count unique 'Perpetrator_ID'\ncountries = df.groupby('Country')['Perpetrator_ID'].nunique()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: What are the countries that have at least two perpetrators?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Country' and count the unique 'Perpetrator_ID' for each country\ncountry_counts = df.groupby('Country')['Perpetrator_ID'].nunique()\n\n# Filter the countries that have at least two perpetrators\ncountries_with_two_or_more_perpetrators = country_counts[country_counts >= 2]\n\n# Print the result\nprint(countries_with_two_or_more_perpetrators)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: Show the countries that have both perpetrators with injures more than 50 and perpetrators with injures smaller than 20.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where 'Injured' is greater than 50\ndf_injured_gt_50 = df[df['Injured'] > 50]\n\n# Get unique countries from the filtered dataframe\ncountries_injured_gt_50 = df_injured_gt_50['Country'].unique()\n\n# Filter the dataframe to get rows where 'Injured' is less than 20\ndf_injured_lt_20 = df[df['Injured'] < 20]\n\n# Get unique countries from the filtered dataframe\ncountries_injured_lt_20 = df_injured_lt_20['Country'].unique()\n\n# Find the intersection of the two country lists\ncommon_countries = set(countries_injured_gt_50) & set(countries_injured_lt_20)\n\n# Print the common countries\nprint(common_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: How many distinct locations of perpetrators are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_locations = df['Location'].nunique()\n\nprint(distinct_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured\n1,1,04.26 April 26/27,1982.0,Uiryeong,South Korea,56,37\n2,3,11.18 Nov. 18,1995.0,Zhaodong,China,32,16\n3,4,05.21 May 21,1938.0,Kaio,Japan,30,3\n4,6,09.20 Sep. 20,1994.0,Beijing,China,23,80\n5,8,04.00 April,1950.0,Nainital,India,22,0\n\nQuestion: In which year did the most recent crime happen?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Year' column to numeric data type\ndf['Year'] = pd.to_numeric(df['Year'], errors='coerce')\n\n# Find the year with the maximum 'Year' value\nmax_year = df['Year'].max()\n\nprint(max_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: Report the name of all campuses in Los Angeles county.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Los Angeles county\nla_county_campuses = df[df['County'] == 'Los Angeles']\n\n# Get the campuses' names\nla_county_campuses_names = la_county_campuses['Campus'].tolist()\n\n# Print the campuses' names\nprint(la_county_campuses_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses are located in the county of Los Angeles?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Los Angeles county\nla_county_campuses = df[df['County'] == 'Los Angeles']\n\n# Get the campuses' names\nla_county_campuses_names = la_county_campuses['Campus'].tolist()\n\n# Print the campuses' names\nprint(la_county_campuses_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What are the names of all campuses located at Chico?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Chico\ndf_chico = df[df['Location'] == 'Chico']\n\n# Save the answer in a variable\nanswer = df_chico['Campus'].values\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses are located in Chico?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Chico\ndf_chico = df[df['Location'] == 'Chico']\n\n# Save the answer in a variable\nanswer = df_chico['Campus'].values\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: Find all the campuses opened in 1958.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the year 1958\ndf_1958 = df[df['Year'] == 1958]\n\n# Save the answer in a variable\nanswer = df_1958['Campus'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What are the campuses that opened in 1958?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the year 1958\ndf_1958 = df[df['Year'] == 1958]\n\n# Save the answer in a variable\nanswer = df_1958['Campus'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: Which campus was opened between 1935 and 1939?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where the Year is between 1935 and 1939\ndf_filtered = df[(df['Year'] >= 1935) & (df['Year'] <= 1939)]\n\n# Get the Campus names for these years\ncampuses = df_filtered['Campus'].tolist()\n\n# Print the campuses\nprint(campuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses opened between 1935 and 1939?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where the Year is between 1935 and 1939\ndf_filtered = df[(df['Year'] >= 1935) & (df['Year'] <= 1939)]\n\n# Get the Campus names for these years\ncampuses = df_filtered['Campus'].tolist()\n\n# Print the campuses\nprint(campuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: Find the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame to only include rows where the 'Location' is 'Northridge' or 'San Francisco'\nfiltered_df = df.loc[(df['Location'] == 'Northridge') | (df['Location'] == 'San Francisco')]\n\n# Getting the names of the campuses\ncampus_names = filtered_df['Campus'].tolist()\n\nprint(campus_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame to only include rows where the 'Location' is 'Northridge' or 'San Francisco'\nfiltered_df = df.loc[(df['Location'] == 'Northridge') | (df['Location'] == 'San Francisco')]\n\n# Getting the names of the campuses\ncampus_names = filtered_df['Campus'].tolist()\n\nprint(campus_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: Find the count of universities whose campus fee is greater than the average campus fee.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average campus fee\navg_campus_fee = df['CampusFee'].mean()\n\n# filter universities whose campus fee is greater than the average\nfiltered_df = df[df['CampusFee'] > avg_campus_fee]\n\n# find the count of universities\ncount_universities = len(filtered_df)\n\n# print the count of universities\nprint(count_universities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: How many universities have a campus fee higher than average?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average campus fee\navg_campus_fee = df['CampusFee'].mean()\n\n# filter universities whose campus fee is greater than the average\nfiltered_df = df[df['CampusFee'] > avg_campus_fee]\n\n# find the count of universities\ncount_universities = len(filtered_df)\n\n# print the count of universities\nprint(count_universities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: Find the count of universities whose campus fee is greater than the average campus fee.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average campus fee\navg_campus_fee = df['CampusFee'].mean()\n\n# filter universities whose campus fee is greater than the average\nfiltered_df = df[df['CampusFee'] > avg_campus_fee]\n\n# find the count of universities\ncount_universities = len(filtered_df)\n\n# print the count of universities\nprint(count_universities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: How many universities have a campus fee greater than the average?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average campus fee\navg_campus_fee = df['CampusFee'].mean()\n\n# filter universities whose campus fee is greater than the average\nfiltered_df = df[df['CampusFee'] > avg_campus_fee]\n\n# find the count of universities\ncount_universities = len(filtered_df)\n\n# print the count of universities\nprint(count_universities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: Which university is in Los Angeles county and opened after 1950?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where the 'County' is 'Los Angeles' and 'Year' is greater than 1950\nfiltered_df = df[(df['County'] == 'Los Angeles') & (df['Year'] > 1950)]\n\n# Save the answer in a variable\nanswer = filtered_df['Campus'].values\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses are located in Los Angeles county and opened after 1950?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where the 'County' is 'Los Angeles' and 'Year' is greater than 1950\nfiltered_df = df[(df['County'] == 'Los Angeles') & (df['Year'] > 1950)]\n\n# Save the answer in a variable\nanswer = filtered_df['Campus'].values\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nYear,Campus,Degrees\n1990,1,701\n1991,1,681\n1992,1,791\n1993,1,801\n1994,1,849\n1995,1,818\n1996,1,804\n1997,1,928\n1998,1,816\n1999,1,959\n\nQuestion: Which year has the most degrees conferred?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# group by Year and sum the Degrees\ndf_sum = df.groupby('Year')['Degrees'].sum()\n\n# find the year with the maximum degrees\nmax_degree_year = df_sum.idxmax()\n\nprint(max_degree_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nYear,Campus,Degrees\n1990,1,701\n1991,1,681\n1992,1,791\n1993,1,801\n1994,1,849\n1995,1,818\n1996,1,804\n1997,1,928\n1998,1,816\n1999,1,959\n\nQuestion: In what year was the most degrees conferred?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# group by Year and sum the Degrees\ndf_sum = df.groupby('Year')['Degrees'].sum()\n\n# find the year with the maximum degrees\nmax_degree_year = df_sum.idxmax()\n\nprint(max_degree_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nYear,Campus,Degrees\n1990,1,701\n1991,1,681\n1992,1,791\n1993,1,801\n1994,1,849\n1995,1,818\n1996,1,804\n1997,1,928\n1998,1,816\n1999,1,959\n\nQuestion: Which campus has the most degrees conferred in all times?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncampus_degrees = df.groupby('Campus')['Degrees'].sum()\nmost_degrees_campus = campus_degrees.idxmax()\n\nprint(\"The campus with the most degrees conferred is:\", most_degrees_campus)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nYear,Campus,Degrees\n1990,1,701\n1991,1,681\n1992,1,791\n1993,1,801\n1994,1,849\n1995,1,818\n1996,1,804\n1997,1,928\n1998,1,816\n1999,1,959\n\nQuestion: What campus has the most degrees  conferrred over its entire existence?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncampus_degrees = df.groupby('Campus')['Degrees'].sum()\nmost_degrees_campus = campus_degrees.idxmax()\n\nprint(\"The campus with the most degrees conferred is:\", most_degrees_campus)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: Find the average fee on a CSU campus in 1996", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the year 1996\ndf_1996 = df[df['Year'] == 1996]\n\n# Calculate the average fee\naverage_fee = df_1996['CampusFee'].mean()\n\nprint(average_fee)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,CampusFee\n1,1996,1951\n2,2003,1868\n3,1996,2042\n4,1996,1816\n5,1996,1818\n6,1996,1916\n7,1996,1797\n8,1996,1884\n9,1996,1824\n10,1996,1751\n\nQuestion: What is the average fee for a CSU campus in the year of 1996?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the year 1996\ndf_1996 = df[df['Year'] == 1996]\n\n# Calculate the average fee\naverage_fee = df_1996['CampusFee'].mean()\n\nprint(average_fee)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: How many campuses are there in Los Angeles county?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df[df['County'] == 'Los Angeles']['County'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: How many campuses exist are in the county of LA?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df[df['County'] == 'Los Angeles']['County'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: List the campuses in Los Angeles county.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Los Angeles county\nla_county_campuses = df[df['County'] == 'Los Angeles']\n\n# Get the campuses' names\nla_county_campuses_names = la_county_campuses['Campus'].tolist()\n\n# Print the campuses' names\nprint(la_county_campuses_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What campuses are in Los Angeles county?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include campuses in Los Angeles county\nla_county_campuses = df[df['County'] == 'Los Angeles']\n\n# Get the campuses' names\nla_county_campuses_names = la_county_campuses['Campus'].tolist()\n\n# Print the campuses' names\nprint(la_county_campuses_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,Faculty\n1,2002,357.1\n2,2002,48.4\n3,2002,742.8\n4,2002,449.8\n5,2002,552.0\n6,2002,694.6\n7,2002,1257.3\n8,2002,435.4\n9,2002,1429.0\n10,2002,831.5\n\nQuestion: How many faculty is there in total in the year of 2002?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows with 'Year' equal to 2002\ndf_2002 = df[df['Year'] == 2002]\n\n# Calculate the total faculty in 2002\ntotal_faculty_2002 = df_2002['Faculty'].sum()\n\n# Print the total faculty in 2002\nprint(total_faculty_2002)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCampus,Year,Faculty\n1,2002,357.1\n2,2002,48.4\n3,2002,742.8\n4,2002,449.8\n5,2002,552.0\n6,2002,694.6\n7,2002,1257.3\n8,2002,435.4\n9,2002,1429.0\n10,2002,831.5\n\nQuestion: How many faculty, in total, are there in the year 2002?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows with 'Year' equal to 2002\ndf_2002 = df[df['Year'] == 2002]\n\n# Calculate the total faculty in 2002\ntotal_faculty_2002 = df_2002['Faculty'].sum()\n\n# Print the total faculty in 2002\nprint(total_faculty_2002)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: How many CSU campuses are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_campuses = df.shape[0]\nprint(total_campuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nId,Campus,Location,County,Year\n1,California State University-Bakersfield,Bakersfield,Kern,1965\n2,California State University-Channel Islands,Camarillo,Ventura,2002\n3,California State University-Chico,Chico,Butte,1887\n4,California State University-Dominguez Hills,Carson,Los Angeles,1960\n5,California State University-East Bay,Hayward,Alameida,1957\n6,Fresno State University,Fresno,Fresno,1911\n7,California State University-Fullerton,Fullerton,Orange,1957\n8,Humboldt State University,Arcata,Humboldt,1913\n9,Long Beach State University,Long Beach,Los Angeles,1949\n10,California State University-Los Angeles,Los Angeles,Los Angeles,1947\n\nQuestion: What is the total number of campuses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_campuses = df.shape[0]\nprint(total_campuses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: How many candidates are there?", "response": "import pandas as pd\n\n# load the data from the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of unique candidates\nnum_candidates = df['Candidate_ID'].nunique()\n\n# print the number of candidates\nprint(num_candidates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Count the number of candidates.", "response": "import pandas as pd\n\n# load the data from the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of unique candidates\nnum_candidates = df['Candidate_ID'].nunique()\n\n# print the number of candidates\nprint(num_candidates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Which poll resource provided the most number of candidate information?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group data by 'Poll_Source' and count unique 'Candidate_ID'\ngrouped_data = df.groupby('Poll_Source')['Candidate_ID'].nunique()\n\n# Find 'Poll_Source' with the highest count\npoll_source_with_most_candidates = grouped_data.idxmax()\n\nprint(poll_source_with_most_candidates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Return the poll resource associated with the most candidates.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group data by 'Poll_Source' and count unique 'Candidate_ID'\ngrouped_data = df.groupby('Poll_Source')['Candidate_ID'].nunique()\n\n# Find 'Poll_Source' with the highest count\npoll_source_with_most_candidates = grouped_data.idxmax()\n\nprint(poll_source_with_most_candidates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: what are the top 3 highest support rates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by 'Support_rate' in descending order\ndf_sorted = df.sort_values(by='Support_rate', ascending=False)\n\n# Selecting the top 3 rows\ntop_3_rows = df_sorted.head(3)\n\n# Save the answer in a variable\nanswer = top_3_rows['Support_rate'].values\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Return the top 3 greatest support rates.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by 'Support_rate' in descending order\ndf_sorted = df.sort_values(by='Support_rate', ascending=False)\n\n# Selecting the top 3 rows\ntop_3_rows = df_sorted.head(3)\n\n# Save the answer in a variable\nanswer = top_3_rows['Support_rate'].values\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Find the id of the candidate who got the lowest oppose rate.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the candidate with the lowest oppose rate\nlowest_oppose_rate_candidate = df[df['Oppose_rate'] == df['Oppose_rate'].min()]['Candidate_ID'].values[0]\n\n# Print the result\nprint(lowest_oppose_rate_candidate)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: What is the id of the candidate with the lowest oppose rate?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the candidate with the lowest oppose rate\nlowest_oppose_rate_candidate = df[df['Oppose_rate'] == df['Oppose_rate'].min()]['Candidate_ID'].values[0]\n\n# Print the result\nprint(lowest_oppose_rate_candidate)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Unsure_rate'\ndf = df.sort_values(by='Unsure_rate')\n\n# Select the 'Support_rate', 'Consider_rate', and 'Oppose_rate' columns\nanswer = df[['Support_rate', 'Consider_rate', 'Oppose_rate']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Unsure_rate'\ndf = df.sort_values(by='Unsure_rate')\n\n# Select the 'Support_rate', 'Consider_rate', and 'Oppose_rate' columns\nanswer = df[['Support_rate', 'Consider_rate', 'Oppose_rate']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: which poll source does the highest oppose rate come from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_oppose_rate_source = df.loc[df['Oppose_rate'].idxmax(), 'Poll_Source']\n\nprint(highest_oppose_rate_source)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Return the poll source corresponding to the candidate who has the oppose rate.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_oppose_rate_source = df.loc[df['Oppose_rate'].idxmax(), 'Poll_Source']\n\nprint(highest_oppose_rate_source)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: List all people names in the order of their date of birth from old to young.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the Date_of_Birth column to datetime type\ndf['Date_of_Birth'] = pd.to_datetime(df['Date_of_Birth'], format='%d.%m.%Y')\n\n# Sort the DataFrame by Date_of_Birth in ascending order\ndf = df.sort_values('Date_of_Birth')\n\n# Get the names in sorted order\nnames_sorted = df['Name'].tolist()\n\n# Print the names\nprint(names_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What are the names of all people, ordered by their date of birth?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the Date_of_Birth column to datetime type\ndf['Date_of_Birth'] = pd.to_datetime(df['Date_of_Birth'], format='%d.%m.%Y')\n\n# Sort the DataFrame by Date_of_Birth in ascending order\ndf = df.sort_values('Date_of_Birth')\n\n# Get the names in sorted order\nnames_sorted = df['Name'].tolist()\n\n# Print the names\nprint(names_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: Find the average height and weight for all males (sex is M).", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to get only rows where 'Sex' is 'M'\ndf_males = df[df['Sex'] == 'M']\n\n# Compute average height and weight\naverage_height = df_males['Height'].mean()\naverage_weight = df_males['Weight'].mean()\n\n# Save the answer in a variable and print it\nanswer = (average_height, average_weight)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What are the average height and weight across males (sex is M)?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to get only rows where 'Sex' is 'M'\ndf_males = df[df['Sex'] == 'M']\n\n# Compute average height and weight\naverage_height = df_males['Height'].mean()\naverage_weight = df_males['Weight'].mean()\n\n# Save the answer in a variable and print it\nanswer = (average_height, average_weight)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: find the names of people who are taller than 200 or lower than 190.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the Height column to numeric\ndf['Height'] = pd.to_numeric(df['Height'], errors='coerce')\n\n# Filter the dataframe for people who are taller than 200 or lower than 190\nfiltered_df = df[(df['Height'] > 200) | (df['Height'] < 190)]\n\n# Get the names of the people who meet the criteria\nnames = filtered_df['Name'].tolist()\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What are the names of people who have a height greater than 200 or less than 190?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the Height column to numeric\ndf['Height'] = pd.to_numeric(df['Height'], errors='coerce')\n\n# Filter the dataframe for people who are taller than 200 or lower than 190\nfiltered_df = df[(df['Height'] > 200) | (df['Height'] < 190)]\n\n# Get the names of the people who meet the criteria\nnames = filtered_df['Name'].tolist()\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: Find the average and minimum weight for each gender.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Sex' and then get the average and minimum 'Weight' for each group.\ngrouped = df.groupby('Sex').agg({'Weight': ['mean', 'min']})\n\n# Reset the index of the grouped dataframe.\ngrouped.reset_index(inplace=True)\n\n# Print the grouped dataframe.\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What are the average and minimum weights for people of each sex?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Sex' and then get the average and minimum 'Weight' for each group.\ngrouped = df.groupby('Sex').agg({'Weight': ['mean', 'min']})\n\n# Reset the index of the grouped dataframe.\ngrouped.reset_index(inplace=True)\n\n# Print the grouped dataframe.\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: how many people are there whose weight is higher than 85 for each gender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Weight' is greater than 85\nheavy_people = df[df['Weight'] > 85]\n\n# Count the number of people for each gender\ncount_heavy_people = heavy_people['Sex'].value_counts()\n\nprint(count_heavy_people)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: Count the number of people of each sex who have a weight higher than 85.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Weight' is greater than 85\nheavy_people = df[df['Weight'] > 85]\n\n# Count the number of people for each gender\ncount_heavy_people = heavy_people['Sex'].value_counts()\n\nprint(count_heavy_people)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Calculate the maximum support rate, minimum consider rate and minimum oppose rate\nmax_support_rate = df['Support_rate'].max()\nmin_consider_rate = df['Consider_rate'].min()\nmin_oppose_rate = df['Oppose_rate'].min()\n\n# Save the answer in a variable\nanswer = (max_support_rate, min_consider_rate, min_oppose_rate)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCandidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate\n1,1,WNBC/Marist Poll,Feb 12–15, 2007,0.25,0.3,0.43,0.2\n2,3,WNBC/Marist Poll,Feb 12–15, 2007,0.17,0.42,0.32,0.9\n3,4,FOX News/Opinion Dynamics Poll,Feb 13–14, 2007,0.18,0.34,0.44,0.3\n4,6,Newsweek Poll,Nov 9–10, 2006,0.33,0.2,0.45,0.2\n5,7,Newsweek Poll,Nov 9–10, 2006,0.24,0.3,0.32,0.4\n6,9,Newsweek Poll,Nov 9–10, 2006,0.24,0.27,0.43,0.2\n\nQuestion: Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Calculate the maximum support rate, minimum consider rate and minimum oppose rate\nmax_support_rate = df['Support_rate'].max()\nmin_consider_rate = df['Consider_rate'].min()\nmin_oppose_rate = df['Oppose_rate'].min()\n\n# Save the answer in a variable\nanswer = (max_support_rate, min_consider_rate, min_oppose_rate)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: find the name of people whose height is lower than the average.", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average height\naverage_height = df['Height'].mean()\n\n# Filter the DataFrame to get people whose height is lower than the average\nfiltered_df = df[df['Height'] < average_height]\n\n# Save the names of the people in a list\nnames = filtered_df['Name'].tolist()\n\n# Print the list of names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What are the names of people who are shorter than average?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average height\naverage_height = df['Height'].mean()\n\n# Filter the DataFrame to get people whose height is lower than the average\nfiltered_df = df[df['Height'] < average_height]\n\n# Save the names of the people in a list\nnames = filtered_df['Name'].tolist()\n\n# Print the list of names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: List all info about all people.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPeople_ID,Sex,Name,Date_of_Birth,Height,Weight\n1,M,Hubert Henno,06.10.1976,188.0,83.0\n2,M,Dominique Daquin,10.11.1972,197.0,85.0\n3,F,Stéphane Antiga,03.02.1976,200.0,94.0\n4,M,Laurent Capet,05.05.1972,202.0,92.0\n5,F,Frantz Granvorka,10.03.1976,195.0,90.0\n6,M,Vincent Montméat,01.09.1977,196.0,88.0\n7,M,Loïc De Kergret,20.08.1970,193.0,89.0\n8,M,Philippe Barça-Cysique,22.04.1977,194.0,88.0\n9,M,Guillaume Samica,28.09.1981,196.0,82.0\n\nQuestion: What is all the information about all people?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: Find the titles of all movies directed by steven spielberg.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe by director Steven Spielberg\nspielberg_movies = df[df['director'] == 'Steven Spielberg']\n\n# Extract movie titles\nmovie_titles = spielberg_movies['title'].tolist()\n\n# Print the movie titles\nprint(movie_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the names of all movies directed by Steven Spielberg?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe by director Steven Spielberg\nspielberg_movies = df[df['director'] == 'Steven Spielberg']\n\n# Extract movie titles\nmovie_titles = spielberg_movies['title'].tolist()\n\n# Print the movie titles\nprint(movie_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What is the name of the movie produced after 2000 and directed by James Cameron?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only movies directed by James Cameron after 2000\njames_cameron_after_2000 = df[(df['director'] == 'James Cameron') & (df['year'] > 2000)]\n\n# Get the titles of these movies\ntitles = james_cameron_after_2000['title']\n\n# Print the titles\nfor title in titles:\n    print(title)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the titles of all movies that James Cameron directed after 2000?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only movies directed by James Cameron after 2000\njames_cameron_after_2000 = df[(df['director'] == 'James Cameron') & (df['year'] > 2000)]\n\n# Get the titles of these movies\ntitles = james_cameron_after_2000['title']\n\n# Print the titles\nfor title in titles:\n    print(title)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: How many movies were made before 2000?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include movies made before the year 2000\ndf_before_2000 = df[df['year'] < 2000]\n\n# Count the number of movies\nnum_movies_before_2000 = len(df_before_2000)\n\n# Print the number of movies made before 2000\nprint(num_movies_before_2000)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: How many movies were made before 2000?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include movies made before the year 2000\ndf_before_2000 = df[df['year'] < 2000]\n\n# Count the number of movies\nnum_movies_before_2000 = len(df_before_2000)\n\n# Print the number of movies made before 2000\nprint(num_movies_before_2000)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: Who is the director of movie Avatar?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the title is 'Avatar'\navatar_df = df[df['title'] == 'Avatar']\n\n# Get the director of 'Avatar' from the filtered DataFrame\ndirector = avatar_df['director'].values[0]\n\n# Print the director\nprint(director)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: Who directed Avatar?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the title is 'Avatar'\navatar_df = df[df['title'] == 'Avatar']\n\n# Get the director of 'Avatar' from the filtered DataFrame\ndirector = avatar_df['director'].values[0]\n\n# Print the director\nprint(director)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: How many reviewers listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_reviewers = len(df)\n\nprint(total_reviewers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: How many reviewers are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_reviewers = len(df)\n\nprint(total_reviewers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: What is the id of the reviewer whose name has substring “Mike”?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'name' column contains 'Mike'\ndf_mike = df[df['name'].str.contains('Mike')]\n\n# Get the 'rID' of the first row in the filtered dataframe\nreviewer_id = df_mike.iloc[0]['rID']\n\n# Print the reviewer id\nprint(reviewer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: What is the id of the reviewer whose name includes the word \"Mike\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'name' column contains 'Mike'\ndf_mike = df[df['name'].str.contains('Mike')]\n\n# Get the 'rID' of the first row in the filtered dataframe\nreviewer_id = df_mike.iloc[0]['rID']\n\n# Print the reviewer id\nprint(reviewer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: What is the reviewer id of Daniel Lewis?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the row where the name is 'Daniel Lewis'\nrow = df[df['name'] == 'Daniel Lewis']\n\n# Extract the rID value from the row\nreviewer_id = row['rID'].values[0]\n\n# Print the reviewer id\nprint(reviewer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,name\n201,Sarah Martinez\n202,Daniel Lewis\n203,Brittany Harris\n204,Mike Anderson\n205,Chris Jackson\n206,Elizabeth Thomas\n207,James Cameron\n208,Ashley White\n\nQuestion: What is the id of the reviewer named Daniel Lewis?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the row where the name is 'Daniel Lewis'\nrow = df[df['name'] == 'Daniel Lewis']\n\n# Extract the rID value from the row\nreviewer_id = row['rID'].values[0]\n\n# Print the reviewer id\nprint(reviewer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: What is the total number of ratings that has more than 3 stars?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['stars'] > 3]\nanswer = df.shape[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: How many movie ratings have more than 3 stars?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['stars'] > 3]\nanswer = df.shape[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: What is the lowest and highest rating star?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum and minimum number of stars\nmax_stars = df['stars'].max()\nmin_stars = df['stars'].min()\n\n# Save the answer in a variable and print the variable\nanswer = (max_stars, min_stars)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: What is the maximum and mininum number of stars a rating can receive?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum and minimum number of stars\nmax_stars = df['stars'].max()\nmin_stars = df['stars'].min()\n\n# Save the answer in a variable and print the variable\nanswer = (max_stars, min_stars)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What is the name of the most recent movie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the year column to integer\ndf['year'] = df['year'].astype(int)\n\n# Find the most recent year\nmost_recent_year = df['year'].max()\n\n# Find the title of the movie from the most recent year\nmost_recent_movie = df[df['year'] == most_recent_year]['title'].values[0]\n\nprint(most_recent_movie)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What is the title of the newest movie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the year column to integer\ndf['year'] = df['year'].astype(int)\n\n# Find the most recent year\nmost_recent_year = df['year'].max()\n\n# Find the title of the movie from the most recent year\nmost_recent_movie = df[df['year'] == most_recent_year]['title'].values[0]\n\nprint(most_recent_movie)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What is the names of movies whose created year is after all movies directed by Steven Spielberg?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, filter rows where the director is Steven Spielberg\nspielberg_movies = df[df['director'] == 'Steven Spielberg']\n\n# Get the year of the last movie made by Steven Spielberg\nspielberg_last_movie_year = spielberg_movies['year'].max()\n\n# Filter rows where the year is greater than the year of the last Steven Spielberg movie\nmovies_after_spielberg = df[df['year'] > spielberg_last_movie_year]\n\n# Get the titles of these movies\ntitles = movies_after_spielberg['title'].tolist()\n\n# Print the titles\nprint(titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the names of all movies that were created after the most recent Steven Spielberg film?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, filter rows where the director is Steven Spielberg\nspielberg_movies = df[df['director'] == 'Steven Spielberg']\n\n# Get the year of the last movie made by Steven Spielberg\nspielberg_last_movie_year = spielberg_movies['year'].max()\n\n# Filter rows where the year is greater than the year of the last Steven Spielberg movie\nmovies_after_spielberg = df[df['year'] > spielberg_last_movie_year]\n\n# Get the titles of these movies\ntitles = movies_after_spielberg['title'].tolist()\n\n# Print the titles\nprint(titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by director and filter those who have directed more than one movie\ndirectors_with_multiple_movies = df.groupby('director').filter(lambda x: len(x) > 1)\n\n# for those who have directed more than one movie, get the movies they directed\nmovies_directed_by_multiple_directors = directors_with_multiple_movies[['title', 'director']]\n\n# print the result\nprint(movies_directed_by_multiple_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: For all directors who have directed more than one movie, what movies have they directed and what are their names?", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by director and filter those who have directed more than one movie\ndirectors_with_multiple_movies = df.groupby('director').filter(lambda x: len(x) > 1)\n\n# for those who have directed more than one movie, get the movies they directed\nmovies_directed_by_multiple_directors = directors_with_multiple_movies[['title', 'director']]\n\n# print the result\nprint(movies_directed_by_multiple_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: For directors who had more than one movie, return the titles and produced years of all movies directed by them.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.groupby('director').filter(lambda x: len(x) > 1)\ndf = df[['title', 'year']]\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: For each director who directed more than one movie, what are the titles and dates of release for all those movies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.groupby('director').filter(lambda x: len(x) > 1)\ndf = df[['title', 'year']]\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the names of the directors who made exactly one movie excluding director NULL?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.dropna(subset=['director'])\ndirectors = df['director'].value_counts()\nanswer = directors[directors == 1].index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the names of all directors who have made one movie except for the director named NULL?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.dropna(subset=['director'])\ndirectors = df['director'].value_counts()\nanswer = directors[directors == 1].index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: Find the average rating star for each movie that received at least 2 ratings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the dataframe to include only movies that received at least 2 ratings\ndf_2_ratings = df.groupby('mID').filter(lambda x: len(x) >= 2)\n\n# Computing the average star rating for each movie in the filtered dataframe\naverage_ratings = df_2_ratings.groupby('mID')['stars'].mean()\n\n# Printing the result\nprint(average_ratings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: For each movie that received more than 3 reviews, what is the average rating?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the dataframe to include only movies that received at least 2 ratings\ndf_2_ratings = df.groupby('mID').filter(lambda x: len(x) >= 2)\n\n# Computing the average star rating for each movie in the filtered dataframe\naverage_ratings = df_2_ratings.groupby('mID')['stars'].mean()\n\n# Printing the result\nprint(average_ratings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: find the ids of reviewers who did not give 4 star.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter out the reviewers who gave 4 stars\nreviewers_4_stars = df[df['stars'] == 4]['rID'].unique()\n\n# Filter out the reviewers who did not give 4 stars\nreviewers_not_4_stars = df[~df['rID'].isin(reviewers_4_stars)]['rID'].unique()\n\n# Print the reviewers who did not give 4 stars\nprint(reviewers_not_4_stars)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: What are the ids of all reviewers who did not give 4 stars?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter out the reviewers who gave 4 stars\nreviewers_4_stars = df[df['stars'] == 4]['rID'].unique()\n\n# Filter out the reviewers who did not give 4 stars\nreviewers_not_4_stars = df[~df['rID'].isin(reviewers_4_stars)]['rID'].unique()\n\n# Print the reviewers who did not give 4 stars\nprint(reviewers_not_4_stars)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: Find the ids of reviewers who didn't only give 4 star.", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for rows where 'stars' is not equal to 4\ndf_not_four_stars = df[df['stars'] != 4]\n\n# Select the 'rID' column from the filtered dataframe\nreviewer_ids = df_not_four_stars['rID']\n\n# Print the reviewer ids\nprint(reviewer_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrID,mID,stars,ratingDate\n201,101,2,2011-01-22\n201,101,4,2011-01-27\n202,106,4,\n203,103,2,2011-01-20\n203,108,4,2011-01-12\n203,108,2,2011-01-30\n204,101,3,2011-01-09\n205,103,3,2011-01-27\n205,104,2,2011-01-22\n205,108,4,\n\nQuestion: What are the ids of all reviewers who have not given 4 stars at least once?", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for rows where 'stars' is not equal to 4\ndf_not_four_stars = df[df['stars'] != 4]\n\n# Select the 'rID' column from the filtered dataframe\nreviewer_ids = df_not_four_stars['rID']\n\n# Print the reviewer ids\nprint(reviewer_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are names of the movies that are either made before 1980 or directed by James Cameron?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['year'] < 1980) | (df['director'] == 'James Cameron')]\n\n# Save the answer in a variable\nanswer = filtered_df['title'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmID,title,year,director\n101,Gone with the Wind,1939,Victor Fleming\n102,Star Wars,1977,George Lucas\n103,The Sound of Music,1965,Robert Wise\n104,E.T.,1982,Steven Spielberg\n105,Titanic,1997,James Cameron\n106,Snow White,1937,\n107,Avatar,2009,James Cameron\n108,Raiders of the Lost Ark,1981,Steven Spielberg\n\nQuestion: What are the names of all movies made before 1980 or had James Cameron as the director?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['year'] < 1980) | (df['director'] == 'James Cameron')]\n\n# Save the answer in a variable\nanswer = filtered_df['title'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: How many counties are there?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of countries\nnum_countries = df['County_ID'].nunique()\n\n# Print the number of countries\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Count the number of countries.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of countries\nnum_countries = df['County_ID'].nunique()\n\n# Print the number of countries\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: List the names of counties in descending order of population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the data by population in descending order\ndf_sorted = df.sort_values(by='Population', ascending=False)\n\n# Getting the names of the counties\ncounty_names = df_sorted['Name'].tolist()\n\n# Printing the names of the counties\nprint(county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What are the names of the counties of public safety, ordered by population descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the data by population in descending order\ndf_sorted = df.sort_values(by='Population', ascending=False)\n\n# Getting the names of the counties\ncounty_names = df_sorted['Name'].tolist()\n\n# Printing the names of the counties\nprint(county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: List the distinct police forces of counties whose location is not on east side.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get counties not located in the East\ndf_not_east = df[df['Location'] != 'East']\n\n# Get unique police forces of counties not located in the East\nunique_police_forces = df_not_east['Police_force'].unique()\n\n# Save the answer in a variable and print it\nanswer = unique_police_forces\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What are the different police forces of counties that are not located in the East?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get counties not located in the East\ndf_not_east = df[df['Location'] != 'East']\n\n# Get unique police forces of counties not located in the East\nunique_police_forces = df_not_east['Police_force'].unique()\n\n# Save the answer in a variable and print it\nanswer = unique_police_forces\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What are the minimum and maximum crime rate of counties?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum and maximum crime rates\nmin_crime_rate = df['Crime_rate'].min()\nmax_crime_rate = df['Crime_rate'].max()\n\n# Save the answer in a variable\nanswer = (min_crime_rate, max_crime_rate)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Return the minimum and maximum crime rates across all counties.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum and maximum crime rates\nmin_crime_rate = df['Crime_rate'].min()\nmax_crime_rate = df['Crime_rate'].max()\n\n# Save the answer in a variable\nanswer = (min_crime_rate, max_crime_rate)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Show the crime rates of counties in ascending order of number of police officers.", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by the 'Police_officers' column in ascending order\ndf_sorted = df.sort_values('Police_officers')\n\n# Save the 'Crime_rate' column of the sorted DataFrame into a variable\ncrime_rates = df_sorted['Crime_rate']\n\n# Print the crime rates\nprint(crime_rates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What are the crime rates of counties sorted by number of offices ascending?", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by the 'Police_officers' column in ascending order\ndf_sorted = df.sort_values('Police_officers')\n\n# Save the 'Crime_rate' column of the sorted DataFrame into a variable\ncrime_rates = df_sorted['Crime_rate']\n\n# Print the crime rates\nprint(crime_rates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: What are the names of cities in ascending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all city names\ncity_names = df['Name']\n\n# Sort city names alphabetically\nsorted_city_names = city_names.sort_values()\n\n# Convert to list and save in a variable\nsorted_city_names_list = sorted_city_names.tolist()\n\n# Print the result\nprint(sorted_city_names_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: Return the names of cities, ordered alphabetically.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all city names\ncity_names = df['Name']\n\n# Sort city names alphabetically\nsorted_city_names = city_names.sort_values()\n\n# Convert to list and save in a variable\nsorted_city_names_list = sorted_city_names.tolist()\n\n# Print the result\nprint(sorted_city_names_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: What are the percentage of hispanics in cities with the black percentage higher than 10?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where black percentage is higher than 10\ndf_filtered = df[df['Black'] > 10]\n\n# Select the hispanic percentage column\nhispanic_percentage = df_filtered['Hispanic']\n\n# Print the hispanic percentage\nprint(hispanic_percentage)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: Return the hispanic percentage for cities in which the black percentage is greater than 10.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where black percentage is higher than 10\ndf_filtered = df[df['Black'] > 10]\n\n# Select the hispanic percentage column\nhispanic_percentage = df_filtered['Hispanic']\n\n# Print the hispanic percentage\nprint(hispanic_percentage)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: List the name of the county with the largest population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_population = df['Population'].max()\nmax_population_county = df[df['Population'] == max_population]['Name'].values[0]\n\nprint(max_population_county)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What is the name of the county with the greatest population?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_population = df['Population'].max()\nmax_population_county = df[df['Population'] == max_population]['Name'].values[0]\n\nprint(max_population_county)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: List the names of the city with the top 5 white percentages.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntop_5_white = df.nlargest(5, 'White')['Name'].tolist()\n\nprint(top_5_white)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic\n1,1,Adjuntas,93.1,3.1,0.3,0.0,3.4,99.6\n2,1,Aguada,86.6,5.3,0.3,0.1,7.7,99.4\n3,1,Aguadilla,83.0,7.4,0.3,0.2,8.2,98.5\n4,2,Aguas Buenas,72.5,12.6,0.6,0.1,14.2,99.5\n5,2,Aibonito,83.5,7.3,0.2,0.0,9.0,99.3\n6,3,Añasco,82.0,7.2,0.4,0.1,10.3,99.2\n7,3,Arecibo,84.5,6.1,0.4,0.1,7.9,99.2\n8,3,Arroyo,53.5,32.5,0.9,0.2,13.0,99.1\n9,3,Barceloneta,80.7,7.6,0.3,0.1,11.2,99.4\n10,3,Barranquitas,86.0,5.4,0.3,0.0,8.3,99.3\n\nQuestion: What are the names of the five cities with the greatest proportion of white people?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntop_5_white = df.nlargest(5, 'White')['Name'].tolist()\n\nprint(top_5_white)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Please show the police forces and the number of counties with each police force.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Police_force and count the number of counties in each group\ncounts = df.groupby('Police_force')['Name'].count()\n\nprint(counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: How many counties correspond to each police force?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Police_force and count the number of counties in each group\ncounts = df.groupby('Police_force')['Name'].count()\n\nprint(counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What is the location shared by most counties?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of counties in each location\nlocation_counts = df['Location'].value_counts()\n\n# Get the location with the most counties\nmost_counties_location = location_counts.idxmax()\n\n# Print the location with the most counties\nprint(most_counties_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Which location has the most corresponding counties?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of counties in each location\nlocation_counts = df['Location'].value_counts()\n\n# Get the location with the most counties\nmost_counties_location = location_counts.idxmax()\n\n# Print the location with the most counties\nprint(most_counties_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Show the police force shared by counties with location on the east and west.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique police forces for counties in East\neast_forces = df[df['Location'] == 'East']['Police_force'].unique()\n\n# Get unique police forces for counties in West\nwest_forces = df[df['Location'] == 'West']['Police_force'].unique()\n\n# Find intersection of forces from East and West\ncommon_forces = set(east_forces) & set(west_forces)\n\n# Print the common forces\nprint(common_forces)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Which police forces operate in both counties that are located in the East and in the West?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique police forces for counties in East\neast_forces = df[df['Location'] == 'East']['Police_force'].unique()\n\n# Get unique police forces for counties in West\nwest_forces = df[df['Location'] == 'West']['Police_force'].unique()\n\n# Find intersection of forces from East and West\ncommon_forces = set(east_forces) & set(west_forces)\n\n# Print the common forces\nprint(common_forces)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: Show the case burden of counties in descending order of population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by='Population', ascending=False)\nburden_order = df['Case_burden'].tolist()\n\nprint(burden_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location\n1,Abbotsford,128165,187,685,81,118.0,Abbotsford Police Department,East\n2,Burnaby,204320,253,808,100,123.0,RCMP,East\n3,Campbell River,30810,40,770,137,178.0,RCMP,West\n4,Castlegar,7821,11,711,107,150.0,RCMP,North\n5,Central Saanich,16821,21,801,39,49.0,Central Saanich Police,East\n6,Chilliwack,73066,91,803,140,174.0,RCMP,West\n\nQuestion: What are the case burdens of counties, ordered descending by population?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by='Population', ascending=False)\nburden_order = df['Case_burden'].tolist()\n\nprint(burden_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the names of all modern rooms with a base price below $160 and two beds.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get rows with modern decor and base price less than 160\nmodern_rooms = df[(df['decor'] == 'modern') & (df['basePrice'] < 160)]\n\n# Filter modern_rooms to get rows with two beds\ntwo_bed_modern_rooms = modern_rooms[modern_rooms['beds'] == 2]\n\n# Get room names of the filtered dataframe\nroom_names = two_bed_modern_rooms['roomName']\n\n# Print room names\nprint(room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the names of modern rooms that have a base price lower than $160 and two beds.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get rows with modern decor and base price less than 160\nmodern_rooms = df[(df['decor'] == 'modern') & (df['basePrice'] < 160)]\n\n# Filter modern_rooms to get rows with two beds\ntwo_bed_modern_rooms = modern_rooms[modern_rooms['beds'] == 2]\n\n# Get room names of the filtered dataframe\nroom_names = two_bed_modern_rooms['roomName']\n\n# Print room names\nprint(room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where basePrice is greater than 160 and maxOccupancy is greater than 2\nfiltered_data = df[(df['basePrice'] > 160) & (df['maxOccupancy'] > 2)]\n\n# Select only roomId and roomName columns\nanswer = filtered_data[['RoomId', 'roomName']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where basePrice is greater than 160 and maxOccupancy is greater than 2\nfiltered_data = df[(df['basePrice'] > 160) & (df['maxOccupancy'] > 2)]\n\n# Select only roomId and roomName columns\nanswer = filtered_data[['RoomId', 'roomName']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Room,CheckIn,CheckOut,Rate,LastName,FirstName,Adults,Kids\n10105,HBB,23-OCT-10,25-OCT-10,100.0,SELBIG,CONRAD,1,0\n10183,IBD,19-SEP-10,20-SEP-10,150.0,GABLER,DOLLIE,2,0\n10449,RND,30-SEP-10,01-OCT-10,150.0,KLESS,NELSON,1,0\n10489,AOB,02-FEB-10,05-FEB-10,218.75,CARISTO,MARKITA,2,1\n10500,HBB,11-AUG-10,12-AUG-10,90.0,YESSIOS,ANNIS,1,0\n10574,FNA,26-NOV-10,03-DEC-10,287.5,SWEAZY,ROY,2,1\n10984,AOB,28-DEC-10,01-JAN-11,201.25,ZULLO,WILLY,2,1\n10990,CAS,21-SEP-10,27-SEP-10,175.0,TRACHSEL,DAMIEN,1,3\n11631,FNA,10-APR-10,12-APR-10,312.5,ESPINO,MARCELINA,2,1\n11645,IBD,13-MAY-10,19-MAY-10,135.0,SWAIT,DAN,2,1\n\nQuestion: How many times does ROY SWEAZY has reserved a room.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nroy_sweazy_reservations = df[(df['FirstName'] == 'ROY') & (df['LastName'] == 'SWEAZY')].shape[0]\n\nprint(roy_sweazy_reservations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Room,CheckIn,CheckOut,Rate,LastName,FirstName,Adults,Kids\n10105,HBB,23-OCT-10,25-OCT-10,100.0,SELBIG,CONRAD,1,0\n10183,IBD,19-SEP-10,20-SEP-10,150.0,GABLER,DOLLIE,2,0\n10449,RND,30-SEP-10,01-OCT-10,150.0,KLESS,NELSON,1,0\n10489,AOB,02-FEB-10,05-FEB-10,218.75,CARISTO,MARKITA,2,1\n10500,HBB,11-AUG-10,12-AUG-10,90.0,YESSIOS,ANNIS,1,0\n10574,FNA,26-NOV-10,03-DEC-10,287.5,SWEAZY,ROY,2,1\n10984,AOB,28-DEC-10,01-JAN-11,201.25,ZULLO,WILLY,2,1\n10990,CAS,21-SEP-10,27-SEP-10,175.0,TRACHSEL,DAMIEN,1,3\n11631,FNA,10-APR-10,12-APR-10,312.5,ESPINO,MARCELINA,2,1\n11645,IBD,13-MAY-10,19-MAY-10,135.0,SWAIT,DAN,2,1\n\nQuestion: Find the number of times ROY SWEAZY has reserved a room.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nroy_sweazy_reservations = df[(df['FirstName'] == 'ROY') & (df['LastName'] == 'SWEAZY')].shape[0]\n\nprint(roy_sweazy_reservations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many king beds are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nking_beds = df[df['bedType'] == 'King']['beds'].sum()\n\nprint(king_beds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the total number of king beds available.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nking_beds = df[df['bedType'] == 'King']['beds'].sum()\n\nprint(king_beds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: List the names and decor of rooms that have a king bed. Sort the list by their price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rooms with king beds\nking_bed_rooms = df[df['bedType'] == 'King']\n\n# sort the dataframe by basePrice\nsorted_king_bed_rooms = king_bed_rooms.sort_values('basePrice')\n\n# select the roomName and decor columns\nanswer = sorted_king_bed_rooms[['roomName', 'decor']]\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the names and decor of rooms with a king bed? Sort them by their price", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rooms with king beds\nking_bed_rooms = df[df['bedType'] == 'King']\n\n# sort the dataframe by basePrice\nsorted_king_bed_rooms = king_bed_rooms.sort_values('basePrice')\n\n# select the roomName and decor columns\nanswer = sorted_king_bed_rooms[['roomName', 'decor']]\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Which room has cheapest base price? List the room's name and the base price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by basePrice in ascending order\ndf_sorted = df.sort_values('basePrice')\n\n# Getting the roomName and basePrice of the room with the lowest basePrice\nlowest_price_room = df_sorted.iloc[0][['roomName', 'basePrice']]\n\n# Printing the answer\nprint(lowest_price_room)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the room name and base price of the room with the lowest base price?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by basePrice in ascending order\ndf_sorted = df.sort_values('basePrice')\n\n# Getting the roomName and basePrice of the room with the lowest basePrice\nlowest_price_room = df_sorted.iloc[0][['roomName', 'basePrice']]\n\n# Printing the answer\nprint(lowest_price_room)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the decor of room Recluse and defiance?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row where roomName is 'Recluse and defiance'\nrow = df[df['roomName'] == 'Recluse and defiance']\n\n# Get the value of decor for this row\ndecor = row['decor'].values[0]\n\n# Print the answer\nprint(decor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Return the decor of the room named \"Recluse and defiance\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row where roomName is 'Recluse and defiance'\nrow = df[df['roomName'] == 'Recluse and defiance']\n\n# Get the value of decor for this row\ndecor = row['decor'].values[0]\n\n# Print the answer\nprint(decor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the average base price of different bed type? List bed type and average base price.", "response": "import pandas as pd\n\n# Load CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group data by 'bedType' and calculate the mean 'basePrice' for each group\naverage_prices = df.groupby('bedType')['basePrice'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: For each bed type, find the average base price of different bed type.", "response": "import pandas as pd\n\n# Load CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group data by 'bedType' and calculate the mean 'basePrice' for each group\naverage_prices = df.groupby('bedType')['basePrice'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the total number of people who could stay in the modern rooms in this inn?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the modern rooms\nmodern_rooms = df[df['decor'] == 'modern']\n\n# Calculate the total occupancy for modern rooms\ntotal_occupancy = modern_rooms['maxOccupancy'].sum()\n\n# Print the total occupancy\nprint(total_occupancy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many people in total can stay in the modern rooms of this inn?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the modern rooms\nmodern_rooms = df[df['decor'] == 'modern']\n\n# Calculate the total occupancy for modern rooms\ntotal_occupancy = modern_rooms['maxOccupancy'].sum()\n\n# Print the total occupancy\nprint(total_occupancy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many rooms are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_rooms = df.shape[0]\n\nprint(total_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the total number of rooms available in this inn?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_rooms = df.shape[0]\n\nprint(total_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the number of rooms with a king bed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['bedType'] = df['bedType'].str.lower()\nking_bed_count = df[df['bedType'] == 'king']['bedType'].count()\n\nprint(king_bed_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many rooms have a king bed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['bedType'] = df['bedType'].str.lower()\nking_bed_count = df[df['bedType'] == 'king']['bedType'].count()\n\nprint(king_bed_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the number of rooms for each bed type.", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the number of rooms for each bed type\nbed_type_counts = df['bedType'].value_counts()\n\n# Print the result\nprint(bed_type_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the number of rooms for each bed type?", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the number of rooms for each bed type\nbed_type_counts = df['bedType'].value_counts()\n\n# Print the result\nprint(bed_type_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the name of the room with the maximum occupancy.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['maxOccupancy'] == df['maxOccupancy'].max()]\n\nroom_name = df['roomName'].values[0]\n\nprint(room_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the name of the room that can accommodate the most people?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['maxOccupancy'] == df['maxOccupancy'].max()]\n\nroom_name = df['roomName'].values[0]\n\nprint(room_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the id and name of the most expensive base price room.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum base price\nmax_base_price = df['basePrice'].max()\n\n# Get the room id and name of the room with the maximum base price\nmost_expensive_room = df[df['basePrice'] == max_base_price][['RoomId', 'roomName']]\n\n# Print the id and name of the most expensive room\nprint(most_expensive_room)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Which room has the highest base price?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum base price\nmax_base_price = df['basePrice'].max()\n\n# Get the room id and name of the room with the maximum base price\nmost_expensive_room = df[df['basePrice'] == max_base_price][['RoomId', 'roomName']]\n\n# Print the id and name of the most expensive room\nprint(most_expensive_room)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: List the type of bed and name of all traditional rooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the rooms that are traditional\ntraditional_rooms = df[df['decor'] == 'traditional']\n\n# Select the columns 'bedType' and 'roomName'\nresult = traditional_rooms[['bedType', 'roomName']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the bed type and name of all the rooms with traditional decor?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the rooms that are traditional\ntraditional_rooms = df[df['decor'] == 'traditional']\n\n# Select the columns 'bedType' and 'roomName'\nresult = traditional_rooms[['bedType', 'roomName']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the number of rooms with king bed for each decor type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only the rows where bedType is 'King'\nking_beds = df[df['bedType'] == 'King']\n\n# Count the number of rooms for each decor type\nking_beds_count = king_beds['decor'].value_counts()\n\n# Save the answer in a variable\nanswer = king_beds_count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many rooms have king beds? Report the number for each decor type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only the rows where bedType is 'King'\nking_beds = df[df['bedType'] == 'King']\n\n# Count the number of rooms for each decor type\nking_beds_count = king_beds['decor'].value_counts()\n\n# Save the answer in a variable\nanswer = king_beds_count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the average and minimum price of the rooms in different decor.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'decor' and then find the average 'basePrice' and minimum 'basePrice'\ndf_grouped = df.groupby('decor').agg({'basePrice': ['mean', 'min']})\n\n# Reset the index of the grouped dataframe\ndf_grouped.reset_index(inplace=True)\n\n# Rename the columns for better understanding\ndf_grouped.columns = ['decor', 'avg_price', 'min_price']\n\n# Print the dataframe\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the average minimum and price of the rooms for each different decor.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'decor' and then find the average 'basePrice' and minimum 'basePrice'\ndf_grouped = df.groupby('decor').agg({'basePrice': ['mean', 'min']})\n\n# Reset the index of the grouped dataframe\ndf_grouped.reset_index(inplace=True)\n\n# Rename the columns for better understanding\ndf_grouped.columns = ['decor', 'avg_price', 'min_price']\n\n# Print the dataframe\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: List the name of all rooms sorted by their prices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf.sort_values(by='basePrice', inplace=True)\n\nsorted_room_names = df['roomName'].tolist()\n\nprint(sorted_room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Sort all the rooms according to the price. Just report the room names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf.sort_values(by='basePrice', inplace=True)\n\nsorted_room_names = df['roomName'].tolist()\n\nprint(sorted_room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the number of rooms with price higher than 120 for different decor.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the rooms with price higher than 120\nfiltered_df = df[df['basePrice'] > 120]\n\n# Group the dataframe by decor and count the number of rooms\ngrouped_df = filtered_df.groupby('decor').size()\n\n# Save the answer in a variable and print it\nanswer = grouped_df\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many rooms cost more than 120, for each different decor?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the rooms with price higher than 120\nfiltered_df = df[df['basePrice'] > 120]\n\n# Group the dataframe by decor and count the number of rooms\ngrouped_df = filtered_df.groupby('decor').size()\n\n# Save the answer in a variable and print it\nanswer = grouped_df\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: For each bed type, find the average room price.", "response": "import pandas as pd\n\n# Load CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group data by 'bedType' and calculate the mean 'basePrice' for each group\naverage_prices = df.groupby('bedType')['basePrice'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What is the average base price of rooms, for each bed type?", "response": "import pandas as pd\n\n# Load CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group data by 'bedType' and calculate the mean 'basePrice' for each group\naverage_prices = df.groupby('bedType')['basePrice'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: List the name of rooms with king or queen bed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['bedType'] == 'King') | (df['bedType'] == 'Queen')]\n\n# Save the answer in a variable\nanswer = filtered_df['roomName'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the names of rooms that have either king or queen bed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['bedType'] == 'King') | (df['bedType'] == 'Queen')]\n\n# Save the answer in a variable\nanswer = filtered_df['roomName'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: How many different types of beds are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the unique types of beds\nbed_types = df['bedType'].nunique()\n\n# Print the answer\nprint(bed_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the number of distinct bed types available in this inn.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the unique types of beds\nbed_types = df['bedType'].nunique()\n\n# Print the answer\nprint(bed_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the name and id of the top 3 expensive rooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by basePrice in descending order and get the first 3 rows\nexpensive_rooms = df.sort_values(by='basePrice', ascending=False).head(3)\n\n# Select the RoomId and roomName columns from the top 3 expensive rooms\ntop_3_expensive_rooms = expensive_rooms[['RoomId', 'roomName']]\n\n# Print the top 3 expensive rooms\nprint(top_3_expensive_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the name and id of the three highest priced rooms?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by basePrice in descending order and get the first 3 rows\nexpensive_rooms = df.sort_values(by='basePrice', ascending=False).head(3)\n\n# Select the RoomId and roomName columns from the top 3 expensive rooms\ntop_3_expensive_rooms = expensive_rooms[['RoomId', 'roomName']]\n\n# Print the top 3 expensive rooms\nprint(top_3_expensive_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the name of rooms whose price is higher than the average price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_price = df['basePrice'].mean()\n\nrooms_above_average = df[df['basePrice'] > average_price]['roomName']\n\nprint(rooms_above_average)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: What are the name of rooms that cost more than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_price = df['basePrice'].mean()\n\nrooms_above_average = df[df['basePrice'] > average_price]['roomName']\n\nprint(rooms_above_average)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Find the name of rooms whose base price is between 120 and 150.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on basePrice\nfiltered_df = df[(df['basePrice'] >= 120) & (df['basePrice'] <= 150)]\n\n# Get room names\nroom_names = filtered_df['roomName'].tolist()\n\n# Print room names\nprint(room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor\nRND,Recluse and defiance,1,King,2,150,modern\nIBS,Interim but salutary,1,King,2,150,traditional\nAOB,Abscond or bolster,2,Queen,4,175,traditional\nMWC,Mendicant with cryptic,2,Double,4,125,modern\nHBB,Harbinger but bequest,1,Queen,2,100,modern\nIBD,Immutable before decorum,2,Queen,4,150,rustic\nTAA,Thrift and accolade,1,Double,2,75,modern\nCAS,Convoke and sanguine,2,King,4,175,traditional\nRTE,Riddle to exculpate,2,Queen,4,175,rustic\nFNA,Frugal not apropos,2,King,4,250,traditional\n\nQuestion: Which rooms cost between 120 and 150? Give me the room names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on basePrice\nfiltered_df = df[(df['basePrice'] >= 120) & (df['basePrice'] <= 150)]\n\n# Get room names\nroom_names = filtered_df['roomName'].tolist()\n\n# Print room names\nprint(room_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncmi_cross_ref_id,master_customer_id,source_system_code\n2,4,Rent\n4,5,Parking\n8,1,Rent\n41,5,Benefits\n48,5,Benefits\n49,1,Business\n59,1,Rent\n65,9,Benefits\n75,5,Electoral\n77,4,Electoral\n\nQuestion: How many different source system code for the cmi cross references are there?", "response": "import pandas as pd\n\n# Load the CSV data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique source system codes\nnum_unique_codes = df['source_system_code'].nunique()\n\n# Print the answer\nprint(num_unique_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmaster_customer_id,cmi_details\n1,Schmitt-Lang\n2,Volkman, Mills and Ferry\n3,Gusikowski PLC\n4,Schmidt, Kertzmann and Lubowitz\n5,Gottlieb, Becker and Wyman\n6,Mayer-Hagenes\n7,Streich-Morissette\n8,Quigley-Paucek\n9,Reynolds-McClure\n\nQuestion: List all information about customer master index, and sort them by details in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'cmi_details' in descending order\ndf_sorted = df.sort_values(by='cmi_details', ascending=False)\n\n# Print the sorted dataframe\nprint(df_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncouncil_tax_id,cmi_cross_ref_id\n1,100\n2,8\n6,59\n7,2\n\nQuestion: How many council taxes are collected for renting arrears ?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the unique council_tax_id\nnum_council_taxes = df['council_tax_id'].nunique()\n\n# Print the answer\nprint(num_council_taxes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncmi_cross_ref_id,master_customer_id,source_system_code\n2,4,Rent\n4,5,Parking\n8,1,Rent\n41,5,Benefits\n48,5,Benefits\n49,1,Business\n59,1,Rent\n65,9,Benefits\n75,5,Electoral\n77,4,Electoral\n\nQuestion: Which distinct source system code includes the substring 'en'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use str.contains() method to check if 'source_system_code' contains 'en'\ndf_filtered = df[df['source_system_code'].str.contains('en')]\n\n# Get distinct 'source_system_code' values\ndistinct_source_system_codes = df_filtered['source_system_code'].unique()\n\n# Save the answer in a variable\nanswer = distinct_source_system_codes\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: How many parties are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_parties = df.shape[0]\nprint(num_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: Count the number of parties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_parties = df.shape[0]\nprint(num_parties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: What are the themes and locations of parties?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# select the columns of interest\ndf_selected = df[['Party_Theme', 'Location']]\n\n# print the dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: Give me the theme and location of each party.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# select the columns of interest\ndf_selected = df[['Party_Theme', 'Location']]\n\n# print the dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Party_Theme is either \"Spring\" or \"Teqnology\"\ndf_filtered = df[df['Party_Theme'].isin(['Spring', 'Teqnology'])]\n\n# Select only the First_year and Last_year columns\ndf_final = df_filtered[['First_year', 'Last_year']]\n\n# Print the result\nprint(df_final)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts\n1,Spring,Hemkade 48 Zaandam,2000,2001,5\n2,Club Q-BASE,Hemkade 48 Zaandam,2002,2002,23\n3,Hardcore Resurrection,Various locations,2000,2003,4\n4,Teqnology,Heineken Music Hall Amsterdam,2002,2004,6\n5,Qlubtempo,Hemkade 48 Zaandam, Heineken Music Hall Amsterdam,2001,2007,31\n6,QrimeTime,Heineken Music Hall Amsterdam,2004,2007,4\n7,In Qontrol,RAI Amsterdam,2004,2010,7\n8,Houseqlassics,Various locations,1999,2010,18\n\nQuestion: What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Party_Theme is either \"Spring\" or \"Teqnology\"\ndf_filtered = df[df['Party_Theme'].isin(['Spring', 'Teqnology'])]\n\n# Select only the First_year and Last_year columns\ndf_final = df_filtered[['First_year', 'Last_year']]\n\n# Print the result\nprint(df_final)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Show different nationalities along with the number of hosts of each nationality.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of hosts of each nationality\nnationality_count = df['Nationality'].value_counts()\n\nprint(nationality_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: How many hosts does each nationality have? List the nationality and the count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of hosts of each nationality\nnationality_count = df['Nationality'].value_counts()\n\nprint(nationality_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Show the most common nationality of hosts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnationality_counts = df['Nationality'].value_counts()\n\nmost_common_nationality = nationality_counts.idxmax()\n\nprint(most_common_nationality)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Which nationality has the most hosts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnationality_counts = df['Nationality'].value_counts()\n\nmost_common_nationality = nationality_counts.idxmax()\n\nprint(most_common_nationality)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Show the nations that have both hosts older than 45 and hosts younger than 35.", "response": "import pandas as pd\n\n# Load the data from csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to get hosts older than 45\nolder_than_45 = df[df['Age'] > 45]\n\n# Filter the data to get hosts younger than 35\nyounger_than_35 = df[df['Age'] < 35]\n\n# Get the nations that have hosts older than 45 and hosts younger than 35\ncommon_nationalities = set(older_than_45['Nationality']).intersection(set(younger_than_35['Nationality']))\n\n# Save the answer in a variable and print the variable\nanswer = common_nationalities\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Which nations have both hosts of age above 45 and hosts of age below 35?", "response": "import pandas as pd\n\n# Load the data from csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to get hosts older than 45\nolder_than_45 = df[df['Age'] > 45]\n\n# Filter the data to get hosts younger than 35\nyounger_than_35 = df[df['Age'] < 35]\n\n# Get the nations that have hosts older than 45 and hosts younger than 35\ncommon_nationalities = set(older_than_45['Nationality']).intersection(set(younger_than_35['Nationality']))\n\n# Save the answer in a variable and print the variable\nanswer = common_nationalities\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: Show the name and the nationality of the oldest host.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum age in the DataFrame\nmax_age = df['Age'].max()\n\n# Find the host with the maximum age\noldest_host = df[df['Age'] == max_age]\n\n# Get the name and nationality of the oldest host\nanswer = oldest_host[['Name', 'Nationality']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nHost_ID,Name,Nationality,Age\n1,Austin Daye,United States,43\n2,Lloyd Daniels,United States,37\n3,Kornel David,Hungary,31\n4,Antonio Davis,United States,26\n5,Ed Davis,United States,45\n6,Hubert Davis,United States,47\n7,Carlos Delfino,Argentina,30\n8,Justin Dentmon,United States,40\n9,DeMar DeRozan,United States,31\n10,Derrick Dial,United States,60\n\nQuestion: What are the name and the nationality of the host of the highest age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum age in the DataFrame\nmax_age = df['Age'].max()\n\n# Find the host with the maximum age\noldest_host = df[df['Age'] == max_age]\n\n# Get the name and nationality of the oldest host\nanswer = oldest_host[['Name', 'Nationality']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: How many regions do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nregion_count = df['Region_ID'].nunique()\n\nprint(region_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: Count the number of regions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nregion_count = df['Region_ID'].nunique()\n\nprint(region_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: Show all region code and region name sorted by the codes.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by region code\ndf = df.sort_values('Region_code')\n\n# Select the region codes and names\nresult = df[['Region_code', 'Region_name']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: What are the codes and names for all regions, sorted by codes?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by region code\ndf = df.sort_values('Region_code')\n\n# Select the region codes and names\nresult = df[['Region_code', 'Region_name']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: List all region names in alphabetical order.", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the 'Region_name' column in alphabetical order\nsorted_regions = df['Region_name'].sort_values()\n\n# Print the sorted regions\nprint(sorted_regions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: What are the names of the regions in alphabetical order?", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the 'Region_name' column in alphabetical order\nsorted_regions = df['Region_name'].sort_values()\n\n# Print the sorted regions\nprint(sorted_regions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: Show names for all regions except for Denmark.", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter out rows with 'Denmark' as the Region_name\ndf = df[df['Region_name'] != 'Denmark']\n\n# Extract the Region_name column and convert it into a list\nregion_names = df['Region_name'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = region_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRegion_id,Region_code,Region_name\n1,AF,Afghanistan\n2,AL,Albania\n3,DZ,Algeria\n4,DS,American Samoa\n5,AD,Andorra\n6,AO,Angola\n7,AI,Anguilla\n8,AQ,Antarctica\n9,AG,Antigua and Barbuda\n10,CY,Cyprus\n\nQuestion: Return the names of all regions other than Denmark.", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter out rows with 'Denmark' as the Region_name\ndf = df[df['Region_name'] != 'Denmark']\n\n# Extract the Region_name column and convert it into a list\nregion_names = df['Region_name'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = region_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: How many storms had death records?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only storms with death records\ndf_with_deaths = df[df['Number_Deaths'] > 0]\n\n# Save the answer in a variable\nnum_storms_with_deaths = len(df_with_deaths)\n\n# Print the answer\nprint(num_storms_with_deaths)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: Count the number of storms in which at least 1 person died.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only storms with death records\ndf_with_deaths = df[df['Number_Deaths'] > 0]\n\n# Save the answer in a variable\nnum_storms_with_deaths = len(df_with_deaths)\n\n# Print the answer\nprint(num_storms_with_deaths)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: List name, dates active, and number of deaths for all storms with at least 1 death.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where Number_Deaths is greater than 0\ndf_with_deaths = df[df['Number_Deaths'] > 0]\n\n# Select the columns Name, Dates_active, and Number_Deaths\nselected_columns = df_with_deaths[['Name', 'Dates_active', 'Number_Deaths']]\n\n# Print the selected data\nprint(selected_columns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: What are the names, dates active, and number of deaths for storms that had 1 or more death?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where Number_Deaths is greater than 0\ndf_with_deaths = df[df['Number_Deaths'] > 0]\n\n# Select the columns Name, Dates_active, and Number_Deaths\nselected_columns = df_with_deaths[['Name', 'Dates_active', 'Number_Deaths']]\n\n# Print the selected data\nprint(selected_columns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: What is the total number of deaths and damage for all storms with a max speed greater than the average?", "response": "import pandas as pd\n\n# read the CSV file\ndf = pd.read_csv('data.csv')\n\n# calculate the average max speed\naverage_max_speed = df['Max_speed'].mean()\n\n# filter the dataframe to only include storms with a max speed greater than the average\ndf_filtered = df[df['Max_speed'] > average_max_speed]\n\n# calculate the total number of deaths and damage for all storms with a max speed greater than the average\ntotal_deaths = df_filtered['Number_Deaths'].sum()\ntotal_damage = df_filtered['Damage_millions_USD'].sum()\n\n# save the answers in variables\ntotal_deaths_and_damage = {'total_deaths': total_deaths, 'total_damage': total_damage}\n\n# print the variables\nprint(total_deaths_and_damage)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "response": "import pandas as pd\n\n# read the CSV file\ndf = pd.read_csv('data.csv')\n\n# calculate the average max speed\naverage_max_speed = df['Max_speed'].mean()\n\n# filter the dataframe to only include storms with a max speed greater than the average\ndf_filtered = df[df['Max_speed'] > average_max_speed]\n\n# calculate the total number of deaths and damage for all storms with a max speed greater than the average\ntotal_deaths = df_filtered['Number_Deaths'].sum()\ntotal_damage = df_filtered['Damage_millions_USD'].sum()\n\n# save the answers in variables\ntotal_deaths_and_damage = {'total_deaths': total_deaths, 'total_damage': total_damage}\n\n# print the variables\nprint(total_deaths_and_damage)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: List name and damage for all storms in a descending order of max speed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Max_speed' in descending order\ndf = df.sort_values('Max_speed', ascending=False)\n\n# Select 'Name' and 'Damage_millions_USD' columns\nresult = df[['Name', 'Damage_millions_USD']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStorm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths\n1,One,May19–May25,995,13.0,0\n2,Two,August3–August10,972,10.75,7\n3,Three,August5–August14,972,13.0,52\n4,Four,August26–September2,961,4.05,7\n5,Five,September7–September17,988,1.49,3\n6,Six,September18–September25,1002,0.039,2\n7,Seven,September22–September28,977,13.0,0\n8,Eight,October20–October24,983,13.0,0\n9,Nine,October24–October26,1007,13.0,0\n10,9 cyclones,May19 –October26,961,29.3,71\n\nQuestion: What are the names and damage in millions for storms, ordered by their max speeds descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Max_speed' in descending order\ndf = df.sort_values('Max_speed', ascending=False)\n\n# Select 'Name' and 'Damage_millions_USD' columns\nresult = df[['Name', 'Damage_millions_USD']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: How many counties are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique county names\ncounty_count = df['County_name'].nunique()\n\n# Print the answer\nprint(county_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Count the total number of counties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique county names\ncounty_count = df['County_name'].nunique()\n\n# Print the answer\nprint(county_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Show the county name and population of all counties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the required columns\nanswer = df[['County_name', 'Population']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: What are the name and population of each county?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the required columns\nanswer = df[['County_name', 'Population']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Show the average population of all counties.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average population\naverage_population = df['Population'].mean()\n\n# Print the result\nprint(average_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: On average how large is the population of the counties?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average population\naverage_population = df['Population'].mean()\n\n# Print the result\nprint(average_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Return the maximum and minimum population among all counties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Fill in the missing part of the code\nmax_population = df['Population'].max()\nmin_population = df['Population'].min()\n\n# Save the answer in a variable\nanswer = {'max_population': max_population, 'min_population': min_population}\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: What are the maximum and minimum population of the counties?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Fill in the missing part of the code\nmax_population = df['Population'].max()\nmin_population = df['Population'].min()\n\n# Save the answer in a variable\nanswer = {'max_population': max_population, 'min_population': min_population}\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Show all the distinct districts for elections.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all the distinct districts for elections\ndistinct_districts = df['District'].unique()\n\nprint(distinct_districts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: What are the distinct districts for elections?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all the distinct districts for elections\ndistinct_districts = df['District'].unique()\n\nprint(distinct_districts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Show the zip code of the county with name \"Howard\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the County_name is \"Howard\"\nhoward_county = df[df['County_name'] == 'Howard']\n\n# Get the Zip_code of the filtered dataframe\nzip_code = howard_county['Zip_code'].values[0]\n\nprint(zip_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: What is the zip code the county named \"Howard\" is located in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the County_name is \"Howard\"\nhoward_county = df[df['County_name'] == 'Howard']\n\n# Get the Zip_code of the filtered dataframe\nzip_code = howard_county['Zip_code'].values[0]\n\nprint(zip_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Show the delegate from district 1 in election.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to get the delegate of district 1\ndelegate_district_1 = df[df['District'] == 1]['Delegate']\n\n# Print the delegate\nprint(delegate_district_1)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Who is the delegate of district 1 in the elections?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to get the delegate of district 1\ndelegate_district_1 = df[df['District'] == 1]['Delegate']\n\n# Print the delegate\nprint(delegate_district_1)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Show the delegate and committee information of elections.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Delegate' and 'Committee' columns\ndelegate_and_committee = df[['Delegate', 'Committee']]\n\n# Print the selected data\nprint(delegate_and_committee)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: What are the delegate and committee information for each election record?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Delegate' and 'Committee' columns\ndelegate_and_committee = df[['Delegate', 'Committee']]\n\n# Print the selected data\nprint(delegate_and_committee)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: How many distinct governors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# This will count the number of distinct governors in the dataframe\nnum_governors = df['Governor'].nunique()\n\nprint(num_governors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Count the number of distinct governors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# This will count the number of distinct governors in the dataframe\nnum_governors = df['Governor'].nunique()\n\nprint(num_governors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Show the lieutenant governor and comptroller from the democratic party.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to only include rows where Party is Democratic\ndemocratic_df = df[df['Party'] == 'Democratic']\n\n# Get the Lieutenant Governor and Comptroller from the democratic party\nanswer = democratic_df[['Lieutenant_Governor', 'Comptroller']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Who are the lieutenant governor and comptroller from the democratic party?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to only include rows where Party is Democratic\ndemocratic_df = df[df['Party'] == 'Democratic']\n\n# Get the Lieutenant Governor and Comptroller from the democratic party\nanswer = democratic_df[['Lieutenant_Governor', 'Comptroller']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: In which distinct years was the governor \"Eliot Spitzer\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where Governor is Eliot Spitzer\ndf_filtered = df[df['Governor'] == 'Eliot Spitzer']\n\n# Get distinct years\nyears = df_filtered['Year'].unique()\n\n# Print the years\nfor year in years:\n    print(year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Find the distinct years when the governor was named \"Eliot Spitzer\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where Governor is Eliot Spitzer\ndf_filtered = df[df['Governor'] == 'Eliot Spitzer']\n\n# Get distinct years\nyears = df_filtered['Year'].unique()\n\n# Print the years\nfor year in years:\n    print(year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Show all the information about election.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all information about election\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nElection_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee\n1,09.1 9A,1,Bates, Gail H. Gail H. Bates,1,2002.0,Appropriations\n2,09.1 9A,1,Miller, Warren E. Warren E. Miller,1,2003.0,Economic Matters\n3,12.1 12A,2,DeBoy, Steven J. Sr. Steven J. DeBoy, Sr.,2,2002.0,Appropriations\n4,12.1 12A,3,Malone, James E. Jr. James E. Malone, Jr.,2,1994.0,Environmental Matters (Vice-Chair)\n5,12.2 12B,2,Bobo, Elizabeth Elizabeth Bobo,3,1994.0,Environmental Matters\n6,13,1,Pendergrass, Shane E. Shane Pendergrass,4,1994.0,Health and Government Operations\n7,13,4,Guzzone, Guy Guy Guzzone,1,2006.0,Appropriations\n8,13,3,Turner, Frank S. Frank S. Turner,7,1994.0,Ways and Means\n\nQuestion: Return all the information for each election record.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all information about election\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Return the names of all counties sorted by population in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Population')\ncounty_names = df['County_name'].tolist()\nprint(county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Sort the names of all counties in ascending order of population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Population')\ncounty_names = df['County_name'].tolist()\nprint(county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Return the names of all counties sorted by county name in descending alphabetical order.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the county names in descending order\nsorted_county_names = df['County_name'].sort_values(ascending=False)\n\n# Print the sorted county names\nprint(sorted_county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Sort the names of all counties in descending alphabetical order.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the county names in descending order\nsorted_county_names = df['County_name'].sort_values(ascending=False)\n\n# Print the sorted county names\nprint(sorted_county_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Show the name of the county with the biggest population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum population\nmax_population_row = df[df['Population'] == df['Population'].max()]\n\n# Get the county name from the row\ncounty_name = max_population_row['County_name'].values[0]\n\n# Print the county name\nprint(county_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Which county has the largest population? Give me the name of the county.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum population\nmax_population_row = df[df['Population'] == df['Population'].max()]\n\n# Get the county name from the row\ncounty_name = max_population_row['County_name'].values[0]\n\n# Print the county name\nprint(county_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: Show the 3 counties with the smallest population.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by population in ascending order\nsorted_df = df.sort_values(by=['Population'])\n\n# Get the 3 counties with the smallest population\nsmallest_population = sorted_df.head(3)\n\n# Save the answer in a variable\nanswer = smallest_population['County_name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCounty_Id,County_name,Population,Zip_code\n1,Howard,21000.0,D21\n2,Baltimore County,90000.0,D08\n3,Colony,79000.0,D02\n4,Mansfield,87200.0,D09\n5,Manning,13300.0,D11\n\nQuestion: What are the 3 counties that have the smallest population? Give me the county names.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by population in ascending order\nsorted_df = df.sort_values(by=['Population'])\n\n# Get the 3 counties with the smallest population\nsmallest_population = sorted_df.head(3)\n\n# Save the answer in a variable\nanswer = smallest_population['County_name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Show the name of the party that has at least two records.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the occurrences of each party\nparty_counts = df['Party'].value_counts()\n\n# Filter for those that have a count of 2 or more\nparties_with_two_or_more = party_counts[party_counts >= 2].index.tolist()\n\n# Print the answer\nprint(parties_with_two_or_more)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Which party has two or more records?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the occurrences of each party\nparty_counts = df['Party'].value_counts()\n\n# Filter for those that have a count of 2 or more\nparties_with_two_or_more = party_counts[party_counts >= 2].index.tolist()\n\n# Print the answer\nprint(parties_with_two_or_more)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Show the people that have been governor the most times.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the value count of the 'Governor' column\ngovernor_counts = df['Governor'].value_counts()\n\n# Get the most frequent governor\nmost_frequent_governor = governor_counts.idxmax()\n\n# Print the result\nprint(most_frequent_governor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Which people severed as governor most frequently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the value count of the 'Governor' column\ngovernor_counts = df['Governor'].value_counts()\n\n# Get the most frequent governor\nmost_frequent_governor = governor_counts.idxmax()\n\n# Print the result\nprint(most_frequent_governor)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Show the people that have been comptroller the most times and the corresponding number of times.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf2 = df['Comptroller'].value_counts()\n\nanswer = df2.index[0], df2.values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nParty_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate\n1,1998.0,Democratic,Peter Vallone,Sandra Frankel,Carl McCall,Eliot Spitzer,Charles Schumer\n2,1998.0,Liberal,Betsy McCaughey Ross,Jonathan Reiter,Carl McCall,Eliot Spitzer,Charles Schumer\n3,2002.0,Democratic,Carl McCall,Dennis Mehiel,Alan Hevesi,Eliot Spitzer,(no election)\n4,2002.0,Independence,Tom Golisano,Mary Donohue,John Faso,Eliot Spitzer,(no election)\n5,2006.0,Democratic,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n6,2006.0,Independence,Eliot Spitzer,David Paterson,Alan Hevesi,Jeanine Pirro,Hillary Rodham Clinton\n7,2006.0,Working Families,Eliot Spitzer,David Paterson,Alan Hevesi,Andrew Cuomo,Hillary Rodham Clinton\n\nQuestion: Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf2 = df['Comptroller'].value_counts()\n\nanswer = df2.index[0], df2.values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: How many journalists are there?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of journalists\nnum_journalists = len(df)\n\n# Print the number of journalists\nprint(num_journalists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: List the names of journalists in ascending order of years working.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Years_working in ascending order\nsorted_df = df.sort_values('Years_working')\n\n# Get the list of names in the sorted order\nnames_list = sorted_df['Name'].tolist()\n\n# Print the list of names\nprint(names_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: What are the nationalities and ages of journalists?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Nationality' and 'Age' columns\nnationalities_and_ages = df[['Nationality', 'Age']]\n\nprint(nationalities_and_ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: Show the names of journalists from \"England\" or \"Wales\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include journalists from England or Wales\nengland_wales_journalists = df[df['Nationality'].isin(['England', 'Wales'])]\n\n# Save the names of these journalists in a variable\njournalist_names = england_wales_journalists['Name'].tolist()\n\n# Print the variable\nprint(journalist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: What is the average number of years spent working as a journalist?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of years spent working as a journalist\naverage_years_working = df['Years_working'].mean()\n\n# Print the average number of years spent working as a journalist\nprint(average_years_working)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: What is the nationality of the journalist with the largest number of years working?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('Years_working', ascending=False)\n\nmax_years_working_nationality = df.iloc[0]['Nationality']\n\nprint(max_years_working_nationality)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: Show the different nationalities and the number of journalists of each nationality.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of journalists from each nationality\nnationality_counts = df['Nationality'].value_counts()\n\n# print the counts\nprint(nationality_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: Show the most common nationality for journalists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the frequency of each nationality\nnationality_counts = df['Nationality'].value_counts()\n\n# Get the most common nationality\nmost_common_nationality = nationality_counts.idxmax()\n\nprint(most_common_nationality)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\njournalist_ID,Name,Nationality,Age,Years_working\n1,Herbert Swindells,England,37,10\n2,Fred Keenor,Wales,27,5\n3,George Gilchrist,England,28,6\n4,Jackie Waring,England,43,21\n5,Fred Chandler,England,34,6\n6,Ray Ferris,Northern Ireland,29,3\n7,John Meaney,England,28,7\n8,Tony Waddington,England,43,12\n9,Jack Meaney,England,37,8\n10,Frank Mitcheson,England,33,9\n\nQuestion: Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for journalists with more than 10 years of working\ndf_gt_10 = df[df['Years_working'] > 10]\n\n# Filter the DataFrame for journalists with less than 3 years of working\ndf_lt_3 = df[df['Years_working'] < 3]\n\n# Find the nations that are common in both filtered DataFrames\nnations = set(df_gt_10['Nationality']).intersection(set(df_lt_3['Nationality']))\n\n# Print the nations\nprint(nations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEvent_ID,Date,Venue,Name,Event_Attendance\n1,13 October 2008,Marathon,Olympia Games Openning,6650\n2,11 October 2007,Victoria,Government Hearing,369\n3,7 October 2010,Motagua,Public Debating,1675\n4,20 June 2018,Platense,Global Awarding,2356\n5,9 April 2014,Hispano,Special Exhibition,225\n\nQuestion: Show the dates, places, and names of events in descending order of the attendance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Event_Attendance', ascending=False)\ndf = df[['Date', 'Venue', 'Name']]\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEvent_ID,Date,Venue,Name,Event_Attendance\n1,13 October 2008,Marathon,Olympia Games Openning,6650\n2,11 October 2007,Victoria,Government Hearing,369\n3,7 October 2010,Motagua,Public Debating,1675\n4,20 June 2018,Platense,Global Awarding,2356\n5,9 April 2014,Hispano,Special Exhibition,225\n\nQuestion: List the event venues and names that have the top 2 most number of people attended.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by Event_Attendance in descending order\ndf_sorted = df.sort_values('Event_Attendance', ascending=False)\n\n# Select the top 2 rows\ntop_events = df_sorted.head(2)\n\n# Select the venue and name columns\ntop_event_info = top_events[['Venue', 'Name']]\n\n# Print the result\nprint(top_event_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nResID,ResName,Address,Rating\n1,Subway,3233 St Paul St, Baltimore, MD 21218,3\n2,Honeygrow,3212 St Paul St, Baltimore, MD 21218,4\n\nQuestion: Show me all the restaurants.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Show all the restaurants\nall_restaurants = df['ResName']\n\nprint(all_restaurants)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nResID,ResName,Address,Rating\n1,Subway,3233 St Paul St, Baltimore, MD 21218,3\n2,Honeygrow,3212 St Paul St, Baltimore, MD 21218,4\n\nQuestion: What is the address of the restaurant Subway?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the row for Subway\nsubway_row = df[df['ResName'] == 'Subway']\n\n# Get the address of Subway from the filtered row\nsubway_address = subway_row['Address'].values[0]\n\n# Print the address of Subway\nprint(subway_address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nResID,ResName,Address,Rating\n1,Subway,3233 St Paul St, Baltimore, MD 21218,3\n2,Honeygrow,3212 St Paul St, Baltimore, MD 21218,4\n\nQuestion: What is the rating of the restaurant Subway?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the restaurant's name is Subway\nsubway_row = df[df['ResName'] == 'Subway']\n\n# Get the rating of Subway from the filtered dataframe\nsubway_rating = subway_row['Rating'].values[0]\n\n# Print the rating of Subway\nprint(\"The rating of the restaurant Subway is: \", subway_rating)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nResID,ResName,Address,Rating\n1,Subway,3233 St Paul St, Baltimore, MD 21218,3\n2,Honeygrow,3212 St Paul St, Baltimore, MD 21218,4\n\nQuestion: Which restaurants have highest rating? List the restaurant name and its rating.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum rating\nmax_rating = df['Rating'].max()\n\n# Get the restaurant names with the maximum rating\nhighest_rated_restaurants = df[df['Rating'] == max_rating][['ResName', 'Rating']]\n\n# Print the highest rated restaurants\nprint(highest_rated_restaurants)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the age of student Linda Smith?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to find the student Linda Smith\nlinda_smith_df = df[(df['Fname'] == 'Linda') & (df['LName'] == 'Smith')]\n\n# Extract the age of Linda Smith\nlinda_smith_age = linda_smith_df['Age'].values[0]\n\n# Save the answer in a variable and print it\nanswer = linda_smith_age\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the gender of the student Linda Smith?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'Fname' is 'Linda' and 'LName' is 'Smith'\nfiltered_df = df[(df['Fname'] == 'Linda') & (df['LName'] == 'Smith')]\n\n# Get the gender of the student Linda Smith\ngender = filtered_df['Sex'].values[0]\n\n# Print the gender\nprint(gender)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: List all students' first names and last names who majored in 600.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include students who majored in 600\ndf_600 = df[df['Major'] == 600]\n\n# Create a new DataFrame with only first names and last names\ndf_names = df_600[['Fname', 'LName']]\n\n# Print the new DataFrame\nprint(df_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which city does student Linda Smith live in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncity = df.loc[df['Fname'] == 'Linda', 'city_code'].iloc[0]\n\nprint(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Advisor 1121 has how many students?", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the advisor is 1121\nfiltered_df = df[df['Advisor'] == 1121]\n\n# Get the number of students who have advisor 1121\nnum_students = len(filtered_df)\n\n# Save the answer in a variable and print it\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which Advisor has most of students? List advisor and the number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use value_counts() method to count the frequency of each advisor\nadvisor_count = df['Advisor'].value_counts()\n\n# Get the advisor with most students\nmax_advisor = advisor_count.idxmax()\nmax_count = advisor_count.max()\n\nanswer = (max_advisor, max_count)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which major has least number of students? List the major and the number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students in each major\nmajor_counts = df['Major'].value_counts()\n\n# Get the major with the least number of students\nleast_major = major_counts.idxmin()\nleast_major_count = major_counts.min()\n\n# Save the answer in a variable\nanswer = (least_major, least_major_count)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which major has between 2 and 30 number of students? List major and the number of students.", "response": "# Import necessary library\nimport pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by major and count the number of students in each major\nmajor_count = df.groupby('Major').size()\n\n# Filter the major with between 2 and 30 students\nmajor_between_2_and_30 = major_count[(major_count >= 2) & (major_count <= 30)]\n\n# Save the answer in a variable\nanswer = major_between_2_and_30\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include students older than 18 and majoring in 600\nfiltered_df = df[(df['Age'] > 18) & (df['Major'] == 600)]\n\n# Get the first and last names of the filtered students\nstudents = filtered_df[['Fname', 'LName']]\n\n# Save the answer in a variable\nanswer = students\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data\nfiltered_df = df[(df['Sex'] == 'F') & (df['Age'] > 18) & (df['Major'] != 600)]\n\n# Get the first and last names of the students\nnames = filtered_df[['Fname', 'LName']]\n\n# Save the answer in a variable\nanswer = names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactual_order_id,order_status_code,regular_order_id,actual_order_date\n1,Success,8,2018-03-02 23:26:19\n2,Cancel,15,2018-03-02 08:33:39\n3,Cancel,4,2018-02-25 10:13:36\n4,Cancel,10,2018-03-21 01:34:52\n5,Cancel,14,2018-02-28 15:31:06\n6,Success,12,2018-03-12 05:33:57\n7,Success,1,2018-03-06 12:20:31\n8,Cancel,11,2018-03-22 19:30:17\n9,Success,6,2018-03-13 05:43:25\n10,Success,13,2018-03-05 17:31:36\n\nQuestion: Find the ids of orders whose status is 'Success'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where order_status_code is 'Success'\nsuccess_orders = df[df['order_status_code'] == 'Success']\n\n# Get the ids of these orders\norder_ids = success_orders['actual_order_id'].tolist()\n\n# Print the order ids\nprint(order_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer\n1,Visa,Ron Emard,1-382-503-5179x53639,shaniya45@example.net,2011-04-25 22:20:35\n2,MasterCard,Gabe Schroeder,1-728-537-4293x0885,alexandra91@example.net,2011-10-17 16:08:25\n3,Discover,Candace Schneider,940.575.3682x7959,tkassulke@example.com,2012-01-11 21:17:01\n4,Visa,Jaden Lang,361.151.3489x7272,dedric17@example.org,2009-12-29 17:38:10\n5,Visa,Geovanni Grady,1-005-644-2495,elmira.langworth@example.org,2017-05-21 07:09:55\n6,Visa,Dr. Karine Farrell,+49(2)0677806107,reichel.winnifred@example.org,2010-11-06 08:42:56\n7,Discover,Emmanuel Reilly,129.959.6420,gleichner.ethelyn@example.net,2013-11-29 06:15:22\n8,MasterCard,Keenan Kuhic,686-517-9923x348,dallin76@example.org,2013-04-09 18:17:05\n9,American,Rusty Morar,1-123-197-9677x7194,njenkins@example.org,2015-09-09 09:29:06\n10,Visa,Lila Howe,1-492-284-1097,leann.hamill@example.org,2014-02-04 04:51:58\n\nQuestion: Find the number of customers in total.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Assuming the csv file is located at 'data.csv'\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = len(df)\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer\n1,Visa,Ron Emard,1-382-503-5179x53639,shaniya45@example.net,2011-04-25 22:20:35\n2,MasterCard,Gabe Schroeder,1-728-537-4293x0885,alexandra91@example.net,2011-10-17 16:08:25\n3,Discover,Candace Schneider,940.575.3682x7959,tkassulke@example.com,2012-01-11 21:17:01\n4,Visa,Jaden Lang,361.151.3489x7272,dedric17@example.org,2009-12-29 17:38:10\n5,Visa,Geovanni Grady,1-005-644-2495,elmira.langworth@example.org,2017-05-21 07:09:55\n6,Visa,Dr. Karine Farrell,+49(2)0677806107,reichel.winnifred@example.org,2010-11-06 08:42:56\n7,Discover,Emmanuel Reilly,129.959.6420,gleichner.ethelyn@example.net,2013-11-29 06:15:22\n8,MasterCard,Keenan Kuhic,686-517-9923x348,dallin76@example.org,2013-04-09 18:17:05\n9,American,Rusty Morar,1-123-197-9677x7194,njenkins@example.org,2015-09-09 09:29:06\n10,Visa,Lila Howe,1-492-284-1097,leann.hamill@example.org,2014-02-04 04:51:58\n\nQuestion: How many different payment methods are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique payment methods\npayment_methods = df['payment_method'].unique()\n\n# Count the number of unique payment methods\nnum_payment_methods = len(payment_methods)\n\nprint(num_payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntruck_id,truck_licence_number,truck_details\n1,58110,Frida\n2,33822,Randy\n3,17106,Laverna\n4,24474,Kaya\n5,63359,Queen\n6,25232,Deon\n7,92426,Stacy\n8,69863,Rebeka\n9,78683,Bud\n10,47865,Holly\n\nQuestion: Show the details of all trucks in the order of their license number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['truck_licence_number'])\ntruck_details_order = df['truck_details'].tolist()\nprint(truck_details_order)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_price,product_description\n1,dvds,1322.78,good condition\n2,cloth,6402.09,good condition\n3,electronics,2511.29,great condition\n4,books,7111.68,good condition\n5,food,3644.45,good condition\n6,gift,5022.39,bad condition\n\nQuestion: Find the name of the most expensive product.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the index of the product with the maximum price\nmax_price_index = df['product_price'].idxmax()\n\n# Get the name of the most expensive product\nmost_expensive_product = df.loc[max_price_index, 'product_name']\n\n# Save the answer in a variable\nanswer = most_expensive_product\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer\n1,Visa,Ron Emard,1-382-503-5179x53639,shaniya45@example.net,2011-04-25 22:20:35\n2,MasterCard,Gabe Schroeder,1-728-537-4293x0885,alexandra91@example.net,2011-10-17 16:08:25\n3,Discover,Candace Schneider,940.575.3682x7959,tkassulke@example.com,2012-01-11 21:17:01\n4,Visa,Jaden Lang,361.151.3489x7272,dedric17@example.org,2009-12-29 17:38:10\n5,Visa,Geovanni Grady,1-005-644-2495,elmira.langworth@example.org,2017-05-21 07:09:55\n6,Visa,Dr. Karine Farrell,+49(2)0677806107,reichel.winnifred@example.org,2010-11-06 08:42:56\n7,Discover,Emmanuel Reilly,129.959.6420,gleichner.ethelyn@example.net,2013-11-29 06:15:22\n8,MasterCard,Keenan Kuhic,686-517-9923x348,dallin76@example.org,2013-04-09 18:17:05\n9,American,Rusty Morar,1-123-197-9677x7194,njenkins@example.org,2015-09-09 09:29:06\n10,Visa,Lila Howe,1-492-284-1097,leann.hamill@example.org,2014-02-04 04:51:58\n\nQuestion: List the names and emails of customers who payed by Visa card.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include customers who payed by Visa\nvisa_customers = df[df['payment_method'] == 'Visa']\n\n# Extract the names and emails of the filtered customers\nvisa_customers_info = visa_customers[['customer_name', 'customer_email']]\n\n# Print the result\nprint(visa_customers_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer\n1,Visa,Ron Emard,1-382-503-5179x53639,shaniya45@example.net,2011-04-25 22:20:35\n2,MasterCard,Gabe Schroeder,1-728-537-4293x0885,alexandra91@example.net,2011-10-17 16:08:25\n3,Discover,Candace Schneider,940.575.3682x7959,tkassulke@example.com,2012-01-11 21:17:01\n4,Visa,Jaden Lang,361.151.3489x7272,dedric17@example.org,2009-12-29 17:38:10\n5,Visa,Geovanni Grady,1-005-644-2495,elmira.langworth@example.org,2017-05-21 07:09:55\n6,Visa,Dr. Karine Farrell,+49(2)0677806107,reichel.winnifred@example.org,2010-11-06 08:42:56\n7,Discover,Emmanuel Reilly,129.959.6420,gleichner.ethelyn@example.net,2013-11-29 06:15:22\n8,MasterCard,Keenan Kuhic,686-517-9923x348,dallin76@example.org,2013-04-09 18:17:05\n9,American,Rusty Morar,1-123-197-9677x7194,njenkins@example.org,2015-09-09 09:29:06\n10,Visa,Lila Howe,1-492-284-1097,leann.hamill@example.org,2014-02-04 04:51:58\n\nQuestion: List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_became_customer' column to datetime\ndf['date_became_customer'] = pd.to_datetime(df['date_became_customer'])\n\n# Sort the DataFrame by 'date_became_customer'\ndf.sort_values(by='date_became_customer', inplace=True)\n\n# Select the columns to display\ndf_output = df[['customer_name', 'customer_phone', 'customer_email']]\n\n# Print the sorted DataFrame\nprint(df_output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer\n1,Visa,Ron Emard,1-382-503-5179x53639,shaniya45@example.net,2011-04-25 22:20:35\n2,MasterCard,Gabe Schroeder,1-728-537-4293x0885,alexandra91@example.net,2011-10-17 16:08:25\n3,Discover,Candace Schneider,940.575.3682x7959,tkassulke@example.com,2012-01-11 21:17:01\n4,Visa,Jaden Lang,361.151.3489x7272,dedric17@example.org,2009-12-29 17:38:10\n5,Visa,Geovanni Grady,1-005-644-2495,elmira.langworth@example.org,2017-05-21 07:09:55\n6,Visa,Dr. Karine Farrell,+49(2)0677806107,reichel.winnifred@example.org,2010-11-06 08:42:56\n7,Discover,Emmanuel Reilly,129.959.6420,gleichner.ethelyn@example.net,2013-11-29 06:15:22\n8,MasterCard,Keenan Kuhic,686-517-9923x348,dallin76@example.org,2013-04-09 18:17:05\n9,American,Rusty Morar,1-123-197-9677x7194,njenkins@example.org,2015-09-09 09:29:06\n10,Visa,Lila Howe,1-492-284-1097,leann.hamill@example.org,2014-02-04 04:51:58\n\nQuestion: Find the payment method that is used most frequently.", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Finding the payment method that is used most frequently\nmost_used_payment_method = df['payment_method'].mode()[0]\n\n# Printing the most used payment method\nprint(most_used_payment_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nroute_id,route_name,other_route_details\n1,Torphy Ltd,16893 Wilderman Terrace\nPort Lucasburgh, ND 55978-5550\n2,Heidenreich Group,6534 Cheyenne Trace Suite 242\nKoryburgh, PA 21391-9164\n3,Gerhold Inc,70469 Unique Crest\nKatherynville, IA 92263-4974\n4,Huel, Armstrong and Senger,534 Lubowitz Terrace\nLake Tomfort, LA 52697-4998\n5,Nader, Leuschke and Huels,4627 Johnnie Centers\nLake Hipolitoton, RI 37305\n6,Abshire Ltd,36578 Kirsten Terrace\nKrajcikside, NH 29063\n7,Adams, Macejkovic and Carroll,941 Ritchie Plains Suite 833\nNorth Jerry, LA 32804-7405\n8,Schowalter Group,52417 Wiza Brook Apt. 000\nZechariahstad, WY 15885-3711\n9,Gorczany Group,9608 Hoyt Extension\nEast Linnieview, GA 87356-5339\n10,Grady, King and Price,4989 Pfeffer Passage Suite 915\nWest Jacebury, SD 68079-3347\n\nQuestion: List the names of all routes in alphabetic order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nroute_names = df['route_name'].sort_values().tolist()\n\nprint(route_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: How many authors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of authors\nnum_authors = df['authID'].nunique()\n\n# Print the number of authors\nprint(num_authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Count the number of authors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of authors\nnum_authors = df['authID'].nunique()\n\n# Print the number of authors\nprint(num_authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninstID,name,country\n1000,University of Oxford,UK\n1010,Northeastern University,USA\n1020,Indiana University,USA\n1030,Google,USA\n1040,Tohoku University,Japan\n1050,University of Pennsylvania,USA\n1060,Portland State University,Japan\n1070,INRIA,France\n\nQuestion: How many institutions are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_institutions = len(df)\n\nprint(num_institutions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninstID,name,country\n1000,University of Oxford,UK\n1010,Northeastern University,USA\n1020,Indiana University,USA\n1030,Google,USA\n1040,Tohoku University,Japan\n1050,University of Pennsylvania,USA\n1060,Portland State University,Japan\n1070,INRIA,France\n\nQuestion: Count the number of institutions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_institutions = len(df)\n\nprint(num_institutions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: How many papers are published in total?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the total number of papers\ntotal_papers = df.shape[0]\n\n# Print the total number of papers\nprint(total_papers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: Count the number of total papers.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the total number of papers\ntotal_papers = df.shape[0]\n\n# Print the total number of papers\nprint(total_papers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: Find the titles of the papers that contain the word \"ML\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to include only rows where 'title' contains the word 'ML'\ndf_ml = df[df['title'].str.contains('ML')]\n\n# Get the titles of the papers\ntitles = df_ml['title'].tolist()\n\n# Print the titles\nfor title in titles:\n    print(title)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: Which papers have the substring \"ML\" in their titles? Return the titles of the papers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to include only rows where 'title' contains the word 'ML'\ndf_ml = df[df['title'].str.contains('ML')]\n\n# Get the titles of the papers\ntitles = df_ml['title'].tolist()\n\n# Print the titles\nfor title in titles:\n    print(title)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: Which paper's title contains the word \"Database\"?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the paper with title containing 'Database'\ndatabase_paper = df[df['title'].str.contains('Database')]\n\n# Save the answer in a variable\nanswer = database_paper['title'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npaperID,title\n200,Just do it: Simple Monadic Equational Reasoning\n201,Proving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory\n202,Functional Pearl: Modular Rollback through Control Logging\n203,An Equivalence-Preserving CPS Translation via Multi-Language Semantics\n204,Making Standard ML a Practical Database Programming Language\n205,Nameless, Painless\n206,Binders Unbound\n\nQuestion: Which papers have the substring \"Database\" in their titles? Show the titles of the papers.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the paper with title containing 'Database'\ndatabase_paper = df[df['title'].str.contains('Database')]\n\n# Save the answer in a variable\nanswer = database_paper['title'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: What is the first name of the author with last name \"Ueno\"?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row where the last name is \"Ueno\"\nrow = df.loc[df['lname'] == 'Ueno']\n\n# Extract the first name from the row\nfirst_name = row['fname'].values[0]\n\n# Print the first name\nprint(first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Which authors have last name \"Ueno\"? List their first names.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row where the last name is \"Ueno\"\nrow = df.loc[df['lname'] == 'Ueno']\n\n# Extract the first name from the row\nfirst_name = row['fname'].values[0]\n\n# Print the first name\nprint(first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Find the last name of the author with first name \"Amal\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe by first name \"Amal\"\ndf_filtered = df[df['fname'] == 'Amal']\n\n# Get the last names of the filtered dataframe\nlnames = df_filtered['lname'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = lnames\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Which authors have first name \"Amal\"? List their last names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe by first name \"Amal\"\ndf_filtered = df[df['fname'] == 'Amal']\n\n# Get the last names of the filtered dataframe\nlnames = df_filtered['lname'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = lnames\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Find the first names of all the authors ordered in alphabetical order.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the first names in alphabetical order\nsorted_first_names = df['fname'].sort_values()\n\n# Print the sorted first names\nprint(sorted_first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Sort the first names of all the authors in alphabetical order.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the first names in alphabetical order\nsorted_first_names = df['fname'].sort_values()\n\n# Print the sorted first names\nprint(sorted_first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Retrieve all the last names of authors in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the authors' last names in alphabetical order\nauthor_lnames = df['lname'].sort_values()\n\n# Printing the sorted last names\nprint(author_lnames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Give me a list of all the last names of authors sorted in alphabetical order", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the authors' last names in alphabetical order\nauthor_lnames = df['lname'].sort_values()\n\n# Printing the sorted last names\nprint(author_lnames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Retrieve all the first and last names of authors in the alphabetical order of last names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort by last name\ndf_sorted = df.sort_values('lname')\n\n# Retrieve first and last names\nfirst_last_names = df_sorted[['fname', 'lname']]\n\n# Print the answer\nprint(first_last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthID,lname,fname\n50,Gibbons,Jeremy\n51,Hinze,Ralf\n52,James,Daniel W. H.\n53,Shivers,Olin\n54,Turon,Aaron\n55,Ahmed,Amal\n56,Blume,Matthias\n57,Ohori,Atsushi\n58,Ueno,Katsuhiro\n59,Pouillard,Nicolas\n\nQuestion: Sort the list of all the first and last names of authors in alphabetical order of the last names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort by last name\ndf_sorted = df.sort_values('lname')\n\n# Retrieve first and last names\nfirst_last_names = df_sorted[['fname', 'lname']]\n\n# Print the answer\nprint(first_last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactor_id,first_name,last_name,last_update\n1,PENELOPE,GUINESS,2006-02-15 04:34:33\n2,NICK,WAHLBERG,2006-02-15 04:34:33\n3,ED,CHASE,2006-02-15 04:34:33\n4,JENNIFER,DAVIS,2006-02-15 04:34:33\n5,JOHNNY,LOLLOBRIGIDA,2006-02-15 04:34:33\n6,BETTE,NICHOLSON,2006-02-15 04:34:33\n7,GRACE,MOSTEL,2006-02-15 04:34:33\n8,MATTHEW,JOHANSSON,2006-02-15 04:34:33\n9,JOE,SWANK,2006-02-15 04:34:33\n10,CHRISTIAN,GABLE,2006-02-15 04:34:33\n\nQuestion: How many different last names do the actors and actresses have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of unique last names\nunique_last_names_count = df['last_name'].nunique()\n\nprint(unique_last_names_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactor_id,first_name,last_name,last_update\n1,PENELOPE,GUINESS,2006-02-15 04:34:33\n2,NICK,WAHLBERG,2006-02-15 04:34:33\n3,ED,CHASE,2006-02-15 04:34:33\n4,JENNIFER,DAVIS,2006-02-15 04:34:33\n5,JOHNNY,LOLLOBRIGIDA,2006-02-15 04:34:33\n6,BETTE,NICHOLSON,2006-02-15 04:34:33\n7,GRACE,MOSTEL,2006-02-15 04:34:33\n8,MATTHEW,JOHANSSON,2006-02-15 04:34:33\n9,JOE,SWANK,2006-02-15 04:34:33\n10,CHRISTIAN,GABLE,2006-02-15 04:34:33\n\nQuestion: Count the number of different last names actors have.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of unique last names\nunique_last_names_count = df['last_name'].nunique()\n\nprint(unique_last_names_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactor_id,first_name,last_name,last_update\n1,PENELOPE,GUINESS,2006-02-15 04:34:33\n2,NICK,WAHLBERG,2006-02-15 04:34:33\n3,ED,CHASE,2006-02-15 04:34:33\n4,JENNIFER,DAVIS,2006-02-15 04:34:33\n5,JOHNNY,LOLLOBRIGIDA,2006-02-15 04:34:33\n6,BETTE,NICHOLSON,2006-02-15 04:34:33\n7,GRACE,MOSTEL,2006-02-15 04:34:33\n8,MATTHEW,JOHANSSON,2006-02-15 04:34:33\n9,JOE,SWANK,2006-02-15 04:34:33\n10,CHRISTIAN,GABLE,2006-02-15 04:34:33\n\nQuestion: What is the most popular first name of the actors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the count of each first name\nfirst_name_counts = df['first_name'].value_counts()\n\n# Find the most popular first name\nmost_popular_first_name = first_name_counts.idxmax()\n\nprint(most_popular_first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactor_id,first_name,last_name,last_update\n1,PENELOPE,GUINESS,2006-02-15 04:34:33\n2,NICK,WAHLBERG,2006-02-15 04:34:33\n3,ED,CHASE,2006-02-15 04:34:33\n4,JENNIFER,DAVIS,2006-02-15 04:34:33\n5,JOHNNY,LOLLOBRIGIDA,2006-02-15 04:34:33\n6,BETTE,NICHOLSON,2006-02-15 04:34:33\n7,GRACE,MOSTEL,2006-02-15 04:34:33\n8,MATTHEW,JOHANSSON,2006-02-15 04:34:33\n9,JOE,SWANK,2006-02-15 04:34:33\n10,CHRISTIAN,GABLE,2006-02-15 04:34:33\n\nQuestion: Return the most common first name among all actors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the count of each first name\nfirst_name_counts = df['first_name'].value_counts()\n\n# Find the most popular first name\nmost_popular_first_name = first_name_counts.idxmax()\n\nprint(most_popular_first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address,address2,district,city_id,postal_code,phone,last_update\n1,47 MySakila Drive,,Alberta,300,,,2006-02-15 04:45:30\n2,28 MySQL Boulevard,,QLD,576,,,2006-02-15 04:45:30\n3,23 Workhaven Lane,,Alberta,300,,14033335568,2006-02-15 04:45:30\n4,1411 Lillydale Drive,,QLD,576,,6172235589,2006-02-15 04:45:30\n5,1913 Hanoi Way,,Nagasaki,463,35200,28303384290,2006-02-15 04:45:30\n6,1121 Loja Avenue,,California,449,17886,838635286649,2006-02-15 04:45:30\n7,692 Joliet Street,,Attika,38,83579,448477190408,2006-02-15 04:45:30\n8,1566 Inegl Manor,,Mandalay,349,53561,705814003527,2006-02-15 04:45:30\n9,53 Idfu Parkway,,Nantou,361,42399,10655648674,2006-02-15 04:45:30\n10,1795 Santiago de Compostela Way,,Texas,295,18743,860452626434,2006-02-15 04:45:30\n\nQuestion: What is the phone number and postal code of the address 1031 Daugavpils Parkway?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the 'address' column\naddress_df = df[df['address'] == '1031 Daugavpils Parkway']\n\n# select the 'phone' and 'postal_code' columns\nresult_df = address_df[['phone', 'postal_code']]\n\n# print the result\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address,address2,district,city_id,postal_code,phone,last_update\n1,47 MySakila Drive,,Alberta,300,,,2006-02-15 04:45:30\n2,28 MySQL Boulevard,,QLD,576,,,2006-02-15 04:45:30\n3,23 Workhaven Lane,,Alberta,300,,14033335568,2006-02-15 04:45:30\n4,1411 Lillydale Drive,,QLD,576,,6172235589,2006-02-15 04:45:30\n5,1913 Hanoi Way,,Nagasaki,463,35200,28303384290,2006-02-15 04:45:30\n6,1121 Loja Avenue,,California,449,17886,838635286649,2006-02-15 04:45:30\n7,692 Joliet Street,,Attika,38,83579,448477190408,2006-02-15 04:45:30\n8,1566 Inegl Manor,,Mandalay,349,53561,705814003527,2006-02-15 04:45:30\n9,53 Idfu Parkway,,Nantou,361,42399,10655648674,2006-02-15 04:45:30\n10,1795 Santiago de Compostela Way,,Texas,295,18743,860452626434,2006-02-15 04:45:30\n\nQuestion: Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe based on the 'address' column\naddress_df = df[df['address'] == '1031 Daugavpils Parkway']\n\n# select the 'phone' and 'postal_code' columns\nresult_df = address_df[['phone', 'postal_code']]\n\n# print the result\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address,address2,district,city_id,postal_code,phone,last_update\n1,47 MySakila Drive,,Alberta,300,,,2006-02-15 04:45:30\n2,28 MySQL Boulevard,,QLD,576,,,2006-02-15 04:45:30\n3,23 Workhaven Lane,,Alberta,300,,14033335568,2006-02-15 04:45:30\n4,1411 Lillydale Drive,,QLD,576,,6172235589,2006-02-15 04:45:30\n5,1913 Hanoi Way,,Nagasaki,463,35200,28303384290,2006-02-15 04:45:30\n6,1121 Loja Avenue,,California,449,17886,838635286649,2006-02-15 04:45:30\n7,692 Joliet Street,,Attika,38,83579,448477190408,2006-02-15 04:45:30\n8,1566 Inegl Manor,,Mandalay,349,53561,705814003527,2006-02-15 04:45:30\n9,53 Idfu Parkway,,Nantou,361,42399,10655648674,2006-02-15 04:45:30\n10,1795 Santiago de Compostela Way,,Texas,295,18743,860452626434,2006-02-15 04:45:30\n\nQuestion: How many addresses are in the district of California?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['district'] = df['district'].str.strip()\nanswer = df[df['district'] == 'California']['address_id'].count()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address,address2,district,city_id,postal_code,phone,last_update\n1,47 MySakila Drive,,Alberta,300,,,2006-02-15 04:45:30\n2,28 MySQL Boulevard,,QLD,576,,,2006-02-15 04:45:30\n3,23 Workhaven Lane,,Alberta,300,,14033335568,2006-02-15 04:45:30\n4,1411 Lillydale Drive,,QLD,576,,6172235589,2006-02-15 04:45:30\n5,1913 Hanoi Way,,Nagasaki,463,35200,28303384290,2006-02-15 04:45:30\n6,1121 Loja Avenue,,California,449,17886,838635286649,2006-02-15 04:45:30\n7,692 Joliet Street,,Attika,38,83579,448477190408,2006-02-15 04:45:30\n8,1566 Inegl Manor,,Mandalay,349,53561,705814003527,2006-02-15 04:45:30\n9,53 Idfu Parkway,,Nantou,361,42399,10655648674,2006-02-15 04:45:30\n10,1795 Santiago de Compostela Way,,Texas,295,18743,860452626434,2006-02-15 04:45:30\n\nQuestion: Count the number of addressed in the California district.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['district'] = df['district'].str.strip()\nanswer = df[df['district'] == 'California']['address_id'].count()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,store_id,first_name,last_name,email,address_id,active,create_date,last_update\n1,1,MARY,SMITH,MARY.SMITH@sakilacustomer.org,5,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n2,1,PATRICIA,JOHNSON,PATRICIA.JOHNSON@sakilacustomer.org,6,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n3,1,LINDA,WILLIAMS,LINDA.WILLIAMS@sakilacustomer.org,7,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n4,2,BARBARA,JONES,BARBARA.JONES@sakilacustomer.org,8,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n5,1,ELIZABETH,BROWN,ELIZABETH.BROWN@sakilacustomer.org,9,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n6,2,JENNIFER,DAVIS,JENNIFER.DAVIS@sakilacustomer.org,10,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n7,1,MARIA,MILLER,MARIA.MILLER@sakilacustomer.org,11,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n8,2,SUSAN,WILSON,SUSAN.WILSON@sakilacustomer.org,12,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n9,2,MARGARET,MOORE,MARGARET.MOORE@sakilacustomer.org,13,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n10,1,DOROTHY,TAYLOR,DOROTHY.TAYLOR@sakilacustomer.org,14,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n\nQuestion: How many customers have an active value of 1?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers who are active\nactive_customer_count = df[df['active'] == 1]['customer_id'].count()\n\nprint(active_customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,store_id,first_name,last_name,email,address_id,active,create_date,last_update\n1,1,MARY,SMITH,MARY.SMITH@sakilacustomer.org,5,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n2,1,PATRICIA,JOHNSON,PATRICIA.JOHNSON@sakilacustomer.org,6,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n3,1,LINDA,WILLIAMS,LINDA.WILLIAMS@sakilacustomer.org,7,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n4,2,BARBARA,JONES,BARBARA.JONES@sakilacustomer.org,8,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n5,1,ELIZABETH,BROWN,ELIZABETH.BROWN@sakilacustomer.org,9,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n6,2,JENNIFER,DAVIS,JENNIFER.DAVIS@sakilacustomer.org,10,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n7,1,MARIA,MILLER,MARIA.MILLER@sakilacustomer.org,11,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n8,2,SUSAN,WILSON,SUSAN.WILSON@sakilacustomer.org,12,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n9,2,MARGARET,MOORE,MARGARET.MOORE@sakilacustomer.org,13,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n10,1,DOROTHY,TAYLOR,DOROTHY.TAYLOR@sakilacustomer.org,14,1,2006-02-14 22:04:36,2006-02-15 04:57:20\n\nQuestion: Count the number of customers who are active.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers who are active\nactive_customer_count = df[df['active'] == 1]['customer_id'].count()\n\nprint(active_customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: What are all the movies rated as R? List the titles.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the dataframe by rating 'R' and then select the 'title' column\nmovies_rated_r = df[df['rating'] == 'R']['title']\n\n# save the answer in a variable\nmovies_rated_r_list = movies_rated_r.tolist()\n\n# print the variable\nprint(movies_rated_r_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Return the titles of any movies with an R rating.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the dataframe by rating 'R' and then select the 'title' column\nmovies_rated_r = df[df['rating'] == 'R']['title']\n\n# save the answer in a variable\nmovies_rated_r_list = movies_rated_r.tolist()\n\n# print the variable\nprint(movies_rated_r_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Return the titles of any movies with an R rating.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_stores = df['store_id'].nunique()\n\nprint(num_stores)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Return the titles of any movies with an R rating.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_stores = df['store_id'].nunique()\n\nprint(num_stores)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: How many kinds of different ratings are listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of different film ratings\nrating_count = df['rating'].nunique()\nprint(rating_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Count the number of different film ratings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of different film ratings\nrating_count = df['rating'].nunique()\nprint(rating_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Which movies have 'Deleted Scenes' as a substring in the special feature?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include films with 'Deleted Scenes' in their special features\nfilms_with_deleted_scenes = df[df['special_features'].str.contains('Deleted Scenes')]\n\n# Extract the titles of these films\nfilm_titles = films_with_deleted_scenes['title'].tolist()\n\nprint(film_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Return the titles of films that include 'Deleted Scenes' in their special feature section.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include films with 'Deleted Scenes' in their special features\nfilms_with_deleted_scenes = df[df['special_features'].str.contains('Deleted Scenes')]\n\n# Extract the titles of these films\nfilm_titles = films_with_deleted_scenes['title'].tolist()\n\nprint(film_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,customer_id,staff_id,rental_id,amount,payment_date,last_update\n1,1,1,76,2.99,2005-05-25 11:30:37,2006-02-15 22:12:30\n2,1,1,573,0.99,2005-05-28 10:35:23,2006-02-15 22:12:30\n3,1,1,1185,5.99,2005-06-15 00:54:12,2006-02-15 22:12:30\n4,1,2,1422,0.99,2005-06-15 18:02:53,2006-02-15 22:12:30\n5,1,2,1476,9.99,2005-06-15 21:08:46,2006-02-15 22:12:30\n6,1,1,1725,4.99,2005-06-16 15:18:57,2006-02-15 22:12:30\n7,1,1,2308,4.99,2005-06-18 08:41:48,2006-02-15 22:12:30\n8,1,2,2363,0.99,2005-06-18 13:33:59,2006-02-15 22:12:30\n9,1,1,3284,3.99,2005-06-21 06:24:45,2006-02-15 22:12:30\n10,1,2,4526,5.99,2005-07-08 03:17:05,2006-02-15 22:12:30\n\nQuestion: When did the first payment happen?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf['payment_date'] = pd.to_datetime(df['payment_date'])\nearliest_payment_date = df['payment_date'].min()\n\nprint(earliest_payment_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,customer_id,staff_id,rental_id,amount,payment_date,last_update\n1,1,1,76,2.99,2005-05-25 11:30:37,2006-02-15 22:12:30\n2,1,1,573,0.99,2005-05-28 10:35:23,2006-02-15 22:12:30\n3,1,1,1185,5.99,2005-06-15 00:54:12,2006-02-15 22:12:30\n4,1,2,1422,0.99,2005-06-15 18:02:53,2006-02-15 22:12:30\n5,1,2,1476,9.99,2005-06-15 21:08:46,2006-02-15 22:12:30\n6,1,1,1725,4.99,2005-06-16 15:18:57,2006-02-15 22:12:30\n7,1,1,2308,4.99,2005-06-18 08:41:48,2006-02-15 22:12:30\n8,1,2,2363,0.99,2005-06-18 13:33:59,2006-02-15 22:12:30\n9,1,1,3284,3.99,2005-06-21 06:24:45,2006-02-15 22:12:30\n10,1,2,4526,5.99,2005-07-08 03:17:05,2006-02-15 22:12:30\n\nQuestion: What was the date of the earliest payment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf['payment_date'] = pd.to_datetime(df['payment_date'])\nearliest_payment_date = df['payment_date'].min()\n\nprint(earliest_payment_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: Find all the films longer than 100 minutes, or rated PG, except those who cost more than 200 for replacement. List the titles.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[(df['length'] > 100) | (df['rating'] == 'PG')]\ndf = df[df['replacement_cost'] <= 200]\ntitles = df['title'].tolist()\n\nprint(titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nfilm_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update\n1,ACADEMY DINOSAUR,A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies,2006,1,,6,0.99,86,20.99,PG,Deleted Scenes,Behind the Scenes,2006-02-15 05:03:42\n2,ACE GOLDFINGER,A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China,2006,1,,3,4.99,48,12.99,G,Trailers,Deleted Scenes,2006-02-15 05:03:42\n3,ADAPTATION HOLES,A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory,2006,1,,7,2.99,50,18.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n4,AFFAIR PREJUDICE,A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank,2006,1,,5,2.99,117,26.99,G,Commentaries,Behind the Scenes,2006-02-15 05:03:42\n5,AFRICAN EGG,A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico,2006,1,,6,2.99,130,22.99,G,Deleted Scenes,2006-02-15 05:03:42\n6,AGENT TRUMAN,A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China,2006,1,,3,2.99,169,17.99,PG,Deleted Scenes,2006-02-15 05:03:42\n7,AIRPLANE SIERRA,A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat,2006,1,,6,4.99,62,28.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n8,AIRPORT POLLOCK,A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India,2006,1,,6,4.99,54,15.99,R,Trailers,2006-02-15 05:03:42\n9,ALABAMA DEVIL,A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat,2006,1,,3,2.99,114,21.99,PG-13,Trailers,Deleted Scenes,2006-02-15 05:03:42\n10,ALADDIN CALENDAR,A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China,2006,1,,6,4.99,63,24.99,NC-17,Trailers,Deleted Scenes,2006-02-15 05:03:42\n\nQuestion: What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[(df['length'] > 100) | (df['rating'] == 'PG')]\ndf = df[df['replacement_cost'] <= 200]\ntitles = df['title'].tolist()\n\nprint(titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,customer_id,staff_id,rental_id,amount,payment_date,last_update\n1,1,1,76,2.99,2005-05-25 11:30:37,2006-02-15 22:12:30\n2,1,1,573,0.99,2005-05-28 10:35:23,2006-02-15 22:12:30\n3,1,1,1185,5.99,2005-06-15 00:54:12,2006-02-15 22:12:30\n4,1,2,1422,0.99,2005-06-15 18:02:53,2006-02-15 22:12:30\n5,1,2,1476,9.99,2005-06-15 21:08:46,2006-02-15 22:12:30\n6,1,1,1725,4.99,2005-06-16 15:18:57,2006-02-15 22:12:30\n7,1,1,2308,4.99,2005-06-18 08:41:48,2006-02-15 22:12:30\n8,1,2,2363,0.99,2005-06-18 13:33:59,2006-02-15 22:12:30\n9,1,1,3284,3.99,2005-06-21 06:24:45,2006-02-15 22:12:30\n10,1,2,4526,5.99,2005-07-08 03:17:05,2006-02-15 22:12:30\n\nQuestion: What is the largest payment amount?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the largest payment amount\nlargest_payment = df['amount'].max()\n\nprint(largest_payment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npayment_id,customer_id,staff_id,rental_id,amount,payment_date,last_update\n1,1,1,76,2.99,2005-05-25 11:30:37,2006-02-15 22:12:30\n2,1,1,573,0.99,2005-05-28 10:35:23,2006-02-15 22:12:30\n3,1,1,1185,5.99,2005-06-15 00:54:12,2006-02-15 22:12:30\n4,1,2,1422,0.99,2005-06-15 18:02:53,2006-02-15 22:12:30\n5,1,2,1476,9.99,2005-06-15 21:08:46,2006-02-15 22:12:30\n6,1,1,1725,4.99,2005-06-16 15:18:57,2006-02-15 22:12:30\n7,1,1,2308,4.99,2005-06-18 08:41:48,2006-02-15 22:12:30\n8,1,2,2363,0.99,2005-06-18 13:33:59,2006-02-15 22:12:30\n9,1,1,3284,3.99,2005-06-21 06:24:45,2006-02-15 22:12:30\n10,1,2,4526,5.99,2005-07-08 03:17:05,2006-02-15 22:12:30\n\nQuestion: Return the amount of the largest payment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the largest payment amount\nlargest_payment = df['amount'].max()\n\nprint(largest_payment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: How many bank branches are there?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of bank branches\nbranch_count = df['branch_ID'].nunique()\n\n# Print the branch count\nprint(branch_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: Count the number of bank branches.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of bank branches\nbranch_count = df['branch_ID'].nunique()\n\n# Print the branch count\nprint(branch_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: Find the city and state of the bank branch named morningside.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the bank name is 'morningside'\nmorningside_df = df[df['bname'] == 'morningside']\n\n# Select the city and state from the filtered dataframe\ncity_state = morningside_df[['city', 'state']]\n\n# Assign the city_state value to a variable\nmorningside_location = city_state.values[0]\n\n# Print the variable\nprint(morningside_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: What city and state is the bank with the name morningside in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the bank name is 'morningside'\nmorningside_df = df[df['bname'] == 'morningside']\n\n# Select the city and state from the filtered dataframe\ncity_state = morningside_df[['city', 'state']]\n\n# Assign the city_state value to a variable\nmorningside_location = city_state.values[0]\n\n# Print the variable\nprint(morningside_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: Find the branch names of banks in the New York state.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where state is 'New York'\nnew_york_df = df[df['state'] == 'New York']\n\n# Get the branch names of the banks in New York\nbranch_names = new_york_df['bname'].tolist()\n\n# Save the answer in a variable\nanswer = branch_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: What are the names of banks in the state of New York?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where state is 'New York'\nnew_york_df = df[df['state'] == 'New York']\n\n# Get the branch names of the banks in New York\nbranch_names = new_york_df['bname'].tolist()\n\n# Save the answer in a variable\nanswer = branch_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: List the name of all customers sorted by their account balance in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf_sorted = df.sort_values('acc_bal')\ncustomer_names = df_sorted['cust_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What are the names of all customers, ordered by account balance?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf_sorted = df.sort_values('acc_bal')\ncustomer_names = df_sorted['cust_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: Find the number of different cities which banks are located at.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of different cities which banks are located at\nnum_cities = len(df['city'].unique())\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: In how many different cities are banks located?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of different cities which banks are located at\nnum_cities = len(df['city'].unique())\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: Find the number of different states which banks are located at.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of different states\nnum_states = df['state'].nunique()\n\nprint(num_states)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbranch_ID,bname,no_of_customers,city,state\n1,morningside,203,New York City,New York\n2,downtown,123,Salt Lake City,Utah\n3,broadway,453,New York City,New York\n4,high,367,Austin,Texas\n\nQuestion: In how many different states are banks located?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of different states\nnum_states = df['state'].nunique()\n\nprint(num_states)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: How many distinct types of accounts are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different account types\nnum_acc_types = df['acc_type'].nunique()\n\n# Print the number of different account types\nprint(num_acc_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Count the number of different account types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different account types\nnum_acc_types = df['acc_type'].nunique()\n\n# Print the number of different account types\nprint(num_acc_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the name and account balance of the customer whose name includes the letter ‘a’.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the name and account balance of the customer whose name includes the letter 'a'\nresult = df[df['cust_name'].str.contains('a')][['cust_name', 'acc_bal']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What are the names and account balances of customers with the letter a in their names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the name and account balance of the customer whose name includes the letter 'a'\nresult = df[df['cust_name'].str.contains('a')][['cust_name', 'acc_bal']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the total account balance of each customer from Utah or Texas.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_utah_texas = df[df['state'].isin(['Utah', 'Texas'])]\ntotal_account_balance = df_utah_texas['acc_bal'].sum()\nprint(total_account_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What are the total account balances for each customer from Utah or Texas?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_utah_texas = df[df['state'].isin(['Utah', 'Texas'])]\ntotal_account_balance = df_utah_texas['acc_bal'].sum()\nprint(total_account_balance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the name of customers who do not have an saving account.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Code to answer the question\nfiltered_df = df[df['acc_type'] != 'saving']\ncustomer_names = filtered_df['cust_name'].values\n\n# Print the names of customers who do not have saving accounts\nfor name in customer_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What are the names of customers who do not have saving accounts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Code to answer the question\nfiltered_df = df[df['acc_type'] != 'saving']\ncustomer_names = filtered_df['cust_name'].values\n\n# Print the names of customers who do not have saving accounts\nfor name in customer_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the name of customers whose credit score is below the average credit scores of all customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_credit_score = df['credit_score'].mean()\n\ncustomers_below_average = df[df['credit_score'] < average_credit_score]\n\ncustomer_names = customers_below_average['cust_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What are the names of customers with credit score less than the average credit score across customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_credit_score = df['credit_score'].mean()\n\ncustomers_below_average = df[df['credit_score'] < average_credit_score]\n\ncustomer_names = customers_below_average['cust_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the name of customer who has the lowest credit score.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum credit score\nmin_credit_score = df['credit_score'].min()\n\n# Find the customer name with the minimum credit score\nmin_credit_score_customer = df.loc[df['credit_score'] == min_credit_score, 'cust_name'].values[0]\n\n# Print the name of the customer with the minimum credit score\nprint(min_credit_score_customer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What is the name of the customer with the worst credit score?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum credit score\nmin_credit_score = df['credit_score'].min()\n\n# Find the customer name with the minimum credit score\nmin_credit_score_customer = df.loc[df['credit_score'] == min_credit_score, 'cust_name'].values[0]\n\n# Print the name of the customer with the minimum credit score\nprint(min_credit_score_customer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: Find the name, account type, and account balance of the customer who has the highest credit score.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the customer with the highest credit score\nhighest_credit_customer = df[df['credit_score'] == df['credit_score'].max()]\n\n# Save the answer in a variable\nanswer = highest_credit_customer[['cust_name', 'acc_type', 'acc_bal']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What is the name, account type, and account balance corresponding to the customer with the highest credit score?", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the customer with the highest credit score\nhighest_credit_customer = df[df['credit_score'] == df['credit_score'].max()]\n\n# Save the answer in a variable\nanswer = highest_credit_customer[['cust_name', 'acc_type', 'acc_bal']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: For each account type, find the average account balance of customers with credit score lower than 50.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only customers with credit score < 50\nfiltered_df = df[df['credit_score'] < 50]\n\n# Group the filtered dataframe by 'acc_type' and calculate the mean of 'acc_bal'\navg_bal = filtered_df.groupby('acc_type')['acc_bal'].mean()\n\n# Print the result\nprint(avg_bal)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What is the average account balance of customers with credit score below 50 for the different account types?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only customers with credit score < 50\nfiltered_df = df[df['credit_score'] < 50]\n\n# Group the filtered dataframe by 'acc_type' and calculate the mean of 'acc_bal'\navg_bal = filtered_df.groupby('acc_type')['acc_bal'].mean()\n\n# Print the result\nprint(avg_bal)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: For each state, find the total account balance of customers whose credit score is above 100.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the dataframe for credit score above 100\ndf_filtered = df[df['credit_score'] > 100]\n\n# group the filtered dataframe by state and sum the account balances\nresult = df_filtered.groupby('state')['acc_bal'].sum()\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state\n1,Mary,saving,2000,2,30,2,Utah\n2,Jack,checking,1000,1,20,1,Texas\n3,Owen,saving,800000,0,210,3,New York\n\nQuestion: What is the total account balance for customers with a credit score of above 100 for the different states?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the dataframe for credit score above 100\ndf_filtered = df[df['credit_score'] > 100]\n\n# group the filtered dataframe by state and sum the account balances\nresult = df_filtered.groupby('state')['acc_bal'].sum()\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nnotes_id,student_id,teacher_id,date_of_notes,text_of_notes,other_details\n1,7,3,1978-04-15 04:49:18,,\n2,11,10,2005-06-30 02:48:35,,\n3,15,3,1988-06-09 00:24:01,,\n4,12,9,1991-08-15 01:22:08,,\n5,4,10,1971-05-05 20:07:08,,\n6,12,6,2014-01-31 02:05:02,,\n7,12,7,1984-12-13 23:04:28,,\n8,7,14,1988-04-11 04:56:26,,\n9,14,15,1972-04-27 04:51:51,,\n10,13,6,2017-12-14 08:21:54,,\n\nQuestion: How many assessment notes are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntotal_assessment_notes = len(df)\n\nprint(total_assessment_notes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nnotes_id,student_id,teacher_id,date_of_notes,text_of_notes,other_details\n1,7,3,1978-04-15 04:49:18,,\n2,11,10,2005-06-30 02:48:35,,\n3,15,3,1988-06-09 00:24:01,,\n4,12,9,1991-08-15 01:22:08,,\n5,4,10,1971-05-05 20:07:08,,\n6,12,6,2014-01-31 02:05:02,,\n7,12,7,1984-12-13 23:04:28,,\n8,7,14,1988-04-11 04:56:26,,\n9,14,15,1972-04-27 04:51:51,,\n10,13,6,2017-12-14 08:21:54,,\n\nQuestion: What are the dates of the assessment notes?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndates = df['date_of_notes']\n\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details\n1,020 Orie Canyon,,,North Loyceville,197,Hawaii,USA,\n2,1333 Boyle Lane,,,West Sean,937,Illinois,USA,\n3,027 Kim Divide Apt. 492,,,Beierview,918,Texas,USA,\n4,056 Murphy Stravenue Apt. 600,,,Elinoreport,238,Wisconsin,USA,\n5,719 Pfannerstill Ridge Suite 663,,,Meganeland,002,SouthDakota,USA,\n6,420 Zieme Oval,,,Corkeryborough,744,Wisconsin,USA,\n7,27712 Marks Lake Apt. 752,,,Gleasonshire,182,Maryland,USA,\n8,6960 O'Connell Dale Suite 622,,,New Annabellefort,062,Kentucky,USA,\n9,18327 Jaime Terrace Suite 343,,,Edmundton,520,Oregon,USA,\n10,3069 Garrison Squares,,,Lake Ahmadland,748,Nevada,USA,\n\nQuestion: How many addresses have zip code 197?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the zip code 197\nzip_197_df = df[df['zip_postcode'] == 197]\n\n# Count the number of addresses with zip code 197\ncount_addresses = len(zip_197_df)\n\n# Print the count\nprint(count_addresses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nincident_id,incident_type_code,student_id,date_incident_start,date_incident_end,incident_summary,recommendations,other_details\n1,NOISE,6,2017-07-09 10:04:13,2018-03-08 14:08:54,,,\n2,DISTURB,13,2018-01-31 10:51:13,2018-03-18 18:40:05,,,\n3,VIOLENCE,1,2017-10-10 22:43:54,2018-03-22 02:10:35,,Transfer schools,\n4,VIOLENCE,10,2017-07-20 17:43:50,2018-03-09 06:28:44,,,\n5,NOISE,7,2017-08-13 22:15:05,2018-02-25 05:38:58,,,\n6,VIOLENCE,8,2017-06-09 18:32:28,2018-03-20 10:32:10,,,\n7,VIOLENCE,4,2017-04-23 07:03:17,2018-03-19 02:35:39,,,\n8,DISTURB,1,2017-05-02 12:52:09,2018-03-18 01:23:29,,,\n9,NOISE,11,2017-06-19 14:25:54,2018-03-08 09:36:36,,,\n10,NOISE,1,2018-01-27 09:24:45,2018-03-13 05:18:05,,,\n\nQuestion: How many distinct incident type codes are there?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the number of distinct incident type codes\nnum_distinct_codes = df['incident_type_code'].nunique()\n\nprint(num_distinct_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndetention_id,detention_type_code,teacher_id,datetime_detention_start,datetime_detention_end,detention_summary,other_details\n1,AFTER,7,2017-09-05 00:38:25,2018-03-08 02:08:32,,\n2,AFTER,14,2018-01-10 08:09:02,2018-03-07 04:24:48,,\n3,BREAK ,11,2017-12-14 06:40:29,2018-03-08 09:16:38,,\n4,AFTER,8,2017-06-09 06:13:09,2018-03-21 19:34:56,,\n5,BREAK ,3,2017-08-25 12:00:46,2018-03-11 13:21:07,,\n6,BREAK ,12,2017-10-20 22:34:44,2018-03-11 12:58:40,,\n7,BREAK ,15,2018-02-19 11:44:52,2018-03-17 12:35:41,,\n8,BREAK ,5,2017-11-26 15:05:05,2018-03-16 01:37:25,,\n9,LUNCH,15,2017-10-30 16:04:00,2018-03-22 20:15:47,,\n10,AFTER,15,2018-01-29 20:43:45,2018-03-05 03:31:24,,\n\nQuestion: Return all distinct detention type codes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_detention_types = df['detention_type_code'].unique()\n\nprint(distinct_detention_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nincident_id,incident_type_code,student_id,date_incident_start,date_incident_end,incident_summary,recommendations,other_details\n1,NOISE,6,2017-07-09 10:04:13,2018-03-08 14:08:54,,,\n2,DISTURB,13,2018-01-31 10:51:13,2018-03-18 18:40:05,,,\n3,VIOLENCE,1,2017-10-10 22:43:54,2018-03-22 02:10:35,,Transfer schools,\n4,VIOLENCE,10,2017-07-20 17:43:50,2018-03-09 06:28:44,,,\n5,NOISE,7,2017-08-13 22:15:05,2018-02-25 05:38:58,,,\n6,VIOLENCE,8,2017-06-09 18:32:28,2018-03-20 10:32:10,,,\n7,VIOLENCE,4,2017-04-23 07:03:17,2018-03-19 02:35:39,,,\n8,DISTURB,1,2017-05-02 12:52:09,2018-03-18 01:23:29,,,\n9,NOISE,11,2017-06-19 14:25:54,2018-03-08 09:36:36,,,\n10,NOISE,1,2018-01-27 09:24:45,2018-03-13 05:18:05,,,\n\nQuestion: What are the start and end dates for incidents with incident type code \"NOISE\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include incidents of type \"NOISE\"\nnoise_incidents = df[df['incident_type_code'] == 'NOISE']\n\n# Create a DataFrame with only the start and end dates\ndates = noise_incidents[['date_incident_start', 'date_incident_end']]\n\n# Print the result\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,date_first_rental,date_left_university,other_student_details\n1,19,Emma,Frederic,Rohan,235.899.9744,derrick.jenkins@example.com,2017-12-05 15:20:04,2018-03-03 03:33:05,\n2,9,Louvenia,Fatima,Hansen,1-247-673-8446,rohan.clarabelle@example.org,2017-08-08 22:30:36,2018-02-24 11:12:11,\n3,10,Rhea,Gardner,Bergnaum,1-751-162-9676x115,kkirlin@example.org,2017-11-15 04:57:28,2018-03-19 12:49:20,\n4,8,David,Darlene,Gorczany,1-895-196-9979,eolson@example.com,2018-02-15 20:03:11,2018-03-11 02:21:24,\n5,8,Lucile,Stone,Gottlieb,1-036-062-5465,dicki.kathryne@example.org,2017-07-20 18:20:27,2018-03-18 16:07:42,\n6,12,Antonietta,Crystal,Fahey,(874)070-9495,norwood.howell@example.org,2017-10-31 12:33:09,2018-03-20 22:01:07,\n7,20,Rupert,Lincoln,Marks,763.072.5520x5907,lisette.brekke@example.net,2017-09-25 12:02:23,2018-03-01 08:56:04,first honor\n8,14,Julia,Arno,Balistreri,319.497.4575x2214,jasmin.schuppe@example.com,2018-02-23 02:28:07,2018-03-01 16:03:55,\n9,19,Christy,Devonte,Huels,(568)451-0917x3945,dora.zboncak@example.org,2018-01-11 19:49:39,2018-03-15 01:47:11,\n10,2,Adella,Chesley,Krajcik,08605192839,frederique.mante@example.org,2017-07-05 19:15:29,2018-03-11 15:57:19,first honor\n\nQuestion: Return the cell phone number and email address for all students.", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the columns of cell_mobile_number and email_address\nresult = df[['cell_mobile_number', 'email_address']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,date_first_rental,date_left_university,other_student_details\n1,19,Emma,Frederic,Rohan,235.899.9744,derrick.jenkins@example.com,2017-12-05 15:20:04,2018-03-03 03:33:05,\n2,9,Louvenia,Fatima,Hansen,1-247-673-8446,rohan.clarabelle@example.org,2017-08-08 22:30:36,2018-02-24 11:12:11,\n3,10,Rhea,Gardner,Bergnaum,1-751-162-9676x115,kkirlin@example.org,2017-11-15 04:57:28,2018-03-19 12:49:20,\n4,8,David,Darlene,Gorczany,1-895-196-9979,eolson@example.com,2018-02-15 20:03:11,2018-03-11 02:21:24,\n5,8,Lucile,Stone,Gottlieb,1-036-062-5465,dicki.kathryne@example.org,2017-07-20 18:20:27,2018-03-18 16:07:42,\n6,12,Antonietta,Crystal,Fahey,(874)070-9495,norwood.howell@example.org,2017-10-31 12:33:09,2018-03-20 22:01:07,\n7,20,Rupert,Lincoln,Marks,763.072.5520x5907,lisette.brekke@example.net,2017-09-25 12:02:23,2018-03-01 08:56:04,first honor\n8,14,Julia,Arno,Balistreri,319.497.4575x2214,jasmin.schuppe@example.com,2018-02-23 02:28:07,2018-03-01 16:03:55,\n9,19,Christy,Devonte,Huels,(568)451-0917x3945,dora.zboncak@example.org,2018-01-11 19:49:39,2018-03-15 01:47:11,\n10,2,Adella,Chesley,Krajcik,08605192839,frederique.mante@example.org,2017-07-05 19:15:29,2018-03-11 15:57:19,first honor\n\nQuestion: What is the email of the student with first name \"Emma\" and last name \"Rohan\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where first_name is \"Emma\" and last_name is \"Rohan\"\nemma_rohan = df[(df['first_name'] == 'Emma') & (df['last_name'] == 'Rohan')]\n\n# Get the email of the student\nemail = emma_rohan['email_address'].values[0]\n\nprint(email)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nteacher_id,address_id,first_name,middle_name,last_name,gender,cell_mobile_number,email_address,other_details\n1,15,Lyla,Wilson,Medhurst,1,792.333.7714,ohammes@example.com,\n2,7,Sid,Tremayne,Brakus,1,202.626.1698x9242,deborah37@example.com,\n3,8,Trystan,Alexane,Schuster,1,583-467-0403x647,hilll.kitty@example.com,\n4,7,Donnie,Morgan,Kuhic,1,07928511102,destany.reichert@example.net,\n5,15,Aniya,Ian,Becker,1,599.373.0773x67706,hahn.isom@example.com,Dean\n6,16,Citlalli,Ahmad,Kuhic,1,017.636.7409,kozey.adeline@example.org,\n7,3,Alvis,Macey,Schultz,1,944-154-5379x4990,everardo.lynch@example.net,\n8,13,Cecilia,Mitchel,Ward,0,809.852.7009,paula.abbott@example.org,\n9,2,Woodrow,Lilla,Goldner,1,084-270-4880,ierdman@example.com,\n10,8,Gregory,Ardith,Heller,0,908-759-1808x63115,valentina.yost@example.com,\n\nQuestion: What is the gender of the teacher with last name \"Medhurst\"?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include teachers with the last name \"Medhurst\"\nmedhurst_df = df[df['last_name'] == 'Medhurst']\n\n# Get the gender of the teacher with last name \"Medhurst\"\nmedhurst_gender = medhurst_df['gender'].values[0]\n\n# Print the gender\nprint(medhurst_gender)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nincident_type_code,incident_type_description\nNOISE,Noise\nVIOLENCE,Violence\nDISTURB,Disturbance\n\nQuestion: What is the incident type description for the incident type with code \"VIOLENCE\"?", "response": "import pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to only include rows where 'incident_type_code' is 'VIOLENCE'\nfiltered_df = df[df['incident_type_code'] == 'VIOLENCE']\n\n# Retrieving the 'incident_type_description' for the filtered dataframe\nincident_description = filtered_df['incident_type_description'].values[0]\n\n# Printing the incident type description\nprint(incident_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nteacher_id,address_id,first_name,middle_name,last_name,gender,cell_mobile_number,email_address,other_details\n1,15,Lyla,Wilson,Medhurst,1,792.333.7714,ohammes@example.com,\n2,7,Sid,Tremayne,Brakus,1,202.626.1698x9242,deborah37@example.com,\n3,8,Trystan,Alexane,Schuster,1,583-467-0403x647,hilll.kitty@example.com,\n4,7,Donnie,Morgan,Kuhic,1,07928511102,destany.reichert@example.net,\n5,15,Aniya,Ian,Becker,1,599.373.0773x67706,hahn.isom@example.com,Dean\n6,16,Citlalli,Ahmad,Kuhic,1,017.636.7409,kozey.adeline@example.org,\n7,3,Alvis,Macey,Schultz,1,944-154-5379x4990,everardo.lynch@example.net,\n8,13,Cecilia,Mitchel,Ward,0,809.852.7009,paula.abbott@example.org,\n9,2,Woodrow,Lilla,Goldner,1,084-270-4880,ierdman@example.com,\n10,8,Gregory,Ardith,Heller,0,908-759-1808x63115,valentina.yost@example.com,\n\nQuestion: Find the first names of teachers whose email address contains the word \"man\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows with email_address containing 'man'\nfiltered_df = df[df['email_address'].str.contains('man')]\n\n# Get first_names from filtered dataframe\nfirst_names = filtered_df['first_name'].tolist()\n\n# Print first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details\n1,020 Orie Canyon,,,North Loyceville,197,Hawaii,USA,\n2,1333 Boyle Lane,,,West Sean,937,Illinois,USA,\n3,027 Kim Divide Apt. 492,,,Beierview,918,Texas,USA,\n4,056 Murphy Stravenue Apt. 600,,,Elinoreport,238,Wisconsin,USA,\n5,719 Pfannerstill Ridge Suite 663,,,Meganeland,002,SouthDakota,USA,\n6,420 Zieme Oval,,,Corkeryborough,744,Wisconsin,USA,\n7,27712 Marks Lake Apt. 752,,,Gleasonshire,182,Maryland,USA,\n8,6960 O'Connell Dale Suite 622,,,New Annabellefort,062,Kentucky,USA,\n9,18327 Jaime Terrace Suite 343,,,Edmundton,520,Oregon,USA,\n10,3069 Garrison Squares,,,Lake Ahmadland,748,Nevada,USA,\n\nQuestion: List all cities of addresses in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting and storing cities in alphabetical order\nsorted_cities = df['city'].sort_values().tolist()\n\nprint(sorted_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nteacher_id,address_id,first_name,middle_name,last_name,gender,cell_mobile_number,email_address,other_details\n1,15,Lyla,Wilson,Medhurst,1,792.333.7714,ohammes@example.com,\n2,7,Sid,Tremayne,Brakus,1,202.626.1698x9242,deborah37@example.com,\n3,8,Trystan,Alexane,Schuster,1,583-467-0403x647,hilll.kitty@example.com,\n4,7,Donnie,Morgan,Kuhic,1,07928511102,destany.reichert@example.net,\n5,15,Aniya,Ian,Becker,1,599.373.0773x67706,hahn.isom@example.com,Dean\n6,16,Citlalli,Ahmad,Kuhic,1,017.636.7409,kozey.adeline@example.org,\n7,3,Alvis,Macey,Schultz,1,944-154-5379x4990,everardo.lynch@example.net,\n8,13,Cecilia,Mitchel,Ward,0,809.852.7009,paula.abbott@example.org,\n9,2,Woodrow,Lilla,Goldner,1,084-270-4880,ierdman@example.com,\n10,8,Gregory,Ardith,Heller,0,908-759-1808x63115,valentina.yost@example.com,\n\nQuestion: Find the first names and last names of teachers in alphabetical order of last name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'last_name' in ascending order\ndf = df.sort_values('last_name')\n\n# Select the 'first_name' and 'last_name' columns\nnames_df = df[['first_name', 'last_name']]\n\n# Save the answer of the question in a variable\nanswer = names_df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nengineer_id,company_id,first_name,last_name,other_details\n1,14,Etha,Reinger,Skilled\n2,2,Clemens,Orn,\n3,6,Samanta,Hauck,\n4,3,Lorine,Morar,\n5,15,Manley,Grady,\n6,1,Courtney,Adams,\n7,11,Josie,Harvey,Skilled\n8,9,Nellie,Hirthe,\n9,4,Brian,Stamm,\n10,4,Naomi,Price,\n\nQuestion: What are all the distinct last names of all the engineers?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get all distinct last names\ndistinct_last_names = df['last_name'].unique()\n\n# Print the distinct last names\nprint(distinct_last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nasset_id,maintenance_contract_id,supplier_company_id,asset_details,asset_make,asset_model,asset_acquired_date,asset_disposed_date,other_asset_details\n1,2,2,dell laptop1,PT,58 ub,2017-12-25 00:31:27,2018-03-14 10:50:00,\n2,14,1,dell laptop2,IN,35 xt,2018-01-27 00:59:46,2018-03-20 04:24:09,\n3,7,2,dell laptop3,IT,63 ok,2017-09-07 08:13:15,2018-03-08 20:50:40,Bad condition\n4,11,5,dell laptop4,RU,69 uv,2017-06-12 17:37:19,2018-03-16 05:46:55,\n5,8,5,dell laptop5,DE,90 oq,2017-07-21 16:03:19,2018-02-27 18:59:07,\n6,8,6,monitor1,CN,91 ub,2017-04-22 12:33:39,2018-03-10 11:11:43,\n7,6,6,monitor2,CN,27 du,2017-07-18 01:22:58,2018-03-20 22:45:00,\n8,15,7,monitor3,GB,94 kg,2017-10-24 04:29:17,2018-02-28 18:14:13,Bad condition\n9,12,13,machine1,RU,07 yt,2017-04-16 12:19:25,2018-03-08 18:42:41,\n10,2,2,machine2,FR,20 tl,2017-09-19 16:15:45,2018-03-06 20:36:14,\n\nQuestion: List the asset id, details, make and model for every asset.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the desired columns\nasset_details = df[[\"asset_id\", \"asset_details\", \"asset_make\", \"asset_model\"]]\n\nprint(asset_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nasset_id,maintenance_contract_id,supplier_company_id,asset_details,asset_make,asset_model,asset_acquired_date,asset_disposed_date,other_asset_details\n1,2,2,dell laptop1,PT,58 ub,2017-12-25 00:31:27,2018-03-14 10:50:00,\n2,14,1,dell laptop2,IN,35 xt,2018-01-27 00:59:46,2018-03-20 04:24:09,\n3,7,2,dell laptop3,IT,63 ok,2017-09-07 08:13:15,2018-03-08 20:50:40,Bad condition\n4,11,5,dell laptop4,RU,69 uv,2017-06-12 17:37:19,2018-03-16 05:46:55,\n5,8,5,dell laptop5,DE,90 oq,2017-07-21 16:03:19,2018-02-27 18:59:07,\n6,8,6,monitor1,CN,91 ub,2017-04-22 12:33:39,2018-03-10 11:11:43,\n7,6,6,monitor2,CN,27 du,2017-07-18 01:22:58,2018-03-20 22:45:00,\n8,15,7,monitor3,GB,94 kg,2017-10-24 04:29:17,2018-02-28 18:14:13,Bad condition\n9,12,13,machine1,RU,07 yt,2017-04-16 12:19:25,2018-03-08 18:42:41,\n10,2,2,machine2,FR,20 tl,2017-09-19 16:15:45,2018-03-06 20:36:14,\n\nQuestion: When was the first asset acquired?", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert the 'asset_acquired_date' column to datetime format\ndf['asset_acquired_date'] = pd.to_datetime(df['asset_acquired_date'])\n\n# Find the earliest date in the 'asset_acquired_date' column\nearliest_date = df['asset_acquired_date'].min()\n\n# Print the earliest date\nprint(earliest_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nasset_id,maintenance_contract_id,supplier_company_id,asset_details,asset_make,asset_model,asset_acquired_date,asset_disposed_date,other_asset_details\n1,2,2,dell laptop1,PT,58 ub,2017-12-25 00:31:27,2018-03-14 10:50:00,\n2,14,1,dell laptop2,IN,35 xt,2018-01-27 00:59:46,2018-03-20 04:24:09,\n3,7,2,dell laptop3,IT,63 ok,2017-09-07 08:13:15,2018-03-08 20:50:40,Bad condition\n4,11,5,dell laptop4,RU,69 uv,2017-06-12 17:37:19,2018-03-16 05:46:55,\n5,8,5,dell laptop5,DE,90 oq,2017-07-21 16:03:19,2018-02-27 18:59:07,\n6,8,6,monitor1,CN,91 ub,2017-04-22 12:33:39,2018-03-10 11:11:43,\n7,6,6,monitor2,CN,27 du,2017-07-18 01:22:58,2018-03-20 22:45:00,\n8,15,7,monitor3,GB,94 kg,2017-10-24 04:29:17,2018-02-28 18:14:13,Bad condition\n9,12,13,machine1,RU,07 yt,2017-04-16 12:19:25,2018-03-08 18:42:41,\n10,2,2,machine2,FR,20 tl,2017-09-19 16:15:45,2018-03-06 20:36:14,\n\nQuestion: What are all the distinct asset models?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Using unique() function to get all distinct values in 'asset_model' column\ndistinct_models = df['asset_model'].unique()\n\n# Printing the distinct asset models\nprint(distinct_models)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nasset_id,maintenance_contract_id,supplier_company_id,asset_details,asset_make,asset_model,asset_acquired_date,asset_disposed_date,other_asset_details\n1,2,2,dell laptop1,PT,58 ub,2017-12-25 00:31:27,2018-03-14 10:50:00,\n2,14,1,dell laptop2,IN,35 xt,2018-01-27 00:59:46,2018-03-20 04:24:09,\n3,7,2,dell laptop3,IT,63 ok,2017-09-07 08:13:15,2018-03-08 20:50:40,Bad condition\n4,11,5,dell laptop4,RU,69 uv,2017-06-12 17:37:19,2018-03-16 05:46:55,\n5,8,5,dell laptop5,DE,90 oq,2017-07-21 16:03:19,2018-02-27 18:59:07,\n6,8,6,monitor1,CN,91 ub,2017-04-22 12:33:39,2018-03-10 11:11:43,\n7,6,6,monitor2,CN,27 du,2017-07-18 01:22:58,2018-03-20 22:45:00,\n8,15,7,monitor3,GB,94 kg,2017-10-24 04:29:17,2018-02-28 18:14:13,Bad condition\n9,12,13,machine1,RU,07 yt,2017-04-16 12:19:25,2018-03-08 18:42:41,\n10,2,2,machine2,FR,20 tl,2017-09-19 16:15:45,2018-03-06 20:36:14,\n\nQuestion: List the all the assets make, model, details by the disposed date ascendingly.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('asset_disposed_date')\n\nanswer = df[['asset_make', 'asset_model', 'asset_details']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npart_id,part_name,chargeable_yn,chargeable_amount,other_part_details\n1,top,0,4,\n2,middle,1,9,\n3,package,1,9,\n\nQuestion: Which part has the least chargeable amount? List the part id and amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nleast_chargeable = df[df['chargeable_amount'] == df['chargeable_amount'].min()]\n\nleast_chargeable = least_chargeable[['part_id', 'chargeable_amount']]\n\nprint(least_chargeable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_name,gender,other_staff_details\n1,Audreanne,1,Manager\n2,Berneice,1,Manager\n3,Helena,1,\n4,Edmond,0,\n5,Leola,1,Manager\n6,Rodger,1,\n7,Kadin,1,\n8,Christophe,0,Woker\n9,Bernice,0,\n10,Jayda,1,\n\nQuestion: Which gender makes up the majority of the staff?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the count of each gender\ngender_counts = df['gender'].value_counts()\n\n# Find the gender that makes up the majority of the staff\nmajority_gender = gender_counts.idxmax()\n\n# Print the result\nprint(majority_gender)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,network_name,services,local_authority\n1,Amersham,Metropolitan line and Chiltern Railways,Chiltern\n2,Bushey,London Overground and London Midland,Watford\n3,Brentwood,Greater Anglia,Brentwood\n4,Broxbourne,Greater Anglia,Broxbourne\n5,Carpenders Park,London Overground,Three Rivers\n6,Chafford Hundred,c2c,Thurrock\n7,Chalfont & Latimer,Metropolitan line and Chiltern Railways,Chiltern\n8,Chesham,Metropolitan line,Chiltern\n9,Cheshunt,Greater Anglia,Broxbourne\n10,Chorleywood,Metropolitan line and Chiltern Railways,Three Rivers\n\nQuestion: list the local authorities and services provided by all stations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Saving the answer in a variable\nanswer = df[['local_authority', 'services']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: show all train numbers and names ordered by their time from early to late.", "response": "import pandas as pd\n\n# read the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# convert the time column to datetime\ndf['time'] = pd.to_datetime(df['time'])\n\n# sort the dataframe by the time column\ndf = df.sort_values(by='time')\n\n# select the train_number and name columns\nresult = df[['train_number', 'name']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: Give me the times and numbers of all trains that go to Chennai, ordered by time.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['destination'] == 'Chennai']\ndf = df[['time', 'train_number']].sort_values('time')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: How many trains have 'Express' in their names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to include only rows where 'name' contains 'Express'\nexpress_trains = df[df['name'].str.contains('Express')]\n\n# Counting the number of rows in the filtered dataframe\nnum_express_trains = len(express_trains)\n\nprint(num_express_trains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: Find the number and time of the train that goes from Chennai to Guruvayur.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['origin'] == 'Chennai') & (df['destination'] == 'Guruvayur')]\n\n# Saving the answer in a variable\nanswer = df_filtered[['train_number', 'time']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: Find the number of trains starting from each origin.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts() function to find the number of trains starting from each origin\ntrain_counts = df['origin'].value_counts()\n\n# Print the result\nprint(train_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstation_id,day_of_week,high_temperature,low_temperature,precipitation,wind_speed_mph\n1,Monday,59,54,90.0,13\n1,Tuesday,66,55,20.0,12\n1,Wednesday,60,52,10.0,14\n1,Thursday,55,50,30.0,13\n1,Friday,55,52,50.0,17\n1,Saturday,55,52,50.0,14\n1,Sunday,54,52,50.0,12\n2,Monday,58,54,60.0,20\n2,Tuesday,57,54,80.0,22\n2,Wednesday,59,55,90.0,23\n\nQuestion: What is the average high temperature for each day of week?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average high temperature for each day of week\naverage_high_temp = df.groupby('day_of_week')['high_temperature'].mean()\n\n# Print the average high temperature for each day of week\nprint(average_high_temp)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,network_name,services,local_authority\n1,Amersham,Metropolitan line and Chiltern Railways,Chiltern\n2,Bushey,London Overground and London Midland,Watford\n3,Brentwood,Greater Anglia,Brentwood\n4,Broxbourne,Greater Anglia,Broxbourne\n5,Carpenders Park,London Overground,Three Rivers\n6,Chafford Hundred,c2c,Thurrock\n7,Chalfont & Latimer,Metropolitan line and Chiltern Railways,Chiltern\n8,Chesham,Metropolitan line,Chiltern\n9,Cheshunt,Greater Anglia,Broxbourne\n10,Chorleywood,Metropolitan line and Chiltern Railways,Three Rivers\n\nQuestion: How many different services are provided by all stations?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Split the 'services' column by ' and ' and then stack the result to create a Series\n# Count the unique values in this Series\nservices_count = df['services'].str.split(' and ').apply(pd.Series).stack().nunique()\n\nprint(services_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstation_id,day_of_week,high_temperature,low_temperature,precipitation,wind_speed_mph\n1,Monday,59,54,90.0,13\n1,Tuesday,66,55,20.0,12\n1,Wednesday,60,52,10.0,14\n1,Thursday,55,50,30.0,13\n1,Friday,55,52,50.0,17\n1,Saturday,55,52,50.0,14\n1,Sunday,54,52,50.0,12\n2,Monday,58,54,60.0,20\n2,Tuesday,57,54,80.0,22\n2,Wednesday,59,55,90.0,23\n\nQuestion: show the lowest low temperature and highest wind speed in miles per hour.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmin_low_temp = df['low_temperature'].min()\nmax_wind_speed = df['wind_speed_mph'].max()\n\nresult = pd.DataFrame({\n    'lowest_low_temperature': [min_low_temp],\n    'highest_wind_speed': [max_wind_speed]\n})\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,train_number,name,origin,destination,time,interval\n1,16724,Ananthapuri Express,Trivandrum,Chennai,17:15,Daily\n2,16127,Guruvayur Express,Chennai,Guruvayur,22:10,Daily\n3,16128,Guruvayur Express,Guruvayur,Chennai,4:49,Daily\n4,16723,Ananthapuri Express,Chennai,Trivandrum,11:35,Daily\n5,16382,Jayanthi Janatha Express,Kanniyakumari,Mumbai,06:30,Daily\n6,16525,Island Express,Kanniyakumari,Bangalore,11:15,Daily\n7,56701,Madurai Fast Passenger,Quilon,Madurai,21:49,Daily\n8,56700,Quilon Fast Passenger,Madurai,Quilon Junction,04:55,Daily\n9,16526,Island Express,Bangalore,Kanniyakumari,16:59,Daily\n10,16381,Jayanthi Janatha Express,Mumbai,Kanniyakumari,10:38,Daily\n\nQuestion: Find the origins from which more than 1 train starts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_count = df['origin'].value_counts()\n\norigins = df_count[df_count > 1].index.tolist()\n\nprint(origins)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many professors are teaching class with code ACCT-211?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where CRS_CODE is ACCT-211\ndf_acct211 = df[df['CRS_CODE'] == 'ACCT-211']\n\n# Count the unique professors teaching class ACCT-211\nprofessor_count = df_acct211['PROF_NUM'].nunique()\n\n# Print the result\nprint(professor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many professors teach a class with the code ACCT-211?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where CRS_CODE is ACCT-211\ndf_acct211 = df[df['CRS_CODE'] == 'ACCT-211']\n\n# Count the unique professors teaching class ACCT-211\nprofessor_count = df_acct211['PROF_NUM'].nunique()\n\n# Print the result\nprint(professor_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: What is the code of the school where the accounting department belongs to?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include the accounting department\naccounting_dept = df[df['DEPT_NAME'] == 'Accounting']\n\n# Get the school code of the accounting department\nschool_code = accounting_dept['SCHOOL_CODE'].values[0]\n\n# Print the school code\nprint(school_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: What is the school code of the accounting department?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include the accounting department\naccounting_dept = df[df['DEPT_NAME'] == 'Accounting']\n\n# Get the school code of the accounting department\nschool_code = accounting_dept['SCHOOL_CODE'].values[0]\n\n# Print the school code\nprint(school_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: How many credits does course CIS-220 have, and what its description?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where CRS_CODE is \"CIS-220\"\nfiltered_df = df[df['CRS_CODE'] == 'CIS-220']\n\n# Select the CRS_DESCRIPTION and CRS_CREDIT columns\nanswer = filtered_df[['CRS_DESCRIPTION', 'CRS_CREDIT']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: What is the description for the CIS-220 and how many credits does it have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where CRS_CODE is \"CIS-220\"\nfiltered_df = df[df['CRS_CODE'] == 'CIS-220']\n\n# Select the CRS_DESCRIPTION and CRS_CREDIT columns\nanswer = filtered_df[['CRS_DESCRIPTION', 'CRS_CREDIT']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: what is the address of history department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhistory_dept = df[df['DEPT_NAME'] == 'History']\n\nanswer = history_dept['DEPT_ADDRESS'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: Where is the history department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhistory_dept = df[df['DEPT_NAME'] == 'History']\n\nanswer = history_dept['DEPT_ADDRESS'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many different locations does each school have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and 'DEPT_ADDRESS', then count unique addresses\nschool_address_counts = df.groupby('SCHOOL_CODE')['DEPT_ADDRESS'].nunique()\n\n# Print the counts\nprint(school_address_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: Count different addresses of each school.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and 'DEPT_ADDRESS', then count unique addresses\nschool_address_counts = df.groupby('SCHOOL_CODE')['DEPT_ADDRESS'].nunique()\n\n# Print the counts\nprint(school_address_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: Find the description and credit for the course QM-261?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows with CRS_CODE 'QM-261'\nfiltered_df = df[df['CRS_CODE'] == 'QM-261']\n\n# Select only the columns 'CRS_DESCRIPTION' and 'CRS_CREDIT'\nanswer = filtered_df[['CRS_DESCRIPTION', 'CRS_CREDIT']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: What is the course description and number of credits for QM-261?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows with CRS_CODE 'QM-261'\nfiltered_df = df[df['CRS_CODE'] == 'QM-261']\n\n# Select only the columns 'CRS_DESCRIPTION' and 'CRS_CREDIT'\nanswer = filtered_df[['CRS_DESCRIPTION', 'CRS_CREDIT']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: Find the number of departments in each school.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and count the number of unique 'DEPT_CODE' for each school\ndept_count = df.groupby('SCHOOL_CODE')['DEPT_CODE'].nunique()\n\n# Print the result\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many departments are in each school?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and count the number of unique 'DEPT_CODE' for each school\ndept_count = df.groupby('SCHOOL_CODE')['DEPT_CODE'].nunique()\n\n# Print the result\nprint(dept_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: Find the number of different departments in each school whose number of different departments is less than 5.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and count the unique 'DEPT_NAME'\ngrouped = df.groupby('SCHOOL_CODE')['DEPT_NAME'].nunique()\n\n# Filter for schools with less than 5 unique departments\nresult = grouped[grouped < 5]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many different departments are there in each school that has less than 5 apartments?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'SCHOOL_CODE' and count the unique 'DEPT_NAME'\ngrouped = df.groupby('SCHOOL_CODE')['DEPT_NAME'].nunique()\n\n# Filter for schools with less than 5 unique departments\nresult = grouped[grouped < 5]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many sections does each course has?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Group by 'CRS_CODE' and count unique 'CLASS_SECTION'\nsection_count = df.groupby('CRS_CODE')['CLASS_SECTION'].nunique()\n\n# Print the result\nprint(section_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many sections does each course have?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Group by 'CRS_CODE' and count unique 'CLASS_SECTION'\nsection_count = df.groupby('CRS_CODE')['CLASS_SECTION'].nunique()\n\n# Print the result\nprint(section_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: What is the total credit does each department offer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['CRS_CREDIT'] = df['CRS_CREDIT'].astype(float)\n\ndepartment_credits = df.groupby('DEPT_CODE')['CRS_CREDIT'].sum()\n\nprint(department_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT\nACCT-211,ACCT,Accounting I,3.0\nACCT-212,ACCT,Accounting II,3.0\nCIS-220,CIS,Intro. to Microcomputing,3.0\nCIS-420,CIS,Database Design and Implementation,4.0\nQM-261,CIS,Intro. to Statistics,3.0\nQM-362,CIS,Statistical Applications,4.0\n\nQuestion: How many credits does the department offer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['CRS_CREDIT'] = df['CRS_CREDIT'].astype(float)\n\ndepartment_credits = df.groupby('DEPT_CODE')['CRS_CREDIT'].sum()\n\nprint(department_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: Find the number of classes offered for all class rooms that held at least 2 classes.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'CLASS_ROOM' and filter those class rooms that held at least 2 classes\nfiltered_df = df.groupby('CLASS_ROOM').filter(lambda x: len(x) >= 2)\n\n# Count the number of unique 'CLASS_CODE' for each class room\nclass_count = filtered_df.groupby('CLASS_ROOM')['CLASS_CODE'].nunique()\n\n# Print the class count\nprint(class_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: For each classroom with at least 2 classes, how many classes are offered?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'CLASS_ROOM' and filter those class rooms that held at least 2 classes\nfiltered_df = df.groupby('CLASS_ROOM').filter(lambda x: len(x) >= 2)\n\n# Count the number of unique 'CLASS_CODE' for each class room\nclass_count = filtered_df.groupby('CLASS_ROOM')['CLASS_CODE'].nunique()\n\n# Print the class count\nprint(class_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: Find the count and code of the job has most employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by job code and count the number of employees for each job code\njob_counts = df['EMP_JOBCODE'].value_counts()\n\n# Get the job code with the highest count\nmax_count_job = job_counts.idxmax()\n\n# Get the count of employees for the job code with the highest count\nmax_count = job_counts.max()\n\nanswer = (max_count, max_count_job)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: What is the count and code of the job with the most employee?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by job code and count the number of employees for each job code\njob_counts = df['EMP_JOBCODE'].value_counts()\n\n# Get the job code with the highest count\nmax_count_job = job_counts.idxmax()\n\n# Get the count of employees for the job code with the highest count\nmax_count = job_counts.max()\n\nanswer = (max_count, max_count_job)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: Find the number of professors with a Ph.D. degree in each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on PROF_HIGH_DEGREE column\ndf_phd = df[df['PROF_HIGH_DEGREE'] == 'Ph.D.']\n\n# Group by DEPT_CODE and count the number of professors\nprof_count = df_phd.groupby('DEPT_CODE').size()\n\n# Print the result\nprint(prof_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: How many professors have a Ph.D. in each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on PROF_HIGH_DEGREE column\ndf_phd = df[df['PROF_HIGH_DEGREE'] == 'Ph.D.']\n\n# Group by DEPT_CODE and count the number of professors\nprof_count = df_phd.groupby('DEPT_CODE').size()\n\n# Print the result\nprint(prof_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: Find the number of students for each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstudents_per_department = df['DEPT_CODE'].value_counts()\n\nprint(students_per_department)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: How many students are in each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstudents_per_department = df['DEPT_CODE'].value_counts()\n\nprint(students_per_department)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: Find the total number of hours have done for all students in each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_dept_hrs = df.groupby('DEPT_CODE')['STU_HRS'].sum()\n\nprint(df_dept_hrs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: How many hours do the students spend studying in each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_dept_hrs = df.groupby('DEPT_CODE')['STU_HRS'].sum()\n\nprint(df_dept_hrs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: Find the max, average, and minimum gpa of all students in each department.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by department and calculate the required statistics\ndf_grouped = df.groupby('DEPT_CODE').agg({'STU_GPA': ['min', 'max', 'mean']}).reset_index()\n\n# Rename the columns for better readability\ndf_grouped.columns = ['DEPT_CODE', 'Min GPA', 'Max GPA', 'Avg GPA']\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the highest, lowest, and average student GPA for every department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by department and calculate the required statistics\ndf_grouped = df.groupby('DEPT_CODE').agg({'STU_GPA': ['min', 'max', 'mean']}).reset_index()\n\n# Rename the columns for better readability\ndf_grouped.columns = ['DEPT_CODE', 'Min GPA', 'Max GPA', 'Avg GPA']\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: how many schools exist in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique school codes to get the total number of schools\ntotal_schools = df['SCHOOL_CODE'].nunique()\n\nprint(total_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many schools are there in the department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique school codes to get the total number of schools\ntotal_schools = df['SCHOOL_CODE'].nunique()\n\nprint(total_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many different classes are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_classes = df['CLASS_CODE'].nunique()\n\nprint(num_classes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many unique classes are offered?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_classes = df['CLASS_CODE'].nunique()\n\nprint(num_classes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many courses are offered?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_courses = df['CRS_CODE'].nunique()\n\nprint(unique_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: What are the number of different course codes?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_courses = df['CRS_CODE'].nunique()\n\nprint(unique_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many departments does the college has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_of_depts = df['DEPT_NAME'].nunique()\n\nprint(num_of_depts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: How many different departments are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_of_depts = df['DEPT_NAME'].nunique()\n\nprint(num_of_depts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: How many sections does course ACCT-211 has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where CRS_CODE is 'ACCT-211'\nfiltered_df = df[df['CRS_CODE'] == 'ACCT-211']\n\n# Get the unique values in the 'CLASS_SECTION' column\nsections = filtered_df['CLASS_SECTION'].unique()\n\n# Get the length of the sections array\nnum_sections = len(sections)\n\n# Print the number of sections\nprint(num_sections)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: What is the number of different class sections offered in the course ACCT-211?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where CRS_CODE is 'ACCT-211'\nfiltered_df = df[df['CRS_CODE'] == 'ACCT-211']\n\n# Get the unique values in the 'CLASS_SECTION' column\nsections = filtered_df['CLASS_SECTION'].unique()\n\n# Get the length of the sections array\nnum_sections = len(sections)\n\n# Print the number of sections\nprint(num_sections)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: Find the total number of employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of employees\nemployee_count = df['EMP_NUM'].count()\n\nprint(employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: How many employees are there all together?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of employees\nemployee_count = df['EMP_NUM'].count()\n\nprint(employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: How many professors do have a Ph.D. degree?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where PROF_HIGH_DEGREE is 'Ph.D.'\ndf_phd = df[df['PROF_HIGH_DEGREE'] == 'Ph.D.']\n\n# Count the number of rows in the filtered DataFrame\nnum_phd = df_phd.shape[0]\n\nprint(num_phd)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: What is the total number of professors with a Ph.D. ?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where PROF_HIGH_DEGREE is 'Ph.D.'\ndf_phd = df[df['PROF_HIGH_DEGREE'] == 'Ph.D.']\n\n# Count the number of rows in the filtered DataFrame\nnum_phd = df_phd.shape[0]\n\nprint(num_phd)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: list names of all departments ordered by their names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Fetch all unique department names\ndepartment_names = df['DEPT_NAME'].unique()\n\n# Sort them alphabetically\ndepartment_names = sorted(department_names)\n\n# Save the answer in a variable\nanswer = department_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION\nACCT,Accounting,BUS,114,KLR 211, Box 52,3119\nART,Fine Arts,A&SCI,435,BBG 185, Box 128,2278\nBIOL,Biology,A&SCI,387,AAK 230, Box 415,4117\nCIS,Computer Info. Systems,BUS,209,KLR 333, Box 56,3245\nECON/FIN,Economics/Finance,BUS,299,KLR 284, Box 63,3126\nENG,English,A&SCI,160,DRE 102, Box 223,1004\nHIST,History,A&SCI,103,DRE 156, Box 284,1867\nMATH,Mathematics,A&SCI,297,AAK 194, Box 422,4234\nMKT/MGT,Marketing/Management,BUS,106,KLR 126, Box 55,3342\nPSYCH,Psychology,A&SCI,195,AAK 297, Box 438,4110\n\nQuestion: What are the names of all departments in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Fetch all unique department names\ndepartment_names = df['DEPT_NAME'].unique()\n\n# Sort them alphabetically\ndepartment_names = sorted(department_names)\n\n# Save the answer in a variable\nanswer = department_names\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: List the codes of all courses that take place in room KLR209.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where CLASS_ROOM is KLR209\nfiltered_df = df[df['CLASS_ROOM'] == 'KLR209']\n\n# Extract the unique COURSE_CODE values from the filtered dataframe\ncourse_codes = filtered_df['CLASS_CODE'].unique()\n\n# Print the course codes\nprint(course_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM\n10012,ACCT-211,1,MWF 8:00-8:50 a.m.,BUS311,105\n10013,ACCT-211,2,MWF 9:00-9:50 a.m.,BUS200,105\n10014,ACCT-211,3,TTh 2:30-3:45 p.m.,BUS252,342\n10015,ACCT-212,1,MWF 10:00-10:50 a.m.,BUS311,301\n10016,ACCT-212,2,Th 6:00-8:40 p.m.,BUS252,301\n10017,CIS-220,1,MWF 9:00-9:50 a.m.,KLR209,228\n10018,CIS-220,2,MWF 9:00-9:50 a.m.,KLR211,114\n10019,CIS-220,3,MWF 10:00-10:50 a.m.,KLR209,228\n10020,CIS-420,1,W 6:00-8:40 p.m.,KLR209,162\n10021,QM-261,1,MWF 8:00-8:50 a.m.,KLR200,114\n\nQuestion: What are the codes of all the courses that are located in room KLR209?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where CLASS_ROOM is KLR209\nfiltered_df = df[df['CLASS_ROOM'] == 'KLR209']\n\n# Extract the unique COURSE_CODE values from the filtered dataframe\ncourse_codes = filtered_df['CLASS_CODE'].unique()\n\n# Print the course codes\nprint(course_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: List the first name of all employees with job code PROF ordered by their date of birth.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows with the job code 'PROF'\ndf_prof = df[df['EMP_JOBCODE'] == 'PROF']\n\n# Sort the filtered dataframe by date of birth\ndf_prof_sorted = df_prof.sort_values('EMP_DOB')\n\n# Save the first name of all employees in a variable\nemployee_names = df_prof_sorted['EMP_FNAME'].tolist()\n\n# Print the variable\nprint(employee_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: What are the first names of all employees that are professors ordered by date of birth?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows with the job code 'PROF'\ndf_prof = df[df['EMP_JOBCODE'] == 'PROF']\n\n# Sort the filtered dataframe by date of birth\ndf_prof_sorted = df_prof.sort_values('EMP_DOB')\n\n# Save the first name of all employees in a variable\nemployee_names = df_prof_sorted['EMP_FNAME'].tolist()\n\n# Print the variable\nprint(employee_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: What is the first and last name of the oldest employee?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the EMP_DOB column to datetime\ndf['EMP_DOB'] = pd.to_datetime(df['EMP_DOB'])\n\n# Find the oldest employee\noldest_emp = df[df['EMP_DOB'] == df['EMP_DOB'].min()]\n\n# Save the answer in a variable\nanswer = oldest_emp[['EMP_FNAME', 'EMP_LNAME']].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB\n100,Worley,James,F,CUST,1978-2-23,1950-6-12\n101,Ramso,Henry,B,CUST,1994-11-15,1961-11-2\n102,Edwards,Rosemary,D,TECH,1990-7-23,1953-7-3\n103,Donelly,Ronald,O,PROF,1987-7-1,1952-10-2\n104,Yukon,Preston,D,PROF,1992-5-1,1948-2-23\n105,Heffington,Arnelle,B,PROF,1991-7-1,1950-11-2\n106,Washington,Ross,E,PROF,1976-8-1,1941-3-4\n108,Robertson,Elaine,W,TECH,1983-10-18,1961-6-20\n110,Thieu,Van,S,PROF,1989-8-1,1951-8-12\n114,Graztevski,Gerald,B,PROF,1978-8-1,1939-3-18\n\nQuestion: What are the first and last names of the employee with the earliest date of birth?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the EMP_DOB column to datetime\ndf['EMP_DOB'] = pd.to_datetime(df['EMP_DOB'])\n\n# Find the oldest employee\noldest_emp = df[df['EMP_DOB'] == df['EMP_DOB'].min()]\n\n# Save the answer in a variable\nanswer = oldest_emp[['EMP_FNAME', 'EMP_LNAME']].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the first, last name, gpa of the youngest one among students whose GPA is above 3?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for students with GPA above 3\ndf_filtered = df[df['STU_GPA'] > 3]\n\n# Find the minimum age\nmin_age = df_filtered['STU_DOB'].max()\n\n# Find the student with the minimum age and GPA above 3\nyoungest_student = df_filtered[df_filtered['STU_DOB'] == min_age]\n\n# Save the answer in a variable\nanswer = youngest_student[['STU_FNAME', 'STU_LNAME', 'STU_GPA']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for students with GPA above 3\ndf_filtered = df[df['STU_GPA'] > 3]\n\n# Find the minimum age\nmin_age = df_filtered['STU_DOB'].max()\n\n# Find the student with the minimum age and GPA above 3\nyoungest_student = df_filtered[df_filtered['STU_DOB'] == min_age]\n\n# Save the answer in a variable\nanswer = youngest_student[['STU_FNAME', 'STU_LNAME', 'STU_GPA']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: How many professors who has a either Ph.D. or MA degree?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'PROF_HIGH_DEGREE' column\ndf_filtered = df[(df['PROF_HIGH_DEGREE'] == 'Ph.D.') | (df['PROF_HIGH_DEGREE'] == 'MA')]\n\n# Count the number of rows in the filtered DataFrame\ncount = df_filtered.shape[0]\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE\n103,HIST,DRE 156,6783,Ph.D.\n104,ENG,DRE 102,5561,MA\n105,ACCT,KLR 229D,8665,Ph.D.\n106,MKT/MGT,KLR 126,3899,Ph.D.\n110,BIOL,AAK 160,3412,Ph.D.\n114,ACCT,KLR 211,4436,Ph.D.\n155,MATH,AAK 201,4440,Ph.D.\n160,ENG,DRE 102,2248,Ph.D.\n162,CIS,KLR 203E,2359,Ph.D.\n191,MKT/MGT,KLR 409B,4016,DBA\n\nQuestion: How many professors attained either Ph.D. or Masters degrees?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'PROF_HIGH_DEGREE' column\ndf_filtered = df[(df['PROF_HIGH_DEGREE'] == 'Ph.D.') | (df['PROF_HIGH_DEGREE'] == 'MA')]\n\n# Count the number of rows in the filtered DataFrame\ncount = df_filtered.shape[0]\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the first name, gpa and phone number of the top 5 students with highest gpa?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the dataframe by 'STU_GPA' in descending order\ndf_sorted = df.sort_values(by='STU_GPA', ascending=False)\n\n# Selecting the top 5 students with the highest GPA\ntop5 = df_sorted.head(5)\n\n# Selecting the first name, GPA, and phone number of these students\nresult = top5[['STU_FNAME', 'STU_GPA', 'STU_PHONE']]\n\n# Printing the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the first name, GPA, and phone number of the students with the top 5 GPAs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the dataframe by 'STU_GPA' in descending order\ndf_sorted = df.sort_values(by='STU_GPA', ascending=False)\n\n# Selecting the top 5 students with the highest GPA\ntop5 = df_sorted.head(5)\n\n# Selecting the first name, GPA, and phone number of these students\nresult = top5[['STU_FNAME', 'STU_GPA', 'STU_PHONE']]\n\n# Printing the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: Find the first name and gpa of the students whose gpa is lower than the average gpa of all students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_gpa = df['STU_GPA'].mean()\n\nresult = df[df['STU_GPA'] < average_gpa][['STU_FNAME', 'STU_GPA']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSTU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM\n321452,Bowser,William,C,1975-2-12,42,So,2.84,0,BIOL,2134,205\n324257,Smithson,Anne,K,1981-11-15,81,Jr,3.27,1,CIS,2256,222\n324258,Brewer,Juliette,,1969-8-23,36,So,2.26,1,ACCT,2256,228\n324269,Oblonski,Walter,H,1976-9-16,66,Jr,3.09,0,CIS,2114,222\n324273,Smith,John,D,1958-12-30,102,Sr,2.11,1,ENGL,2231,199\n324274,Katinga,Raphael,P,1979-10-21,114,Sr,3.15,0,ACCT,2267,228\n324291,Robertson,Gerald,T,1973-4-8,120,Sr,3.87,0,EDU,2267,311\n324299,Smith,John,B,1986-11-30,15,Fr,2.92,0,ACCT,2315,230\n\nQuestion: What is the first name and GPA of every student that has a GPA lower than average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_gpa = df['STU_GPA'].mean()\n\nresult = df[df['STU_GPA'] < average_gpa][['STU_FNAME', 'STU_GPA']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: How many clubs are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count total number of clubs\ntotal_clubs = len(df.index)\n\nprint(total_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: What is the total number of clubs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count total number of clubs\ntotal_clubs = len(df.index)\n\nprint(total_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: List the distinct region of clubs in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Region'].unique()\n\nregions = df['Region'].unique()\nregions.sort()\n\nprint(regions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: What are the different regions of clubs in ascending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Region'].unique()\n\nregions = df['Region'].unique()\nregions.sort()\n\nprint(regions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the types and countries of competitions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntypes_countries = df[['Competition_type', 'Country']]\n\nprint(types_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the types of every competition and in which countries are they located?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntypes_countries = df[['Competition_type', 'Country']]\n\nprint(types_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the distinct years in which the competitions type is not \"Tournament\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to include only rows where Competition_type is not equal to Tournament\ndf_filtered = df[df['Competition_type'] != 'Tournament']\n\n# Find unique years from the filtered dataframe\ndifferent_years = df_filtered['Year'].unique()\n\n# Print the different years\nprint(different_years)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the different years for all competitions that are not of type equal to tournament?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to include only rows where Competition_type is not equal to Tournament\ndf_filtered = df[df['Competition_type'] != 'Tournament']\n\n# Find unique years from the filtered dataframe\ndifferent_years = df_filtered['Year'].unique()\n\n# Print the different years\nprint(different_years)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: List all club names in ascending order of start year.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Start_year' in ascending order\nsorted_df = df.sort_values('Start_year')\n\n# Select the 'name' column\nclub_names = sorted_df['name']\n\n# Print the club names\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: What are the names of all the clubs starting with the oldest?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Start_year' in ascending order\nsorted_df = df.sort_values('Start_year')\n\n# Select the 'name' column\nclub_names = sorted_df['name']\n\n# Print the club names\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: List all club names in descending alphabetical order.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by name in descending order\ndf = df.sort_values('name', ascending=False)\n\n# Save the answer in a variable\nclub_names = df['name'].tolist()\n\n# Print the variable\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClub_ID,name,Region,Start_year\n1,AIB,USA,2009\n2,BK Slide,UK,1998\n3,IFG,China,2005\n4,ASC,Japan,2001\n5,HGS2,England,2000\n6,HSBIF,Brazil,2011\n\nQuestion: What are the names of all the clubs ordered in descending alphabetical order?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by name in descending order\ndf = df.sort_values('name', ascending=False)\n\n# Save the answer in a variable\nclub_names = df['name'].tolist()\n\n# Print the variable\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: List the position of players and the average number of points of players of each position.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average points for each position\naverage_points = df.groupby('Position')['Points'].mean()\n\nprint(average_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: For each position, what is the average number of points for players in that position?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average points for each position\naverage_points = df.groupby('Position')['Points'].mean()\n\nprint(average_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: List the types of competition and the number of competitions of each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each unique Competition_type\ncompetition_types = df['Competition_type'].value_counts()\n\n# Print the counts\nprint(competition_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the types of competition and number of competitions for that type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the count of each unique Competition_type\ncompetition_types = df['Competition_type'].value_counts()\n\n# Print the counts\nprint(competition_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: List the most common type of competition.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_competition_type = df['Competition_type'].mode()[0]\n\nprint(most_common_competition_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What is the most common competition type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_competition_type = df['Competition_type'].mode()[0]\n\nprint(most_common_competition_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: List the types of competition that have at most five competitions of that type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of competitions for each type\ncompetition_counts = df['Competition_type'].value_counts()\n\n# Filter the types with at most 5 competitions\nfiltered_types = competition_counts[competition_counts <= 5]\n\n# Save the answer in a variable and print the variable\nanswer = filtered_types.index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the types of competition that have most 5 competitions for that type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of competitions for each type\ncompetition_counts = df['Competition_type'].value_counts()\n\n# Filter the types with at most 5 competitions\nfiltered_types = competition_counts[competition_counts <= 5]\n\n# Save the answer in a variable and print the variable\nanswer = filtered_types.index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: Show total points of all players.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_points = df['Points'].sum()\n\nprint(total_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: What is the total number of points for all players?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_points = df['Points'].sum()\n\nprint(total_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: how many different positions are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique function to get all unique positions and then get the length of it\npositions = df['Position'].unique()\nnum_positions = len(positions)\n\nprint(num_positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: How many different position for players are listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique function to get all unique positions and then get the length of it\npositions = df['Position'].unique()\nnum_positions = len(positions)\n\nprint(num_positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: what are the name of players who get more than the average points.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of points\naverage_points = df['Points'].mean()\n\n# Get the names of players that got more than the average number of points\nplayers_with_more_points = df[df['Points'] > average_points]['name']\n\n# Print the names of the players\nprint(players_with_more_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: What are the names of all players that got more than the average number of points?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average number of points\naverage_points = df['Points'].mean()\n\n# Get the names of players that got more than the average number of points\nplayers_with_more_points = df[df['Points'] > average_points]['name']\n\n# Print the names of the players\nprint(players_with_more_points)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: find the number of players whose points are lower than 30 in each position.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the data where points are less than 30\ndf_points_less_than_30 = df[df['Points'] < 30]\n\n# Group by Position and count the number of players\ndf_grouped = df_points_less_than_30.groupby('Position').size()\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,name,Position,Club_ID,Apps,Tries,Goals,Points\n1,Michael Platt,Full Back,1,20.0,5.0,0,20.0\n2,Dave Halley,Right Wing,2,23.0,9.0,0,36.0\n3,James Evans,Right Centre,1,30.0,9.0,0,36.0\n4,Tame Tupou,Left Wing,2,10.0,3.0,0,12.0\n5,Iestyn Harris,Stand Off,4,27.0,3.0,50/60,110.0\n6,Paul Deacon (c),Scrum Half,4,20.0,3.0,90/106,188.0\n7,Joe Vagana,Prop,5,19.0,1.0,0/1,4.0\n8,Terry Newton,Hooker,5,26.0,9.0,0,36.0\n9,Andy Lynch,Prop,2,29.0,5.0,0,20.0\n10,David Solomona,Second Row,2,24.0,5.0,0,20.0\n\nQuestion: What is the number of players who have points less than 30 for each position?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the data where points are less than 30\ndf_points_less_than_30 = df[df['Points'] < 30]\n\n# Group by Position and count the number of players\ndf_grouped = df_points_less_than_30.groupby('Position').size()\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: which country did participated in the most number of Tournament competitions?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only the rows where 'Competition_type' is 'Tournament'\ntournament_df = df[df['Competition_type'] == 'Tournament']\n\n# Get the value counts of the 'Country' column in the filtered DataFrame\ncountries_count = tournament_df['Country'].value_counts()\n\n# The name of the country that participated in the most tournament competitions is the first index of the series\nmost_frequent_country = countries_count.index[0]\n\n# Print the result\nprint(most_frequent_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: what is the name of the country that participated in the most tournament competitions?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only the rows where 'Competition_type' is 'Tournament'\ntournament_df = df[df['Competition_type'] == 'Tournament']\n\n# Get the value counts of the 'Country' column in the filtered DataFrame\ncountries_count = tournament_df['Country'].value_counts()\n\n# The name of the country that participated in the most tournament competitions is the first index of the series\nmost_frequent_country = countries_count.index[0]\n\n# Print the result\nprint(most_frequent_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: which countries did participated in both Friendly and Tournament type competitions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Country and Competition_type and get the count of each group\ngrouped = df.groupby(['Country', 'Competition_type']).size().reset_index(name='count')\n\n# Filter out the groups that have both Friendly and Tournament types\nfiltered = grouped[grouped['Country'].duplicated(keep=False)]\n\n# Get the countries that participated in both friendly and tournament type competitions\ncountries = filtered['Country'].unique().tolist()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the countries that participated in both friendly and tournament type competitions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Country and Competition_type and get the count of each group\ngrouped = df.groupby(['Country', 'Competition_type']).size().reset_index(name='count')\n\n# Filter out the groups that have both Friendly and Tournament types\nfiltered = grouped[grouped['Country'].duplicated(keep=False)]\n\n# Get the countries that participated in both friendly and tournament type competitions\ncountries = filtered['Country'].unique().tolist()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: Find the countries that have never participated in any competition with Friendly type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the countries that participated in Friendly type competitions\nfriendly_countries = df[df['Competition_type'] == 'Friendly']['Country'].unique()\n\n# Find the countries that have never participated in any competition with Friendly type\nnever_friendly_countries = df[~df['Country'].isin(friendly_countries)]['Country'].unique()\n\nprint(\"Countries that have never participated in any competition with Friendly type: \", never_friendly_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompetition_ID,Year,Competition_type,Country\n1,2006.0,Friendly,Italy\n2,2006.0,Friendly,Spain\n3,2006.0,Friendly,Australia\n4,2006.0,Friendly,Russia\n5,2007.0,Friendly,Russia\n6,2007.0,Friendly,Australia\n7,2007.0,Tournament,Russia\n8,2007.0,Tournament,Slovenia\n9,2007.0,Tournament,Slovenia\n10,2007.0,Friendly,Italy\n\nQuestion: What are the countries that have never participated in any friendly-type competitions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the countries that participated in Friendly type competitions\nfriendly_countries = df[df['Competition_type'] == 'Friendly']['Country'].unique()\n\n# Find the countries that have never participated in any competition with Friendly type\nnever_friendly_countries = df[~df['Country'].isin(friendly_countries)]['Country'].unique()\n\nprint(\"Countries that have never participated in any competition with Friendly type: \", never_friendly_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFurniture_ID,Name,Num_of_Component,Market_Rate\n1,Billiard table,14,52.5\n2,Chabudai,4,40.0\n3,Bookcase,6,1.0\n4,Hatstand,5,0.5\n5,Bench,5,3.5\n6,Four-poster bed,3,2.0\n7,Dining set,12,0.5\n\nQuestion: How many furniture components are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntotal_components = df['Num_of_Component'].sum()\nprint(total_components)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFurniture_ID,Name,Num_of_Component,Market_Rate\n1,Billiard table,14,52.5\n2,Chabudai,4,40.0\n3,Bookcase,6,1.0\n4,Hatstand,5,0.5\n5,Bench,5,3.5\n6,Four-poster bed,3,2.0\n7,Dining set,12,0.5\n\nQuestion: Return the name and id of the furniture with the highest market rate.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum market rate\nmax_rate = df['Market_Rate'].max()\n\n# Get the furniture with the highest market rate\nhighest_market_rate_furniture = df[df['Market_Rate'] == max_rate]\n\n# Get the id and name of the furniture with the highest market rate\nhighest_market_rate_furniture_name_id = highest_market_rate_furniture[['Furniture_ID', 'Name']]\n\n# Print the answer\nprint(highest_market_rate_furniture_name_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFurniture_ID,Name,Num_of_Component,Market_Rate\n1,Billiard table,14,52.5\n2,Chabudai,4,40.0\n3,Bookcase,6,1.0\n4,Hatstand,5,0.5\n5,Bench,5,3.5\n6,Four-poster bed,3,2.0\n7,Dining set,12,0.5\n\nQuestion: Find the component amounts and names of all furnitures that have more than 10 components.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the Num_of_Component is greater than 10\nfiltered_df = df[df['Num_of_Component'] > 10]\n\n# Select the 'Name' and 'Num_of_Component' columns\nanswer = filtered_df[['Name', 'Num_of_Component']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops\n1,1980.0,Chevrolet House,36,8\n2,1990.0,IKEA,21,19\n3,1991.0,Ford Make,12,2\n4,1992.0,Jiaju,1,35\n5,2000.0,Chevrolet,38,24\n6,2001.0,Dodge,3,7\n7,2008.0,Tomorrow,12,4\n\nQuestion: Which manufacturer has the most number of shops? List its name and year of opening.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nmax_shops = df['Num_of_Shops'].max()\nanswer = df[df['Num_of_Shops'] == max_shops][['Name', 'Open_Year']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops\n1,1980.0,Chevrolet House,36,8\n2,1990.0,IKEA,21,19\n3,1991.0,Ford Make,12,2\n4,1992.0,Jiaju,1,35\n5,2000.0,Chevrolet,38,24\n6,2001.0,Dodge,3,7\n7,2008.0,Tomorrow,12,4\n\nQuestion: Find the average number of factories for the manufacturers that have more than 20 shops.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter manufacturers with more than 20 shops\nfiltered_df = df[df['Num_of_Shops'] > 20]\n\n# Calculate the average number of factories\naverage_factories = filtered_df['Num_of_Factories'].mean()\n\n# Print the average number of factories\nprint(average_factories)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops\n1,1980.0,Chevrolet House,36,8\n2,1990.0,IKEA,21,19\n3,1991.0,Ford Make,12,2\n4,1992.0,Jiaju,1,35\n5,2000.0,Chevrolet,38,24\n6,2001.0,Dodge,3,7\n7,2008.0,Tomorrow,12,4\n\nQuestion: List all manufacturer names and ids ordered by their opening year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Open_Year')\nresult = df[['Manufacturer_ID', 'Name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops\n1,1980.0,Chevrolet House,36,8\n2,1990.0,IKEA,21,19\n3,1991.0,Ford Make,12,2\n4,1992.0,Jiaju,1,35\n5,2000.0,Chevrolet,38,24\n6,2001.0,Dodge,3,7\n7,2008.0,Tomorrow,12,4\n\nQuestion: Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nanswer = df.loc[(df['Num_of_Factories'] < 10) | (df['Num_of_Shops'] > 10), ['Name', 'Open_Year']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops\n1,1980.0,Chevrolet House,36,8\n2,1990.0,IKEA,21,19\n3,1991.0,Ford Make,12,2\n4,1992.0,Jiaju,1,35\n5,2000.0,Chevrolet,38,24\n6,2001.0,Dodge,3,7\n7,2008.0,Tomorrow,12,4\n\nQuestion: what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include manufacturers that opened before 1990\ndf_filtered = df[df['Open_Year'] < 1990]\n\n# Calculate the average number of factories and the maximum number of shops for these manufacturers\navg_factories = df_filtered['Num_of_Factories'].mean()\nmax_shops = df_filtered['Num_of_Shops'].max()\n\n# Save the answer in a variable and print the variable\nanswer = (avg_factories, max_shops)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: List the full name (first and last name), and salary for those employees who earn below 6000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only employees earning less than 6000\nfiltered_df = df[df['SALARY'] < 6000]\n\n# Extract full names and salaries of these employees\nanswer = filtered_df[['FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full names and salaries for any employees earning less than 6000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only employees earning less than 6000\nfiltered_df = df[df['SALARY'] < 6000]\n\n# Extract full names and salaries of these employees\nanswer = filtered_df[['FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Display the first name, and department number for all employees whose last name is \"McEwen\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for employees with last name 'McEwen'\nfiltered_df = df[df['LAST_NAME'] == 'McEwen']\n\n# Select the first names and department numbers for these employees\nanswer = filtered_df[['FIRST_NAME', 'DEPARTMENT_ID']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the first names and department numbers for employees with last name McEwen?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for employees with last name 'McEwen'\nfiltered_df = df[df['LAST_NAME'] == 'McEwen']\n\n# Select the first names and department numbers for these employees\nanswer = filtered_df[['FIRST_NAME', 'DEPARTMENT_ID']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID\n10,Administration,200,1700\n20,Marketing,201,1800\n30,Purchasing,114,1700\n40,Human Resources,203,2400\n50,Shipping,121,1500\n60,IT,103,1400\n70,Public Relations,204,2700\n80,Sales,145,2500\n90,Executive,100,1700\n100,Finance,108,1700\n\nQuestion: Display all the information about the department Marketing.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the information about the department 'Marketing'\nmarketing_info = df[df['DEPARTMENT_NAME'] == 'Marketing']\n\n# Print the information about the department 'Marketing'\nprint(marketing_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID\n10,Administration,200,1700\n20,Marketing,201,1800\n30,Purchasing,114,1700\n40,Human Resources,203,2400\n50,Shipping,121,1500\n60,IT,103,1400\n70,Public Relations,204,2700\n80,Sales,145,2500\n90,Executive,100,1700\n100,Finance,108,1700\n\nQuestion: What is all the information about the Marketing department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the information about the department 'Marketing'\nmarketing_info = df[df['DEPARTMENT_NAME'] == 'Marketing']\n\n# Print the information about the department 'Marketing'\nprint(marketing_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: when is the hire date for those employees whose first name does not containing the letter M?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter employees with first names not containing the letter 'M'\ndf_no_M = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Get the hire dates of these employees\ndates = df_no_M['HIRE_DATE']\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: On what dates were employees without the letter M in their first names hired?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter employees with first names not containing the letter 'M'\ndf_no_M = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Get the hire dates of these employees\ndates = df_no_M['HIRE_DATE']\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find rows where first name does not contain 'M'\ndf_filtered = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Display the full name, hire date, salary, and department number\nresult = df_filtered[['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE', 'SALARY', 'DEPARTMENT_ID']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full name, hire date, salary, and department id for employees without the letter M in their first name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find rows where first name does not contain 'M'\ndf_filtered = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Display the full name, hire date, salary, and department number\nresult = df_filtered[['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE', 'SALARY', 'DEPARTMENT_ID']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter rows without letter 'M' in the FIRST_NAME\ndf_filtered = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Select specific columns and sort by department id\ndf_selected = df_filtered[['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE', 'SALARY', 'DEPARTMENT_ID']].sort_values(by='DEPARTMENT_ID')\n\n# Print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter rows without letter 'M' in the FIRST_NAME\ndf_filtered = df[~df['FIRST_NAME'].str.contains('M', case=False)]\n\n# Select specific columns and sort by department id\ndf_selected = df_filtered[['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE', 'SALARY', 'DEPARTMENT_ID']].sort_values(by='DEPARTMENT_ID')\n\n# Print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: what is the phone number of employees whose salary is in the range of 8000 and 12000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter dataframe based on salary range\nfiltered_df = df[(df['SALARY'] >= 8000) & (df['SALARY'] <= 12000)]\n\n# get the phone numbers of employees\nphone_numbers = filtered_df['PHONE_NUMBER'].tolist()\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Return the phone numbers of employees with salaries between 8000 and 12000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter dataframe based on salary range\nfiltered_df = df[(df['SALARY'] >= 8000) & (df['SALARY'] <= 12000)]\n\n# get the phone numbers of employees\nphone_numbers = filtered_df['PHONE_NUMBER'].tolist()\n\nprint(phone_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe with the conditions\ndf_filtered = df[((df['SALARY'] >= 8000) & (df['SALARY'] <= 12000) & (df['COMMISSION_PCT'].notnull())) | (df['DEPARTMENT_ID'] != 40)]\n\n# Print the filtered dataframe\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe with the conditions\ndf_filtered = df[((df['SALARY'] >= 8000) & (df['SALARY'] <= 12000) & (df['COMMISSION_PCT'].notnull())) | (df['DEPARTMENT_ID'] != 40)]\n\n# Print the filtered dataframe\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Display the first and last name, and salary for those employees whose first name is ending with the letter m.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['FIRST_NAME'].str.endswith('m')]\nresult = df_filtered[['FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Return the full names and salaries for employees with first names that end with the letter m.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['FIRST_NAME'].str.endswith('m')]\nresult = df_filtered[['FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Find the salary and manager number for those employees who is working under a manager.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the relevant columns\ndf_selected = df[['SALARY', 'MANAGER_ID']]\n\n# Filter out the rows where MANAGER_ID is not null\ndf_selected = df_selected[df_selected['MANAGER_ID'].notnull()]\n\n# Print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the salaries and manager ids for employees who have managers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the relevant columns\ndf_selected = df[['SALARY', 'MANAGER_ID']]\n\n# Filter out the rows where MANAGER_ID is not null\ndf_selected = df_selected[df_selected['MANAGER_ID'].notnull()]\n\n# Print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display all the details from Employees table for those employees who was hired before 2002-06-21.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for employees hired before June 21, 2002\ndf_before_date = df[pd.to_datetime(df['HIRE_DATE']) < pd.to_datetime('2002-06-21')]\n\n# Save the answer of the question in a variable and print the variable\nanswer = df_before_date\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What is all the information about employees hired before June 21, 2002?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for employees hired before June 21, 2002\ndf_before_date = df[pd.to_datetime(df['HIRE_DATE']) < pd.to_datetime('2002-06-21')]\n\n# Save the answer of the question in a variable and print the variable\nanswer = df_before_date\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering rows based on condition\ndf_filtered = df[(df['FIRST_NAME'].str.contains('D|S', case=False))]\n\n# Sorting the filtered dataframe by salary in descending order\ndf_sorted = df_filtered.sort_values(by='SALARY', ascending=False)\n\n# Storing the answer in a variable\nanswer = df_sorted\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What is all the information about employees with D or S in their first name, ordered by salary descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering rows based on condition\ndf_filtered = df[(df['FIRST_NAME'].str.contains('D|S', case=False))]\n\n# Sorting the filtered dataframe by salary in descending order\ndf_sorted = df_filtered.sort_values(by='SALARY', ascending=False)\n\n# Storing the answer in a variable\nanswer = df_sorted\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nJOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY\nAD_PRES,President,20000,40000\nAD_VP,Administration Vice President,15000,30000\nAD_ASST,Administration Assistant,3000,6000\nFI_MGR,Finance Manager,8200,16000\nFI_ACCOUNT,Accountant,4200,9000\nAC_MGR,Accounting Manager,8200,16000\nAC_ACCOUNT,Public Accountant,4200,9000\nSA_MAN,Sales Manager,10000,20000\nSA_REP,Sales Representative,6000,12000\nPU_MAN,Purchasing Manager,8000,15000\n\nQuestion: display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for jobs with max salary in the range 12000 to 18000\nfiltered_df = df[(df['MAX_SALARY'] >= 12000) & (df['MAX_SALARY'] <= 18000)]\n\n# Calculate the difference between min and max salaries\nfiltered_df['SALARY_DIFF'] = filtered_df['MAX_SALARY'] - filtered_df['MIN_SALARY']\n\n# Display job title and salary difference\nresult = filtered_df[['JOB_TITLE', 'SALARY_DIFF']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nJOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY\nAD_PRES,President,20000,40000\nAD_VP,Administration Vice President,15000,30000\nAD_ASST,Administration Assistant,3000,6000\nFI_MGR,Finance Manager,8200,16000\nFI_ACCOUNT,Accountant,4200,9000\nAC_MGR,Accounting Manager,8200,16000\nAC_ACCOUNT,Public Accountant,4200,9000\nSA_MAN,Sales Manager,10000,20000\nSA_REP,Sales Representative,6000,12000\nPU_MAN,Purchasing Manager,8000,15000\n\nQuestion: What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for jobs with max salary in the range 12000 to 18000\nfiltered_df = df[(df['MAX_SALARY'] >= 12000) & (df['MAX_SALARY'] <= 18000)]\n\n# Calculate the difference between min and max salaries\nfiltered_df['SALARY_DIFF'] = filtered_df['MAX_SALARY'] - filtered_df['MIN_SALARY']\n\n# Display job title and salary difference\nresult = filtered_df[['JOB_TITLE', 'SALARY_DIFF']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: display the employee ID for each employee and the date on which he ended his previous job.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the data by EMPLOYEE_ID and END_DATE\ndf = df.sort_values(['EMPLOYEE_ID', 'END_DATE'], ascending=[True, False])\n\n# Drop duplicates by EMPLOYEE_ID, keeping only the first occurrence (which has the latest END_DATE)\ndf = df.drop_duplicates(subset='EMPLOYEE_ID', keep='first')\n\n# Select only EMPLOYEE_ID and END_DATE columns\ndf = df[['EMPLOYEE_ID', 'END_DATE']]\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: What are the employee ids for each employee and final dates of employment at their last job?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the data by EMPLOYEE_ID and END_DATE\ndf = df.sort_values(['EMPLOYEE_ID', 'END_DATE'], ascending=[True, False])\n\n# Drop duplicates by EMPLOYEE_ID, keeping only the first occurrence (which has the latest END_DATE)\ndf = df.drop_duplicates(subset='EMPLOYEE_ID', keep='first')\n\n# Select only EMPLOYEE_ID and END_DATE columns\ndf = df[['EMPLOYEE_ID', 'END_DATE']]\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display those departments where more than ten employees work who got a commission percentage.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where COMMISSION_PCT is not null\ndf_filter = df[df['COMMISSION_PCT'].notna()]\n\n# Group by DEPARTMENT_ID and filter those with more than 10 employees\ndf_department = df_filter.groupby('DEPARTMENT_ID').filter(lambda x: len(x) > 10)\n\n# Get unique DEPARTMENT_ID\ndepartment_ids = df_department['DEPARTMENT_ID'].unique()\n\nprint(department_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the department ids for which more than 10 employees had a commission?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where COMMISSION_PCT is not null\ndf_filter = df[df['COMMISSION_PCT'].notna()]\n\n# Group by DEPARTMENT_ID and filter those with more than 10 employees\ndf_department = df_filter.groupby('DEPARTMENT_ID').filter(lambda x: len(x) > 10)\n\n# Get unique DEPARTMENT_ID\ndepartment_ids = df_department['DEPARTMENT_ID'].unique()\n\nprint(department_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Find the ids of the departments where any manager is managing 4 or more employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by department id and manager id, count the number of employees in each group\ngrouped = df.groupby(['DEPARTMENT_ID', 'MANAGER_ID']).size().reset_index(name='counts')\n\n# Filter groups with more than 3 employees\nfiltered = grouped[grouped['counts'] > 3]\n\n# Get the department ids\ndepartment_ids = filtered['DEPARTMENT_ID'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = department_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are department ids for departments with managers managing more than 3 employees?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by department id and manager id, count the number of employees in each group\ngrouped = df.groupby(['DEPARTMENT_ID', 'MANAGER_ID']).size().reset_index(name='counts')\n\n# Filter groups with more than 3 employees\nfiltered = grouped[grouped['counts'] > 3]\n\n# Get the department ids\ndepartment_ids = filtered['DEPARTMENT_ID'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = department_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLOCATION_ID,STREET_ADDRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID\n1000,1297 Via Cola di Rie,989,Roma,,IT\n1100,93091 Calle della Testa,10934,Venice,,IT\n1200,2017 Shinjuku-ku,1689,Tokyo,Tokyo Prefecture,JP\n1300,9450 Kamiya-cho,6823,Hiroshima,,JP\n1400,2014 Jabberwocky Rd,26192,Southlake,Texas,US\n1500,2011 Interiors Blvd,99236,South San Francisco,California,US\n1600,2007 Zagora St,50090,South Brunswick,New Jersey,US\n1700,2004 Charade Rd,98199,Seattle,Washington,US\n1800,147 Spadina Ave,M5V 2L7,Toronto,Ontario,CA\n1900,6092 Boxwood St,YSW 9T2,Whitehorse,Yukon,CA\n\nQuestion: display the country ID and number of cities for each country.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncountry_city_count = df.groupby('COUNTRY_ID')['CITY'].nunique()\n\nprint(country_city_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLOCATION_ID,STREET_ADDRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID\n1000,1297 Via Cola di Rie,989,Roma,,IT\n1100,93091 Calle della Testa,10934,Venice,,IT\n1200,2017 Shinjuku-ku,1689,Tokyo,Tokyo Prefecture,JP\n1300,9450 Kamiya-cho,6823,Hiroshima,,JP\n1400,2014 Jabberwocky Rd,26192,Southlake,Texas,US\n1500,2011 Interiors Blvd,99236,South San Francisco,California,US\n1600,2007 Zagora St,50090,South Brunswick,New Jersey,US\n1700,2004 Charade Rd,98199,Seattle,Washington,US\n1800,147 Spadina Ave,M5V 2L7,Toronto,Ontario,CA\n1900,6092 Boxwood St,YSW 9T2,Whitehorse,Yukon,CA\n\nQuestion: Give the country id and corresponding count of cities in each country.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncountry_city_count = df.groupby('COUNTRY_ID')['CITY'].nunique()\n\nprint(country_city_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: display the ID for those employees who did two or more jobs in the past.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by employee id and count the jobs\njob_counts = df.groupby('EMPLOYEE_ID').JOB_ID.nunique()\n\n# filter out the employees who did two or more jobs\nemployees_multiple_jobs = job_counts[job_counts >= 2].index.tolist()\n\n# save the answer of the question in a variable\nanswer = employees_multiple_jobs\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: What are the employee ids for employees who have held two or more jobs?", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by employee id and count the jobs\njob_counts = df.groupby('EMPLOYEE_ID').JOB_ID.nunique()\n\n# filter out the employees who did two or more jobs\nemployees_multiple_jobs = job_counts[job_counts >= 2].index.tolist()\n\n# save the answer of the question in a variable\nanswer = employees_multiple_jobs\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, let's find the salary of the employee with id 163\nsalary_163 = df.loc[df['EMPLOYEE_ID'] == 163, 'SALARY'].values[0]\n\n# Now, we want to find all employees whose salary is greater than the salary of employee with id 163\nresult = df.loc[df['SALARY'] > salary_163, ['FIRST_NAME', 'LAST_NAME']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Provide the full names of employees earning more than the employee with id 163.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, let's find the salary of the employee with id 163\nsalary_163 = df.loc[df['EMPLOYEE_ID'] == 163, 'SALARY'].values[0]\n\n# Now, we want to find all employees whose salary is greater than the salary of employee with id 163\nresult = df.loc[df['SALARY'] > salary_163, ['FIRST_NAME', 'LAST_NAME']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: return the smallest salary for every departments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the DataFrame by DEPARTMENT_ID and get the minimum SALARY for each group\nmin_salaries = df.groupby('DEPARTMENT_ID')['SALARY'].min()\n\n# Print the result\nprint(min_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What is the minimum salary in each department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the DataFrame by DEPARTMENT_ID and get the minimum SALARY for each group\nmin_salaries = df.groupby('DEPARTMENT_ID')['SALARY'].min()\n\n# Print the result\nprint(min_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by department id and find the minimum salary in each department\nmin_salary_dept = df.groupby('DEPARTMENT_ID')['SALARY'].min()\n\n# Filter the dataframe to find the employees who earn the smallest salary\nmin_salary_employees = df[df['SALARY'].isin(min_salary_dept)]\n\n# Save the answer in a variable\nanswer = min_salary_employees[['FIRST_NAME', 'LAST_NAME', 'DEPARTMENT_ID']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full names and department ids for the lowest paid employees across all departments.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by department id and find the minimum salary in each department\nmin_salary_dept = df.groupby('DEPARTMENT_ID')['SALARY'].min()\n\n# Filter the dataframe to find the employees who earn the smallest salary\nmin_salary_employees = df[df['SALARY'].isin(min_salary_dept)]\n\n# Save the answer in a variable\nanswer = min_salary_employees[['FIRST_NAME', 'LAST_NAME', 'DEPARTMENT_ID']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Find the employee id for all employees who earn more than the average salary.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary\naverage_salary = df['SALARY'].mean()\n\n# Find the employee id for all employees who earn more than the average salary\nresult = df[df['SALARY'] > average_salary]['EMPLOYEE_ID']\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the employee ids for employees who make more than the average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary\naverage_salary = df['SALARY'].mean()\n\n# Find the employee id for all employees who earn more than the average salary\nresult = df[df['SALARY'] > average_salary]['EMPLOYEE_ID']\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee id and salary of all employees who report to Payam (first name).", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# find the employee id of Payam (first name)\npayam_id = df[df['FIRST_NAME'] == 'Payam']['EMPLOYEE_ID'].values[0]\n\n# find all the employees who report to Payam\nreportees = df[df['MANAGER_ID'] == payam_id]\n\n# display the employee id and salary of all employees who report to Payam\nresult = reportees[['EMPLOYEE_ID', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the employee ids of employees who report to Payam, and what are their salaries?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# find the employee id of Payam (first name)\npayam_id = df[df['FIRST_NAME'] == 'Payam']['EMPLOYEE_ID'].values[0]\n\n# find all the employees who report to Payam\nreportees = df[df['MANAGER_ID'] == payam_id]\n\n# display the employee id and salary of all employees who report to Payam\nresult = reportees[['EMPLOYEE_ID', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID\n10,Administration,200,1700\n20,Marketing,201,1800\n30,Purchasing,114,1700\n40,Human Resources,203,2400\n50,Shipping,121,1500\n60,IT,103,1400\n70,Public Relations,204,2700\n80,Sales,145,2500\n90,Executive,100,1700\n100,Finance,108,1700\n\nQuestion: display all the information about the department Marketing.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the information about the department 'Marketing'\nmarketing_info = df[df['DEPARTMENT_NAME'] == 'Marketing']\n\n# Print the information about the department 'Marketing'\nprint(marketing_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID\n10,Administration,200,1700\n20,Marketing,201,1800\n30,Purchasing,114,1700\n40,Human Resources,203,2400\n50,Shipping,121,1500\n60,IT,103,1400\n70,Public Relations,204,2700\n80,Sales,145,2500\n90,Executive,100,1700\n100,Finance,108,1700\n\nQuestion: What is all the information about the Marketing department?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the information about the department 'Marketing'\nmarketing_info = df[df['DEPARTMENT_NAME'] == 'Marketing']\n\n# Print the information about the department 'Marketing'\nprint(marketing_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: display the ID for those employees who did two or more jobs in the past.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by employee id and count the jobs\njob_counts = df.groupby('EMPLOYEE_ID').JOB_ID.nunique()\n\n# filter out the employees who did two or more jobs\nemployees_multiple_jobs = job_counts[job_counts >= 2].index.tolist()\n\n# save the answer of the question in a variable\nanswer = employees_multiple_jobs\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID\n102,1993-01-13,1998-07-24,IT_PROG,60\n101,1989-09-21,1993-10-27,AC_ACCOUNT,110\n101,1993-10-28,1997-03-15,AC_MGR,110\n201,1996-02-17,1999-12-19,MK_REP,20\n114,1998-03-24,1999-12-31,ST_CLERK,50\n122,1999-01-01,1999-12-31,ST_CLERK,50\n200,1987-09-17,1993-06-17,AD_ASST,90\n176,1998-03-24,1998-12-31,SA_REP,80\n176,1999-01-01,1999-12-31,SA_MAN,80\n200,1994-07-01,1998-12-31,AC_ACCOUNT,90\n\nQuestion: What are the employee ids for those who had two or more jobs.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# group the data by employee id and count the jobs\njob_counts = df.groupby('EMPLOYEE_ID').JOB_ID.nunique()\n\n# filter out the employees who did two or more jobs\nemployees_multiple_jobs = job_counts[job_counts >= 2].index.tolist()\n\n# save the answer of the question in a variable\nanswer = employees_multiple_jobs\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the unique ids of those departments where any manager is managing 4 or more employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by department id and manager id, count the number of employees in each group\ngrouped = df.groupby(['DEPARTMENT_ID', 'MANAGER_ID']).size().reset_index(name='counts')\n\n# Filter groups with more than 3 employees\nfiltered = grouped[grouped['counts'] > 3]\n\n# Get the department ids\ndepartment_ids = filtered['DEPARTMENT_ID'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = department_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by department id and manager id, count the number of employees in each group\ngrouped = df.groupby(['DEPARTMENT_ID', 'MANAGER_ID']).size().reset_index(name='counts')\n\n# Filter groups with more than 3 employees\nfiltered = grouped[grouped['counts'] > 3]\n\n# Get the department ids\ndepartment_ids = filtered['DEPARTMENT_ID'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = department_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: Find the job ID for those jobs which average salary is above 8000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'JOB_ID' and calculate the mean of 'SALARY' for each group\nmean_salary_by_job = df.groupby('JOB_ID')['SALARY'].mean()\n\n# Filter the groups having mean 'SALARY' greater than 8000\njob_ids = mean_salary_by_job[mean_salary_by_job > 8000].index\n\nprint(job_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the job ids corresponding to jobs with average salary above 8000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'JOB_ID' and calculate the mean of 'SALARY' for each group\nmean_salary_by_job = df.groupby('JOB_ID')['SALARY'].mean()\n\n# Filter the groups having mean 'SALARY' greater than 8000\njob_ids = mean_salary_by_job[mean_salary_by_job > 8000].index\n\nprint(job_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display all the information of the employees whose salary if within the range of smallest salary and 2500.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get employees with salaries above the minimum (not included in this case) and under 2500\nfiltered_df = df[df['SALARY'].between(1, 2500)]\n\n# Print the filtered dataframe\nprint(filtered_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What is all the information regarding employees with salaries above the minimum and under 2500?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get employees with salaries above the minimum (not included in this case) and under 2500\nfiltered_df = df[df['SALARY'].between(1, 2500)]\n\n# Print the filtered dataframe\nprint(filtered_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the department id of the employee named Clara\nclara_dept_id = df[df['FIRST_NAME'] == 'Clara']['DEPARTMENT_ID'].values[0]\n\n# Find the employees in the same department as Clara and select their full names and hire dates\nresult = df[df['DEPARTMENT_ID'] == clara_dept_id][['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full names and hire dates for employees in the same department as someone with the first name Clara?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the department id of the employee named Clara\nclara_dept_id = df[df['FIRST_NAME'] == 'Clara']['DEPARTMENT_ID'].values[0]\n\n# Find the employees in the same department as Clara and select their full names and hire dates\nresult = df[df['DEPARTMENT_ID'] == clara_dept_id][['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, find the department_id of the employee named 'Clara'\nclara_department_id = df.loc[df['FIRST_NAME'] == 'Clara', 'DEPARTMENT_ID'].values[0]\n\n# Then, select rows that have a department_id that matches Clara's, but exclude rows with 'FIRST_NAME' as 'Clara'\nresult = df.loc[(df['DEPARTMENT_ID'] == clara_department_id) & (df['FIRST_NAME'] != 'Clara'), \n                ['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, find the department_id of the employee named 'Clara'\nclara_department_id = df.loc[df['FIRST_NAME'] == 'Clara', 'DEPARTMENT_ID'].values[0]\n\n# Then, select rows that have a department_id that matches Clara's, but exclude rows with 'FIRST_NAME' as 'Clara'\nresult = df.loc[(df['DEPARTMENT_ID'] == clara_department_id) & (df['FIRST_NAME'] != 'Clara'), \n                ['FIRST_NAME', 'LAST_NAME', 'HIRE_DATE']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to only include employees with 'T' in first name\ndf_filtered = df[df['FIRST_NAME'].str.contains('T', case=False)]\n\n# Get the unique department ids of these employees\ndepartment_ids = df_filtered['DEPARTMENT_ID'].unique()\n\n# Filter the original dataframe to include only employees from these department ids\ndf_result = df[df['DEPARTMENT_ID'].isin(department_ids)]\n\n# Select only the EMPLOYEE_ID and FIRST_NAME/LAST_NAME columns\nresult = df_result[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to only include employees with 'T' in first name\ndf_filtered = df[df['FIRST_NAME'].str.contains('T', case=False)]\n\n# Get the unique department ids of these employees\ndepartment_ids = df_filtered['DEPARTMENT_ID'].unique()\n\n# Filter the original dataframe to include only employees from these department ids\ndf_result = df[df['DEPARTMENT_ID'].isin(department_ids)]\n\n# Select only the EMPLOYEE_ID and FIRST_NAME/LAST_NAME columns\nresult = df_result[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary\navg_salary = df['SALARY'].mean()\n\n# Filter employees with salary greater than average\nhigh_earners = df[df['SALARY'] > avg_salary]\n\n# Filter employees whose department has an employee with 'J' in their first name\ndepts_with_j = df[df['FIRST_NAME'].str.contains('J', case=False, na=False)]['DEPARTMENT_ID'].unique()\nhigh_earners_in_j_depts = high_earners[high_earners['DEPARTMENT_ID'].isin(depts_with_j)]\n\n# Display the employee number, name( first name and last name ), and salary\nresult = high_earners_in_j_depts[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average salary\navg_salary = df['SALARY'].mean()\n\n# Filter employees with salary greater than average\nhigh_earners = df[df['SALARY'] > avg_salary]\n\n# Filter employees whose department has an employee with 'J' in their first name\ndepts_with_j = df[df['FIRST_NAME'].str.contains('J', case=False, na=False)]['DEPARTMENT_ID'].unique()\nhigh_earners_in_j_depts = high_earners[high_earners['DEPARTMENT_ID'].isin(depts_with_j)]\n\n# Display the employee number, name( first name and last name ), and salary\nresult = high_earners_in_j_depts[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME', 'SALARY']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame for MK_MAN job titles\ndf_mkman = df[df['JOB_ID'] == 'MK_MAN']\n\n# Get the maximum salary for MK_MAN\nmax_salary_mkman = df_mkman['SALARY'].max()\n\n# Filter the original DataFrame for employees with salary less than the max MK_MAN salary\ndf_result = df[df['SALARY'] < max_salary_mkman]\n\n# Select the columns of interest: EMPLOYEE_ID and JOB_ID\ndf_result = df_result[['EMPLOYEE_ID', 'JOB_ID']]\n\n# Print the result\nprint(df_result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame for MK_MAN job titles\ndf_mkman = df[df['JOB_ID'] == 'MK_MAN']\n\n# Get the maximum salary for MK_MAN\nmax_salary_mkman = df_mkman['SALARY'].max()\n\n# Filter the original DataFrame for employees with salary less than the max MK_MAN salary\ndf_result = df[df['SALARY'] < max_salary_mkman]\n\n# Select the columns of interest: EMPLOYEE_ID and JOB_ID\ndf_result = df_result[['EMPLOYEE_ID', 'JOB_ID']]\n\n# Print the result\nprint(df_result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the salary of the highest earning employee with title PU_MAN\nmax_salary = df[df['JOB_ID'] == 'PU_MAN']['SALARY'].max()\n\n# Filter employees who make more than the highest earning employee with title PU_MAN\nemployees_over_max_salary = df[df['SALARY'] > max_salary]\n\n# Get the employee ids, full names, and job ids for these employees\nresult = employees_over_max_salary[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME', 'JOB_ID']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID\n100,Steven,King,SKING,515.123.4567,1987-06-17,AD_PRES,24000,0,0,90\n101,Neena,Kochhar,NKOCHHAR,515.123.4568,1987-06-18,AD_VP,17000,0,100,90\n102,Lex,De Haan,LDEHAAN,515.123.4569,1987-06-19,AD_VP,17000,0,100,90\n103,Alexander,Hunold,AHUNOLD,590.423.4567,1987-06-20,IT_PROG,9000,0,102,60\n104,Bruce,Ernst,BERNST,590.423.4568,1987-06-21,IT_PROG,6000,0,103,60\n105,David,Austin,DAUSTIN,590.423.4569,1987-06-22,IT_PROG,4800,0,103,60\n106,Valli,Pataballa,VPATABAL,590.423.4560,1987-06-23,IT_PROG,4800,0,103,60\n107,Diana,Lorentz,DLORENTZ,590.423.5567,1987-06-24,IT_PROG,4200,0,103,60\n108,Nancy,Greenberg,NGREENBE,515.124.4569,1987-06-25,FI_MGR,12000,0,101,100\n109,Daniel,Faviet,DFAVIET,515.124.4169,1987-06-26,FI_ACCOUNT,9000,0,108,100\n\nQuestion: What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the salary of the highest earning employee with title PU_MAN\nmax_salary = df[df['JOB_ID'] == 'PU_MAN']['SALARY'].max()\n\n# Filter employees who make more than the highest earning employee with title PU_MAN\nemployees_over_max_salary = df[df['SALARY'] > max_salary]\n\n# Get the employee ids, full names, and job ids for these employees\nresult = employees_over_max_salary[['EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME', 'JOB_ID']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: What is the id of the longest song?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'duration' column from string to datetime format\ndf['duration'] = pd.to_datetime(df['duration'], format='%M:%S')\n\n# Calculate the time difference in seconds\ndf['duration'] = df['duration'].dt.minute*60 + df['duration'].dt.second\n\n# Find the id of the song that lasts the longest\nmax_duration_id = df.loc[df['duration'].idxmax(), 'f_id']\n\n# Print the id\nprint(max_duration_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: Find the id of the song that lasts the longest.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'duration' column from string to datetime format\ndf['duration'] = pd.to_datetime(df['duration'], format='%M:%S')\n\n# Calculate the time difference in seconds\ndf['duration'] = df['duration'].dt.minute*60 + df['duration'].dt.second\n\n# Find the id of the song that lasts the longest\nmax_duration_id = df.loc[df['duration'].idxmax(), 'f_id']\n\n# Print the id\nprint(max_duration_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: Find the names of all English songs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only songs with 'english' as the language\nenglish_songs = df[df['languages'] == 'english']\n\n# Extract the names of the English songs\nenglish_songs_names = english_songs['song_name']\n\n# Print the names of the English songs\nprint(english_songs_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the names of all songs in English?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only songs with 'english' as the language\nenglish_songs = df[df['languages'] == 'english']\n\n# Extract the names of the English songs\nenglish_songs_names = english_songs['song_name']\n\n# Print the names of the English songs\nprint(english_songs_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: What are the id of songs whose format is mp3.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'formats' column is 'mp3'\nmp3_songs = df[df['formats'] == 'mp3']\n\n# Save the ids of the songs into a variable\nmp3_song_ids = mp3_songs['f_id'].tolist()\n\n# Print the ids of the songs\nprint(mp3_song_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: What are the id of all the files in mp3 format?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'formats' column is 'mp3'\nmp3_songs = df[df['formats'] == 'mp3']\n\n# Save the ids of the songs into a variable\nmp3_song_ids = mp3_songs['f_id'].tolist()\n\n# Print the ids of the songs\nprint(mp3_song_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: How many songs have 4 minute duration?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Clean the duration column and convert it to minutes\ndf['duration'] = df['duration'].str.split(':').str[0].astype(int)\n\n# Count the number of songs that last approximately 4 minutes\ncount = df[df['duration'] == 4].shape[0]\n\n# Print the answer\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: What is the count of the songs that last approximately 4 minutes?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Clean the duration column and convert it to minutes\ndf['duration'] = df['duration'].str.split(':').str[0].astype(int)\n\n# Count the number of songs that last approximately 4 minutes\ncount = df[df['duration'] == 4].shape[0]\n\n# Print the answer\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: How many artists are from Bangladesh?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include artists from Bangladesh\nbangladesh_artists = df[df['country'] == 'Bangladesh']\n\n# Count the number of artists from Bangladesh\nbangladesh_artists_count = bangladesh_artists.shape[0]\n\n# Print the answer\nprint(bangladesh_artists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: How many Bangladeshi artists are listed?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include artists from Bangladesh\nbangladesh_artists = df[df['country'] == 'Bangladesh']\n\n# Count the number of artists from Bangladesh\nbangladesh_artists_count = bangladesh_artists.shape[0]\n\n# Print the answer\nprint(bangladesh_artists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: What is the most popular file format?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the mode of the 'formats' column which gives the format used by the most files\nmost_common_format = df['formats'].mode()[0]\n\n# Print the result\nprint(\"The file format that is used by the most files is:\", most_common_format)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: Find the file format that is used by the most files.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the mode of the 'formats' column which gives the format used by the most files\nmost_common_format = df['formats'].mode()[0]\n\n# Print the result\nprint(\"The file format that is used by the most files is:\", most_common_format)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: What is the number of artists for each gender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by the 'gender' column, then count the number of artists in each group\ngender_counts = df.groupby('gender').size()\n\nprint(gender_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: How many artists are male and how many are female?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by the 'gender' column, then count the number of artists in each group\ngender_counts = df.groupby('gender').size()\n\nprint(gender_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What is the average rating of songs for each language?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_ratings = df.groupby('languages')['rating'].mean()\n\nprint(average_ratings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What is the average song rating for each language?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_ratings = df.groupby('languages')['rating'].mean()\n\nprint(average_ratings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: For each file format, return the number of artists who released songs in that format.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of songs for each format\nsong_counts = df['formats'].value_counts()\n\n# Print the result\nprint(song_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nf_id,artist_name,file_size,duration,formats\n1,Shrikanta,3.78 MB,3:45,mp4\n2,Prity,4.12 MB,2:56,mp3\n3,Farida,3.69 MB,4:12,mp4\n4,Enrique,4.58 MB,5:23,mp4\n5,Michel,5.10 MB,4:34,mp3\n6,Topu,4.10 MB,4:30,mp4\n\nQuestion: How many songs were released for each format?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of songs for each format\nsong_counts = df['formats'].value_counts()\n\n# Print the result\nprint(song_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: Find the distinct names of all songs that have a higher resolution than some songs in English.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the average resolution for English songs\nenglish_songs = df[df['languages'] == 'english']\navg_resolution_english = english_songs['resolution'].mean()\n\n# Filter out the songs that have a higher resolution than English songs\nhigher_resolution_songs = df[df['resolution'] > avg_resolution_english]\n\n# Get the names of the songs\nsong_names = higher_resolution_songs['song_name'].unique().tolist()\n\n# Print the answer\nprint(\"Songs with higher resolution than English songs:\", song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the different names for all songs that have a higher resolution than English songs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the average resolution for English songs\nenglish_songs = df[df['languages'] == 'english']\navg_resolution_english = english_songs['resolution'].mean()\n\n# Filter out the songs that have a higher resolution than English songs\nhigher_resolution_songs = df[df['resolution'] > avg_resolution_english]\n\n# Get the names of the songs\nsong_names = higher_resolution_songs['song_name'].unique().tolist()\n\n# Print the answer\nprint(\"Songs with higher resolution than English songs:\", song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ng_name,rating,most_popular_in\ntagore,8,Bangladesh\nnazrul,7,Bangladesh\nfolk,9,Sylhet,Chittagong,Kustia\nmodern,8,Bangladesh\nblues,7,Canada\npop,9,America\n\nQuestion: List the names of all genres in alphabetical oder, together with its ratings.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Combine the genre names and ratings, and sort them alphabetically\nresult = df[['g_name', 'rating']].sort_values(by='g_name')\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ng_name,rating,most_popular_in\ntagore,8,Bangladesh\nnazrul,7,Bangladesh\nfolk,9,Sylhet,Chittagong,Kustia\nmodern,8,Bangladesh\nblues,7,Canada\npop,9,America\n\nQuestion: What are the names of all genres in alphabetical order, combined with its ratings?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Combine the genre names and ratings, and sort them alphabetically\nresult = df[['g_name', 'rating']].sort_values(by='g_name')\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: Give me a list of the names of all songs ordered by their resolution.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'resolution'\ndf_sorted = df.sort_values('resolution')\n\n# Select the 'song_name' column\nsong_names = df_sorted['song_name']\n\n# Print the names of the songs\nprint(song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the names of all songs that are ordered by their resolution numbers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'resolution'\ndf_sorted = df.sort_values('resolution')\n\n# Select the 'song_name' column\nsong_names = df_sorted['song_name']\n\n# Print the names of the songs\nprint(song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What is the language used most often in the songs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'languages' column and count the frequency\nlanguage_counts = df['languages'].value_counts()\n\n# Get the language with the maximum frequency\nmost_frequent_language = language_counts.idxmax()\n\nprint(most_frequent_language)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the languages that are used most often in songs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'languages' column and count the frequency\nlanguage_counts = df['languages'].value_counts()\n\n# Get the language with the maximum frequency\nmost_frequent_language = language_counts.idxmax()\n\nprint(most_frequent_language)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: What are the names of artists who are Male and are from UK?", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where gender is 'Male' and country is 'UK'\nmale_uk_artists = df[(df['gender'] == 'Male') & (df['country'] == 'UK')]\n\n# Save the names of the artists in a list\nartist_names = male_uk_artists['artist_name'].tolist()\n\n# Print the list of artist names\nprint(artist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nartist_name,country,gender,preferred_genre\nShrikanta,India,Male,tagore\nPrity,Bangladesh,Female,nazrul\nFarida,Bangladesh,Female,folk\nTopu,India,Female,modern\nEnrique,USA,Male,blues\nMichel,UK,Male,pop\n\nQuestion: What are the names of all male British artists?", "response": "# Import the pandas library\nimport pandas as pd\n\n# Read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where gender is 'Male' and country is 'UK'\nmale_uk_artists = df[(df['gender'] == 'Male') & (df['country'] == 'UK')]\n\n# Save the names of the artists in a list\nartist_names = male_uk_artists['artist_name'].tolist()\n\n# Print the list of artist names\nprint(artist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the average rating and resolution of songs that are in Bangla?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'languages' column is 'bangla'\nbangla_songs = df[df['languages'] == 'bangla']\n\n# Calculate the average of the 'rating' and 'resolution' columns\naverage_rating = bangla_songs['rating'].mean()\naverage_resolution = bangla_songs['resolution'].mean()\n\n# Save the answers in a variable\nanswers = {'average_rating': average_rating, 'average_resolution': average_resolution}\n\n# Print the variable\nprint(answers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What is the average rating and resolution of all bangla songs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'languages' column is 'bangla'\nbangla_songs = df[df['languages'] == 'bangla']\n\n# Calculate the average of the 'rating' and 'resolution' columns\naverage_rating = bangla_songs['rating'].mean()\naverage_resolution = bangla_songs['resolution'].mean()\n\n# Save the answers in a variable\nanswers = {'average_rating': average_rating, 'average_resolution': average_resolution}\n\n# Print the variable\nprint(answers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the names of the songs whose rating is below the rating of all songs in English?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe for English songs\ndf_english = df[df['languages'] == 'english']\n\n# find the minimum rating for English songs\nmin_rating_english = df_english['rating'].min()\n\n# filter the dataframe for songs with rating less than the minimum rating for English songs\ndf_result = df[df['rating'] < min_rating_english]\n\n# get the song names\nsong_names = df_result['song_name'].tolist()\n\n# print the song names\nprint(song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsong_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution\nTumi robe nirobe,Shrikanta,India,1,tagore,8,bangla,28-AUG-2011,1080\nShukno patar nupur pae,Prity,Bangladesh,2,nazrul,5,bangla,21-SEP-1997,512\nAmi opar hoye,Farida,Bangladesh,3,folk,7,bangla,7-APR-2001,320\nMy love,Enrique,USA,4,blues,6,english,24-JAN-2007,1080\nJust beat it,Michel,UK,5,pop,8,english,17-MAR-2002,720\nAj ei akash,Topu,India,6,modern,10,bangla,27-MAR-2004,320\n\nQuestion: What are the song names for every song whose rating is less than the minimum rating for English songs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe for English songs\ndf_english = df[df['languages'] == 'english']\n\n# find the minimum rating for English songs\nmin_rating_english = df_english['rating'].min()\n\n# filter the dataframe for songs with rating less than the minimum rating for English songs\ndf_result = df[df['rating'] < min_rating_english]\n\n# get the song names\nsong_names = df_result['song_name'].tolist()\n\n# print the song names\nprint(song_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,yearid,votedby,ballots,needed,votes,inducted,category,needed_note\ncobbty01,1936,BBWAA,226,170,222,Y,Player,\nruthba01,1936,BBWAA,226,170,215,Y,Player,\nwagneho01,1936,BBWAA,226,170,215,Y,Player,\nmathech01,1936,BBWAA,226,170,205,Y,Player,\njohnswa01,1936,BBWAA,226,170,189,Y,Player,\nlajoina01,1936,BBWAA,226,170,146,N,Player,\nspeaktr01,1936,BBWAA,226,170,133,N,Player,\nyoungcy01,1936,BBWAA,226,170,111,N,Player,\nhornsro01,1936,BBWAA,226,170,105,N,Player,\ncochrmi01,1936,BBWAA,226,170,80,N,Player,\n\nQuestion: How many players enter hall of fame each year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'yearid' and count the number of players for each year\ncount_players = df.groupby('yearid').size()\n\nprint(count_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,yearid,votedby,ballots,needed,votes,inducted,category,needed_note\ncobbty01,1936,BBWAA,226,170,222,Y,Player,\nruthba01,1936,BBWAA,226,170,215,Y,Player,\nwagneho01,1936,BBWAA,226,170,215,Y,Player,\nmathech01,1936,BBWAA,226,170,205,Y,Player,\njohnswa01,1936,BBWAA,226,170,189,Y,Player,\nlajoina01,1936,BBWAA,226,170,146,N,Player,\nspeaktr01,1936,BBWAA,226,170,133,N,Player,\nyoungcy01,1936,BBWAA,226,170,111,N,Player,\nhornsro01,1936,BBWAA,226,170,105,N,Player,\ncochrmi01,1936,BBWAA,226,170,80,N,Player,\n\nQuestion: Count the number of players who enter hall of fame for each year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'yearid' and count the number of players for each year\ncount_players = df.groupby('yearid').size()\n\nprint(count_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,league_id,team_id,park_id,span_first,span_last,games,openings,attendance\n1871,,BS1,BOS01,1871-05-16,1871-10-07,16,16,32600\n1871,,BS1,NYC01,1871-05-27,1871-05-27,1,1,3000\n1871,,CH1,CHI01,1871-05-08,1871-09-29,16,15,85500\n1871,,CH1,NYC01,1871-10-30,1871-10-30,1,1,600\n1871,,CL1,CIN01,1871-05-13,1871-07-22,2,2,2200\n1871,,CL1,CLE01,1871-05-11,1871-09-27,11,6,9500\n1871,,FW1,FOR01,1871-05-04,1871-08-29,9,4,2350\n1871,,NY2,NYC01,1871-05-25,1871-09-22,19,18,42050\n1871,,PH1,PHI01,1871-06-03,1871-10-18,14,14,52000\n1871,,RC1,CHI01,1871-08-08,1871-08-08,1,1,1000\n\nQuestion: What is the average number of attendance at home games for each year?", "response": "import pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# calculate average attendance at home games for each year\navg_attendance = df.groupby('year')['attendance'].mean()\n\n# print the result\nprint(avg_attendance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,league_id,team_id,park_id,span_first,span_last,games,openings,attendance\n1871,,BS1,BOS01,1871-05-16,1871-10-07,16,16,32600\n1871,,BS1,NYC01,1871-05-27,1871-05-27,1,1,3000\n1871,,CH1,CHI01,1871-05-08,1871-09-29,16,15,85500\n1871,,CH1,NYC01,1871-10-30,1871-10-30,1,1,600\n1871,,CL1,CIN01,1871-05-13,1871-07-22,2,2,2200\n1871,,CL1,CLE01,1871-05-11,1871-09-27,11,6,9500\n1871,,FW1,FOR01,1871-05-04,1871-08-29,9,4,2350\n1871,,NY2,NYC01,1871-05-25,1871-09-22,19,18,42050\n1871,,PH1,PHI01,1871-06-03,1871-10-18,14,14,52000\n1871,,RC1,CHI01,1871-08-08,1871-08-08,1,1,1000\n\nQuestion: For each year, return the year and the average number of attendance at home games.", "response": "import pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# calculate average attendance at home games for each year\navg_attendance = df.groupby('year')['attendance'].mean()\n\n# print the result\nprint(avg_attendance)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: How many parks are there in the state of NY?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include parks in NY\nny_parks = df[df['state'] == 'NY']\n\n# Count number of parks in NY\nnum_parks_ny = ny_parks.shape[0]\n\n# Print the number of parks in NY\nprint(num_parks_ny)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: Show me the number of parks the state of NY has.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include parks in NY\nny_parks = df[df['state'] == 'NY']\n\n# Count number of parks in NY\nnum_parks_ny = ny_parks.shape[0]\n\n# Print the number of parks in NY\nprint(num_parks_ny)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: List three countries which are the origins of the least players.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by birth_country and count the number of players\ngrouped = df.groupby('birth_country').size()\n\n# Get the three countries with the least players\nthree_least_countries = grouped.nsmallest(3).index.tolist()\n\n# Print the list\nprint(three_least_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: What are the three countries that the least players are from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by birth_country and count the number of players\ngrouped = df.groupby('birth_country').size()\n\n# Get the three countries with the least players\nthree_least_countries = grouped.nsmallest(3).index.tolist()\n\n# Print the list\nprint(three_least_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: Find all the players' first name and last name who have empty death record.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Fill NaN values with an empty string for consistency\ndf.fillna('', inplace=True)\n\n# Filter the dataframe to get players with empty death record\nempty_death_record = df[(df['death_year'] == '') & (df['death_month'] == '') & (df['death_day'] == '')]\n\n# Get the names\nnames = empty_death_record[['name_first', 'name_last']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: What are the first name and last name of the players whose death record is empty?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Fill NaN values with an empty string for consistency\ndf.fillna('', inplace=True)\n\n# Filter the dataframe to get players with empty death record\nempty_death_record = df[(df['death_year'] == '') & (df['death_month'] == '') & (df['death_day'] == '')]\n\n# Get the names\nnames = empty_death_record[['name_first', 'name_last']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: How many players born in USA are right-handed batters? That is, have the batter value 'R'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include players born in USA and who are right-handed batters (bats = 'R')\nusa_righty_batters = df[(df['birth_country'] == 'USA') & (df['bats'] == 'R')]\n\n# Get the count of such players\ncount = usa_righty_batters.shape[0]\n\n# Save the answer in a variable\nanswer = count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id\naardsda01,1981,12,27,USA,CO,Denver,,,,,,,David,Aardsma,David Allan,220,75,R,R,2004-04-06,2015-08-23,aardd001,aardsda01\naaronha01,1934,2,5,USA,AL,Mobile,,,,,,,Hank,Aaron,Henry Louis,180,72,R,R,1954-04-13,1976-10-03,aaroh101,aaronha01\naaronto01,1939,8,5,USA,AL,Mobile,1984,8,16,USA,GA,Atlanta,Tommie,Aaron,Tommie Lee,190,75,R,R,1962-04-10,1971-09-26,aarot101,aaronto01\naasedo01,1954,9,8,USA,CA,Orange,,,,,,,Don,Aase,Donald William,190,75,R,R,1977-07-26,1990-10-03,aased001,aasedo01\nabadan01,1972,8,25,USA,FL,Palm Beach,,,,,,,Andy,Abad,Fausto Andres,184,73,L,L,2001-09-10,2006-04-13,abada001,abadan01\nabadfe01,1985,12,17,D.R.,La Romana,La Romana,,,,,,,Fernando,Abad,Fernando Antonio,220,73,L,L,2010-07-28,2015-10-03,abadf001,abadfe01\nabadijo01,1854,11,4,USA,PA,Philadelphia,1905,5,17,USA,NJ,Pemberton,John,Abadie,John W.,192,72,R,R,1875-04-26,1875-06-10,abadj101,abadijo01\nabbated01,1877,4,15,USA,PA,Latrobe,1957,1,6,USA,FL,Fort Lauderdale,Ed,Abbaticchio,Edward James,170,71,R,R,1897-09-04,1910-09-15,abbae101,abbated01\nabbeybe01,1869,11,11,USA,VT,Essex,1962,6,11,USA,VT,Colchester,Bert,Abbey,Bert Wood,175,71,R,R,1892-06-14,1896-09-23,abbeb101,abbeybe01\nabbeych01,1866,10,14,USA,NE,Falls City,1926,4,27,USA,CA,San Francisco,Charlie,Abbey,Charles S.,169,68,L,L,1893-08-16,1897-08-19,abbec101,abbeych01\n\nQuestion: Count the number of players who were born in USA and have bats information 'R'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include players born in USA and who are right-handed batters (bats = 'R')\nusa_righty_batters = df[(df['birth_country'] == 'USA') & (df['bats'] == 'R')]\n\n# Get the count of such players\ncount = usa_righty_batters.shape[0]\n\n# Save the answer in a variable\nanswer = count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,round,team_id_winner,league_id_winner,team_id_loser,league_id_loser,wins,losses,ties\n1884,WS,PRO,NL,NYP,AA,3,0,0\n1885,WS,CHC,NL,STL,AA,3,3,1\n1886,WS,STL,AA,CHC,NL,4,2,0\n1887,WS,DTN,NL,STL,AA,10,5,0\n1888,WS,NYG,NL,STL,AA,6,4,0\n1889,WS,NYG,NL,BRO,AA,6,3,0\n1890,WS,BRO,NL,LOU,AA,3,3,1\n1892,CS,BSN,NL,CLV,NL,5,0,1\n1903,WS,BOS,AL,PIT,NL,5,3,0\n1905,WS,NY1,NL,PHA,AL,4,1,0\n\nQuestion: How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for games in 1885\ndf_1885 = df[df['year'] == 1885]\n\n# Count the number of games with ties\nties_1885 = df_1885[df_1885['ties'] == 1].shape[0]\n\nprint(ties_1885)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,round,team_id_winner,league_id_winner,team_id_loser,league_id_loser,wins,losses,ties\n1884,WS,PRO,NL,NYP,AA,3,0,0\n1885,WS,CHC,NL,STL,AA,3,3,1\n1886,WS,STL,AA,CHC,NL,4,2,0\n1887,WS,DTN,NL,STL,AA,10,5,0\n1888,WS,NYG,NL,STL,AA,6,4,0\n1889,WS,NYG,NL,BRO,AA,6,3,0\n1890,WS,BRO,NL,LOU,AA,3,3,1\n1892,CS,BSN,NL,CLV,NL,5,0,1\n1903,WS,BOS,AL,PIT,NL,5,3,0\n1905,WS,NY1,NL,PHA,AL,4,1,0\n\nQuestion: Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for games in 1885\ndf_1885 = df[df['year'] == 1885]\n\n# Count the number of games with ties\nties_1885 = df_1885[df_1885['ties'] == 1].shape[0]\n\nprint(ties_1885)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,team_id,league_id,player_id,salary\n1985,ATL,NL,barkele01,870000\n1985,ATL,NL,bedrost01,550000\n1985,ATL,NL,benedbr01,545000\n1985,ATL,NL,campri01,633333\n1985,ATL,NL,ceronri01,625000\n1985,ATL,NL,chambch01,800000\n1985,ATL,NL,dedmoje01,150000\n1985,ATL,NL,forstte01,483333\n1985,ATL,NL,garbege01,772000\n1985,ATL,NL,harpete01,250000\n\nQuestion: List the 3 highest salaries of the players in 2001?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the year 2001\ndf_2001 = df[df['year'] == 2001]\n\n# Sort the data in descending order of salary\ndf_sorted = df_2001.sort_values(by='salary', ascending=False)\n\n# Get the top 3 salaries\ntop_3_salaries = df_sorted['salary'].head(3)\n\nprint(top_3_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,team_id,league_id,player_id,salary\n1985,ATL,NL,barkele01,870000\n1985,ATL,NL,bedrost01,550000\n1985,ATL,NL,benedbr01,545000\n1985,ATL,NL,campri01,633333\n1985,ATL,NL,ceronri01,625000\n1985,ATL,NL,chambch01,800000\n1985,ATL,NL,dedmoje01,150000\n1985,ATL,NL,forstte01,483333\n1985,ATL,NL,garbege01,772000\n1985,ATL,NL,harpete01,250000\n\nQuestion: How much salary did the top 3 well-paid players get in 2001?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the year 2001\ndf_2001 = df[df['year'] == 2001]\n\n# Sort the data in descending order of salary\ndf_sorted = df_2001.sort_values(by='salary', ascending=False)\n\n# Get the top 3 salaries\ntop_3_salaries = df_sorted['salary'].head(3)\n\nprint(top_3_salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,team_id,league_id,player_id,salary\n1985,ATL,NL,barkele01,870000\n1985,ATL,NL,bedrost01,550000\n1985,ATL,NL,benedbr01,545000\n1985,ATL,NL,campri01,633333\n1985,ATL,NL,ceronri01,625000\n1985,ATL,NL,chambch01,800000\n1985,ATL,NL,dedmoje01,150000\n1985,ATL,NL,forstte01,483333\n1985,ATL,NL,garbege01,772000\n1985,ATL,NL,harpete01,250000\n\nQuestion: What were all the salary values of players in 2010 and 2001?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the year 2001 and 2010\ndf_2001_2010 = df[df['year'].isin([2001, 2010])]\n\n# Get the unique salary values\nsalaries = df_2001_2010['salary'].unique()\n\n# Print the salaries\nprint(salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nyear,team_id,league_id,player_id,salary\n1985,ATL,NL,barkele01,870000\n1985,ATL,NL,bedrost01,550000\n1985,ATL,NL,benedbr01,545000\n1985,ATL,NL,campri01,633333\n1985,ATL,NL,ceronri01,625000\n1985,ATL,NL,chambch01,800000\n1985,ATL,NL,dedmoje01,150000\n1985,ATL,NL,forstte01,483333\n1985,ATL,NL,garbege01,772000\n1985,ATL,NL,harpete01,250000\n\nQuestion: List all the salary values players received in 2010 and 2001.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the year 2001 and 2010\ndf_2001_2010 = df[df['year'].isin([2001, 2010])]\n\n# Get the unique salary values\nsalaries = df_2001_2010['salary'].unique()\n\n# Print the salaries\nprint(salaries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,yearid,votedby,ballots,needed,votes,inducted,category,needed_note\ncobbty01,1936,BBWAA,226,170,222,Y,Player,\nruthba01,1936,BBWAA,226,170,215,Y,Player,\nwagneho01,1936,BBWAA,226,170,215,Y,Player,\nmathech01,1936,BBWAA,226,170,205,Y,Player,\njohnswa01,1936,BBWAA,226,170,189,Y,Player,\nlajoina01,1936,BBWAA,226,170,146,N,Player,\nspeaktr01,1936,BBWAA,226,170,133,N,Player,\nyoungcy01,1936,BBWAA,226,170,111,N,Player,\nhornsro01,1936,BBWAA,226,170,105,N,Player,\ncochrmi01,1936,BBWAA,226,170,80,N,Player,\n\nQuestion: In which year did the least people enter hall of fame?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'yearid' and count the number of players in each group\ncount_by_year = df.groupby('yearid').size()\n\n# Find the year with the least number of players\nleast_year = count_by_year.idxmin()\n\nprint(least_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nplayer_id,yearid,votedby,ballots,needed,votes,inducted,category,needed_note\ncobbty01,1936,BBWAA,226,170,222,Y,Player,\nruthba01,1936,BBWAA,226,170,215,Y,Player,\nwagneho01,1936,BBWAA,226,170,215,Y,Player,\nmathech01,1936,BBWAA,226,170,205,Y,Player,\njohnswa01,1936,BBWAA,226,170,189,Y,Player,\nlajoina01,1936,BBWAA,226,170,146,N,Player,\nspeaktr01,1936,BBWAA,226,170,133,N,Player,\nyoungcy01,1936,BBWAA,226,170,111,N,Player,\nhornsro01,1936,BBWAA,226,170,105,N,Player,\ncochrmi01,1936,BBWAA,226,170,80,N,Player,\n\nQuestion: Find the year in which the least people enter hall of fame.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'yearid' and count the number of players in each group\ncount_by_year = df.groupby('yearid').size()\n\n# Find the year with the least number of players\nleast_year = count_by_year.idxmin()\n\nprint(least_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: How many parks are there in Atlanta city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the city column\ndf_atlanta = df[df['city'] == 'Atlanta']\n\n# Count the number of parks in Atlanta\nnum_parks_atlanta = df_atlanta.shape[0]\n\n# Print the number of parks in Atlanta\nprint(num_parks_atlanta)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: How many parks does Atlanta city have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the city column\ndf_atlanta = df[df['city'] == 'Atlanta']\n\n# Count the number of parks in Atlanta\nnum_parks_atlanta = df_atlanta.shape[0]\n\n# Print the number of parks in Atlanta\nprint(num_parks_atlanta)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: List the names of states that have more than 2 parks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of parks per state\nstate_counts = df['state'].value_counts()\n\n# Filter out states with more than 2 parks\nstates_more_than_two_parks = state_counts[state_counts > 2].index.tolist()\n\n# Print the states with more than 2 parks\nprint(states_more_than_two_parks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: Which states have more than 2 parks?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of parks per state\nstate_counts = df['state'].value_counts()\n\n# Filter out states with more than 2 parks\nstates_more_than_two_parks = state_counts[state_counts > 2].index.tolist()\n\n# Print the states with more than 2 parks\nprint(states_more_than_two_parks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: Which cities have 2 to 4 parks?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncity_counts = df['city'].value_counts()\ncities_with_2_to_4_parks = city_counts[(city_counts >= 2) & (city_counts <= 4)].index.tolist()\n\nprint(cities_with_2_to_4_parks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npark_id,park_name,park_alias,city,state,country\nALB01,Riverside Park,,Albany,NY,US\nALT01,Columbia Park,,Altoona,PA,US\nANA01,Angel Stadium of Anaheim,Edison Field; Anaheim Stadium,Anaheim,CA,US\nARL01,Arlington Stadium,,Arlington,TX,US\nARL02,Rangers Ballpark in Arlington,The Ballpark in Arlington; Ameriquest Field,Arlington,TX,US\nATL01,Atlanta-Fulton County Stadium,,Atlanta,GA,US\nATL02,Turner Field,,Atlanta,GA,US\nBAL01,Madison Avenue Grounds,,Baltimore,MD,US\nBAL02,Newington Park,,Baltimore,MD,US\nBAL03,Oriole Park I,,Baltimore,MD,US\n\nQuestion: Find all the cities that have 2 to 4 parks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncity_counts = df['city'].value_counts()\ncities_with_2_to_4_parks = city_counts[(city_counts >= 2) & (city_counts <= 4)].index.tolist()\n\nprint(cities_with_2_to_4_parks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,brand,name,focal_length_mm,max_aperture\n1,Olympus,Olympus 15mm f/8.0 Body Cap,15.0,8.0\n2,Olympus,Olympus M.Zuiko Digital ED 45mm f/1.8,45.0,1.8\n3,Olympus,Olympus M.Zuiko Digital ED 75mm f/1.8,75.0,1.8\n4,Panasonic,Panasonic Leica DG Summilux 25mm f /1.4 Asph.,25.0,1.4\n5,Panasonic,Panasonic Leica DG Nocticron 42.5mm f /1.2,42.5,1.2\n6,Panasonic,Panasonic Lumix G 150mm f /2.8,150.0,2.8\n7,Schneider Kreuznach,Schneider Kreuznach Super Angulon 14mm f /2.0,14.0,2.0\n8,Schneider Kreuznach,Schneider Kreuznach Xenon 30mm f /1.4,30.0,1.4\n9,Sigma,Sigma 19mm f2.8 DN,19.0,2.8\n10,Sigma,Sigma 19mm f2.8 EX DN,19.0,2.8\n\nQuestion: How many camera lenses have a focal length longer than 15 mm?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['focal_length_mm'] > 15]\n\nanswer = len(df_filtered)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,brand,name,focal_length_mm,max_aperture\n1,Olympus,Olympus 15mm f/8.0 Body Cap,15.0,8.0\n2,Olympus,Olympus M.Zuiko Digital ED 45mm f/1.8,45.0,1.8\n3,Olympus,Olympus M.Zuiko Digital ED 75mm f/1.8,75.0,1.8\n4,Panasonic,Panasonic Leica DG Summilux 25mm f /1.4 Asph.,25.0,1.4\n5,Panasonic,Panasonic Leica DG Nocticron 42.5mm f /1.2,42.5,1.2\n6,Panasonic,Panasonic Lumix G 150mm f /2.8,150.0,2.8\n7,Schneider Kreuznach,Schneider Kreuznach Super Angulon 14mm f /2.0,14.0,2.0\n8,Schneider Kreuznach,Schneider Kreuznach Xenon 30mm f /1.4,30.0,1.4\n9,Sigma,Sigma 19mm f2.8 DN,19.0,2.8\n10,Sigma,Sigma 19mm f2.8 EX DN,19.0,2.8\n\nQuestion: Find the brand and name for each camera lens, and sort in descending order of maximum aperture.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe in descending order of maximum aperture\ndf_sorted = df.sort_values(by='max_aperture', ascending=False)\n\n# select the brand and name columns\nresult = df_sorted[['brand', 'name']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,camera_lens_id,mountain_id,color,name\n1,1,20,RBG,monkey\n2,10,2,RBG,rabbits\n3,10,1,Black/White,deers\n4,1,10,RBG,grass\n5,5,14,RBG,cloud\n6,6,12,RBG,sunset\n7,7,12,RBG,river\n8,7,12,Black/White,wolfs\n9,10,14,RBG,the mountain\n10,10,20,RBG,life\n\nQuestion: List the id, color scheme, and name for all the photos.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select only the required columns\ndf = df[['id', 'color', 'name']]\n\n# Print the selected data\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Height,Prominence,Range,Country\n1,Abune Yosef / Guliba Amba,4260.0,1909.0,Lasta Massif,Ethiopia\n2,Ioll / Yoll,4220.0,350.0,Kollo Massif,Ethiopia\n3,Bada,4195.0,1605.0,Arsi Mountains,Ethiopia\n4,Kaka / Kecha / Chiqe,4193.0,1215.0,Arsi Mountains,Ethiopia\n5,Jbel Toubkal,4167.0,3755.0,Toubkal Atlas,Morocco\n6,Muhavura,4127.0,1530.0,Virunga Mountains,Rwanda Uganda\n7,Hey / Hay,4125.0,660.0,Semien Mountains,Ethiopia\n8,Guna,4120.0,1510.0,Guna Massif,Ethiopia\n9,Choqa / Choke / Birhan,4100.0,2225.0,Choqa Mountains,Ethiopia\n10,Ouanoukrim,4088.0,420.0,Toubkal Atlas,Morocco\n\nQuestion: What are the average prominence of the mountains in country 'Morocco'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'Country' is 'Morocco'\nmorocco_df = df[df['Country'] == 'Morocco']\n\n# Calculate the average 'Prominence' of the rows in the filtered dataframe\naverage_prominence = morocco_df['Prominence'].mean()\n\n# Print the average prominence\nprint(average_prominence)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Height,Prominence,Range,Country\n1,Abune Yosef / Guliba Amba,4260.0,1909.0,Lasta Massif,Ethiopia\n2,Ioll / Yoll,4220.0,350.0,Kollo Massif,Ethiopia\n3,Bada,4195.0,1605.0,Arsi Mountains,Ethiopia\n4,Kaka / Kecha / Chiqe,4193.0,1215.0,Arsi Mountains,Ethiopia\n5,Jbel Toubkal,4167.0,3755.0,Toubkal Atlas,Morocco\n6,Muhavura,4127.0,1530.0,Virunga Mountains,Rwanda Uganda\n7,Hey / Hay,4125.0,660.0,Semien Mountains,Ethiopia\n8,Guna,4120.0,1510.0,Guna Massif,Ethiopia\n9,Choqa / Choke / Birhan,4100.0,2225.0,Choqa Mountains,Ethiopia\n10,Ouanoukrim,4088.0,420.0,Toubkal Atlas,Morocco\n\nQuestion: What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out rows that belong to 'Aberdare Range'\ndf_filtered = df[df['Range'] != 'Aberdare Range']\n\n# Select the columns 'name', 'Height', and 'Prominence'\nanswer = df_filtered[['name', 'Height', 'Prominence']]\n\n# Save the answer in a variable\nanswer_var = answer\n\n# Print the variable\nprint(answer_var)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,brand,name,focal_length_mm,max_aperture\n1,Olympus,Olympus 15mm f/8.0 Body Cap,15.0,8.0\n2,Olympus,Olympus M.Zuiko Digital ED 45mm f/1.8,45.0,1.8\n3,Olympus,Olympus M.Zuiko Digital ED 75mm f/1.8,75.0,1.8\n4,Panasonic,Panasonic Leica DG Summilux 25mm f /1.4 Asph.,25.0,1.4\n5,Panasonic,Panasonic Leica DG Nocticron 42.5mm f /1.2,42.5,1.2\n6,Panasonic,Panasonic Lumix G 150mm f /2.8,150.0,2.8\n7,Schneider Kreuznach,Schneider Kreuznach Super Angulon 14mm f /2.0,14.0,2.0\n8,Schneider Kreuznach,Schneider Kreuznach Xenon 30mm f /1.4,30.0,1.4\n9,Sigma,Sigma 19mm f2.8 DN,19.0,2.8\n10,Sigma,Sigma 19mm f2.8 EX DN,19.0,2.8\n\nQuestion: How many different kinds of lens brands are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_brands = df['brand'].nunique()\n\nprint(num_brands)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,brand,name,focal_length_mm,max_aperture\n1,Olympus,Olympus 15mm f/8.0 Body Cap,15.0,8.0\n2,Olympus,Olympus M.Zuiko Digital ED 45mm f/1.8,45.0,1.8\n3,Olympus,Olympus M.Zuiko Digital ED 75mm f/1.8,75.0,1.8\n4,Panasonic,Panasonic Leica DG Summilux 25mm f /1.4 Asph.,25.0,1.4\n5,Panasonic,Panasonic Leica DG Nocticron 42.5mm f /1.2,42.5,1.2\n6,Panasonic,Panasonic Lumix G 150mm f /2.8,150.0,2.8\n7,Schneider Kreuznach,Schneider Kreuznach Super Angulon 14mm f /2.0,14.0,2.0\n8,Schneider Kreuznach,Schneider Kreuznach Xenon 30mm f /1.4,30.0,1.4\n9,Sigma,Sigma 19mm f2.8 DN,19.0,2.8\n10,Sigma,Sigma 19mm f2.8 EX DN,19.0,2.8\n\nQuestion: List the camera lens names containing substring \"Digital\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the 'name' column contains 'Digital'\ndf_digital = df[df['name'].str.contains('Digital')]\n\n# Save the answer in a variable\nlens_names = df_digital['name'].tolist()\n\n# Print the variable\nprint(lens_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: Find the names of channels that are not owned by CCTV.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for channels not owned by CCTV\nnot_cctv_channels = df[df['Owner'] != 'CCTV']\n\n# Get the names of these channels\nnot_cctv_names = not_cctv_channels['Name'].tolist()\n\n# Print the names\nprint(not_cctv_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: Which channels are not owned by CCTV? Give me the channel names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for channels not owned by CCTV\nnot_cctv_channels = df[df['Owner'] != 'CCTV']\n\n# Get the names of these channels\nnot_cctv_names = not_cctv_channels['Name'].tolist()\n\n# Print the names\nprint(not_cctv_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: List all channel names ordered by their rating in percent from big to small.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Rating in descending order\nsorted_df = df.sort_values('Rating_in_percent', ascending=False)\n\n# Get the list of all channel names\nchannel_names = sorted_df['Name'].tolist()\n\n# Print the list of channel names\nprint(channel_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: Give me a list of all the channel names sorted by the channel rating in descending order.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Rating in descending order\nsorted_df = df.sort_values('Rating_in_percent', ascending=False)\n\n# Get the list of all channel names\nchannel_names = sorted_df['Name'].tolist()\n\n# Print the list of channel names\nprint(channel_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: What is the owner of the channel that has the highest rating ratio?", "response": "# Import the required library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the channel with the highest rating\nhighest_rated_channel = df[df['Rating_in_percent'] == df['Rating_in_percent'].max()]\n\n# Save the answer in a variable\nanswer = highest_rated_channel['Owner'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: Show me the owner of the channel with the highest rating.", "response": "# Import the required library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the channel with the highest rating\nhighest_rated_channel = df[df['Rating_in_percent'] == df['Rating_in_percent'].max()]\n\n# Save the answer in a variable\nanswer = highest_rated_channel['Owner'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: how many programs are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of programs\nprogram_count = len(df)\n\nprint(program_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: Count the number of programs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of programs\nprogram_count = len(df)\n\nprint(program_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: list all the names of programs, ordering by launch time.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert Launch column to datetime format\ndf['Launch'] = pd.to_datetime(df['Launch'], format='%Y')\n\n# Sort the dataframe by Launch time\ndf = df.sort_values('Launch')\n\n# Get the list of names\nprogram_names = df['Name'].tolist()\n\n# Save the answer in a variable\nanswer = program_names\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: What is the list of program names, sorted by the order of launch date?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert Launch column to datetime format\ndf['Launch'] = pd.to_datetime(df['Launch'], format='%Y')\n\n# Sort the dataframe by Launch time\ndf = df.sort_values('Launch')\n\n# Get the list of names\nprogram_names = df['Name'].tolist()\n\n# Save the answer in a variable\nanswer = program_names\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: List the name, origin and owner of each program.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only the columns 'Name', 'Origin', and 'Owner'\ndf_filtered = df[['Name', 'Origin', 'Owner']]\n\n# Print the filtered DataFrame\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: What are the name, origin and owner of each program?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only the columns 'Name', 'Origin', and 'Owner'\ndf_filtered = df[['Name', 'Origin', 'Owner']]\n\n# Print the filtered DataFrame\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: find the name of the program that was launched most recently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert 'Launch' column to datetime format\ndf['Launch'] = pd.to_datetime(df['Launch'], format='%Y')\n\n# Find the max 'Launch' date\nmax_launch_date = df['Launch'].max()\n\n# Find the name of the program launched at this date\nmost_recently_launched = df[df['Launch'] == max_launch_date]['Name'].values[0]\n\nprint(most_recently_launched)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: Which program was launched most recently? Return the program name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert 'Launch' column to datetime format\ndf['Launch'] = pd.to_datetime(df['Launch'], format='%Y')\n\n# Find the max 'Launch' date\nmax_launch_date = df['Launch'].max()\n\n# Find the name of the program launched at this date\nmost_recently_launched = df[df['Launch'] == max_launch_date]['Name'].values[0]\n\nprint(most_recently_launched)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: find the total percentage share of all channels owned by CCTV.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the Owner is 'CCTV'\ncctv_df = df[df['Owner'] == 'CCTV']\n\n# Calculate the total Share_in_percent for these channels\ntotal_share = cctv_df['Share_in_percent'].sum()\n\nprint(total_share)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: What is the total share (in percent) of all the channels owned by CCTV?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the Owner is 'CCTV'\ncctv_df = df[df['Owner'] == 'CCTV']\n\n# Calculate the total Share_in_percent for these channels\ntotal_share = cctv_df['Share_in_percent'].sum()\n\nprint(total_share)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Program_ID,Time_of_day\n1,1,Morning\n2,1,Night\n3,2,Morning\n4,1,Night\n5,4,Morning\n6,3,Morning\n7,3,Noon\n8,2,Night\n9,3,Noon\n10,4,Night\n\nQuestion: how many programs are broadcast in each time section of the day?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nprogram_count = df['Time_of_day'].value_counts()\n\nprint(program_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Program_ID,Time_of_day\n1,1,Morning\n2,1,Night\n3,2,Morning\n4,1,Night\n5,4,Morning\n6,3,Morning\n7,3,Noon\n8,2,Night\n9,3,Noon\n10,4,Night\n\nQuestion: Count the number of programs broadcast for each time section of a day.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nprogram_count = df['Time_of_day'].value_counts()\n\nprint(program_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: List all program origins in the alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List all program origins in the alphabetical order\norigins = df['Origin'].sort_values().unique().tolist()\n\nprint(origins)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: What is the list of program origins ordered alphabetically?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List all program origins in the alphabetical order\norigins = df['Origin'].sort_values().unique().tolist()\n\nprint(origins)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: what is the number of different channel owners?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of distinct channel owners\nnum_distinct_owners = df['Owner'].nunique()\n\nprint(num_distinct_owners)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: Count the number of distinct channel owners.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of distinct channel owners\nnum_distinct_owners = df['Owner'].nunique()\n\nprint(num_distinct_owners)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: find the names of programs whose origin is not in Beijing.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the 'loc' function to select rows where the 'Origin' is not 'Beijing'\nresult = df.loc[df['Origin'] != 'Beijing', 'Name']\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProgram_ID,Name,Origin,Launch,Owner\n1,Aniworld,Hunan,2005.0,Hunan Broadcasting System (HBS)\n2,Kaku,Beijing,2004.0,Beijing Television (BTV)\n3,Toonmax,Shanghai,2005.0,Shanghai Media Group (SMG)\n4,Jiajia,Guangdong,2007.0,Southern Media Corporation (SMC)\n5,Youman,Jiangsu,2010.0,Jiangsu Broadcasting Corporation (JSBC)\n\nQuestion: Which programs' origins are not \"Beijing\"? Give me the program names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the 'loc' function to select rows where the 'Origin' is not 'Beijing'\nresult = df.loc[df['Origin'] != 'Beijing', 'Name']\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: What are the names of the channels owned by CCTV or HBS?", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get channels owned by CCTV or HBS\nfiltered_df = df[df['Owner'].isin(['CCTV', 'HBS'])]\n\n# Get the names of the channels\nchannel_names = filtered_df['Name'].tolist()\n\n# Print the names of the channels\nprint(channel_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nChannel_ID,Name,Owner,Share_in_percent,Rating_in_percent\n1,CCTV-1,CCTV,4.9,0.54\n2,Hunan Satellite TV,HBS,4.81,0.53\n3,CCTV-8,CCTV,3.76,0.41\n4,CCTV-13,CCTV,2.91,0.32\n5,CCTV-3,CCTV,2.86,0.31\n6,CCTV-6,CCTV,2.73,0.3\n7,CCTV-14,CCTV,2.6,0.29\n8,CCTV-4,CCTV,2.33,0.26\n9,Anhui Satellite TV,Anhui Television,1.78,0.2\n10,Shandong Satellite TV,Shandong Television,1.74,0.19\n\nQuestion: List the names of all the channels owned by either CCTV or HBS", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get channels owned by CCTV or HBS\nfiltered_df = df[df['Owner'].isin(['CCTV', 'HBS'])]\n\n# Get the names of the channels\nchannel_names = filtered_df['Name'].tolist()\n\n# Print the names of the channels\nprint(channel_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,author_id,subject_id,course_name,course_description\n1,8,1,database,database\n2,6,1,advanced database,advanced database\n3,15,1,operating system,operating system\n4,14,2,Art history,Art history\n5,11,1,data structure,data structure\n6,12,3,English,English\n7,8,3,French,French\n8,4,3,Japanese,Japanese\n9,13,1,AI,AI\n10,5,3,Writing in French,Writing in French\n\nQuestion: How many courses are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_courses = len(df)\n\nprint(total_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,author_id,subject_id,course_name,course_description\n1,8,1,database,database\n2,6,1,advanced database,advanced database\n3,15,1,operating system,operating system\n4,14,2,Art history,Art history\n5,11,1,data structure,data structure\n6,12,3,English,English\n7,8,3,French,French\n8,4,3,Japanese,Japanese\n9,13,1,AI,AI\n10,5,3,Writing in French,Writing in French\n\nQuestion: Find the total number of courses offered.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_courses = len(df)\n\nprint(total_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,author_id,subject_id,course_name,course_description\n1,8,1,database,database\n2,6,1,advanced database,advanced database\n3,15,1,operating system,operating system\n4,14,2,Art history,Art history\n5,11,1,data structure,data structure\n6,12,3,English,English\n7,8,3,French,French\n8,4,3,Japanese,Japanese\n9,13,1,AI,AI\n10,5,3,Writing in French,Writing in French\n\nQuestion: What are the descriptions of the courses with name \"database\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where course_name is \"database\"\ndatabase_courses = df[df['course_name'] == 'database']\n\n# Get the course descriptions for those courses\ncourse_descriptions = database_courses['course_description'].values\n\n# Print the course descriptions\nfor description in course_descriptions:\n    print(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncourse_id,author_id,subject_id,course_name,course_description\n1,8,1,database,database\n2,6,1,advanced database,advanced database\n3,15,1,operating system,operating system\n4,14,2,Art history,Art history\n5,11,1,data structure,data structure\n6,12,3,English,English\n7,8,3,French,French\n8,4,3,Japanese,Japanese\n9,13,1,AI,AI\n10,5,3,Writing in French,Writing in French\n\nQuestion: Return the description for the courses named \"database\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where course_name is \"database\"\ndatabase_courses = df[df['course_name'] == 'database']\n\n# Get the course descriptions for those courses\ncourse_descriptions = database_courses['course_description'].values\n\n# Print the course descriptions\nfor description in course_descriptions:\n    print(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: What are the addresses of the course authors or tutors with personal name \"Cathrine\"", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows with personal_name 'Cathrine'\ncathrine_df = df[df['personal_name'] == 'Cathrine']\n\n# Get the addresses of the course authors or tutors with personal name 'Cathrine'\naddresses = cathrine_df['address_line_1'].values\n\n# Print the addresses\nfor address in addresses:\n    print(address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows with personal_name 'Cathrine'\ncathrine_df = df[df['personal_name'] == 'Cathrine']\n\n# Get the addresses of the course authors or tutors with personal name 'Cathrine'\naddresses = cathrine_df['address_line_1'].values\n\n# Print the addresses\nfor address in addresses:\n    print(address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: List the addresses of all the course authors or tutors.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Select the 'address_line_1' column\naddresses = df['address_line_1']\n\n# Print the addresses\nprint(addresses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: What is the address of each course author or tutor?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Select the 'address_line_1' column\naddresses = df['address_line_1']\n\n# Print the addresses\nprint(addresses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: List all the login names and family names of course author and tutors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the necessary columns\ndf_selected = df[['login_name', 'family_name']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: What are the login names and family names of course author and tutors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the necessary columns\ndf_selected = df[['login_name', 'family_name']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,student_id,course_id,date_of_enrolment,date_of_completion\n1,11,2,2017-10-09 07:09:02,2018-02-26 07:48:52\n2,15,4,2017-11-13 12:49:33,2018-03-04 01:24:56\n3,10,8,2017-10-17 13:50:40,2018-03-22 02:53:01\n4,13,7,2017-09-06 06:27:15,2018-03-07 09:45:48\n5,15,10,2017-08-20 01:07:18,2018-03-06 00:27:09\n6,14,1,2017-09-24 15:17:26,2018-03-01 00:08:30\n7,12,9,2017-09-21 07:05:01,2018-03-04 22:34:37\n8,15,11,2017-12-07 02:21:13,2018-02-27 20:06:06\n9,8,9,2017-08-02 17:21:44,2018-03-07 00:39:37\n10,6,1,2017-10-10 10:05:03,2018-03-19 07:34:05\n\nQuestion: List all the dates of enrollment and completion of students.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the 'date_of_enrolment' and 'date_of_completion' columns\ndates = df[['date_of_enrolment', 'date_of_completion']]\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,student_id,course_id,date_of_enrolment,date_of_completion\n1,11,2,2017-10-09 07:09:02,2018-02-26 07:48:52\n2,15,4,2017-11-13 12:49:33,2018-03-04 01:24:56\n3,10,8,2017-10-17 13:50:40,2018-03-22 02:53:01\n4,13,7,2017-09-06 06:27:15,2018-03-07 09:45:48\n5,15,10,2017-08-20 01:07:18,2018-03-06 00:27:09\n6,14,1,2017-09-24 15:17:26,2018-03-01 00:08:30\n7,12,9,2017-09-21 07:05:01,2018-03-04 22:34:37\n8,15,11,2017-12-07 02:21:13,2018-02-27 20:06:06\n9,8,9,2017-08-02 17:21:44,2018-03-07 00:39:37\n10,6,1,2017-10-10 10:05:03,2018-03-19 07:34:05\n\nQuestion: What are all the dates of enrollment and completion in record?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the 'date_of_enrolment' and 'date_of_completion' columns\ndates = df[['date_of_enrolment', 'date_of_completion']]\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,student_id,course_id,date_of_enrolment,date_of_completion\n1,11,2,2017-10-09 07:09:02,2018-02-26 07:48:52\n2,15,4,2017-11-13 12:49:33,2018-03-04 01:24:56\n3,10,8,2017-10-17 13:50:40,2018-03-22 02:53:01\n4,13,7,2017-09-06 06:27:15,2018-03-07 09:45:48\n5,15,10,2017-08-20 01:07:18,2018-03-06 00:27:09\n6,14,1,2017-09-24 15:17:26,2018-03-01 00:08:30\n7,12,9,2017-09-21 07:05:01,2018-03-04 22:34:37\n8,15,11,2017-12-07 02:21:13,2018-02-27 20:06:06\n9,8,9,2017-08-02 17:21:44,2018-03-07 00:39:37\n10,6,1,2017-10-10 10:05:03,2018-03-19 07:34:05\n\nQuestion: How many distinct students are enrolled in courses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of distinct students\nstudent_count = df['student_id'].nunique()\n\nprint(student_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,student_id,course_id,date_of_enrolment,date_of_completion\n1,11,2,2017-10-09 07:09:02,2018-02-26 07:48:52\n2,15,4,2017-11-13 12:49:33,2018-03-04 01:24:56\n3,10,8,2017-10-17 13:50:40,2018-03-22 02:53:01\n4,13,7,2017-09-06 06:27:15,2018-03-07 09:45:48\n5,15,10,2017-08-20 01:07:18,2018-03-06 00:27:09\n6,14,1,2017-09-24 15:17:26,2018-03-01 00:08:30\n7,12,9,2017-09-21 07:05:01,2018-03-04 22:34:37\n8,15,11,2017-12-07 02:21:13,2018-02-27 20:06:06\n9,8,9,2017-08-02 17:21:44,2018-03-07 00:39:37\n10,6,1,2017-10-10 10:05:03,2018-03-19 07:34:05\n\nQuestion: Find the number of distinct students enrolled in courses.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of distinct students\nstudent_count = df['student_id'].nunique()\n\nprint(student_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: Find the dates of the tests taken with result \"Pass\".", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows with 'Pass' results\npass_results = df[df['test_result'] == 'Pass']\n\n# Extract the dates of the tests\ndates_of_pass_results = pass_results['date_test_taken']\n\n# Save the answer in a variable\nanswer = dates_of_pass_results\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: Which tests have \"Pass\" results? Return the dates when the tests were taken.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows with 'Pass' results\npass_results = df[df['test_result'] == 'Pass']\n\n# Extract the dates of the tests\ndates_of_pass_results = pass_results['date_test_taken']\n\n# Save the answer in a variable\nanswer = dates_of_pass_results\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: How many tests have result \"Fail\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of tests with \"Fail\" result\nnum_fail_tests = df[df['test_result'] == 'Fail'].shape[0]\n\nprint(num_fail_tests)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: Count the number of tests with \"Fail\" result.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of tests with \"Fail\" result\nnum_fail_tests = df[df['test_result'] == 'Fail'].shape[0]\n\nprint(num_fail_tests)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: What are the login names of the students with family name \"Ward\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the students with family name \"Ward\"\nfiltered_df = df[df['family_name'] == 'Ward']\n\n# Get the login names of the filtered students\nlogin_names = filtered_df['login_name'].tolist()\n\n# Print the login names\nprint(login_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: Return the login names of the students whose family name is \"Ward\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the students with family name \"Ward\"\nfiltered_df = df[df['family_name'] == 'Ward']\n\n# Get the login names of the filtered students\nlogin_names = filtered_df['login_name'].tolist()\n\n# Print the login names\nprint(login_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: How many students have personal names that contain the word \"son\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['personal_name'] = df['personal_name'].str.lower()\nanswer = df[df['personal_name'].str.contains('son')].shape[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: Find the number of students who have the word \"son\" in their personal names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['personal_name'] = df['personal_name'].str.lower()\nanswer = df[df['personal_name'].str.contains('son')].shape[0]\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsubject_id,subject_name\n1,Computer Science\n2,Arts\n3,Language\n\nQuestion: List all the subject names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nsubject_names = df['subject_name'].tolist()\nprint(subject_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nsubject_id,subject_name\n1,Computer Science\n2,Arts\n3,Language\n\nQuestion: What are the names of all the subjects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nsubject_names = df['subject_name'].tolist()\nprint(subject_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: List all the information about course authors and tutors in alphabetical order of the personal name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by the 'personal_name' column\ndf = df.sort_values('personal_name')\n\n# Print the sorted dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nauthor_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1\n1,331,jmckenzie,c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b,Cathrine,Ruthie,Grant,0,756 Monahan Mews\nSpinkashire, NJ 64230-5098\n2,975,heidenreich.ara,24b0ee84063c3b017ab1839e01b7280f47f7c7c2,Retha,Corene,Armstrong,0,98623 Huels Manor\nJasttown, DE 31611\n3,349,clementina29,cdaf6c3483f19e2253659a40a3aab786a3390f78,Darius,Ethyl,Reichel,0,99296 Keeling Courts\nNorth Audreanne, IL 28272\n4,782,wlehner,d34378200c9b5f72d3039fa640e7920aaec0fdf2,Julio,Aniyah,Nader,1,644 Montana Hill Suite 489\nDaijamouth, CA 19587-4254\n5,388,nyundt,2c196efe8aee23a1b9a7e752fe63029c5879af6f,Yessenia,Zena,Barrows,1,5284 Champlin Roads\nCassinport, WY 54636\n6,817,al75,e96c0bcbbbb14747747a56ff4c17354f343a5b4f,Adolf,Keira,Rohan,1,92220 Hellen Skyway Apt. 635\nRennerview, MS 81036\n7,869,marty.bergnaum,3e2f7bf1e6acf0d616a8703ee0050fba13bc007f,Logan,Ethelyn,Treutel,1,67541 Osborne Creek Suite 532\nBernhardview, WV 30288-1050\n8,557,medhurst.alvah,02d64f11de97436343a0beba41bfcf69af61be1e,Kelsie,Kennith,Rowe,0,0256 Walter Meadows Suite 523\nNorbertoborough, AZ 49193\n9,505,antonetta19,4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3,Georgiana,Mathew,Zboncak,0,445 Quigley Fall\nPort Antonette, IN 81992-1255\n10,159,adam.rippin,b517a107b5f08fafe9628e88e7263a6f3a4a55c0,Deja,Joyce,Champlin,1,22575 Effertz Neck Apt. 046\nPort Scotty, NY 67108-9197\n\nQuestion: Sort the information about course authors and tutors in alphabetical order of the personal name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by the 'personal_name' column\ndf = df.sort_values('personal_name')\n\n# Print the sorted dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: List the personal names and family names of all the students in alphabetical order of family name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('family_name')\nresult = df[['personal_name', 'family_name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstudent_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name\n1,2015-07-22 13:32:35,2017-10-17 22:52:26,annamae.hoppe,db8765bb6f,Wilson,Aubrey,Ward\n2,2015-07-02 00:21:42,2017-06-24 22:16:27,wmiller,35faf8182a,Karson,Luella,Jaskolski\n3,2015-10-11 03:23:27,2018-03-10 23:22:23,ahartmann,8e064ec4e6,Mariela,Brandt,Legros\n4,2016-01-05 17:21:32,2018-02-24 23:15:41,ylockman,a18d639a12,Krystel,Casimir,Langosh\n5,2015-04-27 10:25:31,2017-09-05 23:04:07,mohamed50,aedd08a3b9,Autumn,Lawson,Schumm\n6,2015-05-12 03:59:32,2017-09-09 13:19:18,bmarquardt,3e72450865,Bernie,Asa,Zieme\n7,2015-09-05 10:49:02,2017-07-17 23:13:31,darrin56,35cd4a47a3,Jewel,Marianne,Hodkiewicz\n8,2015-12-06 07:43:56,2017-08-24 19:42:33,eichmann.lera,623af75b4a,Marshall,Linnea,Johns\n9,2015-08-13 03:31:42,2017-11-25 03:14:32,sdaugherty,7c90dbbfde,Prince,Kailey,Ziemann\n10,2015-04-12 11:07:48,2017-12-11 14:29:41,myron.bergnaum,5bc0d35e75,Alicia,Vicente,Carroll\n\nQuestion: What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('family_name')\nresult = df[['personal_name', 'family_name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: List each test result and its count in descending order of count.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students who got each distinct test result\nresult_counts = df['test_result'].value_counts()\n\n# Print the result\nprint(result_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nregistration_id,date_test_taken,test_result\n12,2018-03-25 03:27:16,Fail\n10,2018-03-25 21:50:22,Pass\n7,2018-03-21 00:32:25,Pass\n7,2018-03-25 00:44:50,Pass\n4,2018-03-25 15:06:12,Pass\n16,2018-03-25 12:00:08,Fail\n16,2018-03-25 21:22:00,Fail\n19,2018-03-24 13:22:17,Pass\n19,2018-03-25 16:59:22,Fail\n4,2018-03-25 21:41:51,Fail\n\nQuestion: For each distinct test result, find the number of students who got the result.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students who got each distinct test result\nresult_counts = df['test_result'].value_counts()\n\n# Print the result\nprint(result_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: List the method, date and amount of all the payments, in ascending order of date.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Date_Payment_Made')\n\npayments = df[['Payment_Method_Code', 'Date_Payment_Made', 'Amount_Payment']]\n\nprint(payments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: What are the method, date and amount of each payment? Sort the list in ascending order of date.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Date_Payment_Made')\n\npayments = df[['Payment_Method_Code', 'Date_Payment_Made', 'Amount_Payment']]\n\nprint(payments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# find the maximum amount claimed\nmax_amount = df['Amount_Claimed'].max()\n\n# find the corresponding settlement amount\nmax_amount_settlement = df.loc[df['Amount_Claimed'] == max_amount, 'Amount_Settled'].values[0]\n\n# save the answer in a variable\nanswer = (max_amount, max_amount_settlement)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# find the maximum amount claimed\nmax_amount = df['Amount_Claimed'].max()\n\n# find the corresponding settlement amount\nmax_amount_settlement = df.loc[df['Amount_Claimed'] == max_amount, 'Amount_Settled'].values[0]\n\n# save the answer in a variable\nanswer = (max_amount, max_amount_settlement)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the claim with the least amount settled\nleast_amount_settled_claim = df[df['Amount_Settled'] == df['Amount_Settled'].min()]\n\n# Saving the answer in a variable\nanswer = least_amount_settled_claim[['Amount_Settled', 'Amount_Claimed']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the claim with the least amount settled\nleast_amount_settled_claim = df[df['Amount_Settled'] == df['Amount_Settled'].min()]\n\n# Saving the answer in a variable\nanswer = least_amount_settled_claim[['Amount_Settled', 'Amount_Claimed']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average claimed amount\naverage_amount = df['Amount_Claimed'].mean()\n\n# filter the dataframe to get the claims whose claimed amount is greater than the average\nfiltered_df = df[df['Amount_Claimed'] > average_amount]\n\n# select the claim date and settlement date columns from the filtered dataframe\nresult = filtered_df[['Date_Claim_Made', 'Date_Claim_Settled']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# calculate the average claimed amount\naverage_amount = df['Amount_Claimed'].mean()\n\n# filter the dataframe to get the claims whose claimed amount is greater than the average\nfiltered_df = df[df['Amount_Claimed'] > average_amount]\n\n# select the claim date and settlement date columns from the filtered dataframe\nresult = filtered_df[['Date_Claim_Made', 'Date_Claim_Settled']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Of all the claims, what was the earliest date when any claim was made?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfirst_claim_date = df['Date_Claim_Made'].min()\n\nprint(first_claim_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Tell me the the date when the first claim was made.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfirst_claim_date = df['Date_Claim_Made'].min()\n\nprint(first_claim_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: What is the total amount of settlement made for all the settlements?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_settlement_amount = df['Amount_Settled'].sum()\n\nprint(total_settlement_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: Compute the total amount of settlement across all the settlements.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_settlement_amount = df['Amount_Settled'].sum()\n\nprint(total_settlement_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: What are the claim dates and settlement dates of all the settlements?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Date_Claim_Made' and 'Date_Claim_Settled' columns\ndates = df[['Date_Claim_Made', 'Date_Claim_Settled']]\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: Tell me the the claim date and settlement date for each settlement case.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Date_Claim_Made' and 'Date_Claim_Settled' columns\ndates = df[['Date_Claim_Made', 'Date_Claim_Settled']]\n\n# Print the dates\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: What is the most popular payment method?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Determine the most popular payment method\npopular_method = df['Payment_Method_Code'].value_counts().idxmax()\n\nprint(popular_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: Which payment method is used the most often?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Determine the most popular payment method\npopular_method = df['Payment_Method_Code'].value_counts().idxmax()\n\nprint(popular_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: With which kind of payment method were the least number of payments processed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# count occurrences of each Payment_Method_Code\ncounts = df['Payment_Method_Code'].value_counts()\n\n# get the Payment_Method_Code with the least number of payments\nleast_payment_method = counts.idxmin()\n\nprint(least_payment_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: What is the payment method that were used the least often?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# count occurrences of each Payment_Method_Code\ncounts = df['Payment_Method_Code'].value_counts()\n\n# get the Payment_Method_Code with the least number of payments\nleast_payment_method = counts.idxmin()\n\nprint(least_payment_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: What is the total amount of payment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_payment = df['Amount_Payment'].sum()\n\nprint(total_payment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: Compute the total amount of payment processed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_payment = df['Amount_Payment'].sum()\n\nprint(total_payment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n1,America Jaskolski\n2,Ellsworth Paucek\n3,Mrs. Hanna Willms\n4,Dr. Diana Rath\n5,Selena Gerhold\n6,Lauriane Ferry PhD\n7,Sydnie Friesen\n8,Dayana Robel\n9,Mr. Edwardo Blanda I\n10,Augustine Kerluke\n\nQuestion: What are all the distinct details of the customers?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the \"Customer_Details\" column to get the distinct customer details\ndistinct_customer_details = df['Customer_Details'].unique()\n\n# Print the distinct customer details\nprint(distinct_customer_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Customer_Details\n1,America Jaskolski\n2,Ellsworth Paucek\n3,Mrs. Hanna Willms\n4,Dr. Diana Rath\n5,Selena Gerhold\n6,Lauriane Ferry PhD\n7,Sydnie Friesen\n8,Dayana Robel\n9,Mr. Edwardo Blanda I\n10,Augustine Kerluke\n\nQuestion: Return the distinct customer details.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Use the \"Customer_Details\" column to get the distinct customer details\ndistinct_customer_details = df['Customer_Details'].unique()\n\n# Print the distinct customer details\nprint(distinct_customer_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n119,1,Car,2018-01-21,2017-12-15\n141,2,Life,2017-08-21,2017-09-29\n143,3,Car,2017-06-16,2017-12-09\n218,4,Car,2017-09-18,2017-11-23\n264,4,Car,2016-12-25,2018-01-25\n270,5,Life,2016-07-17,2018-01-05\n352,6,Property,2016-05-23,2017-12-09\n396,7,Travel,2017-07-30,2017-10-09\n473,3,Travel,2017-04-24,2017-12-14\n552,12,Travel,2017-12-13,2017-11-05\n\nQuestion: Which kind of policy type was chosen by the most customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the policy type the most customers choose\nmost_common_policy = df['Policy_Type_Code'].mode()[0]\n\nprint(most_common_policy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPolicy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date\n119,1,Car,2018-01-21,2017-12-15\n141,2,Life,2017-08-21,2017-09-29\n143,3,Car,2017-06-16,2017-12-09\n218,4,Car,2017-09-18,2017-11-23\n264,4,Car,2016-12-25,2018-01-25\n270,5,Life,2016-07-17,2018-01-05\n352,6,Property,2016-05-23,2017-12-09\n396,7,Travel,2017-07-30,2017-10-09\n473,3,Travel,2017-04-24,2017-12-14\n552,12,Travel,2017-12-13,2017-11-05\n\nQuestion: Find the policy type the most customers choose.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the policy type the most customers choose\nmost_common_policy = df['Policy_Type_Code'].mode()[0]\n\nprint(most_common_policy)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: How many settlements are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_settlements = df.shape[0]\nprint(total_settlements)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSettlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID\n357,486,2018-08-07,2018-01-16,38543,1181,515\n412,621,2017-08-27,2018-02-04,57669,1427,617\n476,801,2016-09-05,2018-03-02,30954,1805,943\n512,801,2016-05-18,2018-02-11,82506,1737,133\n516,563,2017-05-19,2017-10-06,37302,1767,638\n527,801,2018-11-10,2018-02-15,25078,930,727\n558,569,2018-05-12,2017-11-30,16603,1516,536\n564,761,2016-07-04,2018-02-20,62680,1676,839\n597,486,2017-04-18,2017-12-24,4456,1698,359\n616,957,2017-07-31,2018-01-27,24055,1262,590\n\nQuestion: Count the total number of settlements made.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_settlements = df.shape[0]\nprint(total_settlements)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: Which Payments were processed with Visa? List the payment Id, the date and the amount.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Payment_Method_Code is 'Visa'\nvisa_df = df[df['Payment_Method_Code'] == 'Visa']\n\n# Select the columns you want: Payment_ID, Date_Payment_Made, Amount_Payment\nvisa_df = visa_df[['Payment_ID', 'Date_Payment_Made', 'Amount_Payment']]\n\n# Save the answer in a variable\nvisa_payments = visa_df\n\n# Print the variable\nprint(visa_payments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPayment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment\n384,516,MasterCard,2018-02-16,241730\n435,476,MasterCard,2017-05-28,448613\n484,516,MasterCard,2017-06-24,456098\n498,682,Discover Card,2017-08-06,38324\n542,597,MasterCard,2018-01-10,407235\n559,512,MasterCard,2018-02-18,235893\n678,516,Visa,2017-12-16,459407\n739,597,Discover Card,2017-10-07,71246\n754,516,Visa,2018-02-24,7343\n774,527,MasterCard,2018-01-28,319142\n\nQuestion: Give me the payment Id, the date and the amount for all the payments processed with Visa.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Payment_Method_Code is 'Visa'\nvisa_df = df[df['Payment_Method_Code'] == 'Visa']\n\n# Select the columns you want: Payment_ID, Date_Payment_Made, Amount_Payment\nvisa_df = visa_df[['Payment_ID', 'Date_Payment_Made', 'Amount_Payment']]\n\n# Save the answer in a variable\nvisa_payments = visa_df\n\n# Print the variable\nprint(visa_payments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: Find the total claimed amount of all the claims.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_claimed_amount = df['Amount_Claimed'].sum()\n\nprint(total_claimed_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClaim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled\n143,744,2017-03-11,2017-11-03,43884,1085\n423,552,2016-08-12,2018-01-27,79134,1724\n442,473,2017-02-24,2018-01-21,70088,1189\n486,141,2018-06-14,2017-12-20,69696,1638\n546,744,2017-05-03,2017-12-22,46479,1091\n563,141,2016-08-02,2017-09-04,41078,1570\n569,473,2018-07-15,2017-11-19,49743,930\n571,858,2017-08-03,2018-02-18,89632,1528\n621,744,2016-12-18,2018-01-11,43708,1652\n761,473,2016-08-26,2017-09-04,83703,1372\n\nQuestion: What is total amount claimed summed across all the claims?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_claimed_amount = df['Amount_Claimed'].sum()\n\nprint(total_claimed_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartmentID,Name,Head\n1,General Medicine,4\n2,Surgery,7\n3,Psychiatry,9\n\nQuestion: Which department has the largest number of employees?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Compute the number of employees in each department\ndf['EmployeeCount'] = df['DepartmentID'] - df['Head']\n\n# Find the department with the most employees\nmax_employee_dept = df.loc[df['EmployeeCount'].idxmax(), 'Name']\n\n# Print the name of the department with the most employees\nprint(max_employee_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartmentID,Name,Head\n1,General Medicine,4\n2,Surgery,7\n3,Psychiatry,9\n\nQuestion: Find the department with the most employees.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Compute the number of employees in each department\ndf['EmployeeCount'] = df['DepartmentID'] - df['Head']\n\n# Find the department with the most employees\nmax_employee_dept = df.loc[df['EmployeeCount'].idxmax(), 'Name']\n\n# Print the name of the department with the most employees\nprint(max_employee_dept)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartmentID,Name,Head\n1,General Medicine,4\n2,Surgery,7\n3,Psychiatry,9\n\nQuestion: What is the employee id of the head whose department has the least number of employees?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum number of employees in a department\nmin_employees = df['DepartmentID'].value_counts().min()\n\n# Find the department id with the minimum number of employees\ndept_id = df['DepartmentID'].value_counts().idxmin()\n\n# Find the head of the department with the minimum number of employees\nhead_id = df.loc[df['DepartmentID'] == dept_id, 'Head'].iloc[0]\n\n# Print the result\nprint(head_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDepartmentID,Name,Head\n1,General Medicine,4\n2,Surgery,7\n3,Psychiatry,9\n\nQuestion: Tell me the employee id of the head of the department with the least employees.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum number of employees in a department\nmin_employees = df['DepartmentID'].value_counts().min()\n\n# Find the department id with the minimum number of employees\ndept_id = df['DepartmentID'].value_counts().idxmin()\n\n# Find the head of the department with the minimum number of employees\nhead_id = df.loc[df['DepartmentID'] == dept_id, 'Head'].iloc[0]\n\n# Print the result\nprint(head_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAppointmentID,Patient,PrepNurse,Physician,Start,End,ExaminationRoom\n13216584,100000001,101,1,2008-04-24 10:00,2008-04-24 11:00,A\n26548913,100000002,101,2,2008-04-24 10:00,2008-04-24 11:00,B\n36549879,100000001,102,1,2008-04-25 10:00,2008-04-25 11:00,A\n46846589,100000004,103,4,2008-04-25 10:00,2008-04-25 11:00,B\n59871321,100000004,,4,2008-04-26 10:00,2008-04-26 11:00,C\n69879231,100000003,103,2,2008-04-26 11:00,2008-04-26 12:00,C\n76983231,100000001,,3,2008-04-26 12:00,2008-04-26 13:00,C\n86213939,100000004,102,9,2008-04-27 10:00,2008-04-21 11:00,A\n93216548,100000002,101,2,2008-04-27 10:00,2008-04-27 11:00,B\n\nQuestion: Find the id of the appointment with the most recent start date?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the Start column to datetime format\ndf['Start'] = pd.to_datetime(df['Start'])\n\n# Sort the dataframe by Start in descending order\ndf = df.sort_values(by='Start', ascending=False)\n\n# Get the id of the first row, which will be the appointment with the most recent start date\nmost_recent_appointment_id = df['AppointmentID'].iloc[0]\n\n# Print the id\nprint(most_recent_appointment_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAppointmentID,Patient,PrepNurse,Physician,Start,End,ExaminationRoom\n13216584,100000001,101,1,2008-04-24 10:00,2008-04-24 11:00,A\n26548913,100000002,101,2,2008-04-24 10:00,2008-04-24 11:00,B\n36549879,100000001,102,1,2008-04-25 10:00,2008-04-25 11:00,A\n46846589,100000004,103,4,2008-04-25 10:00,2008-04-25 11:00,B\n59871321,100000004,,4,2008-04-26 10:00,2008-04-26 11:00,C\n69879231,100000003,103,2,2008-04-26 11:00,2008-04-26 12:00,C\n76983231,100000001,,3,2008-04-26 12:00,2008-04-26 13:00,C\n86213939,100000004,102,9,2008-04-27 10:00,2008-04-21 11:00,A\n93216548,100000002,101,2,2008-04-27 10:00,2008-04-27 11:00,B\n\nQuestion: What is the id of the appointment that started most recently?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the Start column to datetime format\ndf['Start'] = pd.to_datetime(df['Start'])\n\n# Sort the dataframe by Start in descending order\ndf = df.sort_values(by='Start', ascending=False)\n\n# Get the id of the first row, which will be the appointment with the most recent start date\nmost_recent_appointment_id = df['AppointmentID'].iloc[0]\n\n# Print the id\nprint(most_recent_appointment_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomNumber,RoomType,BlockFloor,BlockCode,Unavailable\n101,Single,1,1,0\n102,Single,1,1,0\n103,Single,1,1,0\n111,Single,1,2,0\n112,Single,1,2,1\n113,Single,1,2,0\n121,Single,1,3,0\n122,Single,1,3,0\n123,Single,1,3,0\n201,Single,2,1,1\n\nQuestion: How many different types of rooms are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_rooms = len(df['RoomType'].unique())\n\nprint(unique_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoomNumber,RoomType,BlockFloor,BlockCode,Unavailable\n101,Single,1,1,0\n102,Single,1,1,0\n103,Single,1,1,0\n111,Single,1,2,0\n112,Single,1,2,1\n113,Single,1,2,0\n121,Single,1,3,0\n122,Single,1,3,0\n123,Single,1,3,0\n201,Single,2,1,1\n\nQuestion: Find the number of distinct room types available.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_rooms = len(df['RoomType'].unique())\n\nprint(unique_rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeID,Name,Position,SSN\n1,John Dorian,Staff Internist,111111111\n2,Elliot Reid,Attending Physician,222222222\n3,Christopher Turk,Surgical Attending Physician,333333333\n4,Percival Cox,Senior Attending Physician,444444444\n5,Bob Kelso,Head Chief of Medicine,555555555\n6,Todd Quinlan,Surgical Attending Physician,666666666\n7,John Wen,Surgical Attending Physician,777777777\n8,Keith Dudemeister,MD Resident,888888888\n9,Molly Clock,Attending Psychiatrist,999999999\n\nQuestion: Find the name of physicians whose position title contains the word 'senior'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where 'Position' contains 'senior'\nsenior_physicians = df[df['Position'].str.contains('Senior', case=False)]\n\n# Select the 'Name' column from the filtered dataframe\nsenior_physicians_names = senior_physicians['Name']\n\n# Print the names of the senior physicians\nprint(senior_physicians_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeID,Name,Position,SSN\n1,John Dorian,Staff Internist,111111111\n2,Elliot Reid,Attending Physician,222222222\n3,Christopher Turk,Surgical Attending Physician,333333333\n4,Percival Cox,Senior Attending Physician,444444444\n5,Bob Kelso,Head Chief of Medicine,555555555\n6,Todd Quinlan,Surgical Attending Physician,666666666\n7,John Wen,Surgical Attending Physician,777777777\n8,Keith Dudemeister,MD Resident,888888888\n9,Molly Clock,Attending Psychiatrist,999999999\n\nQuestion: What are the names of the physicians who have 'senior' in their titles.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where 'Position' contains 'senior'\nsenior_physicians = df[df['Position'].str.contains('Senior', case=False)]\n\n# Select the 'Name' column from the filtered dataframe\nsenior_physicians_names = senior_physicians['Name']\n\n# Print the names of the senior physicians\nprint(senior_physicians_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeID,Name,Position,Registered,SSN\n101,Carla Espinosa,Head Nurse,1,111111110\n102,Laverne Roberts,Nurse,1,222222220\n103,Paul Flowers,Nurse,0,333333330\n\nQuestion: List the names of all distinct nurses ordered by alphabetical order?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data for only nurses\nnurses_df = df[df['Position'].str.contains('Nurse')]\n\n# Get the unique names\nunique_names = nurses_df['Name'].unique()\n\n# Sort the names alphabetically\nsorted_names = sorted(unique_names)\n\n# Print the sorted names\nprint(sorted_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployeeID,Name,Position,Registered,SSN\n101,Carla Espinosa,Head Nurse,1,111111110\n102,Laverne Roberts,Nurse,1,222222220\n103,Paul Flowers,Nurse,0,333333330\n\nQuestion: What is the alphabetically ordered list of all the distinct names of nurses?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data for only nurses\nnurses_df = df[df['Position'].str.contains('Nurse')]\n\n# Get the unique names\nunique_names = nurses_df['Name'].unique()\n\n# Sort the names alphabetically\nsorted_names = sorted(unique_names)\n\n# Print the sorted names\nprint(sorted_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Brand,Description\n1,Procrastin-X,X,N/A\n2,Thesisin,Foo Labs,N/A\n3,Awakin,Bar Laboratories,N/A\n4,Crescavitin,Baz Industries,N/A\n5,Melioraurin,Snafu Pharmaceuticals,N/A\n\nQuestion: List the names of all distinct medications, ordered in an alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out distinct medications\ndistinct_medications = df['Name'].drop_duplicates()\n\n# Order medications alphabetically\nordered_medications = distinct_medications.sort_values()\n\n# Save the answer in a variable\nanswer = ordered_medications.values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Brand,Description\n1,Procrastin-X,X,N/A\n2,Thesisin,Foo Labs,N/A\n3,Awakin,Bar Laboratories,N/A\n4,Crescavitin,Baz Industries,N/A\n5,Melioraurin,Snafu Pharmaceuticals,N/A\n\nQuestion: What is the alphabetically ordered list of all distinct medications?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out distinct medications\ndistinct_medications = df['Name'].drop_duplicates()\n\n# Order medications alphabetically\nordered_medications = distinct_medications.sort_values()\n\n# Save the answer in a variable\nanswer = ordered_medications.values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Cost\n1,Reverse Rhinopodoplasty,1500.0\n2,Obtuse Pyloric Recombobulation,3750.0\n3,Folded Demiophtalmectomy,4500.0\n4,Complete Walletectomy,10000.0\n5,Obfuscated Dermogastrotomy,4899.0\n6,Reversible Pancreomyoplasty,5600.0\n7,Follicular Demiectomy,25.0\n\nQuestion: List the name and cost of all procedures sorted by the cost from the highest to the lowest.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame in descending order of 'Cost'\ndf_sorted = df.sort_values(by='Cost', ascending=False)\n\n# Save the sorted names and costs into a variable\nsorted_names_and_costs = df_sorted[['Name', 'Cost']]\n\n# Print the sorted names and costs\nprint(sorted_names_and_costs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Cost\n1,Reverse Rhinopodoplasty,1500.0\n2,Obtuse Pyloric Recombobulation,3750.0\n3,Folded Demiophtalmectomy,4500.0\n4,Complete Walletectomy,10000.0\n5,Obfuscated Dermogastrotomy,4899.0\n6,Reversible Pancreomyoplasty,5600.0\n7,Follicular Demiectomy,25.0\n\nQuestion: Sort the list of names and costs of all procedures in the descending order of cost.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame in descending order of 'Cost'\ndf_sorted = df.sort_values(by='Cost', ascending=False)\n\n# Save the sorted names and costs into a variable\nsorted_names_and_costs = df_sorted[['Name', 'Cost']]\n\n# Print the sorted names and costs\nprint(sorted_names_and_costs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAppointmentID,Patient,PrepNurse,Physician,Start,End,ExaminationRoom\n13216584,100000001,101,1,2008-04-24 10:00,2008-04-24 11:00,A\n26548913,100000002,101,2,2008-04-24 10:00,2008-04-24 11:00,B\n36549879,100000001,102,1,2008-04-25 10:00,2008-04-25 11:00,A\n46846589,100000004,103,4,2008-04-25 10:00,2008-04-25 11:00,B\n59871321,100000004,,4,2008-04-26 10:00,2008-04-26 11:00,C\n69879231,100000003,103,2,2008-04-26 11:00,2008-04-26 12:00,C\n76983231,100000001,,3,2008-04-26 12:00,2008-04-26 13:00,C\n86213939,100000004,102,9,2008-04-27 10:00,2008-04-21 11:00,A\n93216548,100000002,101,2,2008-04-27 10:00,2008-04-27 11:00,B\n\nQuestion: How many appointments are there?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the total number of appointments\ntotal_appointments = len(df)\n\n# Print the total appointments\nprint(total_appointments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAppointmentID,Patient,PrepNurse,Physician,Start,End,ExaminationRoom\n13216584,100000001,101,1,2008-04-24 10:00,2008-04-24 11:00,A\n26548913,100000002,101,2,2008-04-24 10:00,2008-04-24 11:00,B\n36549879,100000001,102,1,2008-04-25 10:00,2008-04-25 11:00,A\n46846589,100000004,103,4,2008-04-25 10:00,2008-04-25 11:00,B\n59871321,100000004,,4,2008-04-26 10:00,2008-04-26 11:00,C\n69879231,100000003,103,2,2008-04-26 11:00,2008-04-26 12:00,C\n76983231,100000001,,3,2008-04-26 12:00,2008-04-26 13:00,C\n86213939,100000004,102,9,2008-04-27 10:00,2008-04-21 11:00,A\n93216548,100000002,101,2,2008-04-27 10:00,2008-04-27 11:00,B\n\nQuestion: Count how many appointments have been made in total.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the total number of appointments\ntotal_appointments = len(df)\n\n# Print the total appointments\nprint(total_appointments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: How many ships are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of ships\nnum_ships = df.shape[0]\n\n# Print the number of ships\nprint(num_ships)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What is the number of ships?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of ships\nnum_ships = df.shape[0]\n\n# Print the number of ships\nprint(num_ships)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: List the name of ships in ascending order of tonnage.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Tonnage')\n\nship_names = df['Name'].tolist()\n\nprint(ship_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: what are the names of the ships ordered by ascending tonnage?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('Tonnage')\n\nship_names = df['Name'].tolist()\n\nprint(ship_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the type and nationality of ships?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Type' and 'Nationality' columns\ntypes_nationalities = df[['Type', 'Nationality']]\n\nprint(types_nationalities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the types and nationalities of every ship?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Type' and 'Nationality' columns\ntypes_nationalities = df[['Type', 'Nationality']]\n\nprint(types_nationalities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: List the name of ships whose nationality is not \"United States\".", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Nationality is not United States\ndf_not_us = df[df['Nationality'] != 'United States']\n\n# Save the names of the ships into a variable\nships_not_from_us = df_not_us['Name'].tolist()\n\n# Print the variable\nprint(ships_not_from_us)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the names of the ships that are not from the United States?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Nationality is not United States\ndf_not_us = df[df['Nationality'] != 'United States']\n\n# Save the names of the ships into a variable\nships_not_from_us = df_not_us['Name'].tolist()\n\n# Print the variable\nprint(ships_not_from_us)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: Show the name of ships whose nationality is either United States or United Kingdom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include ships from the UK or the US\ndf_filtered = df[df['Nationality'].isin(['United Kingdom', 'United States'])]\n\n# Get the names of the ships\nship_names = df_filtered['Name'].tolist()\n\n# Print the ship names\nprint(ship_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the names of the ships  that are from either the US or the UK?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include ships from the UK or the US\ndf_filtered = df[df['Nationality'].isin(['United Kingdom', 'United States'])]\n\n# Get the names of the ships\nship_names = df_filtered['Name'].tolist()\n\n# Print the ship names\nprint(ship_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What is the name of the ship with the largest tonnage?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_tonnage_ship = df.loc[df['Tonnage'].idxmax(), 'Name']\nprint(max_tonnage_ship)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What is the ship with the largest amount of tonnage called?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_tonnage_ship = df.loc[df['Tonnage'].idxmax(), 'Name']\nprint(max_tonnage_ship)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: Show different types of ships and the number of ships of each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of ships of each type\nship_count = df['Type'].value_counts()\n\nprint(ship_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: For each type, how many ships are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of ships of each type\nship_count = df['Type'].value_counts()\n\nprint(ship_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: Please show the most common type of ships.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the most common type of ship\nmost_common_type = df['Type'].value_counts().idxmax()\n\nprint(most_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What is the most common type of ships?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the most common type of ship\nmost_common_type = df['Type'].value_counts().idxmax()\n\nprint(most_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: List the nations that have more than two ships.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Nationality' and filter those nations that have more than 2 ships\nnation_counts = df.groupby('Nationality').size()\nnations_more_than_two = nation_counts[nation_counts > 2].index.tolist()\n\n# Print the nations\nprint(nations_more_than_two)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the nations that have more than two ships?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Nationality' and filter those nations that have more than 2 ships\nnation_counts = df.groupby('Nationality').size()\nnations_more_than_two = nation_counts[nation_counts > 2].index.tolist()\n\n# Print the nations\nprint(nations_more_than_two)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: Show different types of ships and the average tonnage of ships of each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Type' and calculate the mean of 'Tonnage'\ngrouped = df.groupby('Type')['Tonnage'].mean()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: For each type, what is the average tonnage?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Type' and calculate the mean of 'Tonnage'\ngrouped = df.groupby('Type')['Tonnage'].mean()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get ships with tonnage greater than 6000\ndf_large_tonnage = df[df['Tonnage'] > 6000]\n\n# Filter the dataframe to get ships with tonnage less than 4000\ndf_small_tonnage = df[df['Tonnage'] < 4000]\n\n# Find the intersection of the two filtered dataframes\nanswer = pd.merge(df_large_tonnage, df_small_tonnage, on='Type')\n\n# Save the answer in a variable and print the variable\nanswer_variable = answer['Type'].unique()\nprint(answer_variable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Nationality,Tonnage\n1,Corbridge,Cargo ship,United Kingdom,3687\n2,Farringford,Battle ship,United States,3146\n3,Dromonby,Cargo ship,United Kingdom,3627\n4,Author,Cargo ship,United Kingdom,3496\n5,Trader,Battle ship,United Kingdom,3608\n6,Ariadne,Cargo ship,United States,3035\n7,Appam,Battle ship,United Kingdom,7781\n8,Clan McTavish,Cargo ship,United States,5816\n\nQuestion: What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get ships with tonnage greater than 6000\ndf_large_tonnage = df[df['Tonnage'] > 6000]\n\n# Filter the dataframe to get ships with tonnage less than 4000\ndf_small_tonnage = df[df['Tonnage'] < 4000]\n\n# Find the intersection of the two filtered dataframes\nanswer = pd.merge(df_large_tonnage, df_small_tonnage, on='Type')\n\n# Save the answer in a variable and print the variable\nanswer_variable = answer['Type'].unique()\nprint(answer_variable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the number of students in total.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# number of students\nnum_students = len(df)\n\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: How many students are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# number of students\nnum_students = len(df)\n\nprint(num_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the last names of students studying in room 111.", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where the classroom is 111\nfiltered_df = df[df['Classroom'] == 111]\n\n# get the last names of the students in the filtered dataframe\nlast_names = filtered_df['LastName'].tolist()\n\n# print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: What are the last names of students in room 111?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where the classroom is 111\nfiltered_df = df[df['Classroom'] == 111]\n\n# get the last names of the students in the filtered dataframe\nlast_names = filtered_df['LastName'].tolist()\n\n# print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the first names of students studying in room 108.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data to get students in room 108\ndf_room108 = df[df['Classroom'] == 108]\n\n# Get the first names of students in room 108\nfirst_names_room108 = df_room108['FirstName'].values\n\n# Print the first names\nprint(first_names_room108)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: What are the first names of students in room 108?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data to get students in room 108\ndf_room108 = df[df['Classroom'] == 108]\n\n# Get the first names of students in room 108\nfirst_names_room108 = df_room108['FirstName'].values\n\n# Print the first names\nprint(first_names_room108)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: What are the first names of students studying in room 107?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Classroom'] == 107]\nfirst_names = df_filtered['FirstName'].tolist()\n\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: List the first names of all the students in room 107.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Classroom'] == 107]\nfirst_names = df_filtered['FirstName'].tolist()\n\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and select the first 'Grade' for each group\nresult = df.groupby('Classroom')['Grade'].first()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: What are the grade number and classroom number of each class in the list?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and select the first 'Grade' for each group\nresult = df.groupby('Classroom')['Grade'].first()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Which grade is studying in classroom 103?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row with classroom 103\nrow = df[df['Classroom'] == 103]\n\n# If such a row exists, get the grade, otherwise, set it to None\ngrade = row['Grade'].values[0] if not row.empty else None\n\n# Print the grade\nprint(grade)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the grade taught in classroom 103.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row with classroom 103\nrow = df[df['Classroom'] == 103]\n\n# If such a row exists, get the grade, otherwise, set it to None\ngrade = row['Grade'].values[0] if not row.empty else None\n\n# Print the grade\nprint(grade)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the grade studying in room 105.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Classroom is 105\nclassroom_105 = df[df['Classroom'] == 105]\n\n# Get the Grade of the first row in the filtered data\ngrade_in_room_105 = classroom_105['Grade'].iloc[0]\n\nprint(grade_in_room_105)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Which grade is studying in room 105?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Classroom is 105\nclassroom_105 = df[df['Classroom'] == 105]\n\n# Get the Grade of the first row in the filtered data\ngrade_in_room_105 = classroom_105['Grade'].iloc[0]\n\nprint(grade_in_room_105)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Which classrooms are used by grade 4?", "response": "import pandas as pd\n\n# load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where Grade is 4\ndf_grade_4 = df[df['Grade'] == 4]\n\n# get the unique values from the 'Classroom' column for the grade 4 students\nclassrooms = df_grade_4['Classroom'].unique()\n\n# print the classrooms\nprint(classrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the classrooms in which grade 4 is studying.", "response": "import pandas as pd\n\n# load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to only include rows where Grade is 4\ndf_grade_4 = df[df['Grade'] == 4]\n\n# get the unique values from the 'Classroom' column for the grade 4 students\nclassrooms = df_grade_4['Classroom'].unique()\n\n# print the classrooms\nprint(classrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Which classrooms are used by grade 5?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the Grade column is 5\ngrade_5_df = df[df['Grade'] == 5]\n\n# Extract the unique Classroom values from the filtered dataframe\nclassrooms = grade_5_df['Classroom'].unique()\n\n# Print the classrooms\nprint(classrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Show me the classrooms grade 5 is using.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the Grade column is 5\ngrade_5_df = df[df['Grade'] == 5]\n\n# Extract the unique Classroom values from the filtered dataframe\nclassrooms = grade_5_df['Classroom'].unique()\n\n# Print the classrooms\nprint(classrooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: Find the first names of all the teachers that teach in classroom 110.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for classroom 110\ndf_classroom_110 = df[df['Classroom'] == 110]\n\n# Get the first names of the teachers\nfirst_names = df_classroom_110['FirstName'].values\n\n# Print the first names\nfor name in first_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: Which teachers teach in classroom 110? Give me their first names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for classroom 110\ndf_classroom_110 = df[df['Classroom'] == 110]\n\n# Get the first names of the teachers\nfirst_names = df_classroom_110['FirstName'].values\n\n# Print the first names\nfor name in first_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: Find the last names of teachers teaching in classroom 109.", "response": "# import pandas library\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe where classroom is 109\nfiltered_df = df[df['Classroom'] == 109]\n\n# get the last name of the teacher\nlast_name = filtered_df['LastName'].values[0]\n\n# print the last name\nprint(last_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: Which teachers teach in classroom 109? Give me their last names.", "response": "# import pandas library\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe where classroom is 109\nfiltered_df = df[df['Classroom'] == 109]\n\n# get the last name of the teacher\nlast_name = filtered_df['LastName'].values[0]\n\n# print the last name\nprint(last_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: Report the first name and last name of all the teachers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Report the first name and last name of all the teachers.\n\nresult = df[[\"FirstName\", \"LastName\"]]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Classroom\nMACROSTIE, MIN,101\nCOVIN, JEROME,102\nMOYER, OTHA,103\nNIBLER, JERLENE,104\nMARROTTE, KIRK,105\nTARRING, LEIA,106\nURSERY, CHARMAINE,107\nONDERSMA, LORIA,108\nKAWA, GORDON,109\nSUMPTION, GEORGETTA,110\n\nQuestion: What are the first name and last name of all the teachers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Report the first name and last name of all the teachers.\n\nresult = df[[\"FirstName\", \"LastName\"]]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Report the first name and last name of all the students.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the 'FirstName' and 'LastName' columns\nselected_data = df[['FirstName', 'LastName']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Show each student's first name and last name.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the 'FirstName' and 'LastName' columns\nselected_data = df[['FirstName', 'LastName']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each grade, report the grade, the number of classrooms in which it is taught and the total number of students in the grade.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Grade and get count of unique Classrooms and Students\nresult = df.groupby('Grade').agg({'Classroom': 'nunique', 'FirstName': 'count'})\n\n# Rename columns\nresult.columns = ['Number of Classrooms', 'Total Students']\n\n# Reset index\nresult.reset_index(inplace=True)\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Grade and get count of unique Classrooms and Students\nresult = df.groupby('Grade').agg({'Classroom': 'nunique', 'FirstName': 'count'})\n\n# Rename columns\nresult.columns = ['Number of Classrooms', 'Total Students']\n\n# Reset index\nresult.reset_index(inplace=True)\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each classroom, report the classroom number and the number of grades using it.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and count unique 'Grade'\nanswer = df.groupby('Classroom')['Grade'].nunique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each classroom, show the classroom number and count the number of distinct grades that use the room.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and count unique 'Grade'\nanswer = df.groupby('Classroom')['Grade'].nunique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Which classroom has the most students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nclassroom_counts = df['Classroom'].value_counts()\nmax_students_classroom = classroom_counts.idxmax()\n\nprint(max_students_classroom)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the classroom that the most students use.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nclassroom_counts = df['Classroom'].value_counts()\nmax_students_classroom = classroom_counts.idxmax()\n\nprint(max_students_classroom)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Report the number of students in each classroom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students in each classroom\nstudent_count = df['Classroom'].value_counts()\n\nprint(student_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each classroom, show the classroom number and find how many students are using it.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students in each classroom\nstudent_count = df['Classroom'].value_counts()\n\nprint(student_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each grade 0 classroom, report the total number of students.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data to include only rows where Grade is 0\ngrade_zero_df = df[df['Grade'] == 0]\n\n# Count the number of students in each grade 0 classroom\ngrade_zero_counts = grade_zero_df.groupby('Classroom')['FirstName'].count()\n\n# Print the counts for each grade 0 classroom\nprint(grade_zero_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each grade 0 classroom, return the classroom number and the count of students.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the data to include only rows where Grade is 0\ngrade_zero_df = df[df['Grade'] == 0]\n\n# Count the number of students in each grade 0 classroom\ngrade_zero_counts = grade_zero_df.groupby('Classroom')['FirstName'].count()\n\n# Print the counts for each grade 0 classroom\nprint(grade_zero_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Report the total number of students for each fourth-grade classroom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for fourth-grade students\nfourth_grade_students = df[df['Grade'] == 4]\n\n# Group by Classroom and count the number of students\nclassroom_counts = fourth_grade_students.groupby('Classroom')['LastName'].count()\n\nprint(classroom_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: For each fourth-grade classroom, show the classroom number and the total number of students using it.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for fourth-grade students\nfourth_grade_students = df[df['Grade'] == 4]\n\n# Group by Classroom and count the number of students\nclassroom_counts = fourth_grade_students.groupby('Classroom')['LastName'].count()\n\nprint(classroom_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: Find the number of students in one classroom.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and count the number of students in each classroom\nstudents_per_classroom = df.groupby('Classroom').size()\n\nprint(students_per_classroom)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLastName,FirstName,Grade,Classroom\nCAR, MAUDE,2,101\nKRISTENSEN, STORMY,6,112\nVANDERWOUDE, SHERWOOD,3,107\nNOGODA, ISMAEL,0,105\nDANESE, JANEE,4,111\nAMY, PATRINA,1,102\nPREHM, SHANEL,0,104\nGRUNIN, EMILE,5,109\nGELL, TAMI,0,104\nMADLOCK, RAY,4,110\n\nQuestion: How many students does one classroom have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Classroom' and count the number of students in each classroom\nstudents_per_classroom = df.groupby('Classroom').size()\n\nprint(students_per_classroom)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: How many companies are headquartered in the US?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include companies in the US\nus_companies = df[df['Headquarters'] == 'USA']\n\n# Count the number of companies in the filtered dataframe\nnum_us_companies = len(us_companies)\n\n# Print the answer\nprint(num_us_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: List the names of companies by ascending number of sales.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by Sales in ascending order\ndf = df.sort_values('Sales_in_Billion')\n\n# Create a list of company names in sorted order\ncompany_names = df['Name'].tolist()\n\n# Print the list of company names\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: What are the headquarters and industries of all companies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Headquarters' and 'Industry' columns\nheadquarters_industry = df[['Headquarters', 'Industry']]\n\n# Print the data\nprint(headquarters_industry)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: Show the names of companies in the banking or retailing industry?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the data where Industry is either 'Banking' or 'Retailing'\nfiltered_df = df[df['Industry'].isin(['Banking', 'Retailing'])]\n\n# Save the answer in a variable and print it\nanswer = filtered_df['Name'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: What is the headquarter of the company with the largest sales?", "response": "import pandas as pd\n\n# load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# find the company with the highest sales\nhighest_sales_company = df.loc[df['Sales_in_Billion'].idxmax()]\n\n# get the headquarters of the company with the highest sales\nheadquarters = highest_sales_company['Headquarters']\n\n# print the headquarters\nprint(headquarters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: Show the different headquarters and number of companies at each headquarter.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Counting the number of companies at each headquarters\nheadquarter_counts = df['Headquarters'].value_counts()\n\n# Printing the result\nprint(headquarter_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: Show the most common headquarter for companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the most common headquarter\nmost_common_headquarter = df['Headquarters'].mode()[0]\n\nprint(most_common_headquarter)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: Show the headquarters that have at least two companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of companies in each headquarters\nheadquarters_count = df['Headquarters'].value_counts()\n\n# Get the headquarters that have at least two companies\nheadquarters_with_multiple_companies = headquarters_count[headquarters_count >= 2].index.tolist()\n\nprint(headquarters_with_multiple_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: Show the headquarters that have both companies in banking industry and companies in oil and gas industry.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only banking companies\nbanking_companies = df[df['Industry'] == 'Banking']\n\n# Filter the dataframe to include only oil and gas companies\noil_gas_companies = df[df['Industry'] == 'Oil and gas']\n\n# Find the intersection of the two sets\ncommon_headquarters = set(banking_companies['Headquarters']).intersection(set(oil_gas_companies['Headquarters']))\n\n# Print the result\nprint(common_headquarters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCompany_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion\n1.0,ExxonMobil,USA,Oil and gas,433.5,41.1,331.1,407.4\n2.0,JPMorgan Chase,USA,Banking,110.8,19.0,2265.8,170.1\n3.0,General Electric,USA,Conglomerate,147.3,14.2,717.2,213.7\n4.0,Royal Dutch Shell,Netherlands,Oil and gas,470.2,30.9,340.5,227.6\n5.0,Industrial and Commercial Bank of China,China,Banking,82.6,25.1,2039.1,237.4\n6.0,HSBC,UK,Banking,102.0,16.2,2550.0,164.3\n7.0,PetroChina,China,Oil and gas,310.1,20.6,304.7,294.7\n8.0,Berkshire Hathaway,USA,Conglomerate,143.7,10.3,392.6,202.2\n9.0,Wells Fargo,USA,Banking,87.6,15.9,1313.9,178.7\n10.0,Petrobras,Brazil,Oil and gas,145.9,20.1,319.4,180.0\n\nQuestion: list the names of the companies with more than 200 sales in the descending order of sales and profits.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter companies with sales > 200\nfiltered_df = df[df['Sales_in_Billion'] > 200]\n\n# Sort the filtered dataframe by Sales and Profit in descending order\nsorted_df = filtered_df.sort_values(['Sales_in_Billion', 'Profits_in_Billion'], ascending=False)\n\n# List of company names\ncompany_names = sorted_df['Name'].tolist()\n\n# Print the list of company names\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: How many film are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_films = df.shape[0]\n\nprint(number_of_films)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Count the number of films.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_films = df.shape[0]\n\nprint(number_of_films)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: List the distinct director of all films.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct directors\ndistinct_directors = df['Director'].unique()\n\nprint(distinct_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What are the different film Directors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct directors\ndistinct_directors = df['Director'].unique()\n\nprint(distinct_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What is the average ticket sales gross in dollars of films?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average gross sales in dollars across all films\naverage_gross = df['Gross_in_dollar'].mean()\n\n# Save the answer in a variable and print the variable\nprint(average_gross)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Return the average gross sales in dollars across all films.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average gross sales in dollars across all films\naverage_gross = df['Gross_in_dollar'].mean()\n\n# Save the answer in a variable and print the variable\nprint(average_gross)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: How many markets have number of cities smaller than 300?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where the number of cities is less than 300\ndf_small_cities = df[df['Number_cities'] < 300]\n\n# Calculate the number of markets\nnum_markets = len(df_small_cities)\n\n# Print the number of markets\nprint(num_markets)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: Count the number of markets that have a number of cities lower than 300.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where the number of cities is less than 300\ndf_small_cities = df[df['Number_cities'] < 300]\n\n# Calculate the number of markets\nnum_markets = len(df_small_cities)\n\n# Print the number of markets\nprint(num_markets)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: List all countries of markets in ascending alphabetical order.", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by the 'Country' column\ndf_sorted = df.sort_values('Country')\n\n# Get the unique countries and store them in a list\ncountries = df_sorted['Country'].unique().tolist()\n\n# Print the list of countries\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: What are the countries for each market, ordered alphabetically?", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by the 'Country' column\ndf_sorted = df.sort_values('Country')\n\n# Get the unique countries and store them in a list\ncountries = df_sorted['Country'].unique().tolist()\n\n# Print the list of countries\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: List all countries of markets in descending order of number of cities.", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Number_cities' in descending order\ndf_sorted = df.sort_values('Number_cities', ascending=False)\n\n# Extract the 'Country' column from the sorted DataFrame\ncountries_sorted = df_sorted['Country'].tolist()\n\n# Print the sorted list of countries\nprint(countries_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarket_ID,Country,Number_cities\n1,Japan,209\n2,China,540\n3,USA,700\n4,Russia,231\n5,France,212\n6,Poland,453\n\nQuestion: What are the countries for each market ordered by decreasing number of cities?", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Number_cities' in descending order\ndf_sorted = df.sort_values('Number_cities', ascending=False)\n\n# Extract the 'Country' column from the sorted DataFrame\ncountries_sorted = df_sorted['Country'].tolist()\n\n# Print the sorted list of countries\nprint(countries_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: List the studios of each film and the number of films produced by that studio.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load data\ndf = pd.read_csv('data.csv')\n\n# Get the count of films produced by each studio\nfilm_count_by_studio = df['Studio'].value_counts()\n\n# Print the result\nprint(film_count_by_studio)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: How films are produced by each studio?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load data\ndf = pd.read_csv('data.csv')\n\n# Get the count of films produced by each studio\nfilm_count_by_studio = df['Studio'].value_counts()\n\n# Print the result\nprint(film_count_by_studio)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: List the name of film studio that have the most number of films.", "response": "import pandas as pd\n\n# read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# split the Studio column into multiple columns if necessary\ndf = pd.concat([df, df['Studio'].str.split('/', expand=True)], axis=1)\n\n# drop the original Studio column\ndf = df.drop(columns=['Studio'])\n\n# count the number of occurrences of each studio\nstudio_counts = df.melt()['value'].value_counts()\n\n# get the name of the studio with the most films\nmost_prolific_studio = studio_counts.index[0]\n\nprint(most_prolific_studio)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What is the name of teh studio that created the most films?", "response": "import pandas as pd\n\n# read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# split the Studio column into multiple columns if necessary\ndf = pd.concat([df, df['Studio'].str.split('/', expand=True)], axis=1)\n\n# drop the original Studio column\ndf = df.drop(columns=['Studio'])\n\n# count the number of occurrences of each studio\nstudio_counts = df.melt()['value'].value_counts()\n\n# get the name of the studio with the most films\nmost_prolific_studio = studio_counts.index[0]\n\nprint(most_prolific_studio)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: List the names of studios that have at least two films.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of films for each studio\nstudio_counts = df['Studio'].value_counts()\n\n# Filter the studios that have made two or more films\nstudios_with_multiple_films = studio_counts[studio_counts > 1]\n\n# Save the answer in a variable\nanswer = studios_with_multiple_films.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What are the names of studios that have made two or more films?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of films for each studio\nstudio_counts = df['Studio'].value_counts()\n\n# Filter the studios that have made two or more films\nstudios_with_multiple_films = studio_counts[studio_counts > 1]\n\n# Save the answer in a variable\nanswer = studios_with_multiple_films.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for films by Nicholas Meyer\nnicholas_df = df[df['Director'] == 'Nicholas Meyer']\n\n# Filter data for films by Walter Hill\nwalter_df = df[df['Director'] == 'Walter Hill']\n\n# Find common studios\ncommon_studios = set(nicholas_df['Studio']) & set(walter_df['Studio'])\n\n# Print common studios\nprint(common_studios)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for films by Nicholas Meyer\nnicholas_df = df[df['Director'] == 'Nicholas Meyer']\n\n# Filter data for films by Walter Hill\nwalter_df = df[df['Director'] == 'Walter Hill']\n\n# Find common studios\ncommon_studios = set(nicholas_df['Studio']) & set(walter_df['Studio'])\n\n# Print common studios\nprint(common_studios)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering dataframe based on condition\nfiltered_df = df[df['Studio'].str.contains('Universal')]\n\n# Getting required columns\nresult = filtered_df[['Title', 'Studio']]\n\n# Printing result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering dataframe based on condition\nfiltered_df = df[df['Studio'].str.contains('Universal')]\n\n# Getting required columns\nresult = filtered_df[['Title', 'Studio']]\n\n# Printing result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Show the studios that have not produced films with director \"Walter Hill\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find rows with director Walter Hill\ndf_walter_hill = df[df['Director'] == 'Walter Hill']\n\n# Get unique studios for films with Walter Hill\nstudios_with_walter_hill = df_walter_hill['Studio'].unique()\n\n# Get all unique studios\nall_studios = df['Studio'].unique()\n\n# Studios that do not have Walter Hill films\nstudios_without_walter_hill = [studio for studio in all_studios if studio not in studios_with_walter_hill]\n\nprint(studios_without_walter_hill)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Which studios have never worked with the director Walter Hill?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find rows with director Walter Hill\ndf_walter_hill = df[df['Director'] == 'Walter Hill']\n\n# Get unique studios for films with Walter Hill\nstudios_with_walter_hill = df_walter_hill['Studio'].unique()\n\n# Get all unique studios\nall_studios = df['Studio'].unique()\n\n# Studios that do not have Walter Hill films\nstudios_without_walter_hill = [studio for studio in all_studios if studio not in studios_with_walter_hill]\n\nprint(studios_without_walter_hill)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: List the studios which average gross is above 4500000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf['Gross_in_dollar'] = df['Gross_in_dollar'].replace('[\\$,]', '', regex=True).astype(float)\n\navg_gross = df.groupby('Studio')['Gross_in_dollar'].mean()\n\nfiltered_studios = avg_gross[avg_gross > 4500000].index.tolist()\n\nprint(filtered_studios)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFilm_ID,Title,Studio,Director,Gross_in_dollar\n1,ET the Extra-Terrestrial,Universal,Steven Spielberg,435110554\n2,Tootsie,Columbia,Sydney Pollack,177200000\n3,An Officer and a Gentleman,Paramount / Lorimar,Taylor Hackford,129795554\n4,Rocky III,United Artists,Sylvester Stallone,125049125\n5,Porky's,20th Century Fox,Bob Clark,109492484\n6,Star Trek II: The Wrath of Khan,Paramount,Nicholas Meyer,79912963\n7,48 Hrs,Paramount,Walter Hill,78868508\n8,Poltergeist,MGM,Tobe Hooper,76606280\n9,The Best Little Whorehouse in Texas,Universal / RKO,Colin Higgins,69701637\n10,Annie,Columbia / Rastar,John Huston,57059003\n\nQuestion: Which studios have an average gross of over 4500000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf['Gross_in_dollar'] = df['Gross_in_dollar'].replace('[\\$,]', '', regex=True).astype(float)\n\navg_gross = df.groupby('Studio')['Gross_in_dollar'].mean()\n\nfiltered_studios = avg_gross[avg_gross > 4500000].index.tolist()\n\nprint(filtered_studios)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCalendar_Date,Day_Number\n1972-03-31 09:47:22,5\n1976-06-15 03:40:06,7\n1985-05-13 12:19:43,7\n1986-10-14 17:53:39,1\n1987-11-05 06:11:22,3\n1988-02-01 14:41:52,8\n1994-11-15 03:49:54,9\n1995-01-01 03:52:11,1\n1997-03-10 15:24:00,7\n2007-05-28 16:28:48,2\n\nQuestion: How many calendar items do we have?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of all the calendar items\ncount = df.shape[0]\n\n# Save the answer in a variable and print the variable\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCalendar_Date,Day_Number\n1972-03-31 09:47:22,5\n1976-06-15 03:40:06,7\n1985-05-13 12:19:43,7\n1986-10-14 17:53:39,1\n1987-11-05 06:11:22,3\n1988-02-01 14:41:52,8\n1994-11-15 03:49:54,9\n1995-01-01 03:52:11,1\n1997-03-10 15:24:00,7\n2007-05-28 16:28:48,2\n\nQuestion: Count the number of all the calendar items.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of all the calendar items\ncount = df.shape[0]\n\n# Save the answer in a variable and print the variable\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCalendar_Date,Day_Number\n1972-03-31 09:47:22,5\n1976-06-15 03:40:06,7\n1985-05-13 12:19:43,7\n1986-10-14 17:53:39,1\n1987-11-05 06:11:22,3\n1988-02-01 14:41:52,8\n1994-11-15 03:49:54,9\n1995-01-01 03:52:11,1\n1997-03-10 15:24:00,7\n2007-05-28 16:28:48,2\n\nQuestion: Show all calendar dates and day Numbers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all the calendar dates and day numbers\ndates_and_days = df[['Calendar_Date', 'Day_Number']]\n\n# Print the result\nprint(dates_and_days)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCalendar_Date,Day_Number\n1972-03-31 09:47:22,5\n1976-06-15 03:40:06,7\n1985-05-13 12:19:43,7\n1986-10-14 17:53:39,1\n1987-11-05 06:11:22,3\n1988-02-01 14:41:52,8\n1994-11-15 03:49:54,9\n1995-01-01 03:52:11,1\n1997-03-10 15:24:00,7\n2007-05-28 16:28:48,2\n\nQuestion: What are all the calendar dates and day Numbers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all the calendar dates and day numbers\ndates_and_days = df[['Calendar_Date', 'Day_Number']]\n\n# Print the result\nprint(dates_and_days)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: Show the number of document types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of document types\ndocument_types_count = df['Document_Type_Code'].nunique()\n\nprint(document_types_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: How many document types are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of document types\ndocument_types_count = df['Document_Type_Code'].nunique()\n\nprint(document_types_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: List all document type codes and document type names.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# list all document type codes and document type names\noutput = df[['Document_Type_Code', 'Document_Type_Name']]\n\n# print the output\nprint(output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: What are all the document type codes and document type names?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# list all document type codes and document type names\noutput = df[['Document_Type_Code', 'Document_Type_Name']]\n\n# print the output\nprint(output)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: What is the document type code for document type \"Paper\"?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where 'Document_Type_Name' is 'Paper'\npaper_df = df[df['Document_Type_Name'] == 'Paper']\n\n# Get the 'Document_Type_Code' of 'Paper'\npaper_code = paper_df['Document_Type_Code'].values[0]\n\n# Print the 'Document_Type_Code' of 'Paper'\nprint(paper_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nCV,CV,\nBK,Book,\nPR,Paper,\nRV,Review,\n\nQuestion: Find the code of the document type \"Paper\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where 'Document_Type_Name' is 'Paper'\npaper_df = df[df['Document_Type_Name'] == 'Paper']\n\n# Get the 'Document_Type_Code' of 'Paper'\npaper_code = paper_df['Document_Type_Code'].values[0]\n\n# Print the 'Document_Type_Code' of 'Paper'\nprint(paper_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Date_Stored,Document_Type_Code,Document_Name,Document_Description,Other_Details\n7,1976-06-15 03:40:06,CV,Robin CV,,\n11,1986-10-14 17:53:39,CV,Marry CV,,\n25,2008-06-08 12:45:38,BK,One hundred years of solitude,,\n39,2012-07-03 09:48:46,BK,How to read a book,,\n72,2012-07-03 09:48:46,CV,Alan CV,,\n81,1995-01-01 03:52:11,BK,Hua Mulan,,\n99,2008-06-08 12:45:38,CV,Leon CV,,\n111,1987-11-05 06:11:22,PR,Learning features of CNN,,\n119,2008-06-08 12:45:38,RV,Marriage and population,,\n120,1997-03-10 15:24:00,RV,Society and tax,,\n\nQuestion: Show the number of documents with document type code CV or BK.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Document_Type_Code'].isin(['CV', 'BK'])]\nnumber_of_documents = len(df_filtered)\nprint(number_of_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Date_Stored,Document_Type_Code,Document_Name,Document_Description,Other_Details\n7,1976-06-15 03:40:06,CV,Robin CV,,\n11,1986-10-14 17:53:39,CV,Marry CV,,\n25,2008-06-08 12:45:38,BK,One hundred years of solitude,,\n39,2012-07-03 09:48:46,BK,How to read a book,,\n72,2012-07-03 09:48:46,CV,Alan CV,,\n81,1995-01-01 03:52:11,BK,Hua Mulan,,\n99,2008-06-08 12:45:38,CV,Leon CV,,\n111,1987-11-05 06:11:22,PR,Learning features of CNN,,\n119,2008-06-08 12:45:38,RV,Marriage and population,,\n120,1997-03-10 15:24:00,RV,Society and tax,,\n\nQuestion: How many documents have document type code CV or BK?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Document_Type_Code'].isin(['CV', 'BK'])]\nnumber_of_documents = len(df_filtered)\nprint(number_of_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Date_Stored,Document_Type_Code,Document_Name,Document_Description,Other_Details\n7,1976-06-15 03:40:06,CV,Robin CV,,\n11,1986-10-14 17:53:39,CV,Marry CV,,\n25,2008-06-08 12:45:38,BK,One hundred years of solitude,,\n39,2012-07-03 09:48:46,BK,How to read a book,,\n72,2012-07-03 09:48:46,CV,Alan CV,,\n81,1995-01-01 03:52:11,BK,Hua Mulan,,\n99,2008-06-08 12:45:38,CV,Leon CV,,\n111,1987-11-05 06:11:22,PR,Learning features of CNN,,\n119,2008-06-08 12:45:38,RV,Marriage and population,,\n120,1997-03-10 15:24:00,RV,Society and tax,,\n\nQuestion: What is the date when the document \"Marry CV\" was stored?", "response": "import pandas as pd\n\n# Load data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data for document named \"Marry CV\"\nmarry_cv = df[df['Document_Name'] == 'Marry CV']\n\n# Get the date of storage for \"Marry CV\"\ndate_stored = marry_cv['Date_Stored'].values[0]\n\n# Print the date\nprint(date_stored)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Date_Stored,Document_Type_Code,Document_Name,Document_Description,Other_Details\n7,1976-06-15 03:40:06,CV,Robin CV,,\n11,1986-10-14 17:53:39,CV,Marry CV,,\n25,2008-06-08 12:45:38,BK,One hundred years of solitude,,\n39,2012-07-03 09:48:46,BK,How to read a book,,\n72,2012-07-03 09:48:46,CV,Alan CV,,\n81,1995-01-01 03:52:11,BK,Hua Mulan,,\n99,2008-06-08 12:45:38,CV,Leon CV,,\n111,1987-11-05 06:11:22,PR,Learning features of CNN,,\n119,2008-06-08 12:45:38,RV,Marriage and population,,\n120,1997-03-10 15:24:00,RV,Society and tax,,\n\nQuestion: When was the document named \"Marry CV\" stored? Give me the date.", "response": "import pandas as pd\n\n# Load data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data for document named \"Marry CV\"\nmarry_cv = df[df['Document_Name'] == 'Marry CV']\n\n# Get the date of storage for \"Marry CV\"\ndate_stored = marry_cv['Date_Stored'].values[0]\n\n# Print the date\nprint(date_stored)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: Show the number of locations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of locations\nnum_locations = len(df)\n\nprint(num_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: How many locations are listed in the database?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of locations\nnum_locations = len(df)\n\nprint(num_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: List all location codes and location names.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Location_Code' and 'Location_Name' columns\nlocation_codes_names = df[['Location_Code', 'Location_Name']]\n\n# Print the selected data\nprint(location_codes_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: What are all the location codes and location names?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Location_Code' and 'Location_Name' columns\nlocation_codes_names = df[['Location_Code', 'Location_Name']]\n\n# Print the selected data\nprint(location_codes_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: What are the name and description for location code x?", "response": "import pandas as pd\n\n# Create dataframe\ndata = {'Location_Code': ['b', 'c', 'e', 'n', 'x'],\n        'Location_Name': ['Brazil', 'Canada', 'Edinburgh', 'Nanjing', 'Xiamen'],\n        'Location_Description': ['', '', '', '', '']}\ndf = pd.DataFrame(data)\n\n# Filter dataframe for location code 'x'\nlocation = df[df['Location_Code'] == 'x']\n\n# Save the answer in a variable\nanswer = (location['Location_Name'].iloc[0], location['Location_Description'].iloc[0])\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: Give me the name and description of the location with code x.", "response": "import pandas as pd\n\n# Create dataframe\ndata = {'Location_Code': ['b', 'c', 'e', 'n', 'x'],\n        'Location_Name': ['Brazil', 'Canada', 'Edinburgh', 'Nanjing', 'Xiamen'],\n        'Location_Description': ['', '', '', '', '']}\ndf = pd.DataFrame(data)\n\n# Filter dataframe for location code 'x'\nlocation = df[df['Location_Code'] == 'x']\n\n# Save the answer in a variable\nanswer = (location['Location_Name'].iloc[0], location['Location_Description'].iloc[0])\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: What is the location code for the country \"Canada\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where Location_Name is 'Canada'\ncanada_row = df[df['Location_Name'] == 'Canada']\n\n# Extract the location code from the filtered dataframe\ncanada_code = canada_row['Location_Code'].values[0]\n\n# Print the location code for Canada\nprint(canada_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_Code,Location_Name,Location_Description\nb,Brazil,\nc,Canada,\ne,Edinburgh,\nn,Nanjing,\nx,Xiamen,\n\nQuestion: Show the location code of the country \"Canada\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where Location_Name is 'Canada'\ncanada_row = df[df['Location_Name'] == 'Canada']\n\n# Extract the location code from the filtered dataframe\ncanada_code = canada_row['Location_Code'].values[0]\n\n# Print the location code for Canada\nprint(canada_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: How many roles are there?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of roles\nrole_count = len(df)\n\n# Print the number of roles\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: Count the total number of roles listed.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of roles\nrole_count = len(df)\n\n# Print the number of roles\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: List all role codes, role names, and role descriptions.", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n\n# Save the answer to a variable\nanswer = df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: What are all the role codes, role names, and role descriptions?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n\n# Save the answer to a variable\nanswer = df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: What are the name and description for role code \"MG\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the name and description of the role with code \"MG\"\nresult = df[df['Role_Code'] == 'MG'][['Role_Name', 'Role_Description']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: Find the name and description of the role with code \"MG\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the name and description of the role with code \"MG\"\nresult = df[df['Role_Code'] == 'MG'][['Role_Name', 'Role_Description']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: Show the description for role name \"Proof Reader\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where the Role_Name is 'Proof Reader'\nproof_reader_row = df[df['Role_Name'] == 'Proof Reader']\n\n# Get the Role_Description of the proof reader\nproof_reader_description = proof_reader_row['Role_Description'].values[0]\n\n# Print the description\nprint(proof_reader_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRole_Code,Role_Name,Role_Description\nMG,Manager,Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.\nED,Editor,Itaque dolor ut nemo rerum vitae provident. Vel laborum ipsum velit sint. Et est omnis dignissimos.\nPT,Photo,Aut modi nihil molestias temporibus sit rerum. Sit neque eaque odio omnis incidunt.\nPR,Proof Reader,Ut sed quae eaque mollitia qui hic. Natus ea expedita et odio illum fugiat qui natus. Consequatur velit ut dolorem cum ullam esse deserunt dignissimos. Enim non non rem officiis quis.\nHR,Human Resource,Et totam est quibusdam aspernatur ut. Vitae perferendis eligendi voluptatem molestiae rem ut enim. Ipsum expedita quae earum unde est. Repellendus ut ipsam nihil accusantium sit. Magni accusantium numquam quod et.\n\nQuestion: What is the description of the role named \"Proof Reader\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where the Role_Name is 'Proof Reader'\nproof_reader_row = df[df['Role_Name'] == 'Proof Reader']\n\n# Get the Role_Description of the proof reader\nproof_reader_description = proof_reader_row['Role_Description'].values[0]\n\n# Print the description\nprint(proof_reader_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: How many employees do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of employees\nnum_employees = df.shape[0]\n\n# Print the number of employees\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Find the number of employees we have.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of employees\nnum_employees = df.shape[0]\n\n# Print the number of employees\nprint(num_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show the name, role code, and date of birth for the employee with name 'Armani'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where Employee_Name is 'Armani'\nfiltered_df = df[df['Employee_Name'] == 'Armani']\n\n# Extract the relevant columns\nanswer = filtered_df[['Employee_Name', 'Role_Code', 'Date_of_Birth']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What are the name, role code, and date of birth of the employee named 'Armani'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where Employee_Name is 'Armani'\nfiltered_df = df[df['Employee_Name'] == 'Armani']\n\n# Extract the relevant columns\nanswer = filtered_df[['Employee_Name', 'Role_Code', 'Date_of_Birth']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What is the id for the employee called Ebba?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_Ebba = df[df['Employee_Name'] == 'Ebba']\n\nanswer = df_Ebba['Employee_ID'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show the id of the employee named Ebba.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_Ebba = df[df['Employee_Name'] == 'Ebba']\n\nanswer = df_Ebba['Employee_ID'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show the names of all the employees with role \"HR\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for employees with role \"HR\"\ndf_hr = df[df['Role_Code'] == 'HR']\n\n# Get the names of the employees with role \"HR\"\nemployee_names = df_hr['Employee_Name'].tolist()\n\n# Print the names\nfor name in employee_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Which employees have the role with code \"HR\"? Find their names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for employees with role \"HR\"\ndf_hr = df[df['Role_Code'] == 'HR']\n\n# Get the names of the employees with role \"HR\"\nemployee_names = df_hr['Employee_Name'].tolist()\n\n# Print the names\nfor name in employee_names:\n    print(name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show all role codes and the number of employees in each role.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nrole_counts = df['Role_Code'].value_counts()\n\nprint(role_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What is the code of each role and the number of employees in each role?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nrole_counts = df['Role_Code'].value_counts()\n\nprint(role_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What is the role code with the largest number of employees?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the code of the role that have the most employees\nmost_employees_role = df['Role_Code'].value_counts().idxmax()\n\n# Print the result\nprint(most_employees_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Find the code of the role that have the most employees.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the code of the role that have the most employees\nmost_employees_role = df['Role_Code'].value_counts().idxmax()\n\n# Print the result\nprint(most_employees_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show all role codes with at least 3 employees.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nrole_counts = df['Role_Code'].value_counts()\n\nrole_with_3_employees = role_counts[role_counts >= 3].index.tolist()\n\nprint(role_with_3_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What are the roles with three or more employees? Give me the role codes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nrole_counts = df['Role_Code'].value_counts()\n\nrole_with_3_employees = role_counts[role_counts >= 3].index.tolist()\n\nprint(role_with_3_employees)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: Show the role code with the least employees.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by 'Role_Code' and count the number of employees in each role\nrole_counts = df.groupby('Role_Code').size()\n\n# Find the role with the smallest number of employees\nmin_role = role_counts.idxmin()\n\n# Print the role with the smallest number of employees\nprint(min_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nEmployee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details\n25,HR,Leo,,1973-02-15 17:16:00,\n30,MG,Ebba,,1979-09-20 12:50:15,\n38,ED,Stephanie,1,2012-03-30 23:02:28,\n55,ED,Harley,,1972-02-18 11:53:30,\n57,ED,Armani,,1988-12-08 06:13:33,\n71,ED,Gussie,,1973-04-04 21:41:22,\n99,ED,Izabella,1,1977-07-04 16:25:21,\n123,PT,Hugh,,2010-03-15 00:17:13,\n136,ED,Mallie,,1980-12-11 20:28:20,\n138,ED,Beatrice,1,2013-04-02 23:55:48,\n\nQuestion: What is the role with the smallest number of employees? Find the role codes.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by 'Role_Code' and count the number of employees in each role\nrole_counts = df.groupby('Role_Code').size()\n\n# Find the role with the smallest number of employees\nmin_role = role_counts.idxmin()\n\n# Print the role with the smallest number of employees\nprint(min_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: What are the different location codes for documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_location_codes = df['Location_Code'].unique()\n\nprint(distinct_location_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: Give me all the distinct location codes for documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_location_codes = df['Location_Code'].unique()\n\nprint(distinct_location_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: Show the location code, the starting date and ending data in that location for all the documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_selected = df[['Location_Code', 'Date_in_Location_From', 'Date_in_Locaton_To']]\n\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: What are each document's location code, and starting date and ending data in that location?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_selected = df[['Location_Code', 'Date_in_Location_From', 'Date_in_Locaton_To']]\n\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: Show the location codes and the number of documents in each location.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents in each location\nlocation_counts = df['Location_Code'].value_counts()\n\nprint(location_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: What is the code of each location and the number of documents in that location?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents in each location\nlocation_counts = df['Location_Code'].value_counts()\n\nprint(location_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: What is the location code with the most documents?", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the code of the location with the largest number of documents\nmax_location = df['Location_Code'].value_counts().idxmax()\n\n# Print the answer\nprint(max_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: Find the code of the location with the largest number of documents.", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the code of the location with the largest number of documents\nmax_location = df['Location_Code'].value_counts().idxmax()\n\n# Print the answer\nprint(max_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: Show the location codes with at least 3 documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Location_Code'].value_counts()\n\nanswer = df[df['Location_Code'].map(df['Location_Code'].value_counts()) >= 3]['Location_Code'].unique()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To\n7,e,2017-01-06 23:17:22,2008-06-08 12:45:38\n11,x,2017-01-06 23:17:22,2012-07-03 09:48:46\n81,c,1972-03-31 09:47:22,1987-11-05 06:11:22\n81,c,2017-01-06 23:17:22,2010-11-26 19:22:50\n81,x,2008-06-08 12:45:38,1976-06-15 03:40:06\n111,x,1986-10-14 17:53:39,2010-11-26 19:22:50\n119,b,2017-01-06 23:17:22,1995-01-01 03:52:11\n166,b,1985-05-13 12:19:43,1986-10-14 17:53:39\n166,b,1986-10-14 17:53:39,2010-11-26 19:22:50\n170,x,1997-03-10 15:24:00,1976-06-15 03:40:06\n\nQuestion: What are the codes of the locations with at least three documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Location_Code'].value_counts()\n\nanswer = df[df['Location_Code'].map(df['Location_Code'].value_counts()) >= 3]['Location_Code'].unique()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Show the id of each employee and the number of document destruction authorised by that employee.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of documents authorised by each employee\nauthorisations = df['Destruction_Authorised_by_Employee_ID'].value_counts()\n\n# Print the result\nprint(authorisations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: What are the id of each employee and the number of document destruction authorised by that employee?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of documents authorised by each employee\nauthorisations = df['Destruction_Authorised_by_Employee_ID'].value_counts()\n\n# Print the result\nprint(authorisations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Show the employee ids and the number of documents destroyed by each employee.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Create a new dataframe grouped by the column 'Destroyed_by_Employee_ID' and count the number of documents destroyed for each employee\ndf_grouped = df.groupby('Destroyed_by_Employee_ID')['Document_ID'].count().reset_index()\n\n# Rename the column names for clarity\ndf_grouped.columns = ['Employee_ID', 'Number_of_Documents_Destroyed']\n\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: What are the id of each employee and the number of document destroyed by that employee?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Create a new dataframe grouped by the column 'Destroyed_by_Employee_ID' and count the number of documents destroyed for each employee\ndf_grouped = df.groupby('Destroyed_by_Employee_ID')['Document_ID'].count().reset_index()\n\n# Rename the column names for clarity\ndf_grouped.columns = ['Employee_ID', 'Number_of_Documents_Destroyed']\n\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Show the ids of all employees who have authorized destruction.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find unique employee IDs who have authorized destruction\nauthorized_employee_ids = df['Destruction_Authorised_by_Employee_ID'].unique()\n\n# Print the list of authorized employee IDs\nprint(authorized_employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: What are the ids of all the employees who authorize document destruction?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find unique employee IDs who have authorized destruction\nauthorized_employee_ids = df['Destruction_Authorised_by_Employee_ID'].unique()\n\n# Print the list of authorized employee IDs\nprint(authorized_employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Show the ids of all employees who have destroyed a document.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique values in 'Destroyed_by_Employee_ID' column\nemployee_ids = df['Destroyed_by_Employee_ID'].unique()\n\nprint(employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: What are the ids of all the employees who have destroyed documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique values in 'Destroyed_by_Employee_ID' column\nemployee_ids = df['Destroyed_by_Employee_ID'].unique()\n\nprint(employee_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Show the ids of all employees who have either destroyed a document or made an authorization to do this.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nauthorized_ids = df['Destruction_Authorised_by_Employee_ID'].unique().tolist()\ndestroyed_ids = df['Destroyed_by_Employee_ID'].unique().tolist()\n\ncombined_ids = list(set(authorized_ids + destroyed_ids))\n\nprint(combined_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details\n7,156,138,1988-02-01 14:41:52,2017-01-06 23:17:22,\n11,55,173,2010-11-26 19:22:50,1986-10-14 17:53:39,\n25,183,156,2009-08-18 03:29:08,1995-01-01 03:52:11,\n39,183,136,1976-06-15 03:40:06,2009-08-18 03:29:08,\n99,55,99,2017-01-06 23:17:22,1986-10-14 17:53:39,\n111,38,173,1972-03-31 09:47:22,2009-08-18 03:29:08,\n120,183,173,1972-03-31 09:47:22,1995-01-01 03:52:11,\n166,156,38,1987-11-05 06:11:22,2012-07-03 09:48:46,\n170,123,136,2017-01-06 23:17:22,1988-02-01 14:41:52,\n252,30,55,1972-03-31 09:47:22,1985-05-13 12:19:43,\n\nQuestion: Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nauthorized_ids = df['Destruction_Authorised_by_Employee_ID'].unique().tolist()\ndestroyed_ids = df['Destroyed_by_Employee_ID'].unique().tolist()\n\ncombined_ids = list(set(authorized_ids + destroyed_ids))\n\nprint(combined_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: How many clubs are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count total number of clubs\ntotal_clubs = len(df.index)\n\nprint(total_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Count the total number of clubs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count total number of clubs\ntotal_clubs = len(df.index)\n\nprint(total_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: What are the names of all clubs?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the 'ClubName' column to get the names of all clubs\nclub_names = df['ClubName'].tolist()\n\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Give me the name of each club.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the 'ClubName' column to get the names of all clubs\nclub_names = df['ClubName'].tolist()\n\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_count = df['StuID'].count()\n\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Count the total number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_count = df['StuID'].count()\n\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: What is the description of the club named \"Tennis Club\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with ClubName as \"Tennis Club\"\ntennis_club = df[df['ClubName'] == 'Tennis Club']\n\n# Get the ClubDesc of the tennis club\ntennis_club_desc = tennis_club['ClubDesc'].values[0]\n\nprint(tennis_club_desc)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Find the description of the club called \"Tennis Club\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with ClubName as \"Tennis Club\"\ntennis_club = df[df['ClubName'] == 'Tennis Club']\n\n# Get the ClubDesc of the tennis club\ntennis_club_desc = tennis_club['ClubDesc'].values[0]\n\nprint(tennis_club_desc)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Find the description of the club \"Pen and Paper Gaming\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the description of the club \"Pen and Paper Gaming\"\nclub_desc = df[df['ClubName'] == 'Pen and Paper Gaming']['ClubDesc'].values[0]\n\n# Print the club description\nprint(club_desc)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: What is the description of the club \"Pen and Paper Gaming\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the description of the club \"Pen and Paper Gaming\"\nclub_desc = df[df['ClubName'] == 'Pen and Paper Gaming']['ClubDesc'].values[0]\n\n# Print the club description\nprint(club_desc)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: What is the location of the club named \"Tennis Club\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the ClubName is 'Tennis Club'\ntennis_club = df[df['ClubName'] == 'Tennis Club']\n\n# Extract the ClubLocation from the resulting dataframe\nlocation = tennis_club['ClubLocation'].values[0]\n\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Where us the club named \"Tennis Club\" located?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the ClubName is 'Tennis Club'\ntennis_club = df[df['ClubName'] == 'Tennis Club']\n\n# Extract the ClubLocation from the resulting dataframe\nlocation = tennis_club['ClubLocation'].values[0]\n\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Find the location of the club \"Pen and Paper Gaming\".", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where ClubName is 'Pen and Paper Gaming'\npen_and_paper_gaming = df[df['ClubName'] == 'Pen and Paper Gaming']\n\n# Get the location of 'Pen and Paper Gaming' club\nlocation = pen_and_paper_gaming['ClubLocation'].values[0]\n\n# Print the location\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Where is the club \"Pen and Paper Gaming\" located?", "response": "import pandas as pd\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where ClubName is 'Pen and Paper Gaming'\npen_and_paper_gaming = df[df['ClubName'] == 'Pen and Paper Gaming']\n\n# Get the location of 'Pen and Paper Gaming' club\nlocation = pen_and_paper_gaming['ClubLocation'].values[0]\n\n# Print the location\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Find the name of all the clubs at \"AKW\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the ClubLocation is \"AKW\"\ndf_AKW = df[df['ClubLocation'] == 'AKW']\n\n# Create a list of the club names\nclub_names = df_AKW['ClubName'].tolist()\n\n# Print the club names\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Which clubs are located at \"AKW\"? Return the club names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the ClubLocation is \"AKW\"\ndf_AKW = df[df['ClubLocation'] == 'AKW']\n\n# Create a list of the club names\nclub_names = df_AKW['ClubName'].tolist()\n\n# Print the club names\nprint(club_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: How many clubs are located at \"HHH\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on 'ClubLocation'\nfiltered_df = df[df['ClubLocation'] == 'HHH']\n\n# Count the number of clubs located at \"HHH\"\nnum_clubs = len(filtered_df)\n\n# Print the number of clubs\nprint(num_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nClubID,ClubName,ClubDesc,ClubLocation\n1,Bootup Baltimore,Refurbish computers; teach kids and adults about computer basics.,AKW\n2,Hopkins Student Enterprises,Venture capital fund for student business.,AKW\n3,Pen and Paper Gaming,Play pen and paper games on campus.,HHH\n4,Tennis Club,A competitive tennis club.,AKW\n\nQuestion: Count the number of clubs located at \"HHH\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on 'ClubLocation'\nfiltered_df = df[df['ClubLocation'] == 'HHH']\n\n# Count the number of clubs located at \"HHH\"\nnum_clubs = len(filtered_df)\n\n# Print the number of clubs\nprint(num_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: When do all the researcher role staff start to work, and when do they stop working?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for role_code == 'researcher'\nresearchers_df = df[df['role_code'] == 'researcher']\n\n# Select the date_from and date_to columns\ndates_df = researchers_df[['date_from', 'date_to']]\n\n# Print the dataframe\nprint(dates_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: When did researchers start and stop working?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for role_code == 'researcher'\nresearchers_df = df[df['role_code'] == 'researcher']\n\n# Select the date_from and date_to columns\ndates_df = researchers_df[['date_from', 'date_to']]\n\n# Print the dataframe\nprint(dates_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: How many kinds of roles are there for the staff?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the unique roles\nrole_count = df['role_code'].nunique()\n\n# Print the answer\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: How many different roles are there on the project staff?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the unique roles\nrole_count = df['role_code'].nunique()\n\n# Print the answer\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ngrant_id,organisation_id,grant_amount,grant_start_date,grant_end_date,other_details\n1,10,4094.542,2016-11-20 00:18:51,2004-10-24 09:09:39,et\n2,3,281.2446,1985-10-09 20:08:49,1985-06-08 00:22:07,occaecati\n3,14,4515947.7015,1970-09-19 22:53:49,1989-03-16 18:27:16,et\n4,11,330.6339,1990-08-13 20:27:28,2014-08-13 22:58:50,et\n5,2,608413.3291,1979-10-29 07:44:22,1996-08-16 20:45:05,corrupti\n6,8,42.8061,2011-05-10 22:44:08,1977-12-27 01:51:18,dolor\n7,7,76977808.306,2015-12-14 13:02:11,1981-03-09 17:12:27,explicabo\n8,10,38675408.6017,2016-02-25 04:28:44,1983-06-22 15:12:32,aliquam\n9,8,0,2009-07-14 18:26:05,1982-03-11 15:27:55,sapiente\n10,14,66.4203,1986-08-26 20:49:27,2007-09-26 19:19:26,veniam\n\nQuestion: What is the total amount of grants given by each organisations? Also list the organisation id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the total grant amount by each organisation\ntotal_grant_amount = df.groupby('organisation_id')['grant_amount'].sum()\n\n# Print the total grant amount by each organisation\nprint(total_grant_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ngrant_id,organisation_id,grant_amount,grant_start_date,grant_end_date,other_details\n1,10,4094.542,2016-11-20 00:18:51,2004-10-24 09:09:39,et\n2,3,281.2446,1985-10-09 20:08:49,1985-06-08 00:22:07,occaecati\n3,14,4515947.7015,1970-09-19 22:53:49,1989-03-16 18:27:16,et\n4,11,330.6339,1990-08-13 20:27:28,2014-08-13 22:58:50,et\n5,2,608413.3291,1979-10-29 07:44:22,1996-08-16 20:45:05,corrupti\n6,8,42.8061,2011-05-10 22:44:08,1977-12-27 01:51:18,dolor\n7,7,76977808.306,2015-12-14 13:02:11,1981-03-09 17:12:27,explicabo\n8,10,38675408.6017,2016-02-25 04:28:44,1983-06-22 15:12:32,aliquam\n9,8,0,2009-07-14 18:26:05,1982-03-11 15:27:55,sapiente\n10,14,66.4203,1986-08-26 20:49:27,2007-09-26 19:19:26,veniam\n\nQuestion: What is the total amount of grant money given to each organization and what is its id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the total grant amount by each organisation\ntotal_grant_amount = df.groupby('organisation_id')['grant_amount'].sum()\n\n# Print the total grant amount by each organisation\nprint(total_grant_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrole_code,role_description\nleader,Project Leader\nresearcher,Project Researcher\n\nQuestion: What is the complete description of the researcher role.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame where 'role_code' is 'researcher'\nresearcher_description = df[df['role_code'] == 'researcher']['role_description'].values[0]\n\n# Print the result\nprint(researcher_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nrole_code,role_description\nleader,Project Leader\nresearcher,Project Researcher\n\nQuestion: What is the complete description of the job of a researcher?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame where 'role_code' is 'researcher'\nresearcher_description = df[df['role_code'] == 'researcher']['role_description'].values[0]\n\n# Print the result\nprint(researcher_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: When did the first staff for the projects started working?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['date_from'] = pd.to_datetime(df['date_from'])\n\nfirst_staff_start_date = df['date_from'].min()\n\nprint(first_staff_start_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: When did the first staff member start working?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['date_from'] = pd.to_datetime(df['date_from'])\n\nfirst_staff_start_date = df['date_from'].min()\n\nprint(first_staff_start_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_type_code,document_description\nAPP,Initial Application\nREG,Regular\n\nQuestion: Which document type is described with the prefix 'Initial'?", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get rows where 'document_description' contains 'Initial'\nfiltered_df = df[df['document_description'].str.contains('Initial')]\n\n# Get the document type code of the filtered row\ndocument_type_code = filtered_df['document_type_code'].values[0]\n\n# Print the document type code\nprint(document_type_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_type_code,document_description\nAPP,Initial Application\nREG,Regular\n\nQuestion: What is the type of the document whose description starts with the word 'Initial'?", "response": "import pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get rows where 'document_description' contains 'Initial'\nfiltered_df = df[df['document_description'].str.contains('Initial')]\n\n# Get the document type code of the filtered row\ndocument_type_code = filtered_df['document_type_code'].values[0]\n\n# Print the document type code\nprint(document_type_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_type_code,grant_id,sent_date,response_received_date,other_details\n1,APP,5,1986-11-30 07:56:35,1977-12-01 02:18:53,\n2,APP,13,2004-01-23 11:57:08,1979-12-08 10:38:07,\n3,REG,10,1999-03-03 12:25:58,1995-09-12 13:13:48,\n4,APP,13,1999-05-29 00:02:46,1991-09-25 10:38:24,\n5,APP,11,2003-08-29 03:32:52,1986-05-23 07:17:59,\n6,REG,5,1979-07-04 08:54:23,1976-10-04 22:13:27,\n7,APP,13,1978-09-13 16:23:29,1979-01-06 05:05:30,\n8,APP,15,2001-06-18 06:35:49,1986-05-18 01:54:56,\n9,APP,6,2014-01-28 05:11:34,1980-02-24 15:23:44,\n10,REG,7,2002-07-26 15:50:28,1987-10-29 15:35:50,\n\nQuestion: How many documents can one grant have at most? List the grant id and number.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'grant_id' and count the number of documents for each grant\ndocuments_per_grant = df.groupby('grant_id').size()\n\n# Find the maximum number of documents per grant\nmax_documents = documents_per_grant.max()\n\n# Find the grant(s) with the maximum number of documents\ngrants_with_max_documents = documents_per_grant[documents_per_grant == max_documents]\n\n# Print the result\nprint(grants_with_max_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_id,document_type_code,grant_id,sent_date,response_received_date,other_details\n1,APP,5,1986-11-30 07:56:35,1977-12-01 02:18:53,\n2,APP,13,2004-01-23 11:57:08,1979-12-08 10:38:07,\n3,REG,10,1999-03-03 12:25:58,1995-09-12 13:13:48,\n4,APP,13,1999-05-29 00:02:46,1991-09-25 10:38:24,\n5,APP,11,2003-08-29 03:32:52,1986-05-23 07:17:59,\n6,REG,5,1979-07-04 08:54:23,1976-10-04 22:13:27,\n7,APP,13,1978-09-13 16:23:29,1979-01-06 05:05:30,\n8,APP,15,2001-06-18 06:35:49,1986-05-18 01:54:56,\n9,APP,6,2014-01-28 05:11:34,1980-02-24 15:23:44,\n10,REG,7,2002-07-26 15:50:28,1987-10-29 15:35:50,\n\nQuestion: For each grant id, how many documents does it have, and which one has the most?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'grant_id' and count the number of documents for each grant\ndocuments_per_grant = df.groupby('grant_id').size()\n\n# Find the maximum number of documents per grant\nmax_documents = documents_per_grant.max()\n\n# Find the grant(s) with the maximum number of documents\ngrants_with_max_documents = documents_per_grant[documents_per_grant == max_documents]\n\n# Print the result\nprint(grants_with_max_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproject_id,outcome_code,outcome_details\n4,Paper,\n3,Patent,\n9,Paper,\n6,Paper,\n9,Patent,\n11,Paper,\n14,Patent,\n14,Paper,\n13,Paper,\n12,Patent,\n\nQuestion: How many Patent outcomes are generated from all the projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where outcome_code is 'Patent'\npatent_df = df[df['outcome_code'] == 'Patent']\n\n# Count the number of rows in the filtered dataframe\nnum_patent_outcomes = len(patent_df)\n\n# Print the number of patent outcomes\nprint(num_patent_outcomes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproject_id,outcome_code,outcome_details\n4,Paper,\n3,Patent,\n9,Paper,\n6,Paper,\n9,Patent,\n11,Paper,\n14,Patent,\n14,Paper,\n13,Paper,\n12,Patent,\n\nQuestion: How many patents outcomes were listed for all the projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where outcome_code is 'Patent'\npatent_df = df[df['outcome_code'] == 'Patent']\n\n# Count the number of rows in the filtered dataframe\nnum_patent_outcomes = len(patent_df)\n\n# Print the number of patent outcomes\nprint(num_patent_outcomes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert date_from to datetime\ndf['date_from'] = pd.to_datetime(df['date_from'])\n\n# Filter for leaders or project start date before 1989-04-24 23:51:54\nfilter_condition = (df['role_code'] == 'leader') | (df['date_from'] < '1989-04-24 23:51:54')\nfiltered_df = df[filter_condition]\n\n# Count unique staff_id (assuming each staff_id is a unique member)\nanswer = filtered_df['staff_id'].nunique()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: How many project members were leaders or started working before '1989-04-24 23:51:54'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert date_from to datetime\ndf['date_from'] = pd.to_datetime(df['date_from'])\n\n# Filter for leaders or project start date before 1989-04-24 23:51:54\nfilter_condition = (df['role_code'] == 'leader') | (df['date_from'] < '1989-04-24 23:51:54')\nfiltered_df = df[filter_condition]\n\n# Count unique staff_id (assuming each staff_id is a unique member)\nanswer = filtered_df['staff_id'].nunique()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: What is the last date of the staff leaving the projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# convert date_to column to datetime\ndf['date_to'] = pd.to_datetime(df['date_to'])\n\n# find the maximum date in date_to column\nlast_date = df['date_to'].max()\n\nprint(last_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: What is the last date that a staff member left a project?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# convert date_to column to datetime\ndf['date_to'] = pd.to_datetime(df['date_to'])\n\n# find the maximum date in date_to column\nlast_date = df['date_to'].max()\n\nprint(last_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproject_id,organisation_id,project_details\n1,15,porro\n2,11,et\n3,7,sint\n4,4,doloremque\n5,11,vel\n6,10,deserunt\n7,3,deleniti\n8,1,ad\n9,4,sed\n10,4,consectetur\n\nQuestion: List the project details of the projects launched by the organisation", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the organization with the most projects\nmost_projects_org = df['organisation_id'].value_counts().idxmax()\n\n# Get the project details for the projects launched by this organization\nmost_projects_details = df.loc[df['organisation_id'] == most_projects_org, 'project_details']\n\n# Print the project details\nprint(most_projects_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproject_id,organisation_id,project_details\n1,15,porro\n2,11,et\n3,7,sint\n4,4,doloremque\n5,11,vel\n6,10,deserunt\n7,3,deleniti\n8,1,ad\n9,4,sed\n10,4,consectetur\n\nQuestion: What are the details for the projects which were launched by the organization with the most projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the organization with the most projects\nmost_projects_org = df['organisation_id'].value_counts().idxmax()\n\n# Get the project details for the projects launched by this organization\nmost_projects_details = df.loc[df['organisation_id'] == most_projects_org, 'project_details']\n\n# Print the project details\nprint(most_projects_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,employer_organisation_id,staff_details\n1,1,quo\n2,4,est\n3,5,aspernatur\n4,3,dolor\n5,2,doloribus\n6,5,consequatur\n7,3,animi\n8,5,consequatur\n9,6,sint\n10,8,iure\n\nQuestion: List the research staff details, and order in ascending order.", "response": "import pandas as pd\n\n# Load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include staff details\nstaff_details = df['staff_details']\n\n# Convert the staff details to a list\nstaff_details_list = staff_details.tolist()\n\n# Sort the list in ascending alphabetical order\nsorted_staff_details = sorted(staff_details_list)\n\n# Save the answer in a variable\nanswer = sorted_staff_details\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,employer_organisation_id,staff_details\n1,1,quo\n2,4,est\n3,5,aspernatur\n4,3,dolor\n5,2,doloribus\n6,5,consequatur\n7,3,animi\n8,5,consequatur\n9,6,sint\n10,8,iure\n\nQuestion: What details are there on the research staff? List the result in ascending alphabetical order.", "response": "import pandas as pd\n\n# Load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include staff details\nstaff_details = df['staff_details']\n\n# Convert the staff details to a list\nstaff_details_list = staff_details.tolist()\n\n# Sort the list in ascending alphabetical order\nsorted_staff_details = sorted(staff_details_list)\n\n# Save the answer in a variable\nanswer = sorted_staff_details\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntask_id,project_id,task_details,eg Agree Objectives\n1,1,a,\n2,2,b,\n3,3,c,\n4,4,q,\n5,5,w,\n6,6,e,\n7,7,r,\n8,8,t,\n9,9,y,\n10,10,u,\n\nQuestion: How many tasks are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the total number of tasks\ntotal_tasks = len(df)\n\n# Print the total number of tasks\nprint(total_tasks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntask_id,project_id,task_details,eg Agree Objectives\n1,1,a,\n2,2,b,\n3,3,c,\n4,4,q,\n5,5,w,\n6,6,e,\n7,7,r,\n8,8,t,\n9,9,y,\n10,10,u,\n\nQuestion: How many tasks are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the total number of tasks\ntotal_tasks = len(df)\n\n# Print the total number of tasks\nprint(total_tasks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: What are the staff roles of the staff who", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['date_from'] = pd.to_datetime(df['date_from'])\ndf['date_to'] = pd.to_datetime(df['date_to'])\n\nstart_date = '2003-04-19 15:06:20'\nend_date = '2016-03-15 00:33:18'\n\ndf_filtered = df[(df['date_from'] <= end_date) & (df['date_to'] >= start_date)]\n\nroles_played = df_filtered['role_code'].unique().tolist()\n\nprint(roles_played)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['date_from'] = pd.to_datetime(df['date_from'])\ndf['date_to'] = pd.to_datetime(df['date_to'])\n\nstart_date = '2003-04-19 15:06:20'\nend_date = '2016-03-15 00:33:18'\n\ndf_filtered = df[(df['date_from'] <= end_date) & (df['date_to'] >= start_date)]\n\nroles_played = df_filtered['role_code'].unique().tolist()\n\nprint(roles_played)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: Which role is most common for the staff?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_role = df['role_code'].value_counts().idxmax()\n\nprint(most_common_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,project_id,role_code,date_from,date_to,other_details\n0.0,2,leader,1981-10-04 22:44:50,1985-05-30 22:26:30,\n674810.0,5,leader,2003-04-19 15:06:20,2010-12-08 11:55:36,\n779.0,2,researcher,1981-10-09 21:32:53,2004-12-16 13:03:36,\n6572.0,4,researcher,1983-02-07 17:55:59,2004-07-28 03:11:47,\n5353407.0,15,leader,2004-11-01 23:52:38,1988-03-04 19:30:05,\n5137097.0,7,researcher,1991-01-11 16:57:50,1993-06-09 12:44:28,\n29.0,9,researcher,2005-01-13 11:49:48,1973-07-19 04:51:26,\n3.0,8,researcher,1970-03-25 06:18:11,1985-12-05 12:00:58,\n3100031.0,11,researcher,1972-01-17 19:42:16,2016-03-15 00:33:18,\n49698449.0,1,leader,1970-04-06 15:50:21,1983-03-19 16:06:31,\n\nQuestion: What is the most common role for the staff?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_role = df['role_code'].value_counts().idxmax()\n\nprint(most_common_role)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many females does this network has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_females = df[df['gender'] == 'female'].shape[0]\n\nprint(num_females)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many females are in the network?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_females = df[df['gender'] == 'female'].shape[0]\n\nprint(num_females)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the average age for all person?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_age = df['age'].mean()\n\nprint(average_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the average age for all people in the table?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_age = df['age'].mean()\n\nprint(average_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many different cities are they from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique cities\nnum_cities = df['city'].nunique()\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many different cities do people originate from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique cities\nnum_cities = df['city'].nunique()\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many type of jobs do they have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# get unique jobs\nunique_jobs = df['job'].nunique()\n\nprint(unique_jobs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many different jobs are listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# get unique jobs\nunique_jobs = df['job'].nunique()\n\nprint(unique_jobs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Who is the oldest person?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum age\nmax_age = df['age'].max()\n\n# Find the name of the person who has the maximum age\noldest_person = df[df['age'] == max_age]['name'].values[0]\n\n# Print the name of the oldest person\nprint(oldest_person)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the name of the person who is the oldest?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum age\nmax_age = df['age'].max()\n\n# Find the name of the person who has the maximum age\noldest_person = df[df['age'] == max_age]['name'].values[0]\n\n# Print the name of the oldest person\nprint(oldest_person)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Who is the oldest person whose job is student?", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe for students only\nstudents_df = df[df['job'] == 'student']\n\n# find the oldest student\noldest_student = students_df.loc[students_df['age'].idxmax()]\n\n# save the answer in a variable\nanswer = oldest_student['name']\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the name of the oldest student?", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe for students only\nstudents_df = df[df['job'] == 'student']\n\n# find the oldest student\noldest_student = students_df.loc[students_df['age'].idxmax()]\n\n# save the answer in a variable\nanswer = oldest_student['name']\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Who is the youngest male?", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter out the rows where gender is male\nmale_df = df[df['gender'] == 'male']\n\n# find the minimum age among the males\nmin_age = male_df['age'].min()\n\n# get the name of the youngest male\nyoungest_male_name = male_df[male_df['age'] == min_age]['name'].values[0]\n\n# print the name of the youngest male\nprint(youngest_male_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the name of the youngest male?", "response": "# import pandas\nimport pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter out the rows where gender is male\nmale_df = df[df['gender'] == 'male']\n\n# find the minimum age among the males\nmin_age = male_df['age'].min()\n\n# get the name of the youngest male\nyoungest_male_name = male_df[male_df['age'] == min_age]['name'].values[0]\n\n# print the name of the youngest male\nprint(youngest_male_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How old is the doctor named Zach?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the name is Zach and the job is doctor\ndoctor_zach = df[(df['name'] == 'Zach') & (df['job'] == 'doctor')]\n\n# Get the age of Zach\nzach_age = doctor_zach['age'].values[0]\n\n# Print the age of Zach\nprint(zach_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the age of the doctor named Zach?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the name is Zach and the job is doctor\ndoctor_zach = df[(df['name'] == 'Zach') & (df['job'] == 'doctor')]\n\n# Get the age of Zach\nzach_age = doctor_zach['age'].values[0]\n\n# Print the age of Zach\nprint(zach_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Who is the person whose age is below 30?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get people with age less than 30\ndf_filtered = df[df['age'] < 30]\n\n# Get the names of these people\nanswer = df_filtered['name'].values\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the name of the person whose age is below 30?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get people with age less than 30\ndf_filtered = df[df['age'] < 30]\n\n# Get the names of these people\nanswer = df_filtered['name'].values\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many people whose age is greater 30 and job is engineer?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include engineers older than 30\nengineers_over_30 = df[(df['job'] == 'engineer') & (df['age'] > 30)]\n\n# Count the number of engineers over 30\nnum_engineers_over_30 = len(engineers_over_30)\n\n# Print the number of engineers over 30\nprint(num_engineers_over_30)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: HOw many engineers are older than 30?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include engineers older than 30\nengineers_over_30 = df[(df['job'] == 'engineer') & (df['age'] > 30)]\n\n# Count the number of engineers over 30\nnum_engineers_over_30 = len(engineers_over_30)\n\n# Print the number of engineers over 30\nprint(num_engineers_over_30)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the average age for each gender?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Compute the average age for each gender\naverage_age_per_gender = df.groupby('gender')['age'].mean()\n\n# Print the result\nprint(average_age_per_gender)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How old is each gender, on average?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Compute the average age for each gender\naverage_age_per_gender = df.groupby('gender')['age'].mean()\n\n# Print the result\nprint(average_age_per_gender)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is average age for different job title?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'job' and calculate the mean of 'age' for each group\naverage_age_by_job = df.groupby('job')['age'].mean()\n\n# Print the result\nprint(average_age_by_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How old is the average person for each job?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'job' and calculate the mean of 'age' for each group\naverage_age_by_job = df.groupby('job')['age'].mean()\n\n# Print the result\nprint(average_age_by_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is average age of male for different job title?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for only males\ndf_male = df[df['gender'] == 'male']\n\n# Grouping by job title and calculating the mean age\navg_age_per_job = df_male.groupby('job')['age'].mean()\n\n# Printing the result\nprint(avg_age_per_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the average age for a male in each job?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading the csv file\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe for only males\ndf_male = df[df['gender'] == 'male']\n\n# Grouping by job title and calculating the mean age\navg_age_per_job = df_male.groupby('job')['age'].mean()\n\n# Printing the result\nprint(avg_age_per_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is minimum age for different job title?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by job and get the minimum age for each job\nyoungest_per_job = df.groupby('job')['age'].min()\n\n# Print the result\nprint(youngest_per_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How old is the youngest person for each job?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by job and get the minimum age for each job\nyoungest_per_job = df.groupby('job')['age'].min()\n\n# Print the result\nprint(youngest_per_job)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Find the number of people who is under 40 for each gender.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data by age less than 40\nfiltered_data = df[df['age'] < 40]\n\n# Count the number of people for each gender\nresult = filtered_data['gender'].value_counts()\n\n# Save the result in a variable and print it\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many people are under 40 for each gender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data by age less than 40\nfiltered_data = df[df['age'] < 40]\n\n# Count the number of people for each gender\nresult = filtered_data['gender'].value_counts()\n\n# Save the result in a variable and print it\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Find the name of people whose age is greater than any engineer sorted by their age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include people who are engineers\nengineers = df[df['job'] == 'engineer']\n\n# Get the maximum age of engineers\nmax_engineer_age = engineers['age'].max()\n\n# Filter the dataframe to only include people who are older than the maximum engineer age and sort by age\nold_people = df[df['age'] > max_engineer_age].sort_values(by='age')\n\n# Get the names of the people who are older than the maximum engineer age\nanswer = old_people['name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What is the name of all the people who are older than at least one engineer? Order them by age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include people who are engineers\nengineers = df[df['job'] == 'engineer']\n\n# Get the maximum age of engineers\nmax_engineer_age = engineers['age'].max()\n\n# Filter the dataframe to only include people who are older than the maximum engineer age and sort by age\nold_people = df[df['age'] > max_engineer_age].sort_values(by='age')\n\n# Get the names of the people who are older than the maximum engineer age\nanswer = old_people['name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Find the number of people whose age is greater than all engineers.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the age of the oldest engineer\noldest_engineer_age = df[df['job'] == 'engineer']['age'].max()\n\n# Get the number of people older than the oldest engineer\nnum_older_people = df[df['age'] > oldest_engineer_age].shape[0]\n\n# Print the answer\nprint(num_older_people)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: How many people are older than every engineer?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the age of the oldest engineer\noldest_engineer_age = df[df['job'] == 'engineer']['age'].max()\n\n# Get the number of people older than the oldest engineer\nnum_older_people = df[df['age'] > oldest_engineer_age].shape[0]\n\n# Print the answer\nprint(num_older_people)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: list the name, job title of all people ordered by their names.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'name' in ascending order\nsorted_df = df.sort_values('name')\n\n# Select the 'name' and 'job' columns\nresult = sorted_df[['name', 'job']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What are the names and job titles of every person ordered alphabetically by name?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'name' in ascending order\nsorted_df = df.sort_values('name')\n\n# Select the 'name' and 'job' columns\nresult = sorted_df[['name', 'job']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: Find the names of all person sorted in the descending order using age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by age in descending order\ndf_sorted = df.sort_values('age', ascending=False)\n\n# Select the 'name' column\nnames_sorted_by_age = df_sorted['name']\n\nprint(names_sorted_by_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nname,age,city,gender,job\nAlice,25,new york city,female,student\nBob,35,salt lake city,male,engineer\nZach,45,austin,male,doctor\nDan,26,chicago,female,student\n\nQuestion: What are the names of everybody sorted by age in descending order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by age in descending order\ndf_sorted = df.sort_values('age', ascending=False)\n\n# Select the 'name' column\nnames_sorted_by_age = df_sorted['name']\n\nprint(names_sorted_by_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: How many members are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of members is the total number of rows in the DataFrame\nnum_members = df.shape[0]\n\nprint(num_members)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: List the names of members in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the data by Name column in ascending order\nsorted_df = df.sort_values('Name')\n\n# Save the answer in a variable\nmember_names = sorted_df['Name'].tolist()\n\n# Print the variable\nprint(member_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: What are the names and countries of members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the names and countries of members\nnames_and_countries = df[['Name', 'Country']]\n\n# Print the names and countries\nprint(names_and_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: Show the names of members whose country is \"United States\" or \"Canada\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include members from the United States or Canada\ndf_filtered = df[df['Country'].isin(['United States', 'Canada'])]\n\n# Get the names of the members\nnames = df_filtered['Name'].tolist()\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: Show the different countries and the number of members from each.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the count of each country\ncountry_counts = df['Country'].value_counts()\n\n# Print the country counts\nprint(country_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: Show the most common country across members.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the most common country\ncommon_country = df['Country'].mode()[0]\n\n# Print the common country\nprint(common_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Name,Country,College_ID\n1,Jack Nicklaus,United States,1\n2,Billy Casper,United States,1\n3,Arnold Palmer,Canada,4\n4,Tom Watson,United States,4\n5,Homero Blancas,United States,2\n6,Pat Fitzsimons,Canada,5\n7,Bobby Nichols,Canada,5\n8,J. C. Snead,Canada,4\n9,Lee Trevino,United States,3\n10,Tom Weiskopf,United States,3\n\nQuestion: Which countries have more than two members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of members per country\ncountry_counts = df['Country'].value_counts()\n\n# Filter the countries with more than two members\ncountries_gt_2_members = country_counts[country_counts > 2]\n\n# Save the answer in a variable and print it\nanswer = countries_gt_2_members.index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCollege_ID,Name,Leader_Name,College_Location\n1,Saskatchewan School,Ousame Tounkara,Ottawa\n2,B.C. School,Ryan Thelwell,Minnesota\n3,Calgary School,Andre Arlain,St. Francis Xavier\n4,Edmonton School,Samir Chahine,McGill\n5,Toronto School,Roger Dunbrack,Western Ontario\n\nQuestion: Show the leader names and locations of colleges.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# select the Leader_Name and College_Location columns\nleader_loc = df[['Leader_Name', 'College_Location']]\n\nprint(leader_loc)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the name and access counts of all documents, in alphabetic order of the document name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('document_name')\nresult = df[['document_name', 'access_count']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What are the names of all the documents, as well as the access counts of each, ordered alphabetically?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values('document_name')\nresult = df[['document_name', 'access_count']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_access_count = df['access_count'].max()\n\ndocument_name = df[df['access_count'] == max_access_count]['document_name'].values[0]\n\nanswer = (document_name, max_access_count)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_access_count = df['access_count'].max()\n\ndocument_name = df[df['access_count'] == max_access_count]['document_name'].values[0]\n\nanswer = (document_name, max_access_count)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the types of documents with more than 4 documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter out the documents with more than 4 documents\ndf_filtered = df.groupby('document_type_code').filter(lambda x: len(x) > 4)\n\n# Find the types of documents with more than 4 documents\ndocument_types = df_filtered['document_type_code'].unique()\n\n# Save the answer in a variable\nanswer = document_types\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What are the codes of types of documents of which there are for or more?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter out the documents with more than 4 documents\ndf_filtered = df.groupby('document_type_code').filter(lambda x: len(x) > 4)\n\n# Find the types of documents with more than 4 documents\ndocument_types = df_filtered['document_type_code'].unique()\n\n# Save the answer in a variable\nanswer = document_types\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the total access count of all documents in the most popular document type.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the most common document type\nmost_common_type = df['document_type_code'].mode()[0]\n\n# Filter the DataFrame by the most common document type\nfiltered_df = df[df['document_type_code'] == most_common_type]\n\n# Calculate the total access count for the documents of the most common type\ntotal_access_count = filtered_df['access_count'].sum()\n\nprint(total_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What is the total access count of documents that are of the most common document type?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the most common document type\nmost_common_type = df['document_type_code'].mode()[0]\n\n# Filter the DataFrame by the most common document type\nfiltered_df = df[df['document_type_code'] == most_common_type]\n\n# Calculate the total access count for the documents of the most common type\ntotal_access_count = filtered_df['access_count'].sum()\n\nprint(total_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What is the average access count of documents?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average access count\naverage_access_count = df['access_count'].mean()\n\n# Print the average access count\nprint(average_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the average access count across all documents?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average access count\naverage_access_count = df['access_count'].mean()\n\n# Print the average access count\nprint(average_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What is the type of the document named \"David CV\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for the document named 'David CV'\ndocument_david_cv = df[df['document_name'] == 'David CV']\n\n# Get the type of the document\ndocument_type = document_david_cv['document_type_code'].values[0]\n\nprint(\"The type of the document named 'David CV' is: \", document_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Return the type code of the document named \"David CV\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for the document named 'David CV'\ndocument_david_cv = df[df['document_name'] == 'David CV']\n\n# Get the type of the document\ndocument_type = document_david_cv['document_type_code'].values[0]\n\nprint(\"The type of the document named 'David CV' is: \", document_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What document types do have more than 10000 total access number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['access_count'] <= 10000]\nresult = df_filtered['document_type_code'].unique()\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Return the codes of the document types that do not have a total access count of over 10000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['access_count'] <= 10000]\nresult = df_filtered['document_type_code'].unique()\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: List all the document names which contains \"CV\".", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the condition\nfiltered_df = df[df['document_name'].str.contains('CV')]\n\n# Save the answer in a variable\nanswer = filtered_df['document_name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What are the names of documents that contain the substring \"CV\"?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the condition\nfiltered_df = df[df['document_name'].str.contains('CV')]\n\n# Save the answer in a variable\nanswer = filtered_df['document_name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuser_id,role_code,user_name,user_login,password\n1,PROJ-MGR,dickens.elta,0,e72b5a2d50b39a8760764a5f7a9d68ca2f076877\n2,DBA,tremblay.raheem,1,9bc25a040d5647ced5ec32e1a455e90fafc10bcb\n3,DBA,lynn.haley,0,90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\n4,PROJ-MGR,ycremin,0,f6977378f409f5d2d230016a6678a582e14f43b0\n5,PROJ-MGR,larson.vesta,1,da383455a05a824606c54e99f671c4d6a2ddae26\n6,DBA,amelie53,0,6aa66440864ff8143fe7dee5940a6af3460bad07\n7,DBA,jacklyn.schmitt,1,3f6affa583bfdf7fac6faeb2ca418431909d4b39\n8,PROJ-MGR,joanne.deckow,0,20241478f890508ac47870cfba472e1db04a71ca\n9,PROJ-MGR,dickinson.lenora,0,a0fe5434a5f4c218e37b0082f2408b357feb0fa6\n10,DBA,heller.harley,1,11af7569a5c1e8b455add5755e18131be2ac8636\n\nQuestion: How many users are logged in?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'user_login' column to integers (if not already done)\ndf['user_login'] = df['user_login'].astype(int)\n\n# Count the number of logged-in users\nnum_logged_in = df['user_login'].sum()\n\n# Print the answer\nprint(num_logged_in)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuser_id,role_code,user_name,user_login,password\n1,PROJ-MGR,dickens.elta,0,e72b5a2d50b39a8760764a5f7a9d68ca2f076877\n2,DBA,tremblay.raheem,1,9bc25a040d5647ced5ec32e1a455e90fafc10bcb\n3,DBA,lynn.haley,0,90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\n4,PROJ-MGR,ycremin,0,f6977378f409f5d2d230016a6678a582e14f43b0\n5,PROJ-MGR,larson.vesta,1,da383455a05a824606c54e99f671c4d6a2ddae26\n6,DBA,amelie53,0,6aa66440864ff8143fe7dee5940a6af3460bad07\n7,DBA,jacklyn.schmitt,1,3f6affa583bfdf7fac6faeb2ca418431909d4b39\n8,PROJ-MGR,joanne.deckow,0,20241478f890508ac47870cfba472e1db04a71ca\n9,PROJ-MGR,dickinson.lenora,0,a0fe5434a5f4c218e37b0082f2408b357feb0fa6\n10,DBA,heller.harley,1,11af7569a5c1e8b455add5755e18131be2ac8636\n\nQuestion: Count the number of users that are logged in.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'user_login' column to integers (if not already done)\ndf['user_login'] = df['user_login'].astype(int)\n\n# Count the number of logged-in users\nnum_logged_in = df['user_login'].sum()\n\n# Print the answer\nprint(num_logged_in)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Find the average access count of documents with the least popular structure.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the least common structure\nleast_common_structure = df['document_structure_code'].value_counts().idxmin()\n\n# Filter the DataFrame to get documents with the least common structure\nleast_common_structure_df = df[df['document_structure_code'] == least_common_structure]\n\n# Calculate the average access count\naverage_access_count = least_common_structure_df['access_count'].mean()\n\n# Print the result\nprint(average_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What is the average access count of documents that have the least common structure?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the least common structure\nleast_common_structure = df['document_structure_code'].value_counts().idxmin()\n\n# Filter the DataFrame to get documents with the least common structure\nleast_common_structure_df = df[df['document_structure_code'] == least_common_structure]\n\n# Calculate the average access count\naverage_access_count = least_common_structure_df['access_count'].mean()\n\n# Print the result\nprint(average_access_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nimage_id,image_alt_text,image_name,image_url\n1,Lea,top1,http://www.rempelnader.com/1.jpg\n2,Arden,top2,http://connellykertzmann.org/1.jpg\n3,Mohamed,top3,http://www.bernierconnelly.com/1.jpg\n4,Chaya,top4,http://abernathyboehm.com/1.jpg\n5,Percival,chapter1,http://gaylord.info/1.jpg\n6,Lincoln,chapter2,http://www.hellerreinger.com/1.jpg\n7,Camylle,chapter3,http://faycummerata.net/1.jpg\n8,Ashtyn,chapter4,http://haleychamplin.net/1.jpg\n9,Filomena,chapter5,http://www.fritsch.net/1.jpg\n10,Jeanette,data1,http://sauer.com/1.jpg\n\nQuestion: List all the image name and URLs in the order of their names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by 'image_name'\ndf_sorted = df.sort_values('image_name')\n\n# select 'image_name' and 'image_url' columns\nresult = df_sorted[['image_name', 'image_url']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nimage_id,image_alt_text,image_name,image_url\n1,Lea,top1,http://www.rempelnader.com/1.jpg\n2,Arden,top2,http://connellykertzmann.org/1.jpg\n3,Mohamed,top3,http://www.bernierconnelly.com/1.jpg\n4,Chaya,top4,http://abernathyboehm.com/1.jpg\n5,Percival,chapter1,http://gaylord.info/1.jpg\n6,Lincoln,chapter2,http://www.hellerreinger.com/1.jpg\n7,Camylle,chapter3,http://faycummerata.net/1.jpg\n8,Ashtyn,chapter4,http://haleychamplin.net/1.jpg\n9,Filomena,chapter5,http://www.fritsch.net/1.jpg\n10,Jeanette,data1,http://sauer.com/1.jpg\n\nQuestion: What are the names and urls of images, sorted alphabetically?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# sort the dataframe by 'image_name'\ndf_sorted = df.sort_values('image_name')\n\n# select 'image_name' and 'image_url' columns\nresult = df_sorted[['image_name', 'image_url']]\n\n# print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuser_id,role_code,user_name,user_login,password\n1,PROJ-MGR,dickens.elta,0,e72b5a2d50b39a8760764a5f7a9d68ca2f076877\n2,DBA,tremblay.raheem,1,9bc25a040d5647ced5ec32e1a455e90fafc10bcb\n3,DBA,lynn.haley,0,90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\n4,PROJ-MGR,ycremin,0,f6977378f409f5d2d230016a6678a582e14f43b0\n5,PROJ-MGR,larson.vesta,1,da383455a05a824606c54e99f671c4d6a2ddae26\n6,DBA,amelie53,0,6aa66440864ff8143fe7dee5940a6af3460bad07\n7,DBA,jacklyn.schmitt,1,3f6affa583bfdf7fac6faeb2ca418431909d4b39\n8,PROJ-MGR,joanne.deckow,0,20241478f890508ac47870cfba472e1db04a71ca\n9,PROJ-MGR,dickinson.lenora,0,a0fe5434a5f4c218e37b0082f2408b357feb0fa6\n10,DBA,heller.harley,1,11af7569a5c1e8b455add5755e18131be2ac8636\n\nQuestion: Find the number of users in each role.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of users in each role\nrole_count = df['role_code'].value_counts()\n\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nuser_id,role_code,user_name,user_login,password\n1,PROJ-MGR,dickens.elta,0,e72b5a2d50b39a8760764a5f7a9d68ca2f076877\n2,DBA,tremblay.raheem,1,9bc25a040d5647ced5ec32e1a455e90fafc10bcb\n3,DBA,lynn.haley,0,90db8f51449e6c39e2a01f0b649d5a92fe76bbbb\n4,PROJ-MGR,ycremin,0,f6977378f409f5d2d230016a6678a582e14f43b0\n5,PROJ-MGR,larson.vesta,1,da383455a05a824606c54e99f671c4d6a2ddae26\n6,DBA,amelie53,0,6aa66440864ff8143fe7dee5940a6af3460bad07\n7,DBA,jacklyn.schmitt,1,3f6affa583bfdf7fac6faeb2ca418431909d4b39\n8,PROJ-MGR,joanne.deckow,0,20241478f890508ac47870cfba472e1db04a71ca\n9,PROJ-MGR,dickinson.lenora,0,a0fe5434a5f4c218e37b0082f2408b357feb0fa6\n10,DBA,heller.harley,1,11af7569a5c1e8b455add5755e18131be2ac8636\n\nQuestion: What are the different role codes for users, and how many users have each?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of users in each role\nrole_count = df['role_code'].value_counts()\n\nprint(role_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: What document types have more than 2 corresponding documents?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by document_type_code and count the number of documents in each group\ncounts = df.groupby('document_type_code')['document_name'].count()\n\n# Find the document types that have more than 2 documents\ndocument_types = counts[counts > 2].index.tolist()\n\n# Print the document types\nprint(document_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndocument_code,document_structure_code,document_type_code,access_count,document_name\n217,8,Book,1864,Learning English\n621,1,Paper,8208,Research about Art history\n958,8,Book,3769,Learning Database\n961,5,Advertisement,6661,Summer Sails\n989,9,Book,2910,Learning Japanese\n930,9,CV,6345,David CV\n928,8,Book,2045,How to cook pasta\n510,6,Paper,3479,Humanity: a fact\n706,9,Advertisement,8623,Winter Sails\n465,9,CV,5924,John CV\n\nQuestion: Give the codes of document types that have more than 2 corresponding documents.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by document_type_code and count the number of documents in each group\ncounts = df.groupby('document_type_code')['document_name'].count()\n\n# Find the document types that have more than 2 documents\ndocument_types = counts[counts > 2].index.tolist()\n\n# Print the document types\nprint(document_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: How many companies are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_companies = df.shape[0]\n\nprint(num_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Count the number of companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_companies = df.shape[0]\n\nprint(num_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: List the names of companies in descending order of market value.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame based on the 'Market_Value_billion' column in descending order\ndf_sorted = df.sort_values('Market_Value_billion', ascending=False)\n\n# Save the sorted company names into a variable\ncompany_names_sorted = df_sorted['name'].tolist()\n\n# Print the variable\nprint(company_names_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Sort the company names in descending order of the company's market value.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame based on the 'Market_Value_billion' column in descending order\ndf_sorted = df.sort_values('Market_Value_billion', ascending=False)\n\n# Save the sorted company names into a variable\ncompany_names_sorted = df_sorted['name'].tolist()\n\n# Print the variable\nprint(company_names_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: What are the names of companies whose headquarters are not \"USA\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows where the Headquarters column is not \"USA\"\nnot_usa_df = df[df['Headquarters'] != \"USA\"]\n\n# Save the names of the companies in a variable\ncompany_names = not_usa_df['name'].tolist()\n\n# Print the variable\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Find the names of the companies whose headquarters are not located in \"USA\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows where the Headquarters column is not \"USA\"\nnot_usa_df = df[df['Headquarters'] != \"USA\"]\n\n# Save the names of the companies in a variable\ncompany_names = not_usa_df['name'].tolist()\n\n# Print the variable\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: What are the name and assets of each company, sorted in ascending order of company name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'name' and 'Assets_billion' columns\ndf = df[['name', 'Assets_billion']]\n\n# Sort the dataframe by company name in ascending order\ndf = df.sort_values('name')\n\n# Save the answer in a variable\nanswer = df\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: List the name and assets of each company in ascending order of company name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'name' and 'Assets_billion' columns\ndf = df[['name', 'Assets_billion']]\n\n# Sort the dataframe by company name in ascending order\ndf = df.sort_values('name')\n\n# Save the answer in a variable\nanswer = df\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: What are the average profits of companies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_profits = df['Profits_billion'].mean()\n\nprint(average_profits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Compute the average profits companies make.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_profits = df['Profits_billion'].mean()\n\nprint(average_profits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out companies in the \"Banking\" industry\nnon_banking_companies = df[df['Industry'] != 'Banking']\n\n# Find the maximum and minimum sales\nmax_sales = non_banking_companies['Sales_billion'].max()\nmin_sales = non_banking_companies['Sales_billion'].min()\n\n# Save the answer in a variable and print it\nanswer = (max_sales, min_sales)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out companies in the \"Banking\" industry\nnon_banking_companies = df[df['Industry'] != 'Banking']\n\n# Find the maximum and minimum sales\nmax_sales = non_banking_companies['Sales_billion'].max()\nmin_sales = non_banking_companies['Sales_billion'].min()\n\n# Save the answer in a variable and print it\nanswer = (max_sales, min_sales)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: How many different industries are the companies in?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique industries\nnum_industries = df['Industry'].nunique()\n\n# Print the number of industries\nprint(num_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Count the number of distinct company industries.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique industries\nnum_industries = df['Industry'].nunique()\n\n# Print the number of industries\nprint(num_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: List the names of buildings in descending order of building height.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'Height' in descending order\ndf_sorted = df.sort_values(by='Height', ascending=False)\n\n# Extract the 'name' column from the sorted dataframe\nbuilding_names = df_sorted['name'].tolist()\n\n# Print the list of building names\nprint(building_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: What are the names of buildings sorted in descending order of building height?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'Height' in descending order\ndf_sorted = df.sort_values(by='Height', ascending=False)\n\n# Extract the 'name' column from the sorted dataframe\nbuilding_names = df_sorted['name'].tolist()\n\n# Print the list of building names\nprint(building_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: Find the stories of the building with the largest height.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Height'] = df['Height'].astype(int)\ndf['Stories'] = df['Stories'].astype(int)\n\nlargest_height_building = df[df['Height'] == df['Height'].max()]\n\nstories_largest_building = largest_height_building['Stories'].values[0]\n\nprint(stories_largest_building)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: What is the stories of highest building?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Height'] = df['Height'].astype(int)\ndf['Stories'] = df['Stories'].astype(int)\n\nlargest_height_building = df[df['Height'] == df['Height'].max()]\n\nstories_largest_building = largest_height_building['Stories'].values[0]\n\nprint(stories_largest_building)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include buildings with 'on-hold' status\non_hold_buildings = df[df['Status'] == 'on-hold']\n\n# Sort the buildings by stories in ascending order\non_hold_buildings = on_hold_buildings.sort_values(by='Stories')\n\n# Save the answer in a variable and print the variable\nanswer = on_hold_buildings['name'].values\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,City,Height,Stories,Status\n1,Torre KOI,Monterrey,220,67,under construction\n2,Torre Mitikah,Mexico City,210,60,under construction\n3,Punto Chapultepec,Mexico City,210,59,proposed\n4,Torre Reforma,Mexico City,330,57,under construction\n5,Corporativo BBVA Bancomer,Mexico City,220,50,under construction\n6,Reforma 432,Mexico City,300,100,under construction\n7,Torre New York Life,Mexico City,50,6,under construction\n8,LIU East,Monterrey,73,20,under construction\n9,Residencial Vidalta Torre Altaire 2,Mexico City,150,44,on-hold\n10,Residencial Vidalta Torre Altaire 3,Mexico City,200,44,on-hold\n\nQuestion: Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include buildings with 'on-hold' status\non_hold_buildings = df[df['Status'] == 'on-hold']\n\n# Sort the buildings by stories in ascending order\non_hold_buildings = on_hold_buildings.sort_values(by='Stories')\n\n# Save the answer in a variable and print the variable\nanswer = on_hold_buildings['name'].values\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Please show each industry and the corresponding number of companies in that industry.", "response": "import pandas as pd\n\n# Load data from csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of companies in each industry\nresult = df['Industry'].value_counts()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Whah are the name of each industry and the number of companies in that industry?", "response": "import pandas as pd\n\n# Load data from csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of companies in each industry\nresult = df['Industry'].value_counts()\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Please show the industries of companies in descending order of the number of companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nindustries = df['Industry'].unique()\nprint(industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Sort all the industries in descending order of the count of companies in each industry", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nindustries = df['Industry'].unique()\nprint(industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: List the industry shared by the most companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_companies_industry = df['Industry'].value_counts().idxmax()\n\nprint(most_companies_industry)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Which industry has the most companies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_companies_industry = df['Industry'].value_counts().idxmax()\n\nprint(most_companies_industry)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nusa_industries = df[df['Headquarters'] == 'USA']['Industry']\nchina_industries = df[df['Headquarters'] == 'China']['Industry']\n\nshared_industries = set(usa_industries).intersection(set(china_industries))\n\nprint(shared_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Which industries have both companies with headquarter in \"USA\" and companies with headquarter in \"China\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nusa_industries = df[df['Headquarters'] == 'USA']['Industry']\nchina_industries = df[df['Headquarters'] == 'China']['Industry']\n\nshared_industries = set(usa_industries).intersection(set(china_industries))\n\nprint(shared_industries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter companies that are in either \"Banking\" or \"Conglomerate\" industry\nfiltered_df = df[df['Industry'].isin(['Banking', 'Conglomerate'])]\n\n# Count the number of companies in the filtered dataframe\nnum_companies = len(filtered_df)\n\n# Save the answer in a variable\nanswer = num_companies\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter companies that are in either \"Banking\" or \"Conglomerate\" industry\nfiltered_df = df[df['Industry'].isin(['Banking', 'Conglomerate'])]\n\n# Count the number of companies in the filtered dataframe\nnum_companies = len(filtered_df)\n\n# Save the answer in a variable\nanswer = num_companies\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Show the headquarters shared by more than two companies.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by Headquarters\ngrouped_df = df.groupby('Headquarters')\n\n# Count the number of companies in each Headquarters\ncount_df = grouped_df.size().reset_index(name='counts')\n\n# Filter the Headquarters used by more than 2 companies\nfiltered_df = count_df[count_df['counts'] > 2]\n\n# Save the answer in a variable and print the variable\nanswer = filtered_df['Headquarters'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion\n1,JPMorgan Chase,USA,Banking,115.5,17.4,2117.6,182.2\n2,HSBC,UK,Banking,103.3,13.3,2467.9,186.5\n3,General Electric,USA,Conglomerate,156.2,11.6,751.2,216.2\n4,ExxonMobil,USA,Oil and gas,341.6,30.5,302.5,407.2\n5,Royal Dutch Shell,Netherlands,Oil and gas,369.1,20.1,317.2,212.9\n6,PetroChina,China,Oil and gas,222.3,21.2,251.3,320.8\n7,Industrial and Commercial Bank of China,China,Banking,69.2,18.8,1723.5,239.5\n8,Berkshire Hathaway,USA,Conglomerate,136.2,13.0,372.2,211\n9,Petrobras,Brazil,Oil and gas,121.3,21.2,313.2,238.8\n10,Citigroup,USA,Banking,111.5,10.6,1913.9,132.8\n\nQuestion: Which headquarter locations are used by more than 2 companies?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by Headquarters\ngrouped_df = df.groupby('Headquarters')\n\n# Count the number of companies in each Headquarters\ncount_df = grouped_df.size().reset_index(name='counts')\n\n# Filter the Headquarters used by more than 2 companies\nfiltered_df = count_df[count_df['counts'] > 2]\n\n# Save the answer in a variable and print the variable\nanswer = filtered_df['Headquarters'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: How many products are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_count = df['Product_ID'].count()\n\nprint(product_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: List the name of products in ascending order of price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Product_Price' in ascending order\ndf_sorted = df.sort_values('Product_Price')\n\n# Save the names of the products in a list\nproduct_names = df_sorted['Product_Name'].tolist()\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: What are the names and type codes of products?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the relevant columns\nproduct_info = df[['Product_Name', 'Product_Type_Code']]\n\n# Print the DataFrame\nprint(product_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: Show the prices of the products named \"Dining\" or \"Trading Policy\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the product name is either \"Dining\" or \"Trading Policy\"\nfiltered_df = df[df['Product_Name'].isin(['Dining', 'Trading Policy'])]\n\n# Select only the product price column from the filtered dataframe\nproduct_prices = filtered_df['Product_Price']\n\n# Print the product prices\nprint(product_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: What is the average price for products?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_price = df['Product_Price'].mean()\n\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: What is the name of the product with the highest price?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum price\nmax_price = df['Product_Price'].max()\n\n# Find the product name with the maximum price\nproduct_name = df.loc[df['Product_Price'] == max_price, 'Product_Name'].values[0]\n\n# Print the product name with the highest price\nprint(product_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: Show different type codes of products and the number of products with each type code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Counting the number of products for each product type code\nproduct_type_count = df['Product_Type_Code'].value_counts()\n\n# Printing the result\nprint(product_type_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: Show the most common type code across products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common type code\ncommon_type_code = df['Product_Type_Code'].mode().tolist()\n\n# Print the most common type code\nprint(common_type_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: Show the product type codes that have at least two products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of products for each product type code\nproduct_counts = df['Product_Type_Code'].value_counts()\n\n# Filter the product types that have at least two products\nmultiple_product_types = product_counts[product_counts >= 2].index.tolist()\n\nprint(multiple_product_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Type_Code,Product_Name,Product_Price\n1,Books,Business Policy,1336.26\n3,Food,Special Dinning,2894.94\n5,Clothes,Men suits,3298.84\n6,Electronics,TV Equipments,932.25\n7,Books,Business Policy B,3215.66\n10,Electronics,TV Equipments,4427.49\n11,Electronics,Conference Equipments,3289.47\n18,Books,Trading Policy,3228.49\n20,Books,Trading Policy B,4343.83\n22,Food,Dinning,3574.56\n\nQuestion: Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_high = df[df['Product_Price'] > 4500]\ndf_low = df[df['Product_Price'] < 3000]\n\ncommon_codes = set(df_high['Product_Type_Code']) & set(df_low['Product_Type_Code'])\n\nprint(common_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtwork_ID,Type,Name\n1,Program Music/Variety Show,Indonesian Idol\n2,Program Music/Variety Show,I Know\n3,Presenter Music/Variety Show,Loving you\n4,Program Music/Variety Show,Why\n5,Presenter Music/Variety Show,Boys\n6,Program Talent Show,Cats\n7,Presenter Talent Show,Daniel Mananta\n8,Program Talent Show,Martin\n9,Presenter Talent Show,Back Home\n\nQuestion: How many artworks are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of artworks\nnumber_of_artworks = len(df)\n\n# Print the result\nprint(number_of_artworks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtwork_ID,Type,Name\n1,Program Music/Variety Show,Indonesian Idol\n2,Program Music/Variety Show,I Know\n3,Presenter Music/Variety Show,Loving you\n4,Program Music/Variety Show,Why\n5,Presenter Music/Variety Show,Boys\n6,Program Talent Show,Cats\n7,Presenter Talent Show,Daniel Mananta\n8,Program Talent Show,Martin\n9,Presenter Talent Show,Back Home\n\nQuestion: List the name of artworks in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nartwork_names = df['Name'].sort_values().tolist()\n\nprint(artwork_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtwork_ID,Type,Name\n1,Program Music/Variety Show,Indonesian Idol\n2,Program Music/Variety Show,I Know\n3,Presenter Music/Variety Show,Loving you\n4,Program Music/Variety Show,Why\n5,Presenter Music/Variety Show,Boys\n6,Program Talent Show,Cats\n7,Presenter Talent Show,Daniel Mananta\n8,Program Talent Show,Martin\n9,Presenter Talent Show,Back Home\n\nQuestion: List the name of artworks whose type is not \"Program Talent Show\".", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter out the artworks whose type is not \"Program Talent Show\"\nfiltered_df = df[df['Type'] != 'Program Talent Show']\n\n# create a list of artwork names\nartwork_names = filtered_df['Name'].tolist()\n\n# print the list\nprint(artwork_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What are the names and locations of festivals?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# To select names and locations of festivals\ndf_filtered = df[['Festival_Name', 'Location']]\n\n# To print the selected data\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What are the names of the chairs of festivals, sorted in ascending order of the year held?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by Year in ascending order\ndf = df.sort_values('Year')\n\n# Select the Chair_Name column\nchair_names = df['Chair_Name']\n\n# Save the answer in a variable\nanswer = chair_names.values.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What is the location of the festival with the largest number of audience?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum number of audience\nmax_audience = df['Num_of_Audience'].max()\n\n# Find the location of the festival with the largest number of audience\nlocation = df[df['Num_of_Audience'] == max_audience]['Location'].values[0]\n\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What are the names of festivals held in year 2007?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfestivals_2007 = df[df['Year'] == 2007]['Festival_Name']\n\nprint(festivals_2007)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What is the average number of audience for festivals?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_audience = df['Num_of_Audience'].mean()\n\nprint(average_audience)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: Show the names of the three most recent festivals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by 'Year' in descending order\ndf_sorted = df.sort_values(by='Year', ascending=False)\n\n# Selecting the top three recent festivals\ntop_3_recent_festivals = df_sorted['Festival_Name'].head(3)\n\n# Print the top 3 recent festivals\nprint(top_3_recent_festivals)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtwork_ID,Type,Name\n1,Program Music/Variety Show,Indonesian Idol\n2,Program Music/Variety Show,I Know\n3,Presenter Music/Variety Show,Loving you\n4,Program Music/Variety Show,Why\n5,Presenter Music/Variety Show,Boys\n6,Program Talent Show,Cats\n7,Presenter Talent Show,Daniel Mananta\n8,Program Talent Show,Martin\n9,Presenter Talent Show,Back Home\n\nQuestion: Please show different types of artworks with the corresponding number of artworks of each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nartwork_counts = df['Type'].value_counts()\n\nprint(artwork_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtwork_ID,Type,Name\n1,Program Music/Variety Show,Indonesian Idol\n2,Program Music/Variety Show,I Know\n3,Presenter Music/Variety Show,Loving you\n4,Program Music/Variety Show,Why\n5,Presenter Music/Variety Show,Boys\n6,Program Talent Show,Cats\n7,Presenter Talent Show,Daniel Mananta\n8,Program Talent Show,Martin\n9,Presenter Talent Show,Back Home\n\nQuestion: List the most common type of artworks.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the most common type of artwork\nmost_common_type = df['Type'].mode()[0]\n\nprint(most_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: List the year in which there are more than one festivals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by year and count the number of festivals in each year\nfestivals_by_year = df.groupby('Year').size()\n\n# Filter the years that have more than one festival\nyears_with_multiple_festivals = festivals_by_year[festivals_by_year > 1].index.tolist()\n\n# Print the result\nprint(years_with_multiple_festivals)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: Show the number of audience in year 2008 or 2010.", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the rows where year is 2008 or 2010\ndf_filtered = df.loc[(df['Year'] == 2008) | (df['Year'] == 2010)]\n\n# select the Num_of_Audience column\nnum_of_audience = df_filtered['Num_of_Audience']\n\n# print the number of audience\nprint(num_of_audience)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFestival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience\n1,Panasonic Awards,Raymond Floyd,United States,2006,152\n2,Flower Awards,Charles Coody,United States,2007,155\n3,Cherry Awards,Doug Ford,United States,2007,160\n4,Gobel Awards,Arnold Palmer,United States,2008,160\n5,LA Awards,Lucy Lu,United States,2010,161\n\nQuestion: What are the total number of the audiences who visited any of the festivals?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_audience = df['Num_of_Audience'].sum()\n\nprint(total_audience)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npremise_id,premises_type,premise_details\n1,Warehouse,036 Lueilwitz Harbor\n2,Warehouse,676 Kelly Spur\n3,Residence,27839 Carissa Tunnel Suite 048\n4,Residence,2219 Barrows Tunnel Apt. 893\n5,Office,38291 Jerde Light Apt. 713\n6,Office,5585 Abbott Walk\n7,Residence,5510 Veum Green\n8,Warehouse,7230 Tillman Glens Suite 202\n9,Warehouse,62282 Wiza Glen Apt. 430\n10,Office,07318 Annetta Motorway\n\nQuestion: How many premises are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_premises = len(df)\n\nprint(num_premises)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npremise_id,premises_type,premise_details\n1,Warehouse,036 Lueilwitz Harbor\n2,Warehouse,676 Kelly Spur\n3,Residence,27839 Carissa Tunnel Suite 048\n4,Residence,2219 Barrows Tunnel Apt. 893\n5,Office,38291 Jerde Light Apt. 713\n6,Office,5585 Abbott Walk\n7,Residence,5510 Veum Green\n8,Warehouse,7230 Tillman Glens Suite 202\n9,Warehouse,62282 Wiza Glen Apt. 430\n10,Office,07318 Annetta Motorway\n\nQuestion: What are all the distinct premise types?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_types = df['premises_type'].unique()\n\nprint(distinct_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npremise_id,premises_type,premise_details\n1,Warehouse,036 Lueilwitz Harbor\n2,Warehouse,676 Kelly Spur\n3,Residence,27839 Carissa Tunnel Suite 048\n4,Residence,2219 Barrows Tunnel Apt. 893\n5,Office,38291 Jerde Light Apt. 713\n6,Office,5585 Abbott Walk\n7,Residence,5510 Veum Green\n8,Warehouse,7230 Tillman Glens Suite 202\n9,Warehouse,62282 Wiza Glen Apt. 430\n10,Office,07318 Annetta Motorway\n\nQuestion: Find the types and details for all premises and order by the premise type.", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by premises_type and then by premise_details\ndf_sorted = df.sort_values(['premises_type', 'premise_details'])\n\n# Create a new DataFrame with the required columns only\nresult = df_sorted[['premises_type', 'premise_details']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npremise_id,premises_type,premise_details\n1,Warehouse,036 Lueilwitz Harbor\n2,Warehouse,676 Kelly Spur\n3,Residence,27839 Carissa Tunnel Suite 048\n4,Residence,2219 Barrows Tunnel Apt. 893\n5,Office,38291 Jerde Light Apt. 713\n6,Office,5585 Abbott Walk\n7,Residence,5510 Veum Green\n8,Warehouse,7230 Tillman Glens Suite 202\n9,Warehouse,62282 Wiza Glen Apt. 430\n10,Office,07318 Annetta Motorway\n\nQuestion: Show each premise type and the number of premises in that type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'premises_type' and count the number of premises in each type\npremises_count = df.groupby('premises_type')['premise_id'].count()\n\n# Print the result\nprint(premises_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmailshot_id,product_category,mailshot_name,mailshot_start_date,mailshot_end_date\n1,food,US,2018-02-15 09:52:17,2018-03-08 14:40:20\n2,clothes,US,2017-09-14 12:05:30,2018-03-15 01:06:16\n3,food,FED,2017-06-16 11:18:45,2018-03-13 14:42:26\n4,clothes,USPS,2017-09-27 02:35:45,2018-03-18 11:29:56\n5,food,AL,2017-05-20 20:05:09,2018-03-02 21:41:46\n6,clothes,FED,2017-10-23 05:41:45,2018-03-03 08:01:57\n7,food,FED,2017-11-25 03:14:25,2018-03-05 03:08:48\n8,clothes,AL,2017-10-22 08:46:29,2018-03-01 13:42:09\n9,food,US,2017-11-12 08:26:08,2018-02-27 07:58:02\n10,clothes,USPS,2018-01-14 21:03:10,2018-03-19 13:07:33\n\nQuestion: Show all distinct product categories along with the number of mailshots in each category.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Show all distinct product categories along with the number of mailshots in each category\n\n# Group by product_category and count the number of mailshots in each category\ngrouped_df = df.groupby('product_category').size().reset_index(name='counts')\n\n# Print the grouped dataframe\nprint(grouped_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,premise_id,date_address_from,address_type_code,date_address_to\n15,1,1992-08-23 21:17:38,Billing,2018-02-28 20:54:58\n2,2,2010-02-23 02:49:50,Billing,2018-03-15 18:34:41\n1,1,1975-12-24 10:01:37,Shipping,2018-03-08 08:03:51\n3,2,1995-03-26 17:39:46,Shipping,2018-02-27 17:42:19\n7,1,1929-05-14 04:29:43,Billing,2018-03-16 18:51:47\n8,4,1939-01-15 17:55:39,Shipping,2018-03-13 08:21:27\n5,5,1931-03-24 11:44:07,Shipping,2018-03-05 02:34:01\n11,6,1975-04-23 20:41:01,Billing,2018-03-04 03:08:46\n11,3,1920-08-18 04:42:55,Shipping,2018-03-22 22:46:52\n11,5,1960-07-31 06:10:20,Shipping,2018-03-09 03:34:11\n\nQuestion: What are the distinct address type codes for all customer addresses?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_address_codes = df['address_type_code'].unique()\n\nprint(distinct_address_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status_code,shipping_method_code,order_placed_datetime,order_delivered_datetime,order_shipping_charges\n1,2,Cancelled,Unspecified,2015-06-15 18:19:26,2018-03-20 12:00:00,85.79\n2,8,Cancelled,Unspecified,2009-07-05 20:02:55,2018-03-20 12:00:00,98.4\n3,9,Cancelled,FedEx,2008-11-15 12:22:36,2018-03-20 12:00:00,36.87\n4,1,Delivered,UPS,2008-10-23 06:42:10,2018-03-20 12:00:00,98.73\n5,7,Paid,FedEx,2017-05-28 05:48:26,2018-03-20 12:00:00,35.63\n6,2,Cancelled,Unspecified,2014-06-24 13:53:54,2018-03-20 12:00:00,99.26\n7,15,Cancelled,FedEx,2014-08-28 15:08:12,2018-03-20 12:00:00,26.56\n8,2,Delivered,Unspecified,2012-06-05 09:05:34,2018-03-20 12:00:00,77.32\n9,1,Cancelled,FedEx,2009-05-30 16:13:26,2018-03-20 12:00:00,57.36\n10,14,Paid,Unspecified,2013-08-29 03:17:04,2018-03-20 12:00:00,33.58\n\nQuestion: Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get orders with status Cancelled or Paid\nfiltered_df = df[(df['order_status_code'] == 'Cancelled') | (df['order_status_code'] == 'Paid')]\n\n# Select the customer_id and order_shipping_charges columns\nresult_df = filtered_df[['customer_id', 'order_shipping_charges']]\n\nprint(result_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: How many courses are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_courses = df.shape[0]\nprint(number_of_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: Count the number of courses.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_courses = df.shape[0]\nprint(number_of_courses)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: How many courses have more than 2 credits?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only courses with more than 2 credits\nfiltered_df = df[df['Credits'] > 2]\n\n# Get the count of courses with more than 2 credits\nanswer = len(filtered_df)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: Count the number of courses with more than 2 credits.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only courses with more than 2 credits\nfiltered_df = df[df['Credits'] > 2]\n\n# Get the count of courses with more than 2 credits\nanswer = len(filtered_df)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: List all names of courses with 1 credit?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where credits equal 1\none_credit_courses = df[df['Credits'] == 1]\n\n# Extract only the course names from the filtered dataframe\ncourse_names = one_credit_courses['CName']\n\n# Save the answer in a variable and print the variable\nanswer = course_names.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: What are the names of courses with 1 credit?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where credits equal 1\none_credit_courses = df[df['Credits'] == 1]\n\n# Extract only the course names from the filtered dataframe\ncourse_names = one_credit_courses['CName']\n\n# Save the answer in a variable and print the variable\nanswer = course_names.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: Which courses are taught on days MTW?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Days' column is 'MTW'\nmtw_courses = df[df['Days'] == 'MTW']\n\n# Save the answer in a variable\nanswer = mtw_courses['CName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: What are the course names for courses taught on MTW?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Days' column is 'MTW'\nmtw_courses = df[df['Days'] == 'MTW']\n\n# Save the answer in a variable\nanswer = mtw_courses['CName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: What is the number of departments in Division \"AS\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the division AS\ndf_as = df[df['Division'] == 'AS']\n\n# Count the number of unique department numbers in the division AS\nnum_departments = df_as['DNO'].nunique()\n\nprint(num_departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: How many departments are in the division AS?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the division AS\ndf_as = df[df['Division'] == 'AS']\n\n# Count the number of unique department numbers in the division AS\nnum_departments = df_as['DNO'].nunique()\n\nprint(num_departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: What are the phones of departments in Room 268?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphones = df.loc[df['Room'] == '268', 'DPhone']\n\nprint(phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: Give the phones for departments in room 268.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nphones = df.loc[df['Room'] == '268', 'DPhone']\n\nprint(phones)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,CID,Grade\n1001,550.681,A-\n1001,600.303,B\n1001,600.315,B+\n1001,600.337,A\n1001,600.461,B-\n1001,600.465,B\n1002,520.213,B+\n1002,600.211,C\n1002,600.303,C+\n1002,600.337,A\n\nQuestion: Find the number of students that have at least one grade \"B\".", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students with at least one grade 'B'\nnum_students = df[df['Grade'] == 'B'].StuID.nunique()\n\n# Save the answer in a variable\nanswer = num_students\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,CID,Grade\n1001,550.681,A-\n1001,600.303,B\n1001,600.315,B+\n1001,600.337,A\n1001,600.461,B-\n1001,600.465,B\n1002,520.213,B+\n1002,600.211,C\n1002,600.303,C+\n1002,600.337,A\n\nQuestion: How many students have had at least one \"B\" grade?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students with at least one grade 'B'\nnum_students = df[df['Grade'] == 'B'].StuID.nunique()\n\n# Save the answer in a variable\nanswer = num_students\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlettergrade,gradepoint\nA+,4.0\nA,4.0\nA-,3.7\nB+,3.3\nB,3.0\nB-,2.7\nC+,2.3\nC,2.0\nC-,1.7\nD+,1.3\n\nQuestion: Find the max and min grade point for all letter grade.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the max and min grade point for all letter grade\nmax_grade_point = df['gradepoint'].max()\nmin_grade_point = df['gradepoint'].min()\n\n# Save the answer in a variable and print the variable\nanswer = (max_grade_point, min_grade_point)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlettergrade,gradepoint\nA+,4.0\nA,4.0\nA-,3.7\nB+,3.3\nB,3.0\nB-,2.7\nC+,2.3\nC,2.0\nC-,1.7\nD+,1.3\n\nQuestion: What are the maximum and minumum grade points?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the max and min grade point for all letter grade\nmax_grade_point = df['gradepoint'].max()\nmin_grade_point = df['gradepoint'].min()\n\n# Save the answer in a variable and print the variable\nanswer = (max_grade_point, min_grade_point)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first names of students whose first names contain letter \"a\".", "response": "import pandas as pd\n\n# read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the rows where the first name contains \"a\"\nfiltered_df = df[df['Fname'].str.contains('a', case=False)]\n\n# get the unique first names\nfirst_names = filtered_df['Fname'].unique()\n\n# save the answer in a variable\nanswer = first_names\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first names for students who have an \"a\" in their first name?", "response": "import pandas as pd\n\n# read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the rows where the first name contains \"a\"\nfiltered_df = df[df['Fname'].str.contains('a', case=False)]\n\n# get the unique first names\nfirst_names = filtered_df['Fname'].unique()\n\n# save the answer in a variable\nanswer = first_names\n\n# print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the first names and last names of male (sex is M) faculties who live in building NEB.", "response": "import pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter DataFrame to contain only male faculties who live in building NEB\nmale_neb_faculties = df[(df['Sex'] == 'M') & (df['Building'] == 'NEB')][['Fname', 'Lname']]\n\n# Print the result\nprint(male_neb_faculties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the full names of faculties with sex M and who live in building NEB?", "response": "import pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter DataFrame to contain only male faculties who live in building NEB\nmale_neb_faculties = df[(df['Sex'] == 'M') & (df['Building'] == 'NEB')][['Fname', 'Lname']]\n\n# Print the result\nprint(male_neb_faculties)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the rooms of faculties with rank professor who live in building NEB.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include faculties with rank 'Professor' and who live in building 'NEB'\ndf_professors_neb = df[(df['Rank'] == 'Professor') & (df['Building'] == 'NEB')]\n\n# Select the 'Room' column\nrooms = df_professors_neb['Room']\n\n# Print the rooms\nprint(rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the rooms for members of the faculty who are professors and who live in building NEB?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include faculties with rank 'Professor' and who live in building 'NEB'\ndf_professors_neb = df[(df['Rank'] == 'Professor') & (df['Building'] == 'NEB')]\n\n# Select the 'Room' column\nrooms = df_professors_neb['Room']\n\n# Print the rooms\nprint(rooms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: Find the department name that is in Building \"Mergenthaler\".", "response": "import pandas as pd\n\n# Reading CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering rows where Building is 'Mergenthaler'\ndepartment_in_mergenthaler = df[df['Building'] == 'Mergenthaler']['DName']\n\n# Printing the answer\nprint(department_in_mergenthaler)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: What is the name of the department in the Building Mergenthaler?", "response": "import pandas as pd\n\n# Reading CSV file\ndf = pd.read_csv('data.csv')\n\n# Filtering rows where Building is 'Mergenthaler'\ndepartment_in_mergenthaler = df[df['Building'] == 'Mergenthaler']['DName']\n\n# Printing the answer\nprint(department_in_mergenthaler)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: List the course name of courses sorted by credits.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by credits\ndf = df.sort_values('Credits')\n\n# List the course name of courses sorted by credits\ncourse_name_sorted_by_credits = df['CName'].tolist()\n\n# Print the variable\nprint(course_name_sorted_by_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCID,CName,Credits,Instructor,Days,Hours,DNO\n600.101,COMPUTER LITERACY,3,6112,MTW,3,600\n600.103,INTRODUCTION TO COMPUTER SCIENCE,1,4230,Th,4,600\n600.107,INTRO TO PROGRAMMING IN JAVA,3,1193,MTW,3,600\n600.109,INTRO TO PROGRAMMING IN C/C++,3,4230,MTW,12,600\n600.113,EXPLORING THE INTERNET,3,6112,MTW,4,600\n600.121,JAVA PROGRAMMING,3,6112,ThF,10:30-12,600\n600.211,UNIX SYSTEMS PROGRAMMING,3,6112,ThF,1-2:15,600\n600.227,DATA STRUCTURES in JAVA,3,1121,MTW,9,600\n600.232,MULTIMEDIA COMPUTING,3,9826,MW,1-2:30,600\n600.271,COMPUTATIONAL MODELS,3,9172,MTW,1,600\n\nQuestion: What are the course names, ordered by credits?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by credits\ndf = df.sort_values('Credits')\n\n# List the course name of courses sorted by credits\ncourse_name_sorted_by_credits = df['CName'].tolist()\n\n# Print the variable\nprint(course_name_sorted_by_credits)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first name of students in the descending order of age.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by age in descending order\ndf = df.sort_values('Age', ascending=False)\n\n# Select the first names of the students\nfirst_names = df['Fname'].values.tolist()\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first names of students, ordered by age from greatest to least?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by age in descending order\ndf = df.sort_values('Age', ascending=False)\n\n# Select the first names of the students\nfirst_names = df['Fname'].values.tolist()\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the last name of female (sex is F) students in the descending order of age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Sort the dataframe by age in descending order\nfemale_students_sorted = female_students.sort_values('Age', ascending=False)\n\n# Get the last names of the sorted dataframe\nanswer = female_students_sorted['LName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the last names of female students, ordered by age descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Sort the dataframe by age in descending order\nfemale_students_sorted = female_students.sort_values('Age', ascending=False)\n\n# Get the last names of the sorted dataframe\nanswer = female_students_sorted['LName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the last names of faculties in building Barton in alphabetic order.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data where 'Building' is 'Barton'\nbarton_faculty = df[df['Building'] == 'Barton']\n\n# Sort the filtered data by 'Lname'\nsorted_faculty = barton_faculty.sort_values('Lname')\n\n# Save the answer in a variable\nanswer = sorted_faculty['Lname'].values.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the last names of faculty in building Barton, sorted by last name?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data where 'Building' is 'Barton'\nbarton_faculty = df[df['Building'] == 'Barton']\n\n# Sort the filtered data by 'Lname'\nsorted_faculty = barton_faculty.sort_values('Lname')\n\n# Save the answer in a variable\nanswer = sorted_faculty['Lname'].values.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the first names of faculties of rank Professor in alphabetic order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include professors\nprofessors = df[df['Rank'] == 'Professor']\n\n# Sort the professors by first name\nprofessors = professors.sort_values('Fname')\n\n# Get the first names of the professors\nfirst_names = professors['Fname'].tolist()\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the first names for all faculty professors, ordered by first name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include professors\nprofessors = df[df['Rank'] == 'Professor']\n\n# Sort the professors by first name\nprofessors = professors.sort_values('Fname')\n\n# Get the first names of the professors\nfirst_names = professors['Fname'].tolist()\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the rank of the faculty that the fewest faculties belong to.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Rank' and count the number of unique faculty for each rank\nrank_counts = df.groupby('Rank')['FacID'].nunique()\n\n# Find the rank with the fewest faculty\nleast_faculty_rank = rank_counts.idxmin()\n\nprint(least_faculty_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What is the least common faculty rank?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Rank' and count the number of unique faculty for each rank\nrank_counts = df.groupby('Rank')['FacID'].nunique()\n\n# Find the rank with the fewest faculty\nleast_faculty_rank = rank_counts.idxmin()\n\nprint(least_faculty_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: Find the names of departments that are either in division AS or in division EN and in Building NEB.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe based on division and building\ndf_filtered = df.loc[(df['Division'] == 'AS') | (df['Division'] == 'EN') & (df['Building'] == 'NEB')]\n\n# Get the names of departments\ndepartments = df_filtered['DName'].tolist()\n\n# Print the departments\nprint(departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDNO,Division,DName,Room,Building,DPhone\n10,AS,History of Art,268,Mergenthaler,7117\n20,AS,Biology,144,Mudd,7330\n30,AS,Chemistry,113,Remsen,7429\n40,AS,Classics,121,Gilman,7556\n50,AS,Cognitive Science,381,Krieger,7119\n60,AS,English,146,Gilman,7544\n70,AS,Anthropology,404B,Macaulay,7272\n90,AS,German,245,Gilman,7508\n100,AS,History,312,Gilman,7575\n110,AS,Mathematics,404,Krieger,7399\n\nQuestion: What are the names of departments either in division AS, or in division EN and in building NEB?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe based on division and building\ndf_filtered = df.loc[(df['Division'] == 'AS') | (df['Division'] == 'EN') & (df['Building'] == 'NEB')]\n\n# Get the names of departments\ndepartments = df_filtered['DName'].tolist()\n\n# Print the departments\nprint(departments)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What are the product id and product type of the cheapest product?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the minimum price\nmin_price = df['product_price'].min()\n\n# Get the product id and product type of the cheapest product\ncheapest_product = df[df['product_price'] == min_price][['product_id', 'product_type_code']]\n\n# Print the cheapest product\nprint(cheapest_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Give the id and product type of the product with the lowest price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the minimum price\nmin_price = df['product_price'].min()\n\n# Get the product id and product type of the cheapest product\ncheapest_product = df[df['product_price'] == min_price][['product_id', 'product_type_code']]\n\n# Print the cheapest product\nprint(cheapest_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Find the number of different product types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Counting the number of different product types\nnum_product_types = len(df['product_type_code'].unique())\n\nprint(num_product_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Count the number of distinct product types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Counting the number of different product types\nnum_product_types = len(df['product_type_code'].unique())\n\nprint(num_product_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: For each payment method, return how many customers use it.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by payment method and count the number of unique customer IDs\npayment_method_count = df.groupby('payment_method_code')['customer_id'].nunique()\n\n# Print the result\nprint(payment_method_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: How many customers use each payment method?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by payment method and count the number of unique customer IDs\npayment_method_count = df.groupby('payment_method_code')['customer_id'].nunique()\n\n# Print the result\nprint(payment_method_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id\n1,9,7\n2,1,3\n3,5,2\n4,14,10\n5,15,4\n6,14,13\n7,6,13\n8,12,8\n9,13,12\n10,14,13\n\nQuestion: What is the id of the product that was ordered the most often?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_counts = df['product_id'].value_counts()\nmost_ordered_product_id = product_counts.index[0]\n\nprint(most_ordered_product_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,order_id,product_id\n1,9,7\n2,1,3\n3,5,2\n4,14,10\n5,15,4\n6,14,13\n7,6,13\n8,12,8\n9,13,12\n10,14,13\n\nQuestion: Give the product id for the product that was ordered most frequently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_counts = df['product_id'].value_counts()\nmost_ordered_product_id = product_counts.index[0]\n\nprint(most_ordered_product_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What is the average price for each type of product?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by product_type_code and then calculate the mean of product_price\naverage_prices = df.groupby('product_type_code')['product_price'].mean()\n\n# Print the average prices\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Return the average price for each product type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by product_type_code and then calculate the mean of product_price\naverage_prices = df.groupby('product_type_code')['product_price'].mean()\n\n# Print the average prices\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_store_id,dept_store_chain_id,store_name,store_address,store_phone,store_email\n1,1,store_name,01290 Jeremie Parkway Suite 753\nNorth Arielle, MS 51249,(948)944-5099x2027,bmaggio@example.com\n2,3,store_name,082 Purdy Expressway\nO'Connellshire, IL 31732,877-917-5029,larissa10@example.org\n3,4,store_name,994 Travis Plains\nNorth Wadeton, WV 27575-3951,1-216-312-0375,alexandro.mcclure@example.net\n4,2,store_name,93472 Mayert Shore Apt. 360\nMitchellton, TN 84209,670-466-6367,bryon24@example.org\n5,3,store_name,88112 Parisian Lights\nSporermouth, MN 25962,01399327266,creola23@example.org\n6,4,store_name,49708 Marcella Valleys Suite 181\nNinamouth, WA 86667,1-859-843-1957,jerod.reynolds@example.net\n7,4,store_name,41924 Alfredo Cliff\nNew Eviestad, NY 17573,1-109-872-9142x77078,ihamill@example.org\n8,4,store_name,7081 Shanna Cape\nWest Zacheryshire, NC 17408,+67(5)4983519062,casper.adolfo@example.org\n9,4,store_name,5288 Kaia Street\nDevonton, NJ 61782-9006,(723)503-7086x356,selmer.stiedemann@example.org\n10,3,store_name,00578 Lisa Gateway Suite 476\nStrosinville, VA 03998-3292,07126036440,luisa57@example.org\n\nQuestion: What are the ids of the two department store chains with the largest number of department stores?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of department stores for each department store chain\nstore_counts = df['dept_store_chain_id'].value_counts()\n\n# Get the ids of the two department store chains with the largest number of department stores\ntop_2_chains = store_counts.head(2).index.tolist()\n\nprint(top_2_chains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndept_store_id,dept_store_chain_id,store_name,store_address,store_phone,store_email\n1,1,store_name,01290 Jeremie Parkway Suite 753\nNorth Arielle, MS 51249,(948)944-5099x2027,bmaggio@example.com\n2,3,store_name,082 Purdy Expressway\nO'Connellshire, IL 31732,877-917-5029,larissa10@example.org\n3,4,store_name,994 Travis Plains\nNorth Wadeton, WV 27575-3951,1-216-312-0375,alexandro.mcclure@example.net\n4,2,store_name,93472 Mayert Shore Apt. 360\nMitchellton, TN 84209,670-466-6367,bryon24@example.org\n5,3,store_name,88112 Parisian Lights\nSporermouth, MN 25962,01399327266,creola23@example.org\n6,4,store_name,49708 Marcella Valleys Suite 181\nNinamouth, WA 86667,1-859-843-1957,jerod.reynolds@example.net\n7,4,store_name,41924 Alfredo Cliff\nNew Eviestad, NY 17573,1-109-872-9142x77078,ihamill@example.org\n8,4,store_name,7081 Shanna Cape\nWest Zacheryshire, NC 17408,+67(5)4983519062,casper.adolfo@example.org\n9,4,store_name,5288 Kaia Street\nDevonton, NJ 61782-9006,(723)503-7086x356,selmer.stiedemann@example.org\n10,3,store_name,00578 Lisa Gateway Suite 476\nStrosinville, VA 03998-3292,07126036440,luisa57@example.org\n\nQuestion: Return the ids of the two department store chains with the most department stores.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of department stores for each department store chain\nstore_counts = df['dept_store_chain_id'].value_counts()\n\n# Get the ids of the two department store chains with the largest number of department stores\ntop_2_chains = store_counts.head(2).index.tolist()\n\nprint(top_2_chains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: For each product type, return the maximum and minimum price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'product_type_code' and then apply the aggregation function\ngrouped = df.groupby('product_type_code').agg({'product_price': ['max', 'min']})\n\n# Remove multi-level column index and reset the index\ngrouped.columns = grouped.columns.get_level_values(1)\ngrouped.reset_index(inplace=True)\n\n# Print the resulting dataframe\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What are the maximum and minimum product prices for each product type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'product_type_code' and then apply the aggregation function\ngrouped = df.groupby('product_type_code').agg({'product_price': ['max', 'min']})\n\n# Remove multi-level column index and reset the index\ngrouped.columns = grouped.columns.get_level_values(1)\ngrouped.reset_index(inplace=True)\n\n# Print the resulting dataframe\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Find the product type whose average price is higher than the average price of all products.", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average price of all products\navg_price_all_products = df['product_price'].mean()\n\n# Group the dataframe by product_type_code and calculate the average price for each group\navg_price_by_product_type = df.groupby('product_type_code')['product_price'].mean()\n\n# Filter the groups where the average price is higher than the average price of all products\nproduct_types_with_higher_avg_price = avg_price_by_product_type[avg_price_by_product_type > avg_price_all_products]\n\n# Get the product type code with the highest average price\nproduct_type_with_highest_avg_price = product_types_with_higher_avg_price.idxmax()\n\n# Print the product type code with the highest average price\nprint(product_type_with_highest_avg_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What is the code of the product type with an average price higher than the average price of all products?", "response": "import pandas as pd\n\n# Load the CSV file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average price of all products\navg_price_all_products = df['product_price'].mean()\n\n# Group the dataframe by product_type_code and calculate the average price for each group\navg_price_by_product_type = df.groupby('product_type_code')['product_price'].mean()\n\n# Filter the groups where the average price is higher than the average price of all products\nproduct_types_with_higher_avg_price = avg_price_by_product_type[avg_price_by_product_type > avg_price_all_products]\n\n# Get the product type code with the highest average price\nproduct_type_with_highest_avg_price = product_types_with_higher_avg_price.idxmax()\n\n# Print the product type code with the highest average price\nprint(product_type_with_highest_avg_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Return the names and ids of all products whose price is between 600 and 700.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['product_price'] >= 600) & (df['product_price'] <= 700)]\nanswer = df_filtered[['product_id', 'product_name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What are the names and ids of products costing between 600 and 700?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['product_price'] >= 600) & (df['product_price'] <= 700)]\nanswer = df_filtered[['product_id', 'product_name']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status_code,order_date\n1,12,Completed,2018-02-10 15:44:48\n2,4,New,2018-01-31 17:49:18\n3,1,PartFilled,2018-02-26 12:39:33\n4,4,Pending,2018-03-07 16:55:17\n5,4,New,2018-02-12 19:34:12\n6,11,PartFilled,2018-03-06 16:35:51\n7,1,Cancelled,2018-02-15 02:25:32\n8,13,Pending,2018-03-05 23:17:54\n9,7,Pending,2018-02-09 11:16:46\n10,11,Cancelled,2018-03-22 10:49:25\n\nQuestion: Find the ids of all distinct customers who made order after some orders that were Cancelled.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to include only the orders that were cancelled\ncancelled_orders = df[df['order_status_code'] == 'Cancelled']\n\n# Find the customer ids of those who made an order after their orders were cancelled\ncustomers_after_cancellation = df[df['order_date'].gt(cancelled_orders['order_date'].min())]['customer_id'].unique()\n\n# Save the answer in a variable and print it\nanswer = customers_after_cancellation\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status_code,order_date\n1,12,Completed,2018-02-10 15:44:48\n2,4,New,2018-01-31 17:49:18\n3,1,PartFilled,2018-02-26 12:39:33\n4,4,Pending,2018-03-07 16:55:17\n5,4,New,2018-02-12 19:34:12\n6,11,PartFilled,2018-03-06 16:35:51\n7,1,Cancelled,2018-02-15 02:25:32\n8,13,Pending,2018-03-05 23:17:54\n9,7,Pending,2018-02-09 11:16:46\n10,11,Cancelled,2018-03-22 10:49:25\n\nQuestion: What are the distinct ids of customers who made an order after any order that was Cancelled?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the data to include only the orders that were cancelled\ncancelled_orders = df[df['order_status_code'] == 'Cancelled']\n\n# Find the customer ids of those who made an order after their orders were cancelled\ncustomers_after_cancellation = df[df['order_date'].gt(cancelled_orders['order_date'].min())]['customer_id'].unique()\n\n# Save the answer in a variable and print it\nanswer = customers_after_cancellation\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: What are the names and ids of customers whose address contains TN?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the customer address contains 'TN'\ndf_filtered = df[df['customer_address'].str.contains('TN')]\n\n# Select the name and id columns from the filtered dataframe\nanswer = df_filtered[['customer_id', 'customer_name']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: Return the names and ids of customers who have TN in their address.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the customer address contains 'TN'\ndf_filtered = df[df['customer_address'].str.contains('TN')]\n\n# Select the name and id columns from the filtered dataframe\nanswer = df_filtered[['customer_id', 'customer_name']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What are id and name of the products whose price is lower than 600 or higher than 900?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering data where product_price is less than 600 or greater than 900\nfiltered_data = df[(df['product_price'] < 600) | (df['product_price'] > 900)]\n\n# Fetching id and name of the products\nanswer = filtered_data[['product_id', 'product_name']]\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Give the ids and names of products with price lower than 600 or higher than 900.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering data where product_price is less than 600 or greater than 900\nfiltered_data = df[(df['product_price'] < 600) | (df['product_price'] > 900)]\n\n# Fetching id and name of the products\nanswer = filtered_data[['product_id', 'product_name']]\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_grouped = df.groupby('product_type_code')['product_price'].agg(['max', 'min']).reset_index()\n\ndf_grouped = df_grouped.sort_values('product_type_code')\n\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_grouped = df.groupby('product_type_code')['product_price'].agg(['max', 'min']).reset_index()\n\ndf_grouped = df_grouped.sort_values('product_type_code')\n\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status_code,order_date\n1,12,Completed,2018-02-10 15:44:48\n2,4,New,2018-01-31 17:49:18\n3,1,PartFilled,2018-02-26 12:39:33\n4,4,Pending,2018-03-07 16:55:17\n5,4,New,2018-02-12 19:34:12\n6,11,PartFilled,2018-03-06 16:35:51\n7,1,Cancelled,2018-02-15 02:25:32\n8,13,Pending,2018-03-05 23:17:54\n9,7,Pending,2018-02-09 11:16:46\n10,11,Cancelled,2018-03-22 10:49:25\n\nQuestion: List the order id, customer id for orders in Cancelled status, ordered by their order dates.", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter orders that are in 'Cancelled' status\ndf_cancelled = df[df['order_status_code'] == 'Cancelled']\n\n# Sort the dataframe by order date\ndf_cancelled = df_cancelled.sort_values('order_date')\n\n# Select the 'order_id' and 'customer_id' columns\nresult = df_cancelled[['order_id', 'customer_id']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status_code,order_date\n1,12,Completed,2018-02-10 15:44:48\n2,4,New,2018-01-31 17:49:18\n3,1,PartFilled,2018-02-26 12:39:33\n4,4,Pending,2018-03-07 16:55:17\n5,4,New,2018-02-12 19:34:12\n6,11,PartFilled,2018-03-06 16:35:51\n7,1,Cancelled,2018-02-15 02:25:32\n8,13,Pending,2018-03-05 23:17:54\n9,7,Pending,2018-02-09 11:16:46\n10,11,Cancelled,2018-03-22 10:49:25\n\nQuestion: What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter orders that are in 'Cancelled' status\ndf_cancelled = df[df['order_status_code'] == 'Cancelled']\n\n# Sort the dataframe by order date\ndf_cancelled = df_cancelled.sort_values('order_date')\n\n# Select the 'order_id' and 'customer_id' columns\nresult = df_cancelled[['order_id', 'customer_id']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: Find the id and name of customers whose address contains WY state and do not use credit card for payment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['customer_address'].str.contains(\"WY\")) & (df['payment_method_code'] != 'Credit Card')]\nresult = df_filtered[['customer_id', 'customer_name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,401,Ahmed,75099 Tremblay Port Apt. 163\nSouth Norrisland, SC 80546,254-072-4068x33935,margarett.vonrueden@example.com\n2,Credit Card,665,Chauncey,8408 Lindsay Court\nEast Dasiabury, IL 72656-3552,+41(8)1897032009,stiedemann.sigrid@example.com\n3,Direct Debit,844,Lukas,7162 Rodolfo Knoll Apt. 502\nLake Annalise, TN 35791-8871,197-417-3557,joelle.monahan@example.com\n4,Direct Debit,662,Lexus,9581 Will Flat Suite 272\nEast Cathryn, WY 30751-4404,+08(3)8056580281,gbrekke@example.com\n5,Credit Card,848,Tara,5065 Mraz Fields Apt. 041\nEast Chris, NH 41624,1-064-498-6609x051,nicholas44@example.com\n6,Credit Card,916,Jon,841 Goyette Unions\nSouth Dionbury, NC 62021,(443)013-3112x528,cconroy@example.net\n7,Credit Card,172,Cristobal,8327 Christiansen Lakes Suite 409\nSchneiderland, IA 93624,877-150-8674x63517,shawna.cummerata@example.net\n8,Direct Debit,927,Adah,5049 Hand Land\nCoymouth, IL 97300-7731,1-695-364-7586x59256,kathlyn24@example.org\n9,Credit Card,808,Yasmeen,3558 Witting Meadow Apt. 483\nLake Moriahbury, OH 91556-2122,587.398.2400x31176,ludwig54@example.net\n10,Credit Card,887,Karson,7308 Joan Lake Suite 346\nLizethtown, DE 56522,857-844-9339x40140,moriah91@example.com\n\nQuestion: What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['customer_address'].str.contains(\"WY\")) & (df['payment_method_code'] != 'Credit Card')]\nresult = df_filtered[['customer_id', 'customer_name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: Find the name of the most expensive hardware product.", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where product_type_code is 'Hardware'\nhardware_df = df[df['product_type_code'] == 'Hardware']\n\n# Find the row with the maximum product_price in the filtered DataFrame\nmost_expensive_hardware = hardware_df[hardware_df.product_price == hardware_df.product_price.max()]\n\n# Save the name of the most expensive hardware product in a variable\nmost_expensive_hardware_name = most_expensive_hardware['product_name'].values[0]\n\n# Print the variable\nprint(most_expensive_hardware_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Clothes,red jeans,734.73\n2,Clothes,yellow jeans,687.23\n3,Clothes,black jeans,695.16\n4,Clothes,blue jeans,939.57\n5,Clothes,red jeans,534.52\n6,Clothes,red topping,408.82\n7,Clothes,black topping,916.53\n8,Clothes,yellow topping,918.41\n9,Clothes,blue topping,604.86\n10,Hardware,monitor,813.76\n\nQuestion: What is the name of the hardware product with the greatest price?", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where product_type_code is 'Hardware'\nhardware_df = df[df['product_type_code'] == 'Hardware']\n\n# Find the row with the maximum product_price in the filtered DataFrame\nmost_expensive_hardware = hardware_df[hardware_df.product_price == hardware_df.product_price.max()]\n\n# Save the name of the most expensive hardware product in a variable\nmost_expensive_hardware_name = most_expensive_hardware['product_name'].values[0]\n\n# Print the variable\nprint(most_expensive_hardware_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAircraft_ID,Aircraft,Description,Max_Gross_Weight,Total_disk_area,Max_disk_Loading\n1,Robinson R-22,Light utility helicopter,1,370 lb (635 kg),497 ft² (46.2 m²),2.6 lb/ft² (14 kg/m²)\n2,Bell 206B3 JetRanger,Turboshaft utility helicopter,3,200 lb (1,451 kg),872 ft² (81.1 m²),3.7 lb/ft² (18 kg/m²)\n3,CH-47D Chinook,Tandem rotor helicopter,50,000 lb (22,680 kg),5,655 ft² (526 m²),8.8 lb/ft² (43 kg/m²)\n4,Mil Mi-26,Heavy-lift helicopter,123,500 lb (56,000 kg),8,495 ft² (789 m²),14.5 lb/ft² (71 kg/m²)\n5,CH-53E Super Stallion,Heavy-lift helicopter,73,500 lb (33,300 kg),4,900 ft² (460 m²),15 lb/ft² (72 kg/m²)\n\nQuestion: How many aircrafts are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_aircrafts = df.shape[0]\nprint(num_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAircraft_ID,Aircraft,Description,Max_Gross_Weight,Total_disk_area,Max_disk_Loading\n1,Robinson R-22,Light utility helicopter,1,370 lb (635 kg),497 ft² (46.2 m²),2.6 lb/ft² (14 kg/m²)\n2,Bell 206B3 JetRanger,Turboshaft utility helicopter,3,200 lb (1,451 kg),872 ft² (81.1 m²),3.7 lb/ft² (18 kg/m²)\n3,CH-47D Chinook,Tandem rotor helicopter,50,000 lb (22,680 kg),5,655 ft² (526 m²),8.8 lb/ft² (43 kg/m²)\n4,Mil Mi-26,Heavy-lift helicopter,123,500 lb (56,000 kg),8,495 ft² (789 m²),14.5 lb/ft² (71 kg/m²)\n5,CH-53E Super Stallion,Heavy-lift helicopter,73,500 lb (33,300 kg),4,900 ft² (460 m²),15 lb/ft² (72 kg/m²)\n\nQuestion: What is the number of aircraft?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_aircrafts = df.shape[0]\nprint(num_aircrafts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAircraft_ID,Aircraft,Description,Max_Gross_Weight,Total_disk_area,Max_disk_Loading\n1,Robinson R-22,Light utility helicopter,1,370 lb (635 kg),497 ft² (46.2 m²),2.6 lb/ft² (14 kg/m²)\n2,Bell 206B3 JetRanger,Turboshaft utility helicopter,3,200 lb (1,451 kg),872 ft² (81.1 m²),3.7 lb/ft² (18 kg/m²)\n3,CH-47D Chinook,Tandem rotor helicopter,50,000 lb (22,680 kg),5,655 ft² (526 m²),8.8 lb/ft² (43 kg/m²)\n4,Mil Mi-26,Heavy-lift helicopter,123,500 lb (56,000 kg),8,495 ft² (789 m²),14.5 lb/ft² (71 kg/m²)\n5,CH-53E Super Stallion,Heavy-lift helicopter,73,500 lb (33,300 kg),4,900 ft² (460 m²),15 lb/ft² (72 kg/m²)\n\nQuestion: List the description of all aircrafts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the description of all aircrafts\ndescriptions = df['Description'].tolist()\n\nprint(descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAircraft_ID,Aircraft,Description,Max_Gross_Weight,Total_disk_area,Max_disk_Loading\n1,Robinson R-22,Light utility helicopter,1,370 lb (635 kg),497 ft² (46.2 m²),2.6 lb/ft² (14 kg/m²)\n2,Bell 206B3 JetRanger,Turboshaft utility helicopter,3,200 lb (1,451 kg),872 ft² (81.1 m²),3.7 lb/ft² (18 kg/m²)\n3,CH-47D Chinook,Tandem rotor helicopter,50,000 lb (22,680 kg),5,655 ft² (526 m²),8.8 lb/ft² (43 kg/m²)\n4,Mil Mi-26,Heavy-lift helicopter,123,500 lb (56,000 kg),8,495 ft² (789 m²),14.5 lb/ft² (71 kg/m²)\n5,CH-53E Super Stallion,Heavy-lift helicopter,73,500 lb (33,300 kg),4,900 ft² (460 m²),15 lb/ft² (72 kg/m²)\n\nQuestion: What are the descriptions for the aircrafts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List the description of all aircrafts\ndescriptions = df['Description'].tolist()\n\nprint(descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What is the average number of international passengers of all airports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\navg_international_passengers = df['International_Passengers'].mean()\n\nprint(avg_international_passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What is the average number of international passengers for an airport?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\navg_international_passengers = df['International_Passengers'].mean()\n\nprint(avg_international_passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "response": "import pandas as pd\n\n# load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame for the airport named London Heathrow\nlondon_heathrow = df[df['Airport_Name'] == 'London Heathrow']\n\n# select the number of international and domestic passengers\npassengers = london_heathrow[['International_Passengers', 'Domestic_Passengers']]\n\n# print the result\nprint(passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: How many international and domestic passengers are there in the airport London Heathrow?", "response": "import pandas as pd\n\n# load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# filter the DataFrame for the airport named London Heathrow\nlondon_heathrow = df[df['Airport_Name'] == 'London Heathrow']\n\n# select the number of international and domestic passengers\npassengers = london_heathrow[['International_Passengers', 'Domestic_Passengers']]\n\n# print the result\nprint(passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What are the total number of Domestic Passengers of airports that contain the word \"London\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for London airports\nlondon_airports = df[df['Airport_Name'].str.contains('London')]\n\n# Sum up the domestic passengers at London airports\ntotal_domestic_passengers = london_airports['Domestic_Passengers'].sum()\n\n# Print the total domestic passengers\nprint(total_domestic_passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What are the total number of domestic passengers at all London airports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for London airports\nlondon_airports = df[df['Airport_Name'].str.contains('London')]\n\n# Sum up the domestic passengers at London airports\ntotal_domestic_passengers = london_airports['Domestic_Passengers'].sum()\n\n# Print the total domestic passengers\nprint(total_domestic_passengers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: What are the name of pilots aged 25 or older?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on age\nfiltered_df = df[df['Age'] >= 25]\n\n# Get the names of the pilots\nnames_of_pilots = filtered_df['Name'].tolist()\n\n# Print the names of the pilots\nprint(names_of_pilots)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: what is the name of every pilot who is at least 25 years old?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on age\nfiltered_df = df[df['Age'] >= 25]\n\n# Get the names of the pilots\nnames_of_pilots = filtered_df['Name'].tolist()\n\n# Print the names of the pilots\nprint(names_of_pilots)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: List all pilot names in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List all pilot names in ascending alphabetical order\npilot_names = df['Name'].sort_values().tolist()\n\nprint(pilot_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: What are the names of the pilots in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# List all pilot names in ascending alphabetical order\npilot_names = df['Name'].sort_values().tolist()\n\nprint(pilot_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: List names of all pilot aged 30 or younger in descending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Age'] <= 30]\ndf_sorted = df_filtered.sort_values(by='Name', ascending=False)\nnames = df_sorted['Name'].tolist()\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: What are the names of all pilots 30 years old or young in descending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[df['Age'] <= 30]\ndf_sorted = df_filtered.sort_values(by='Name', ascending=False)\nnames = df_sorted['Name'].tolist()\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: List names of all pilot in descending order of age.", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort data by Age in descending order and select 'Name' column\nsorted_names = df.sort_values('Age', ascending=False)['Name']\n\n# Print sorted names\nprint(sorted_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPilot_Id,Name,Age\n1,Prof. Zackery Collins,23\n2,Katheryn Gorczany IV,20\n3,Mr. Cristian Halvorson II,23\n4,Ayana Spencer,25\n5,Ellen Ledner III,31\n6,Elisha Hickle V,37\n7,Dr. Jade Bradtke V,26\n8,Winnifred Boyle,30\n9,Della Lindgren,29\n10,Maxwell Graham,26\n\nQuestion: What are the names of all pilots listed by descending age?", "response": "import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort data by Age in descending order and select 'Name' column\nsorted_names = df.sort_values('Age', ascending=False)['Name']\n\n# Print sorted names\nprint(sorted_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: Show all information on the airport that has the largest number of international passengers.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the row with maximum international passengers\nmax_international_passengers_row = df[df.International_Passengers == df.International_Passengers.max()]\n\n# Print the row\nprint(max_international_passengers_row)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAirport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes\n1,London Heathrow,67054745.0,1.5%,61344438.0,5562516.0,147791.0,478693.0,1397054.0\n2,London Gatwick,34205887.0,2.9%,30431051.0,3730963.0,43873.0,263653.0,107702.0\n3,London Stansted,22360364.0,6.0%,19996947.0,2343428.0,19989.0,193282.0,197738.0\n4,Manchester,21219195.0,4.0%,18119230.0,2943719.0,156246.0,204610.0,141781.0\n5,London Luton,10180734.0,2.6%,8853224.0,1320678.0,6832.0,117859.0,40518.0\n6,Birmingham Airport,9627589.0,4.3%,8105162.0,1471538.0,50889.0,112227.0,12192.0\n7,Edinburgh,9006702.0,0.5%,3711140.0,5281038.0,14524.0,125550.0,12418.0\n8,Glasgow International,8178891.0,7.0%,3943139.0,4192121.0,43631.0,100087.0,3546.0\n9,Bristol,6267114.0,5.7%,5057051.0,1171605.0,38458.0,76517.0,3.0\n10,East Midlands,5620673.0,3.8%,4870184.0,746094.0,4395.0,93038.0,261507.0\n\nQuestion: What is all the information on the airport with the largest number of international passengers?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the row with maximum international passengers\nmax_international_passengers_row = df[df.International_Passengers == df.International_Passengers.max()]\n\n# Print the row\nprint(max_international_passengers_row)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,parent_organization_id,organization_details\n7,7,Reinger, Hudson and Nolan Group\n8,7,Denesik and Sons Party\n10,8,Robel-Schulist Group\n\nQuestion: Which organizations are not a parent organization of others? List the organization id.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Identify organizations that are not parent organizations of others\nnot_parent_organizations = df[~df['organization_id'].isin(df['parent_organization_id'])]\n\n# Save the answer in a variable\nanswer = not_parent_organizations['organization_id'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nresident_id,property_id,date_moved_in,date_moved_out,other_details\n6,954,2017-06-17 15:43:33,2017-12-18 03:46:04,Anderson Batz\n10,605,2015-03-27 12:00:00,2018-03-17 07:48:09,Miss Naomie Osinski\n23,879,2015-03-27 12:00:00,2017-11-14 06:28:48,Jess Wyman\n28,629,2015-03-27 12:00:00,2017-10-05 02:47:31,Miss Alanis Lockman\n37,669,2015-03-27 12:00:00,2018-01-30 10:20:59,Prof. Arvel Kozey\n38,748,2015-03-27 12:00:00,2017-12-30 23:55:10,Chaim Swaniawski\n43,108,2015-03-27 12:00:00,2018-02-22 06:24:15,Elroy Schuster\n45,954,2015-03-27 12:00:00,2017-10-14 10:23:42,Prof. Nasir Hoppe\n47,669,2015-03-27 12:00:00,2017-10-10 02:25:53,Tiffany Jaskolski\n58,107,2015-03-27 12:00:00,2017-11-29 21:24:08,Tomasa Hoeger\n\nQuestion: When is the last day any resident moved in?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_moved_in' column to datetime\ndf['date_moved_in'] = pd.to_datetime(df['date_moved_in'])\n\n# Find the maximum date in the 'date_moved_in' column\nlast_day_moved_in = df['date_moved_in'].max()\n\n# Print the last day any resident moved in\nprint(last_day_moved_in)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nresident_id,property_id,date_moved_in,date_moved_out,other_details\n6,954,2017-06-17 15:43:33,2017-12-18 03:46:04,Anderson Batz\n10,605,2015-03-27 12:00:00,2018-03-17 07:48:09,Miss Naomie Osinski\n23,879,2015-03-27 12:00:00,2017-11-14 06:28:48,Jess Wyman\n28,629,2015-03-27 12:00:00,2017-10-05 02:47:31,Miss Alanis Lockman\n37,669,2015-03-27 12:00:00,2018-01-30 10:20:59,Prof. Arvel Kozey\n38,748,2015-03-27 12:00:00,2017-12-30 23:55:10,Chaim Swaniawski\n43,108,2015-03-27 12:00:00,2018-02-22 06:24:15,Elroy Schuster\n45,954,2015-03-27 12:00:00,2017-10-14 10:23:42,Prof. Nasir Hoppe\n47,669,2015-03-27 12:00:00,2017-10-10 02:25:53,Tiffany Jaskolski\n58,107,2015-03-27 12:00:00,2017-11-29 21:24:08,Tomasa Hoeger\n\nQuestion: What are the resident details containing the substring 'Miss'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'other_details' contains the substring 'Miss'\nmiss_df = df[df['other_details'].str.contains('Miss')]\n\n# Save the answer in a variable and print the variable\nmiss_details = miss_df['other_details'].values.tolist()\nprint(miss_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_Event_ID,customer_id,date_moved_in,property_id,resident_id,thing_id\n70,19,2015-03-27 12:00:00,605,10,1\n160,5,2015-03-27 12:00:00,879,23,80\n166,16,2015-03-27 12:00:00,629,28,14\n216,79,2015-03-27 12:00:00,669,37,46\n226,19,2015-03-27 12:00:00,748,38,80\n256,79,2015-03-27 12:00:00,108,43,2\n428,63,2015-03-27 12:00:00,954,45,68\n530,4,2015-03-27 12:00:00,669,47,10\n559,19,2015-03-27 12:00:00,107,58,1\n591,91,2016-09-27 12:00:00,120,67,10\n\nQuestion: List the customer event id and the corresponding move in date and property id.", "response": "#Python Code:\n\nimport pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the relevant columns\ndf_filtered = df[['Customer_Event_ID', 'date_moved_in', 'property_id']]\n\n# Print the DataFrame\nprint(df_filtered)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nresident_id,property_id,date_moved_in,date_moved_out,other_details\n6,954,2017-06-17 15:43:33,2017-12-18 03:46:04,Anderson Batz\n10,605,2015-03-27 12:00:00,2018-03-17 07:48:09,Miss Naomie Osinski\n23,879,2015-03-27 12:00:00,2017-11-14 06:28:48,Jess Wyman\n28,629,2015-03-27 12:00:00,2017-10-05 02:47:31,Miss Alanis Lockman\n37,669,2015-03-27 12:00:00,2018-01-30 10:20:59,Prof. Arvel Kozey\n38,748,2015-03-27 12:00:00,2017-12-30 23:55:10,Chaim Swaniawski\n43,108,2015-03-27 12:00:00,2018-02-22 06:24:15,Elroy Schuster\n45,954,2015-03-27 12:00:00,2017-10-14 10:23:42,Prof. Nasir Hoppe\n47,669,2015-03-27 12:00:00,2017-10-10 02:25:53,Tiffany Jaskolski\n58,107,2015-03-27 12:00:00,2017-11-29 21:24:08,Tomasa Hoeger\n\nQuestion: What are the distinct move in dates of the residents?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Extract the 'date_moved_in' column\nmove_in_dates = df['date_moved_in']\n\n# Find unique dates\nunique_dates = move_in_dates.unique()\n\n# Print the unique dates\nprint(unique_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: How many schools are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_schools = len(df)\n\n# Print the number of schools\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Count the number of schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of rows in the DataFrame\nnum_schools = len(df)\n\n# Print the number of schools\nprint(num_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: List the locations of schools in ascending order of enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Enrollment' in ascending order\ndf_sorted = df.sort_values(by='Enrollment')\n\n# Select the 'Location' column from the sorted DataFrame\nlocations = df_sorted['Location']\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What is the list of school locations sorted in ascending order of school enrollment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Enrollment' in ascending order\ndf_sorted = df.sort_values(by='Enrollment')\n\n# Select the 'Location' column from the sorted DataFrame\nlocations = df_sorted['Location']\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: List the locations of schools in descending order of founded year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Founded' in descending order\ndf_sorted = df.sort_values(by='Founded', ascending=False)\n\n# Select the 'Location' column\nlocations = df_sorted['Location']\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What is the list of school locations sorted in descending order of school foundation year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Founded' in descending order\ndf_sorted = df.sort_values(by='Founded', ascending=False)\n\n# Select the 'Location' column\nlocations = df_sorted['Location']\n\n# Print the locations\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What are the enrollments of schools whose denomination is not \"Catholic\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out the rows that have 'Catholic' as denomination\ndf_non_catholic = df[df['Denomination'] != 'Catholic']\n\n# List the enrollment for each school that does not have 'Catholic' as denomination\nenrollment_non_catholic = df_non_catholic['Enrollment'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = enrollment_non_catholic\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: List the enrollment for each school that does not have \"Catholic\" as denomination.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out the rows that have 'Catholic' as denomination\ndf_non_catholic = df[df['Denomination'] != 'Catholic']\n\n# List the enrollment for each school that does not have 'Catholic' as denomination\nenrollment_non_catholic = df_non_catholic['Enrollment'].tolist()\n\n# Save the answer in a variable and print the variable\nanswer = enrollment_non_catholic\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What is the average enrollment of schools?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_enrollment = df['Enrollment'].mean()\n\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Take the average of the school enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_enrollment = df['Enrollment'].mean()\n\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: What are the teams of the players, sorted in ascending alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Team' column\nteams = df['Team']\n\n# Sort the teams in ascending order\nsorted_teams = teams.sort_values()\n\n# Print the sorted teams\nprint(sorted_teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: Find the team of each player and sort them in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Team' column\nteams = df['Team']\n\n# Sort the teams in ascending order\nsorted_teams = teams.sort_values()\n\n# Print the sorted teams\nprint(sorted_teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: How many different positions of players are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique function to get all unique positions and then get the length of it\npositions = df['Position'].unique()\nnum_positions = len(positions)\n\nprint(num_positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: Count the number of distinct player positions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique function to get all unique positions and then get the length of it\npositions = df['Position'].unique()\nnum_positions = len(positions)\n\nprint(num_positions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: Find the team of the player of the highest age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the oldest age\noldest_age = df['Age'].max()\n\n# Find the team of the oldest player\noldest_team = df.loc[df['Age'] == oldest_age, 'Team'].iloc[0]\n\nprint(oldest_team)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: Which team has the oldest player?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the oldest age\noldest_age = df['Age'].max()\n\n# Find the team of the oldest player\noldest_team = df.loc[df['Age'] == oldest_age, 'Team'].iloc[0]\n\nprint(oldest_team)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: List the teams of the players with the top 5 largest ages.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the DataFrame by Age in descending order and selecting the top 5 rows\ntop5_oldest_players = df.sort_values('Age', ascending=False).head(5)\n\n# Listing the teams of the top 5 oldest players\nteams = top5_oldest_players['Team'].tolist()\n\n# Printing the list of teams\nprint(teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPlayer_ID,Player,Team,Age,Position,School_ID\n1,Timothy Beckham,Tampa Bay Devil Rays,15,Shortstop,1\n2,Pedro Álvarez,Pittsburgh Pirates,14,Third baseman,2\n3,Eric Hosmer,Kansas City Royals,16,First Baseman,1\n4,Brian Matusz,Baltimore Orioles,17,Left-handed pitcher,1\n5,Buster Posey,San Francisco Giants,15,Catcher,2\n6,Kyle Skipworth,Florida Marlins,14,Catcher,2\n7,Yonder Alonso,Cincinnati Reds,15,First baseman,1\n8,Gordon Beckham,Chicago White Sox,16,Shortstop,1\n9,Aaron Crow *,Washington Nationals,16,Right-handed pitcher,1\n10,Jason Castro,Houston Astros,15,Catcher,1\n\nQuestion: What are the teams that have the 5 oldest players?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the DataFrame by Age in descending order and selecting the top 5 rows\ntop5_oldest_players = df.sort_values('Age', ascending=False).head(5)\n\n# Listing the teams of the top 5 oldest players\nteams = top5_oldest_players['Team'].tolist()\n\n# Printing the list of teams\nprint(teams)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Please show different denominations and the corresponding number of schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts() function to count the frequency of each denomination\ndenomination_counts = df['Denomination'].value_counts()\n\nprint(denomination_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: For each denomination, return the denomination and the count of schools with that denomination.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts() function to count the frequency of each denomination\ndenomination_counts = df['Denomination'].value_counts()\n\nprint(denomination_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Please show different denominations and the corresponding number of schools in descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the different denominations and the corresponding number of schools\ndenomination_counts = df['Denomination'].value_counts()\n\n# Save the answer in a variable\nanswer = denomination_counts\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Order denominations in descending order of the count of schools with the denomination. Return each denomination with the count of schools.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the different denominations and the corresponding number of schools\ndenomination_counts = df['Denomination'].value_counts()\n\n# Save the answer in a variable\nanswer = denomination_counts\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: List the school color of the school that has the largest enrollment.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with the maximum enrollment\nmax_enrollment_index = df['Enrollment'].idxmax()\n\n# Get the school color of the school with the maximum enrollment\nmax_enrollment_school_color = df.at[max_enrollment_index, 'School_Colors']\n\n# Print the school color\nprint(max_enrollment_school_color)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What is the school color of the school with the largest enrollment?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the row with the maximum enrollment\nmax_enrollment_index = df['Enrollment'].idxmax()\n\n# Get the school color of the school with the maximum enrollment\nmax_enrollment_school_color = df.at[max_enrollment_index, 'School_Colors']\n\n# Print the school color\nprint(max_enrollment_school_color)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Show the denomination shared by schools founded before 1890 and schools founded after 1900", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_before_1890 = df[df['Founded'] < 1890]\ndf_after_1900 = df[df['Founded'] > 1900]\n\nshared_denomination = set(df_before_1890['Denomination']).intersection(set(df_after_1900['Denomination']))\n\nprint(shared_denomination)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What are the denominations used by both schools founded before 1890 and schools founded  after 1900?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_before_1890 = df[df['Founded'] < 1890]\ndf_after_1900 = df[df['Founded'] > 1900]\n\nshared_denomination = set(df_before_1890['Denomination']).intersection(set(df_after_1900['Denomination']))\n\nprint(shared_denomination)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: Show the denomination shared by more than one school.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndenomination_counts = df['Denomination'].value_counts()\n\ndenomination_shared_by_more_than_one_school = denomination_counts[denomination_counts > 1].index.tolist()\n\nprint(denomination_shared_by_more_than_one_school)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors\n1,St Aloysius' College,Milsons Point,1200.0,1879.0,Catholic,Boys,Day,1929.0,Royal Blue and Gold\n2,Barker College,Hornsby,2300.0,1890.0,Anglican,Boys only to Yr 9 Co-ed Year 10 to 12,Day & Boarding,1929.0,Red & Blue\n3,Cranbrook School,Bellevue Hill,1000.0,1918.0,Anglican,Boys,Day & Boarding,1929.0,Red, White & Blue\n4,Knox Grammar School,Wahroonga,1850.0,1924.0,Uniting Church,Boys,Day & Boarding,1929.0,Black & Blue\n5,Trinity Grammar School,Summer Hill,2200.0,1913.0,Anglican,Boys,Day & Boarding,1929.0,Green and White\n6,Waverley College,Waverley,1430.0,1903.0,Catholic,Boys,Day,1944.0,Royal Blue and Gold\n\nQuestion: What are the denomination more than one school have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndenomination_counts = df['Denomination'].value_counts()\n\ndenomination_shared_by_more_than_one_school = denomination_counts[denomination_counts > 1].index.tolist()\n\nprint(denomination_shared_by_more_than_one_school)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Find all the distinct district names ordered by city area in descending.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'City_Area' in descending order\ndf = df.sort_values(by='City_Area', ascending=False)\n\n# Get the distinct district names\ndistinct_districts = df['District_name'].unique()\n\n# Print the distinct district names\nprint(distinct_districts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What are the different district names in order of descending city area?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'City_Area' in descending order\ndf = df.sort_values(by='City_Area', ascending=False)\n\n# Get the distinct district names\ndistinct_districts = df['District_name'].unique()\n\n# Print the distinct district names\nprint(distinct_districts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: Find the list of page size which have more than 3 product listed", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of products for each page size\npage_size_counts = df['max_page_size'].value_counts()\n\n# Filter the page sizes with more than 3 products\npage_sizes_more_than_3 = page_size_counts[page_size_counts > 3].index.tolist()\n\n# Save the answer in a variable\nanswer = page_sizes_more_than_3\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What is the maximum page size for everything that has more than 3 products listed?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of products for each page size\npage_size_counts = df['max_page_size'].value_counts()\n\n# Filter the page sizes with more than 3 products\npage_sizes_more_than_3 = page_size_counts[page_size_counts > 3].index.tolist()\n\n# Save the answer in a variable\nanswer = page_sizes_more_than_3\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Find the name and population of district with population between 200000 and 2000000", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where City_Population is between 200000 and 2000000\nfiltered_df = df[(df['City_Population'] >= 200000) & (df['City_Population'] <= 2000000)]\n\n# Select the District_name and City_Population columns from the filtered dataframe\nresult = filtered_df[['District_name', 'City_Population']]\n\n# Save the answer in a variable\nanswer = result\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where City_Population is between 200000 and 2000000\nfiltered_df = df[(df['City_Population'] >= 200000) & (df['City_Population'] <= 2000000)]\n\n# Select the District_name and City_Population columns from the filtered dataframe\nresult = filtered_df[['District_name', 'City_Population']]\n\n# Save the answer in a variable\nanswer = result\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Find the name all districts with city area greater than 10 or population larger than 100000", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter rows where City_Area > 10 or City_Population > 100000\nfiltered_df = df[(df['City_Area'] > 10) | (df['City_Population'] > 100000)]\n\n# get the names of the districts\ndistrict_names = filtered_df['District_name'].tolist()\n\n# print the names of the districts\nprint(district_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter rows where City_Area > 10 or City_Population > 100000\nfiltered_df = df[(df['City_Area'] > 10) | (df['City_Population'] > 100000)]\n\n# get the names of the districts\ndistrict_names = filtered_df['District_name'].tolist()\n\n# print the names of the districts\nprint(district_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Which district has the largest population?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum population\nmax_population = df['City_Population'].max()\n\n# Find the district with the maximum population\nmax_district = df[df['City_Population'] == max_population]['District_name'].values[0]\n\n# Print the name of the district with the most residents\nprint(max_district)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What is the name of the district with the most residents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum population\nmax_population = df['City_Population'].max()\n\n# Find the district with the maximum population\nmax_district = df[df['City_Population'] == max_population]['District_name'].values[0]\n\n# Print the name of the district with the most residents\nprint(max_district)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Which district has the least area?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the row with the least area\nmin_area = df.loc[df['City_Area'].idxmin()]\n\n# Save the answer in a variable\nleast_area_district = min_area['District_name']\n\n# Print the variable\nprint(least_area_district)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What is the name of the district with the smallest area?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the row with the least area\nmin_area = df.loc[df['City_Area'].idxmin()]\n\n# Save the answer in a variable\nleast_area_district = min_area['District_name']\n\n# Print the variable\nprint(least_area_district)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStore_ID,Store_Name,Type,Area_size,Number_of_product_category,Ranking\n1,Miramichi,City Mall,179.84,17811.0,2\n2,Neguac,Village Store,26.69,1678.0,3\n3,Rogersville,Village Store,7.23,1170.0,1\n4,Blackville,Village Store,21.73,990.0,10\n5,Doaktown,City Mall,28.74,793.0,9\n\nQuestion: Find all types of store and number of them.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Type' and count the number of stores in each type\ntype_count = df.groupby('Type')['Store_ID'].count()\n\nprint(type_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStore_ID,Store_Name,Type,Area_size,Number_of_product_category,Ranking\n1,Miramichi,City Mall,179.84,17811.0,2\n2,Neguac,Village Store,26.69,1678.0,3\n3,Rogersville,Village Store,7.23,1170.0,1\n4,Blackville,Village Store,21.73,990.0,10\n5,Doaktown,City Mall,28.74,793.0,9\n\nQuestion: For each type of store, how many of them are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Type' and count the number of stores in each type\ntype_count = df.groupby('Type')['Store_ID'].count()\n\nprint(type_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What is the average pages per minute color?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_pages_per_minute = df['pages_per_minute_color'].mean()\n\nprint(average_pages_per_minute)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What is the average number of pages per minute color?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_pages_per_minute = df['pages_per_minute_color'].mean()\n\nprint(average_pages_per_minute)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: Find products with max page size as \"A4\" and pages per minute color smaller than 5.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where max_page_size is 'A4' and pages_per_minute_color is less than 5\nselected_products = df[(df['max_page_size'] == 'A4') & (df['pages_per_minute_color'] < 5)]\n\n# Select the product names\nproduct_names = selected_products['product'].tolist()\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where max_page_size is 'A4' and pages_per_minute_color is less than 5\nselected_products = df[(df['max_page_size'] == 'A4') & (df['pages_per_minute_color'] < 5)]\n\n# Select the product names\nproduct_names = selected_products['product'].tolist()\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: Find products with max page size as \"A4\" or pages per minute color smaller than 5.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['max_page_size'] == 'A4') | (df['pages_per_minute_color'] < 5)]\n\n# Save the answer in a variable\nanswer = filtered_df['product'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe based on the conditions\nfiltered_df = df[(df['max_page_size'] == 'A4') | (df['pages_per_minute_color'] < 5)]\n\n# Save the answer in a variable\nanswer = filtered_df['product'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: Find all the product whose name contains the word \"Scanner\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where product contains \"Scanner\"\ndf_filtered = df[df['product'].str.contains('Scanner')]\n\n# Save the answer in a variable\nscanner_products = df_filtered['product'].tolist()\n\n# Print the variable\nprint(scanner_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What are all of the products whose name includes the substring \"Scanner\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where product contains \"Scanner\"\ndf_filtered = df[df['product'].str.contains('Scanner')]\n\n# Save the answer in a variable\nscanner_products = df_filtered['product'].tolist()\n\n# Print the variable\nprint(scanner_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: Find the most prominent max page size among all the products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common maximum page size\ncommon_max_page_size = df['max_page_size'].mode()[0]\n\n# Print the most common maximum page size\nprint(common_max_page_size)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface\n1,Fujitsu fi-6130 A4 Series Scanner,301 x 160 x 158,600.0,30.0,A4,USB 2.0\n2,Plustek MobileOffice D28 Corporate,303 x 94 x 60,600.0,28.0,A4,USB 2.0\n3,Xerox Travel Scanner 100,289 x 51 x 38,600.0,4.0,A4,USB 2.0\n4,ScanShell 3000DN,300 x 50 x 45,600.0,3.0,A4,USB 2.0\n5,Canon imageFORMULA P-150,280 x 95 x 40,600.0,10.0,216mm x 356mm,USB 2.0\n6,Canon DR-2080C,298 x 209 x 99,600.0,36.0,216mm x 355mm,USB 2.0\n\nQuestion: What is the most common maximum page size?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common maximum page size\ncommon_max_page_size = df['max_page_size'].mode()[0]\n\n# Print the most common maximum page size\nprint(common_max_page_size)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: Find the total population of the districts where the area is bigger than the average city area.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average city area\naverage_city_area = df['City_Area'].mean()\n\n# Filter the rows where the area is bigger than the average\nfiltered_df = df[df['City_Area'] > average_city_area]\n\n# Calculate the total population\ntotal_population = filtered_df['City_Population'].sum()\n\nprint(total_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDistrict_ID,District_name,Headquartered_City,City_Population,City_Area\n1,Attock District,Attock City,94620.0,20.0\n2,Bahawalnagar District,Bahawalnagar City,134936.0,13.0\n3,Bahawalpur District,Bahawalpur City,530438.0,38.0\n4,Bhakkar District,Bhakkar City,89380.0,15.0\n5,Chakwal District,Chakwal City,113524.0,10.0\n6,Chiniot District,Chiniot City,219254.0,12.0\n7,Dera Ghazi Khan District,Dera Ghazi Khan City,464742.0,22.0\n8,Faisalabad District,Faisalabad City,2793721.0,147.0\n9,Gujranwala District,Gujranwala City,1526168.0,75.0\n10,Gujrat District,Gujrat City,328512.0,25.0\n\nQuestion: What is the total population for all the districts that have an area larger tahn the average city area?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average city area\naverage_city_area = df['City_Area'].mean()\n\n# Filter the rows where the area is bigger than the average\nfiltered_df = df[df['City_Area'] > average_city_area]\n\n# Calculate the total population\ntotal_population = filtered_df['City_Population'].sum()\n\nprint(total_population)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the total enrollment number of all colleges?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the total number of students enrolled\ntotal_students = df['enr'].sum()\n\n# Print the total number of students\nprint(total_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many students are enrolled in college?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the total number of students enrolled\ntotal_students = df['enr'].sum()\n\n# Print the total number of students\nprint(total_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the average enrollment number?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_enrollment = df['enr'].mean()\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many students, on average, does each college have enrolled?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_enrollment = df['enr'].mean()\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many colleges in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_colleges = len(df)\n\nprint(total_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many different colleges are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_colleges = len(df)\n\nprint(total_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: How many players have more than 1000 hours of training?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include players with more than 1000 hours of training\nfiltered_df = df[df['HS'] > 1000]\n\n# Count the number of players with more than 1000 hours of training\nnum_players = len(filtered_df)\n\n# Print the answer\nprint(num_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: How many different players trained for more than 1000 hours?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include players with more than 1000 hours of training\nfiltered_df = df[df['HS'] > 1000]\n\n# Count the number of players with more than 1000 hours of training\nnum_players = len(filtered_df)\n\n# Print the answer\nprint(num_players)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many colleges has more than 15000 students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the colleges with student population greater than 15000\nfiltered_df = df[df['enr'] > 15000]\n\n# Count the number of colleges\nnum_colleges = len(filtered_df)\n\n# Print the number of colleges\nprint(num_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the number of colleges with a student population greater than 15000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the colleges with student population greater than 15000\nfiltered_df = df[df['enr'] > 15000]\n\n# Count the number of colleges\nnum_colleges = len(filtered_df)\n\n# Print the number of colleges\nprint(num_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What is the average training hours of all players?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# calculate the average training hours\navg_training_hours = df['HS'].mean()\n\n# print the average training hours\nprint(avg_training_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: How many hours do the players train on average?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# calculate the average training hours\navg_training_hours = df['HS'].mean()\n\n# print the average training hours\nprint(avg_training_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: Find the name and training hours of players whose hours are below 1500.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'HS' column\nfiltered_df = df[df['HS'] < 1500]\n\n# Select the 'pName' and 'HS' columns\nanswer = filtered_df[['pName', 'HS']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What are the names and number of hours spent training for each player who trains for less than 1500 hours?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'HS' column\nfiltered_df = df[df['HS'] < 1500]\n\n# Select the 'pName' and 'HS' columns\nanswer = filtered_df[['pName', 'HS']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many different colleges do attend the tryout test?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique colleges\nunique_colleges = df['cName'].unique()\n\n# Count the unique colleges\nnum_unique_colleges = len(unique_colleges)\n\nprint(num_unique_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many different colleges were represented at tryouts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique colleges\nunique_colleges = df['cName'].unique()\n\n# Count the unique colleges\nnum_unique_colleges = len(unique_colleges)\n\nprint(num_unique_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many students got accepted after the tryout?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where 'decision' is 'yes'\ndf_yes = df[df['decision'] == 'yes']\n\n# Count the number of students with 'yes' decision\nnum_students_yes = len(df_yes)\n\nprint(num_students_yes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many students received a yes from tryouts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where 'decision' is 'yes'\ndf_yes = df[df['decision'] == 'yes']\n\n# Count the number of students with 'yes' decision\nnum_students_yes = len(df_yes)\n\nprint(num_students_yes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many students whose are playing the role of goalie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter DataFrame based on 'pPos' column\ngoalie_df = df[df['pPos'] == 'goalie']\n\n# count the number of rows\nnum_goalies = goalie_df.shape[0]\n\nprint(num_goalies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What is the number of students playing as a goalie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter DataFrame based on 'pPos' column\ngoalie_df = df[df['pPos'] == 'goalie']\n\n# count the number of rows\nnum_goalies = goalie_df.shape[0]\n\nprint(num_goalies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: Find the max, average and min training hours of all players.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average, maximum, and minimum for the number of hours spent training\navg_hours = df['HS'].mean()\nmax_hours = df['HS'].max()\nmin_hours = df['HS'].min()\n\n# Save the answers in a variable\nanswers = {\"Average Hours\": avg_hours, \"Maximum Hours\": max_hours, \"Minimum Hours\": min_hours}\n\n# Print the variable\nprint(answers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What is the average, maximum, and minimum for the number of hours spent training?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average, maximum, and minimum for the number of hours spent training\navg_hours = df['HS'].mean()\nmax_hours = df['HS'].max()\nmin_hours = df['HS'].min()\n\n# Save the answers in a variable\nanswers = {\"Average Hours\": avg_hours, \"Maximum Hours\": max_hours, \"Minimum Hours\": min_hours}\n\n# Print the variable\nprint(answers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is average enrollment of colleges in the state FL?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the state of Florida\nflorida_data = df[df['state'] == 'FL']\n\n# Calculate the average enrollment\naverage_enrollment = florida_data['enr'].mean()\n\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is average number of students enrolled in Florida colleges?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for the state of Florida\nflorida_data = df[df['state'] == 'FL']\n\n# Calculate the average enrollment\naverage_enrollment = florida_data['enr'].mean()\n\nprint(average_enrollment)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What are the names of players whose training hours is between 500 and 1500?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the players whose training hours is between 500 and 1500\nfiltered_df = df[(df['HS'] >= 500) & (df['HS'] <= 1500)]\n\n# Save the answer in a variable\nanswer = filtered_df['pName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What are the names of players who train between 500 and 1500 hours?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the players whose training hours is between 500 and 1500\nfiltered_df = df[(df['HS'] >= 500) & (df['HS'] <= 1500)]\n\n# Save the answer in a variable\nanswer = filtered_df['pName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: Find the players whose names contain letter 'a'.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the players whose names contain letter 'a'\nplayers_with_a = df[df['pName'].str.contains('a', case=False)]\n\n# Save the answer of the question in a variable and print the variable\nanswer = players_with_a['pName'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: Who are the players that have names containing the letter a?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the players whose names contain letter 'a'\nplayers_with_a = df[df['pName'].str.contains('a', case=False)]\n\n# Save the answer of the question in a variable and print the variable\nanswer = players_with_a['pName'].tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where 'state' column is 'LA'\ndf_LA = df[df['state'] == 'LA']\n\n# Select rows where 'enr' column is greater than 10000\ndf_enr = df_LA[df_LA['enr'] > 10000]\n\n# Select 'cName' and 'enr' columns from the selected rows\nanswer = df_enr[['cName', 'enr']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where 'state' column is 'LA'\ndf_LA = df[df['state'] == 'LA']\n\n# Select rows where 'enr' column is greater than 10000\ndf_enr = df_LA[df_LA['enr'] > 10000]\n\n# Select 'cName' and 'enr' columns from the selected rows\nanswer = df_enr[['cName', 'enr']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: List all information about college sorted by enrollment number in the ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by enrollment numbers\nsorted_df = df.sort_values('enr')\n\n# Print sorted dataframe\nprint(sorted_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What information do you have on colleges sorted by increasing enrollment numbers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort dataframe by enrollment numbers\nsorted_df = df.sort_values('enr')\n\n# Print sorted dataframe\nprint(sorted_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the colleges with enrollment greater than 18000\nfiltered_df = df[df['enr'] > 18000]\n\n# Sort the colleges by their names\nsorted_df = filtered_df.sort_values('cName')\n\n# Save the answer in a variable\nanswer = sorted_df['cName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the name of every college in alphabetical order that has more than 18000 students enrolled?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the colleges with enrollment greater than 18000\nfiltered_df = df[df['enr'] > 18000]\n\n# Sort the colleges by their names\nsorted_df = filtered_df.sort_values('cName')\n\n# Save the answer in a variable\nanswer = sorted_df['cName'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: Find the name of players whose card is yes in the descending order of training hours.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for players who received a card\ndf_card = df[df['yCard'] == 'yes']\n\n# Sort the dataframe in descending order of hours of training\ndf_sorted = df_card.sort_values('HS', ascending=False)\n\n# Get the names of the players\nplayer_names = df_sorted['pName'].tolist()\n\n# Print the names of the players\nprint(player_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,pName,yCard,HS\n10001,Andrew,no,1200\n20002,Blake,no,1600\n30003,Charles,no,300\n40004,David,yes,1600\n40002,Drago,yes,1600\n50005,Eddie,yes,600\n\nQuestion: What are the name of the players who received a card in descending order of the hours of training?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for players who received a card\ndf_card = df[df['yCard'] == 'yes']\n\n# Sort the dataframe in descending order of hours of training\ndf_sorted = df_card.sort_values('HS', ascending=False)\n\n# Get the names of the players\nplayer_names = df_sorted['pName'].tolist()\n\n# Print the names of the players\nprint(player_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Find the name of different colleges involved in the tryout in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncolleges = df['cName'].unique()\ncolleges.sort()\n\nprint(colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What are the different names of the colleges involved in the tryout in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncolleges = df['cName'].unique()\ncolleges.sort()\n\nprint(colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Which position is most popular among players in the tryout?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the most popular position\nmost_popular_position = df['pPos'].mode()[0]\n\nprint(most_popular_position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What was the most popular position at tryouts?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the most popular position\nmost_popular_position = df['pPos'].mode()[0]\n\nprint(most_popular_position)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Find the number of students who participate in the tryout for each college ordered by descending count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of times each college appears\ncount = df['cName'].value_counts()\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many students participated in tryouts for each college by descennding count?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of times each college appears\ncount = df['cName'].value_counts()\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names of schools with the top 3 largest size?", "response": "# Import the necessary libraries\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by class size in descending order\ndf = df.sort_values('enr', ascending=False)\n\n# Get the names of the top 3 schools\ntop_3_schools = df['cName'].head(3)\n\n# Print the result\nprint(top_3_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names of the schools with the top 3 largest class sizes?", "response": "# Import the necessary libraries\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by class size in descending order\ndf = df.sort_values('enr', ascending=False)\n\n# Get the names of the top 3 schools\ntop_3_schools = df['cName'].head(3)\n\n# Print the result\nprint(top_3_schools)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the name of school that has the smallest enrollment in each state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmin_enrollment = df.groupby('state')['enr'].transform('min') == df['enr']\nfiltered_df = df[min_enrollment]\n\nanswer = filtered_df[['cName', 'state', 'enr']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the name of the school with smallest enrollment size per state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmin_enrollment = df.groupby('state')['enr'].transform('min') == df['enr']\nfiltered_df = df[min_enrollment]\n\nanswer = filtered_df[['cName', 'state', 'enr']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Which college has any student who is a goalie and succeeded in the tryout.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where decision is 'yes' and pPos is 'goalie'\ndf_filtered = df[(df['decision'] == 'yes') & (df['pPos'] == 'goalie')]\n\n# Get the unique colleges from the filtered dataframe\ncolleges = df_filtered['cName'].unique()\n\n# Print the colleges\nfor college in colleges:\n    print(college)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What college has a student who successfully made the team in the role of a goalie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where decision is 'yes' and pPos is 'goalie'\ndf_filtered = df[(df['decision'] == 'yes') & (df['pPos'] == 'goalie')]\n\n# Get the unique colleges from the filtered dataframe\ncolleges = df_filtered['cName'].unique()\n\n# Print the colleges\nfor college in colleges:\n    print(college)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Create a mask for colleges in LA with enrollment greater than 15000\nmask_la = (df['state'] == 'LA') & (df['enr'] > 15000)\n\n# Create a mask for colleges in AZ with enrollment less than 13000\nmask_az = (df['state'] == 'AZ') & (df['enr'] < 13000)\n\n# Combine the masks using OR\nmask_final = mask_la | mask_az\n\n# Apply the final mask to the dataframe\nresult = df[mask_final]\n\n# Save the names of the colleges in a list\ncollege_names = result['cName'].tolist()\n\n# Print the college names\nprint(college_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Create a mask for colleges in LA with enrollment greater than 15000\nmask_la = (df['state'] == 'LA') & (df['enr'] > 15000)\n\n# Create a mask for colleges in AZ with enrollment less than 13000\nmask_az = (df['state'] == 'AZ') & (df['enr'] < 13000)\n\n# Combine the masks using OR\nmask_final = mask_la | mask_az\n\n# Apply the final mask to the dataframe\nresult = df[mask_final]\n\n# Save the names of the colleges in a list\ncollege_names = result['cName'].tolist()\n\n# Print the college names\nprint(college_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Find the names of schools that have some students playing in goalie and mid positions.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter out schools that have at least one student playing in goalie position\ngoalie_schools = df[df['pPos'] == 'goalie']['cName'].unique()\n\n# Filter out schools that have at least one student playing in mid position\nmid_schools = df[df['pPos'] == 'mid']['cName'].unique()\n\n# Find the intersection of the two sets\nanswer = set(goalie_schools) & set(mid_schools)\n\n# Save the answer in a variable\nanswer_variable = answer\n\n# Print the variable\nprint(answer_variable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What are the names of all schools that have students trying out for the position of goal and 'mid'-field.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter out schools that have at least one student playing in goalie position\ngoalie_schools = df[df['pPos'] == 'goalie']['cName'].unique()\n\n# Filter out schools that have at least one student playing in mid position\nmid_schools = df[df['pPos'] == 'mid']['cName'].unique()\n\n# Find the intersection of the two sets\nanswer = set(goalie_schools) & set(mid_schools)\n\n# Save the answer in a variable\nanswer_variable = answer\n\n# Print the variable\nprint(answer_variable)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many schools have some students playing in goalie and mid positions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['decision'] = df['decision'].map({'yes': True, 'no': False})\n\ngoalie_decision = df[(df['pPos'] == 'goalie') & df['decision']]['cName'].nunique()\nmid_decision = df[(df['pPos'] == 'mid') & df['decision']]['cName'].nunique()\n\ntotal_decision = goalie_decision + mid_decision\nprint(total_decision)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: How many schools have students playing in goalie and mid-field positions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['decision'] = df['decision'].map({'yes': True, 'no': False})\n\ngoalie_decision = df[(df['pPos'] == 'goalie') & df['decision']]['cName'].nunique()\nmid_decision = df[(df['pPos'] == 'mid') & df['decision']]['cName'].nunique()\n\ntotal_decision = goalie_decision + mid_decision\nprint(total_decision)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: Find the names of schools that have some players in the mid position but not in the goalie position.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_mid = df[df['pPos'] == 'mid']\nmid_schools = df_mid['cName'].unique()\n\ndf_goalie = df[df['pPos'] == 'goalie']\ngoalie_schools = df_goalie['cName'].unique()\n\nmid_not_goalie = set(mid_schools) - set(goalie_schools)\n\nprint(mid_not_goalie)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\npID,cName,pPos,decision\n10001,LSU,goalie,no\n10001,ASU,goalie,yes\n20002,FSU,striker,yes\n30003,OU,mid,no\n40004,ASU,goalie,no\n50005,LSU,mid,no\n\nQuestion: What are the names of the schools with some players in the mid position but no goalies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_mid = df[df['pPos'] == 'mid']\nmid_schools = df_mid['cName'].unique()\n\ndf_goalie = df[df['pPos'] == 'goalie']\ngoalie_schools = df_goalie['cName'].unique()\n\nmid_not_goalie = set(mid_schools) - set(goalie_schools)\n\nprint(mid_not_goalie)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: Find the states where have the colleges whose enrollments are less than the largest size.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment\nmax_enr = df['enr'].max()\n\n# Find the states where enrollment is less than max_enr\nstates_less_enr = df[df['enr'] < max_enr]['state']\n\n# Print the states\nprint(states_less_enr)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the states with colleges that have enrollments less than the some other college?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment\nmax_enr = df['enr'].max()\n\n# Find the states where enrollment is less than max_enr\nstates_less_enr = df[df['enr'] < max_enr]['state']\n\n# Print the states\nprint(states_less_enr)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: Find names of colleges with enrollment greater than that of some (at least one) college in the FL state.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment in FL state\nmax_enr_FL = df[df['state'] == 'FL']['enr'].max()\n\n# Find the names of colleges with enrollment greater than that in FL state\nresult = df[df['enr'] > max_enr_FL]['cName']\n\n# Save the answer in a variable and print it\nanswer = result.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names of the colleges that are larger than at least one college in Florida?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment in FL state\nmax_enr_FL = df[df['state'] == 'FL']['enr'].max()\n\n# Find the names of colleges with enrollment greater than that in FL state\nresult = df[df['enr'] > max_enr_FL]['cName']\n\n# Save the answer in a variable and print it\nanswer = result.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment in the FL state\nmax_enr_FL = df[df['state'] == 'FL']['enr'].max()\n\n# Find the names of all colleges whose enrollment is greater than max_enr_FL\ncolleges_over_FL = df[df['enr'] > max_enr_FL]['cName'].tolist()\n\n# Print the result\nprint(colleges_over_FL)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What are the names of all colleges with a larger enrollment than the largest college in Florida?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the maximum enrollment in the FL state\nmax_enr_FL = df[df['state'] == 'FL']['enr'].max()\n\n# Find the names of all colleges whose enrollment is greater than max_enr_FL\ncolleges_over_FL = df[df['enr'] > max_enr_FL]['cName'].tolist()\n\n# Print the result\nprint(colleges_over_FL)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the number of states that has some college whose enrollment is larger than the average enrollment?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average enrollment\naverage_enrollment = df['enr'].mean()\n\n# Filter the dataframe to find states with colleges with more students than the average\nstates_above_average = df[df['enr'] > average_enrollment]\n\n# Find the number of unique states\nnum_states_above_average = states_above_average['state'].nunique()\n\n# Save the answer in a variable\nanswer = num_states_above_average\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many states have a college with more students than average?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average enrollment\naverage_enrollment = df['enr'].mean()\n\n# Filter the dataframe to find states with colleges with more students than the average\nstates_above_average = df[df['enr'] > average_enrollment]\n\n# Find the number of unique states\nnum_states_above_average = states_above_average['state'].nunique()\n\n# Save the answer in a variable\nanswer = num_states_above_average\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the average enrollment\naverage_enrollment = df['enr'].mean()\n\n# Filter colleges with enrollment smaller than average\nsmaller_enrollment = df[df['enr'] < average_enrollment]\n\n# Count the number of unique states\nnum_states = smaller_enrollment['state'].nunique()\n\n# Print the answer\nprint(num_states)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncName,state,enr\nLSU,LA,18000\nASU,AZ,12000\nOU,OK,22000\nFSU,FL,19000\n\nQuestion: How many states have smaller colleges than average?", "response": "import pandas as pd\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the average enrollment\naverage_enrollment = df['enr'].mean()\n\n# Filter colleges with enrollment smaller than average\nsmaller_enrollment = df[df['enr'] < average_enrollment]\n\n# Count the number of unique states\nnum_states = smaller_enrollment['state'].nunique()\n\n# Print the answer\nprint(num_states)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: How many devices are there?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of devices\nnum_devices = len(df)\n\n# Print the number of devices\nprint(num_devices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: Count the number of devices.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of devices\nnum_devices = len(df)\n\n# Print the number of devices\nprint(num_devices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: List the carriers of devices in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncarriers = df['Carrier'].unique()\ncarriers.sort()\nprint(carriers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: What are the different carriers for devices, listed in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncarriers = df['Carrier'].unique()\ncarriers.sort()\nprint(carriers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: What are the carriers of devices whose software platforms are not \"Android\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to get only rows where Software_Platform is not 'Android'\ndf_non_android = df[df['Software_Platform'] != 'Android']\n\n# Get unique values of Carrier from the filtered dataframe\nnon_android_carriers = df_non_android['Carrier'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = non_android_carriers\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: Return the device carriers that do not have Android as their software platform.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to get only rows where Software_Platform is not 'Android'\ndf_non_android = df[df['Software_Platform'] != 'Android']\n\n# Get unique values of Carrier from the filtered dataframe\nnon_android_carriers = df_non_android['Carrier'].unique()\n\n# Save the answer in a variable and print the variable\nanswer = non_android_carriers\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: What are the names of shops in ascending order of open year?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert \"Open_Year\" column to integers\ndf['Open_Year'] = df['Open_Year'].astype(int)\n\n# Sort the DataFrame by \"Open_Year\"\ndf = df.sort_values('Open_Year')\n\n# Save the answer in a variable\nanswer = df['Shop_Name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: Return the names of shops, ordered by year of opening ascending.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert \"Open_Year\" column to integers\ndf['Open_Year'] = df['Open_Year'].astype(int)\n\n# Sort the DataFrame by \"Open_Year\"\ndf = df.sort_values('Open_Year')\n\n# Save the answer in a variable\nanswer = df['Shop_Name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Device_ID,Quantity\n1,6,100\n2,6,110\n3,6,134\n4,6,56\n1,4,200\n11,6,112\n3,4,124\n9,4,51\n\nQuestion: What is the average quantity of stocks?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the average quantity of stocks\naverage_quantity = df['Quantity'].mean()\n\n# Print the average quantity\nprint(average_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Device_ID,Quantity\n1,6,100\n2,6,110\n3,6,134\n4,6,56\n1,4,200\n11,6,112\n3,4,124\n9,4,51\n\nQuestion: Give the average quantity of stocks.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the average quantity of stocks\naverage_quantity = df['Quantity'].mean()\n\n# Print the average quantity\nprint(average_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: What are the names and location of the shops in ascending alphabetical order of name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_sorted = df.sort_values('Shop_Name')\n\nshops_and_locations = df_sorted[['Shop_Name', 'Location']]\n\nprint(shops_and_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: Return the names and locations of shops, ordered by name in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_sorted = df.sort_values('Shop_Name')\n\nshops_and_locations = df_sorted[['Shop_Name', 'Location']]\n\nprint(shops_and_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: How many different software platforms are there for devices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_platforms = df['Software_Platform'].nunique()\n\nprint(num_platforms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: Count the number of different software platforms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_platforms = df['Software_Platform'].nunique()\n\nprint(num_platforms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: List the open date of open year of the shop named \"Apple\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Shop_Name is 'Apple'\napple_shop = df[df['Shop_Name'] == 'Apple']\n\n# Select the Open_Date and Open_Year columns for the filtered DataFrame\nanswer = apple_shop[['Open_Date', 'Open_Year']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: What are the open dates and years for the shop named Apple?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Shop_Name is 'Apple'\napple_shop = df[df['Shop_Name'] == 'Apple']\n\n# Select the Open_Date and Open_Year columns for the filtered DataFrame\nanswer = apple_shop[['Open_Date', 'Open_Year']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: List the name of the shop with the latest open year.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by Open_Year in descending order\ndf = df.sort_values('Open_Year', ascending=False)\n\n# Select the Shop_Name of the first row\nanswer = df.iloc[0]['Shop_Name']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShop_ID,Shop_Name,Location,Open_Date,Open_Year\n1,Dinas Device,Dinas,1 January,2014\n2,Best Buy,Cymmer,15 July,2006\n3,Ferndale,Blaenllechau,8 November,2009\n4,Apple,Blaenllechau,10 June,2009\n5,Pentre store,Pentre,24 February,2011\n6,Tynewydd repair,Porth,11 April,2007\n7,Dinas store,Dinas,13 January,2009\n8,Naval repair,Penygraig,10 December,2010\n9,Gelli repair,Gelli,21 August,2013\n10,Naval's shop,Penygraig,27 January,2014\n\nQuestion: What is the shop name corresponding to the shop that opened in the most recent year?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by Open_Year in descending order\ndf = df.sort_values('Open_Year', ascending=False)\n\n# Select the Shop_Name of the first row\nanswer = df.iloc[0]['Shop_Name']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: Please show different software platforms and the corresponding number of devices using each.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of devices for each software platform\nplatform_counts = df['Software_Platform'].value_counts()\n\n# Print the counts\nprint(platform_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: What are the different software platforms for devices, and how many devices have each?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of devices for each software platform\nplatform_counts = df['Software_Platform'].value_counts()\n\n# Print the counts\nprint(platform_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: Please show the software platforms of devices in descending order of the count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Software_Platform' and count the number of occurrences\nplatform_counts = df['Software_Platform'].value_counts()\n\n# Sort the result in descending order\nsorted_platforms = platform_counts.sort_values(ascending=False)\n\n# Save the answer in a variable and print the variable\ndifferent_platforms = sorted_platforms.index.tolist()\nprint(different_platforms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: What are the different software platforms for devices, ordered by frequency descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Software_Platform' and count the number of occurrences\nplatform_counts = df['Software_Platform'].value_counts()\n\n# Sort the result in descending order\nsorted_platforms = platform_counts.sort_values(ascending=False)\n\n# Save the answer in a variable and print the variable\ndifferent_platforms = sorted_platforms.index.tolist()\nprint(different_platforms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: List the software platform shared by the greatest number of devices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the most common software platform\nmost_common_platform = df['Software_Platform'].mode()[0]\n\n# Print the most common platform\nprint(most_common_platform)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDevice_ID,Device,Carrier,Package_Version,Applications,Software_Platform\n1,BlackBerry Storm 9530,MTS Mobility,5.0.0.808,5.0.0.419,Android\n2,Apple,Verizon Wireless,5.0.0.328,5.0.0.328,iOS\n3,Huawei,Telus Mobility,5.0.0.419,5.0.0.419,Android\n4,Xiaomi,Bell Mobility,5.0.0.419,5.0.0.419,Android\n5,Samsung,Iusacell,4.7.0.208,4.7.0.151,Android\n6,Galaxy,Vodafone AU,5.0.0.742,5.0.0.451,Android\n\nQuestion: What is the software platform that is most common amongst all devices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the most common software platform\nmost_common_platform = df['Software_Platform'].mode()[0]\n\n# Print the most common platform\nprint(most_common_platform)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: How many bookings do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of bookings\nnum_bookings = df.shape[0]\n\n# Print the number of bookings\nprint(num_bookings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: Count the total number of bookings made.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of bookings\nnum_bookings = df.shape[0]\n\n# Print the number of bookings\nprint(num_bookings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: List the order dates of all the bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# List the order dates of all the bookings.\norder_dates = df['Order_Date'].tolist()\nprint(order_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: What is the order date of each booking?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# List the order dates of all the bookings.\norder_dates = df['Order_Date'].tolist()\nprint(order_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: Show all the planned delivery dates and actual delivery dates of bookings.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the desired columns\ndf_selected = df[['Planned_Delivery_Date', 'Actual_Delivery_Date']]\n\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: What are the planned delivery date and actual delivery date for each booking?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the desired columns\ndf_selected = df[['Planned_Delivery_Date', 'Actual_Delivery_Date']]\n\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n240,286,Harold,624-096-7791,jerde.harmon@example.com,\n267,98,Federico,914-915-7483,johnson27@example.com,\n304,369,Samson,1-463-121-4086x655,dalton75@example.com,\n418,369,Daryl,(191)727-6065x6351,hickle.jazmyn@example.org,\n516,110,Robert,903.657.6967x467,fheathcote@example.com,VIP\n518,180,Jacques,02902266118,eleannon@example.org,\n546,266,Davonte,(941)313-1839x94608,keanu70@example.net,VIP\n556,19,Blake,056.568.7725,clemens43@example.org,\n633,148,Elwyn,388.863.3459x0915,ggrant@example.com,\n712,266,Alek,398.352.1753,terry.nels@example.com,\n\nQuestion: How many customers do we have?", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = df['Customer_ID'].nunique()\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n240,286,Harold,624-096-7791,jerde.harmon@example.com,\n267,98,Federico,914-915-7483,johnson27@example.com,\n304,369,Samson,1-463-121-4086x655,dalton75@example.com,\n418,369,Daryl,(191)727-6065x6351,hickle.jazmyn@example.org,\n516,110,Robert,903.657.6967x467,fheathcote@example.com,VIP\n518,180,Jacques,02902266118,eleannon@example.org,\n546,266,Davonte,(941)313-1839x94608,keanu70@example.net,VIP\n556,19,Blake,056.568.7725,clemens43@example.org,\n633,148,Elwyn,388.863.3459x0915,ggrant@example.com,\n712,266,Alek,398.352.1753,terry.nels@example.com,\n\nQuestion: Count the number of customers recorded.", "response": "import pandas as pd\n\n# Read the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = df['Customer_ID'].nunique()\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n240,286,Harold,624-096-7791,jerde.harmon@example.com,\n267,98,Federico,914-915-7483,johnson27@example.com,\n304,369,Samson,1-463-121-4086x655,dalton75@example.com,\n418,369,Daryl,(191)727-6065x6351,hickle.jazmyn@example.org,\n516,110,Robert,903.657.6967x467,fheathcote@example.com,VIP\n518,180,Jacques,02902266118,eleannon@example.org,\n546,266,Davonte,(941)313-1839x94608,keanu70@example.net,VIP\n556,19,Blake,056.568.7725,clemens43@example.org,\n633,148,Elwyn,388.863.3459x0915,ggrant@example.com,\n712,266,Alek,398.352.1753,terry.nels@example.com,\n\nQuestion: What are the phone and email for customer Harold?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get information for customer \"Harold\"\nharold_info = df[df['Customer_Name'] == 'Harold'][['Customer_Phone', 'Customer_Email_Address']]\n\n# Save the answer in a variable\nanswer = harold_info.values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCustomer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n240,286,Harold,624-096-7791,jerde.harmon@example.com,\n267,98,Federico,914-915-7483,johnson27@example.com,\n304,369,Samson,1-463-121-4086x655,dalton75@example.com,\n418,369,Daryl,(191)727-6065x6351,hickle.jazmyn@example.org,\n516,110,Robert,903.657.6967x467,fheathcote@example.com,VIP\n518,180,Jacques,02902266118,eleannon@example.org,\n546,266,Davonte,(941)313-1839x94608,keanu70@example.net,VIP\n556,19,Blake,056.568.7725,clemens43@example.org,\n633,148,Elwyn,388.863.3459x0915,ggrant@example.com,\n712,266,Alek,398.352.1753,terry.nels@example.com,\n\nQuestion: Find the phone number and email address of customer \"Harold\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get information for customer \"Harold\"\nharold_info = df[df['Customer_Name'] == 'Harold'][['Customer_Phone', 'Customer_Email_Address']]\n\n# Save the answer in a variable\nanswer = harold_info.values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: Show all the Store_Name of drama workshop groups.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstore_names = df['Store_Name'].tolist()\n\nprint(store_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: What are the store names of drama workshop groups?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstore_names = df['Store_Name'].tolist()\n\nprint(store_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Show the minimum, average, maximum order quantity of all invoices.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, average, and maximum order quantity\nmin_order_quantity = df['Order_Quantity'].min()\navg_order_quantity = df['Order_Quantity'].mean()\nmax_order_quantity = df['Order_Quantity'].max()\n\n# Save the answers in variables\nanswer = {'Minimum': min_order_quantity, 'Average': avg_order_quantity, 'Maximum': max_order_quantity}\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: What are the minimum, average, and maximum quantities ordered? Check all the invoices.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the minimum, average, and maximum order quantity\nmin_order_quantity = df['Order_Quantity'].min()\navg_order_quantity = df['Order_Quantity'].mean()\nmax_order_quantity = df['Order_Quantity'].max()\n\n# Save the answers in variables\nanswer = {'Minimum': min_order_quantity, 'Average': avg_order_quantity, 'Maximum': max_order_quantity}\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: What are the distinct payment method codes in all the invoices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique() function to get the distinct payment method codes\ndistinct_payment_methods = df['payment_method_code'].unique()\n\nprint(distinct_payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Show me the distinct payment method codes from the invoice record.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the unique() function to get the distinct payment method codes\ndistinct_payment_methods = df['payment_method_code'].unique()\n\nprint(distinct_payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarketing_Region_Code,Marketing_Region_Name,Marketing_Region_Descriptrion,Other_Details\nCA,Canada,Our target market,\nCN,China,Our largest market,\nES,Spain,,\nFR,France,,\nIN,India,,\nMX,Mexico,,\nRU,Russia,,\nUS,United States,Our main market,\n\nQuestion: What is the description of the marketing region China?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row that contains China\nchina_row = df[df['Marketing_Region_Name'] == 'China']\n\n# Get the description of China\nchina_description = china_row['Marketing_Region_Descriptrion'].values[0]\n\nprint(china_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMarketing_Region_Code,Marketing_Region_Name,Marketing_Region_Descriptrion,Other_Details\nCA,Canada,Our target market,\nCN,China,Our largest market,\nES,Spain,,\nFR,France,,\nIN,India,,\nMX,Mexico,,\nRU,Russia,,\nUS,United States,Our main market,\n\nQuestion: Find the marketing region description of China?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the row that contains China\nchina_row = df[df['Marketing_Region_Name'] == 'China']\n\n# Get the description of China\nchina_description = china_row['Marketing_Region_Descriptrion'].values[0]\n\nprint(china_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: Show all the distinct product names with price higher than the average.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# calculate average product price\naverage_price = df['Product_Price'].mean()\n\n# filter dataframe with product price higher than the average\nfiltered_df = df[df['Product_Price'] > average_price]\n\n# get distinct product names\ndistinct_product_names = filtered_df['Product_Name'].unique()\n\n# save answer in a variable\nanswer = distinct_product_names\n\n# print variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: What are the distinct names of the products that cost more than the average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# calculate average product price\naverage_price = df['Product_Price'].mean()\n\n# filter dataframe with product price higher than the average\nfiltered_df = df[df['Product_Price'] > average_price]\n\n# get distinct product names\ndistinct_product_names = filtered_df['Product_Name'].unique()\n\n# save answer in a variable\nanswer = distinct_product_names\n\n# print variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: What is the name of the most expensive product?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum price\nmax_price = df['Product_Price'].max()\n\n# Find the name of the product with the maximum price\nmost_pricy_product = df.loc[df['Product_Price'] == max_price, 'Product_Name'].values[0]\n\n# Print the most pricy product\nprint(most_pricy_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: Tell me the name of the most pricy product.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum price\nmax_price = df['Product_Price'].max()\n\n# Find the name of the product with the maximum price\nmost_pricy_product = df.loc[df['Product_Price'] == max_price, 'Product_Name'].values[0]\n\n# Print the most pricy product\nprint(most_pricy_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: List all product names in ascending order of price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Product_Price' in ascending order\ndf_sorted = df.sort_values('Product_Price')\n\n# Save the names of the products in a list\nproduct_names = df_sorted['Product_Name'].tolist()\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: Sort the names of products in ascending order of their price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Product_Price' in ascending order\ndf_sorted = df.sort_values('Product_Price')\n\n# Save the names of the products in a list\nproduct_names = df_sorted['Product_Name'].tolist()\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n153,124,Shawna,664.495.1939,krogahn@example.com,\n211,124,Ashley,893-536-8857,preston45@example.net,\n313,39,Oren,1-952-052-6685x28082,ferry.carolina@example.net,\n341,110,Issac,08639382978,wisozk.john@example.org,\n360,207,Shaniya,472.072.6649x4161,wschroeder@example.org,\n376,180,Peyton,905.705.9514,clotilde04@example.net,\n379,192,Trudie,782-118-0067,trey88@example.net,\n415,110,Gwen,342-389-0010x682,okub@example.org,\n433,110,Doyle,547.535.3455,otilia.ortiz@example.net,\n448,192,Fritz,858.603.7004,cummings.matteo@example.com,Did not pay\n\nQuestion: What is the phone number of the performer Ashley?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the performer's name is 'Ashley'\nashley_df = df[df['Customer_Name'] == 'Ashley']\n\n# Retrieve the performer's phone number\nashley_phone = ashley_df['Customer_Phone'].values[0]\n\n# Print the performer's phone number\nprint(ashley_phone)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPerformer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details\n153,124,Shawna,664.495.1939,krogahn@example.com,\n211,124,Ashley,893-536-8857,preston45@example.net,\n313,39,Oren,1-952-052-6685x28082,ferry.carolina@example.net,\n341,110,Issac,08639382978,wisozk.john@example.org,\n360,207,Shaniya,472.072.6649x4161,wschroeder@example.org,\n376,180,Peyton,905.705.9514,clotilde04@example.net,\n379,192,Trudie,782-118-0067,trey88@example.net,\n415,110,Gwen,342-389-0010x682,okub@example.org,\n433,110,Doyle,547.535.3455,otilia.ortiz@example.net,\n448,192,Fritz,858.603.7004,cummings.matteo@example.com,Did not pay\n\nQuestion: Find the phone number of performer \"Ashley\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the performer's name is 'Ashley'\nashley_df = df[df['Customer_Name'] == 'Ashley']\n\n# Retrieve the performer's phone number\nashley_phone = ashley_df['Customer_Phone'].values[0]\n\n# Print the performer's phone number\nprint(ashley_phone)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Show all payment method codes and the number of orders for each code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Use the value_counts function to count the frequency of each payment method code\npayment_method_count = df['payment_method_code'].value_counts()\n\n# Print the result\nprint(payment_method_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: List the distinct payment method codes with the number of orders made", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Use the value_counts function to count the frequency of each payment method code\npayment_method_count = df['payment_method_code'].value_counts()\n\n# Print the result\nprint(payment_method_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: What is the payment method code used by the most orders?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the payment method code used by the most orders\nmost_common_payment_method = df['payment_method_code'].value_counts().idxmax()\n\nprint(most_common_payment_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the payment method that is used the most often in all the invoices. Give me its code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the payment method code used by the most orders\nmost_common_payment_method = df['payment_method_code'].value_counts().idxmax()\n\nprint(most_common_payment_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: What are the different product names? What is the average product price for each of them?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_avg_price = df.groupby('Product_Name')['Product_Price'].mean()\n\nprint(df_avg_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: For each distinct product name, show its average product price.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_avg_price = df.groupby('Product_Name')['Product_Price'].mean()\n\nprint(df_avg_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: What are the product names with average product price smaller than 1000000?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by product name and calculate the average price for each group\navg_prices = df.groupby('Product_Name')['Product_Price'].mean()\n\n# Select the product names where the average price is less than 1,000,000\nproduct_names = avg_prices[avg_prices < 1000000].index.tolist()\n\n# Print the product names\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProduct_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details\n11,photo,4448536,,\n154,film,2302,,\n156,film,17622723,,\n179,film,1432324,,\n188,film,49097627,,\n21,photo,22082866,,\n216,film,157216,,\n232,photo,22,,\n233,photo,4082352,,\n250,photo,797,,\n\nQuestion: Find the product names whose average product price is below 1000000.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by product name and calculate the average price for each group\navg_prices = df.groupby('Product_Name')['Product_Price'].mean()\n\n# Select the product names where the average price is less than 1,000,000\nproduct_names = avg_prices[avg_prices < 1000000].index.tolist()\n\n# Print the product names\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: How many distinct currency codes are there for all drama workshop groups?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_currency_codes = df['Currency_Code'].nunique()\n\nprint(distinct_currency_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: Find the number of distinct currency codes used in drama workshop groups.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_currency_codes = df['Currency_Code'].nunique()\n\nprint(distinct_currency_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: What is the marketing region code that has the most drama workshop groups?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of groups in each region\nregion_counts = df['Marketing_Region_Code'].value_counts()\n\n# Get the region code with the most groups\nmost_drama_region = region_counts.index[0]\n\n# Print the result\nprint(most_drama_region)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details\n136,383,EU,FR,Amely Cafe,122-084-8029,amely.ruecker@example.com,\n140,180,EU,DE,Veda Film,793-966-9311x5303,breitenberg.veda@example.com,\n176,286,EU,RU,Queen Art,492-463-5967,quigley.queen@example.org,Good\n314,369,EU,RU,Kole Photo,(256)743-0310,kole.torp@example.org,\n382,266,USD,US,WAT Food,(411)133-9128,watsica.hettie@example.com,\n405,207,EU,ES,Hansen Print,1-764-337-3453,hansen.krista@example.net,Good\n415,383,EU,RU,Roo Place,(422)705-5633,roosevelt61@example.com,\n431,110,USD,MX,Uhuels Fruit,(636)443-4067,uhuels@example.net,\n470,369,USD,DE,Harry Beef,(904)958-9909x0087,harry.nicolas@example.org,\n685,201,EU,RU,Welch Flower,334-591-4561x465,welch.colby@example.net,Bad\n\nQuestion: Which marketing region has the most drama workshop groups? Give me the region code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of groups in each region\nregion_counts = df['Marketing_Region_Code'].value_counts()\n\n# Get the region code with the most groups\nmost_drama_region = region_counts.index[0]\n\n# Print the result\nprint(most_drama_region)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: What is the most frequent status of bookings?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the most frequent status of bookings\nmost_frequent_status = df['Status_Code'].mode()[0]\n\nprint(most_frequent_status)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBooking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details\n1,938,140,good,8,2016-12-12 10:43:01,2013-03-10 18:47:05,1997-11-21 10:07:40,\n2,868,838,stop,7,1976-08-20 00:33:08,2009-07-09 09:18:38,1976-01-08 07:19:23,\n3,735,176,good,9,1975-11-23 06:28:47,1989-01-05 19:24:45,1990-03-16 19:38:47,\n4,527,708,stop,6,1995-02-02 15:52:57,2017-04-27 00:16:00,1996-10-24 21:15:27,\n5,591,176,good,9,1995-05-10 14:49:47,1979-07-19 19:44:01,1971-01-13 13:24:52,\n6,953,735,good,1,1992-11-26 18:11:10,2016-06-06 20:35:14,2016-04-30 11:45:39,\n7,735,954,stop,4,1975-12-30 14:12:32,2008-07-18 18:15:40,1983-10-09 10:48:48,\n8,605,176,good,2,1992-05-11 23:22:41,1973-04-02 03:10:21,1983-07-01 22:10:19,\n9,508,405,good,4,1971-05-11 06:53:01,1974-05-07 21:40:39,1986-10-04 13:31:10,\n10,938,735,good,4,1982-05-19 05:37:51,1999-05-11 01:26:06,1989-11-17 00:32:13,\n\nQuestion: Which status code is the most common of all the bookings?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the most frequent status of bookings\nmost_frequent_status = df['Status_Code'].mode()[0]\n\nprint(most_frequent_status)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: What is the average quantities ordered with payment method code \"MasterCard\" on invoices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows with MasterCard as the payment method\ndf_mastercard = df[df['payment_method_code'] == 'MasterCard']\n\n# Calculate the average order quantity\naverage_quantity = df_mastercard['Order_Quantity'].mean()\n\n# Print the average quantity\nprint(average_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows with MasterCard as the payment method\ndf_mastercard = df[df['payment_method_code'] == 'MasterCard']\n\n# Calculate the average order quantity\naverage_quantity = df_mastercard['Order_Quantity'].mean()\n\n# Print the average quantity\nprint(average_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: What is the product ID of the most frequently ordered item on invoices?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by product_id and count the number of orders for each product\nproduct_orders = df.groupby('Product_ID').size()\n\n# Find the id of the product ordered the most often on invoices\nmost_ordered_product = product_orders.idxmax()\n\n# Print the id of the product ordered the most often on invoices\nprint(most_ordered_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by product_id and count the number of orders for each product\nproduct_orders = df.groupby('Product_ID').size()\n\n# Find the id of the product ordered the most often on invoices\nmost_ordered_product = product_orders.idxmax()\n\n# Print the id of the product ordered the most often on invoices\nprint(most_ordered_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbands = df.groupby(['Firstname', 'Lastname']).ngroups\n\nprint(bands)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbands = df.groupby(['Firstname', 'Lastname']).ngroups\n\nprint(bands)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\n# read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of songs\nnum_songs = len(df)\n\n# print the number of songs\nprint(num_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\n# read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of songs\nnum_songs = len(df)\n\n# print the number of songs\nprint(num_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_labels = df['Label'].nunique()\n\nprint(unique_labels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_labels = df['Label'].nunique()\n\nprint(unique_labels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame where the 'Instrument' column is 'drums'\ndrum_songs = df[df['Instrument'] == 'drums']\n\n# Getting the number of rows\nnum_drum_songs = drum_songs.shape[0]\n\nprint(num_drum_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nInvoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID\n128,14,MasterCard,4,2,,1\n162,13,MasterCard,9,2,,9\n164,7,Visa,7,2,,1\n212,8,Visa,4,2,,8\n272,10,American E,3,2,,5\n398,3,American E,4,1,,5\n406,14,MasterCard,7,2,,1\n483,7,Visa,8,1,,3\n548,4,MasterCard,3,1,,1\n587,1,American E,4,2,,1\n\nQuestion: Find the id of the product ordered the most often on invoices.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the DataFrame where the 'Instrument' column is 'drums'\ndrum_songs = df[df['Instrument'] == 'drums']\n\n# Getting the number of rows\nnum_drum_songs = drum_songs.shape[0]\n\nprint(num_drum_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Who is the founder of Sony?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Name' column is 'Sony'\nsony_df = df[df['Name'] == 'Sony']\n\n# Extract the 'Founder' column value from the filtered DataFrame\nsony_founder = sony_df['Founder'].values[0]\n\n# Print the founder\nprint(sony_founder)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Return the founder of Sony.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Name' column is 'Sony'\nsony_df = df[df['Name'] == 'Sony']\n\n# Extract the 'Founder' column value from the filtered DataFrame\nsony_founder = sony_df['Founder'].values[0]\n\n# Print the founder\nprint(sony_founder)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Where is the headquarter of the company founded by James?", "response": "import pandas as pd\n\n# Load data from csv\ndf = pd.read_csv('data.csv')\n\n# Filter data by founder\njames_df = df[df['Founder'] == 'James']\n\n# Get the headquarter of the company whose founder is James\nheadquarter = james_df['Headquarter'].values[0]\n\n# Print the headquarter\nprint(headquarter)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the headquarter of the company whose founder is James?", "response": "import pandas as pd\n\n# Load data from csv\ndf = pd.read_csv('data.csv')\n\n# Filter data by founder\njames_df = df[df['Founder'] == 'James']\n\n# Get the headquarter of the company whose founder is James\nheadquarter = james_df['Headquarter'].values[0]\n\n# Print the headquarter\nprint(headquarter)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by='Revenue', ascending=False)\n\nresult = df[['Name', 'Headquarter']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names and headquarters of all manufacturers, ordered by revenue descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by='Revenue', ascending=False)\n\nresult = df[['Name', 'Headquarter']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: How many companies were created by Andy?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of companies created by Andy\nandy_companies = df[df['Founder'] == 'Andy'].shape[0]\n\nprint(andy_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Return the number of companies created by Andy.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the number of companies created by Andy\nandy_companies = df[df['Founder'] == 'Andy'].shape[0]\n\nprint(andy_companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the total revenue created by the companies whose headquarter is located at Austin.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for companies with headquarters in Austin\naustin_companies = df[df['Headquarter'] == 'Austin']\n\n# Sum the revenue of those companies\ntotal_revenue = austin_companies['Revenue'].sum()\n\n# Print the total revenue\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the sum of revenue from companies with headquarters in Austin?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for companies with headquarters in Austin\naustin_companies = df[df['Headquarter'] == 'Austin']\n\n# Sum the revenue of those companies\ntotal_revenue = austin_companies['Revenue'].sum()\n\n# Print the total revenue\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the different cities listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct headquarters\nheadquarters = df['Headquarter'].unique()\n\n# Print the headquarters\nprint(headquarters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Give the distinct headquarters of manufacturers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct headquarters\nheadquarters = df['Headquarter'].unique()\n\n# Print the headquarters\nprint(headquarters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the number of manufactures that are based in Tokyo or Beijing.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Headquarter is Tokyo or Beijing\nfiltered_df = df[df['Headquarter'].isin(['Tokyo', 'Beijing'])]\n\n# Get the count of manufactures\ncount_manufactures = filtered_df.shape[0]\n\n# Print the count of manufactures\nprint(count_manufactures)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: How many manufacturers have headquarters in either Tokyo or Beijing?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where Headquarter is Tokyo or Beijing\nfiltered_df = df[df['Headquarter'].isin(['Tokyo', 'Beijing'])]\n\n# Get the count of manufactures\ncount_manufactures = filtered_df.shape[0]\n\n# Print the count of manufactures\nprint(count_manufactures)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the founder of the company whose name begins with the letter 'S'.", "response": "import pandas as pd\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows where the 'Name' starts with 'S'\nfiltered_df = df[df['Name'].str.startswith('S')]\n\n# Get the 'Founder' of the first row in the filtered data\nfounder = filtered_df['Founder'].iloc[0]\n\n# Print the result\nprint(founder)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Who is the founders of companies whose first letter is S?", "response": "import pandas as pd\n\n# Load the CSV data\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows where the 'Name' starts with 'S'\nfiltered_df = df[df['Name'].str.startswith('S')]\n\n# Get the 'Founder' of the first row in the filtered data\nfounder = filtered_df['Founder'].iloc[0]\n\n# Print the result\nprint(founder)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name of companies whose revenue is between 100 and 150.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where revenue is between 100 and 150\nfiltered_df = df[(df['Revenue'] >= 100) & (df['Revenue'] <= 150)]\n\n# Save the names of the companies with revenue between 100 and 150 in a variable\ncompanies = filtered_df['Name'].tolist()\n\n# Print the variable\nprint(companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names of companies with revenue between 100 and 150?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where revenue is between 100 and 150\nfiltered_df = df[(df['Revenue'] >= 100) & (df['Revenue'] <= 150)]\n\n# Save the names of the companies with revenue between 100 and 150 in a variable\ncompanies = filtered_df['Name'].tolist()\n\n# Print the variable\nprint(companies)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the total revenue of all companies whose main office is at Tokyo or Taiwan?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include companies with headquarters in Tokyo or Taiwan\ndf_filtered = df[df['Headquarter'].isin(['Tokyo', 'Taiwan'])]\n\n# Calculate the total revenue for the filtered dataframe\ntotal_revenue = df_filtered['Revenue'].sum()\n\n# Print the total revenue\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Return the total revenue of companies with headquarters in Tokyo or Taiwan.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include companies with headquarters in Tokyo or Taiwan\ndf_filtered = df[df['Headquarter'].isin(['Tokyo', 'Taiwan'])]\n\n# Calculate the total revenue for the filtered dataframe\ntotal_revenue = df_filtered['Revenue'].sum()\n\n# Print the total revenue\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name, headquarter and founder of the manufacturer that has the highest revenue.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum revenue\nmax_revenue_row = df[df['Revenue'] == df['Revenue'].max()]\n\n# Save the answer in a variable\nanswer = max_revenue_row[['Name', 'Headquarter', 'Founder']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names, headquarters and founders of the company with the highest revenue?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the row with the maximum revenue\nmax_revenue_row = df[df['Revenue'] == df['Revenue'].max()]\n\n# Save the answer in a variable\nanswer = max_revenue_row[['Name', 'Headquarter', 'Founder']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_sorted = df[['Name', 'Headquarter', 'Revenue']].sort_values('Revenue', ascending=False)\n\nprint(df_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_sorted = df[['Name', 'Headquarter', 'Revenue']].sort_values('Revenue', ascending=False)\n\nprint(df_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name of companies whose revenue is greater than the average revenue of all companies.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average revenue\naverage_revenue = df['Revenue'].mean()\n\n# Get the manufacturers with revenue greater than the average\nfiltered_df = df[df['Revenue'] > average_revenue]\n\n# Save the answer in a variable\nanswer = filtered_df['Name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names of manufacturers with revenue greater than the average of all revenues?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average revenue\naverage_revenue = df['Revenue'].mean()\n\n# Get the manufacturers with revenue greater than the average\nfiltered_df = df[df['Revenue'] > average_revenue]\n\n# Save the answer in a variable\nanswer = filtered_df['Name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter companies in Austin\naustin_companies = df[df['Headquarter'] == 'Austin']\n\n# Get the lowest revenue in Austin\nlowest_revenue = austin_companies['Revenue'].min()\n\n# Filter companies with revenue less than the lowest revenue in Austin\ncompanies_with_lowest_revenue = df[df['Revenue'] < lowest_revenue]\n\n# Get the names of these companies\ncompany_names = companies_with_lowest_revenue['Name'].tolist()\n\n# Print the names\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter companies in Austin\naustin_companies = df[df['Headquarter'] == 'Austin']\n\n# Get the lowest revenue in Austin\nlowest_revenue = austin_companies['Revenue'].min()\n\n# Filter companies with revenue less than the lowest revenue in Austin\ncompanies_with_lowest_revenue = df[df['Revenue'] < lowest_revenue]\n\n# Get the names of these companies\ncompany_names = companies_with_lowest_revenue['Name'].tolist()\n\n# Print the names\nprint(company_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for companies based in Austin\naustin_df = df[df['Headquarter'] == 'Austin']\n\n# Find the revenue of the Austin companies\naustin_revenue = austin_df['Revenue'].sum()\n\n# Filter the dataframe for companies with revenue larger than Austin companies\nfiltered_df = df[df['Revenue'] > austin_revenue]\n\n# Find the total revenue of the filtered companies\ntotal_revenue = filtered_df['Revenue'].sum()\n\n# Save the answer in a variable\nanswer = total_revenue\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for companies based in Austin\naustin_df = df[df['Headquarter'] == 'Austin']\n\n# Find the revenue of the Austin companies\naustin_revenue = austin_df['Revenue'].sum()\n\n# Filter the dataframe for companies with revenue larger than Austin companies\nfiltered_df = df[df['Revenue'] > austin_revenue]\n\n# Find the total revenue of the filtered companies\ntotal_revenue = filtered_df['Revenue'].sum()\n\n# Save the answer in a variable\nanswer = total_revenue\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the total revenue of companies of each founder.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by the 'Founder' column and sum the 'Revenue' column\nfounder_revenue = df.groupby('Founder')['Revenue'].sum()\n\n# Print the sum of revenue for each founder\nprint(founder_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the total revenue of companies started by founder?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by the 'Founder' column and sum the 'Revenue' column\nfounder_revenue = df.groupby('Founder')['Revenue'].sum()\n\n# Print the sum of revenue for each founder\nprint(founder_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the name and revenue of the company that earns the highest revenue in each city.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the dataframe by 'Headquarter' and get the max 'Revenue' in each group\nmax_revenue = df.groupby('Headquarter')['Revenue'].max()\n\n# Reset index\nmax_revenue = max_revenue.reset_index()\n\n# Merge the original dataframe with max_revenue on 'Headquarter' and 'Revenue'\ndf_merged = pd.merge(df, max_revenue, on=['Headquarter', 'Revenue'])\n\n# Get the names and revenues of the companies with the highest revenues in each headquarter city\nresult = df_merged[['Name', 'Revenue', 'Headquarter']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What are the names and revenues of the companies with the highest revenues in each headquarter city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the dataframe by 'Headquarter' and get the max 'Revenue' in each group\nmax_revenue = df.groupby('Headquarter')['Revenue'].max()\n\n# Reset index\nmax_revenue = max_revenue.reset_index()\n\n# Merge the original dataframe with max_revenue on 'Headquarter' and 'Revenue'\ndf_merged = pd.merge(df, max_revenue, on=['Headquarter', 'Revenue'])\n\n# Get the names and revenues of the companies with the highest revenues in each headquarter city\nresult = df_merged[['Name', 'Revenue', 'Headquarter']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: Find the total revenue for each manufacturer.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the total revenue for each manufacturer\ntotal_revenue = df.groupby('Name')['Revenue'].sum()\n\n# Print the total revenue for each manufacturer\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Headquarter,Founder,Revenue\n1,Sony,Tokyo,Andy,120.0\n2,Creative Labs,Austin,Owen,100.0\n3,Hewlett-Packard,Los Angeles,James,50.0\n4,Iomega,Beijing,Mary,200.0\n5,Fujitsu,Taiwan,John,130.0\n6,Winchester,Paris,Robert,30.0\n\nQuestion: What is the total revenue of each manufacturer?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Compute the total revenue for each manufacturer\ntotal_revenue = df.groupby('Name')['Revenue'].sum()\n\n# Print the total revenue for each manufacturer\nprint(total_revenue)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the names of all the products in the store.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_names = df['Name']\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What are the names of all products?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_names = df['Name']\n\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the names and the prices of all the products in the store.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the names and the prices of all the products in the store\nproduct_info = df[['Name', 'Price']]\n\nprint(product_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What are the names and prices of all products in the store?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the names and the prices of all the products in the store\nproduct_info = df[['Name', 'Price']]\n\nprint(product_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the name of the products with a price less than or equal to $200.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter products with price at most 200\nfiltered_df = df[df['Price'] <= 200]\n\n# Save the answer in a variable\nproduct_names = filtered_df['Name'].tolist()\n\n# Print the variable\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What are the names of products with price at most 200?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter products with price at most 200\nfiltered_df = df[df['Price'] <= 200]\n\n# Save the answer in a variable\nproduct_names = filtered_df['Name'].tolist()\n\n# Print the variable\nprint(product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Find all information of all the products with a price between $60 and $120.", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to get products with price between 60 and 120\nfiltered_df = df[(df['Price'] >= 60) & (df['Price'] <= 120)]\n\n# print the filtered dataframe\nprint(filtered_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What is all the information of all the products that have a price between 60 and 120?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# filter the dataframe to get products with price between 60 and 120\nfiltered_df = df[(df['Price'] >= 60) & (df['Price'] <= 120)]\n\n# print the filtered dataframe\nprint(filtered_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Compute the average price of all the products.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average price across all products\naverage_price = df['Price'].mean()\n\n# Print the average price\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What is the average price across all products?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average price across all products\naverage_price = df['Price'].mean()\n\n# Print the average price\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Compute the average price of all products with manufacturer code equal to 2.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where the Manufacturer code is 2\nfiltered_df = df[df['Manufacturer'] == 2]\n\n# Calculate the average price of the filtered dataframe\naverage_price = filtered_df['Price'].mean()\n\n# Save the answer in a variable and print the variable\naverage_price_of_manufacturer_2 = average_price\nprint(average_price_of_manufacturer_2)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What is the average price of products with manufacturer codes equal to 2?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get rows where the Manufacturer code is 2\nfiltered_df = df[df['Manufacturer'] == 2]\n\n# Calculate the average price of the filtered dataframe\naverage_price = filtered_df['Price'].mean()\n\n# Save the answer in a variable and print the variable\naverage_price_of_manufacturer_2 = average_price\nprint(average_price_of_manufacturer_2)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Compute the number of products with a price larger than or equal to $180.", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the data for products with a price greater than or equal to $180\nfiltered_df = df[df['Price'] >= 180]\n\n# count the number of products\nnum_products = len(filtered_df)\n\n# print the number of products\nprint(num_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: How many products have prices of at least 180?", "response": "import pandas as pd\n\n# read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# filter the data for products with a price greater than or equal to $180\nfiltered_df = df[df['Price'] >= 180]\n\n# count the number of products\nnum_products = len(filtered_df)\n\n# print the number of products\nprint(num_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering products that cost at least 180\nfiltered_df = df[df['Price'] >= 180]\n\n# Sorting by price decreasing and name ascending\nsorted_df = filtered_df.sort_values(by=['Price', 'Name'], ascending=[False, True])\n\n# Saving answer in a variable\nanswer = sorted_df[['Name', 'Price']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering products that cost at least 180\nfiltered_df = df[df['Price'] >= 180]\n\n# Sorting by price decreasing and name ascending\nsorted_df = filtered_df.sort_values(by=['Price', 'Name'], ascending=[False, True])\n\n# Saving answer in a variable\nanswer = sorted_df[['Name', 'Price']]\n\n# Printing the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the average price of each manufacturer's products, showing only the manufacturer's code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Using the groupby() function to group the dataframe by the 'Manufacturer' column and then calculate the average price for each group using the mean() function\naverage_price_per_manufacturer = df.groupby('Manufacturer')['Price'].mean()\n\n# Print the result\nprint(average_price_per_manufacturer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What are the average prices of products, grouped by manufacturer code?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Using the groupby() function to group the dataframe by the 'Manufacturer' column and then calculate the average price for each group using the mean() function\naverage_price_per_manufacturer = df.groupby('Manufacturer')['Price'].mean()\n\n# Print the result\nprint(average_price_per_manufacturer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: Select the name and price of the cheapest product.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum price\nmin_price = df['Price'].min()\n\n# Select the row with the minimum price\ncheapest_product = df[df['Price'] == min_price][['Name', 'Price']]\n\n# Print the result\nprint(cheapest_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Price,Manufacturer\n1,Hard drive,240,5\n2,Memory,120,6\n3,ZIP drive,150,4\n4,Floppy disk,5,6\n5,Monitor,240,1\n6,DVD drive,180,2\n7,CD drive,90,2\n8,Printer,270,3\n9,Toner cartridge,66,3\n10,DVD burner,180,2\n\nQuestion: What is the name and price of the cheapest product?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the minimum price\nmin_price = df['Price'].min()\n\n# Select the row with the minimum price\ncheapest_product = df[df['Price'] == min_price][['Name', 'Price']]\n\n# Print the result\nprint(cheapest_product)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: What is the id of the problem log that is created most recently?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['log_entry_date'] = pd.to_datetime(df['log_entry_date'])\n\nmost_recent_log_id = df.loc[df['log_entry_date'] == df['log_entry_date'].max(), 'problem_log_id'].values[0]\n\nprint(most_recent_log_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: Which problem log was created most recently? Give me the log id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['log_entry_date'] = pd.to_datetime(df['log_entry_date'])\n\nmost_recent_log_id = df.loc[df['log_entry_date'] == df['log_entry_date'].max(), 'problem_log_id'].values[0]\n\nprint(most_recent_log_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: What is the oldest log id and its corresponding problem id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the DataFrame by 'log_entry_date' in ascending order\ndf = df.sort_values(by='log_entry_date')\n\n# Selecting the oldest log id and its corresponding problem id\noldest_log = df.iloc[0]\n\n# Storing the answer in a variable\nanswer = (oldest_log['problem_log_id'], oldest_log['problem_id'])\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: Find the oldest log id and its corresponding problem id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sorting the DataFrame by 'log_entry_date' in ascending order\ndf = df.sort_values(by='log_entry_date')\n\n# Selecting the oldest log id and its corresponding problem id\noldest_log = df.iloc[0]\n\n# Storing the answer in a variable\nanswer = (oldest_log['problem_log_id'], oldest_log['problem_id'])\n\n# Printing the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: Find all the ids and dates of the logs for the problem whose id is 10.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the logs for the problem whose id is 10\nfiltered_df = df[df['problem_id'] == 10]\n\n# Select the required columns\nselected_df = filtered_df[['problem_log_id', 'log_entry_date']]\n\n# Save the answer in a variable\nanswer = selected_df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: For the problem with id 10, return the ids and dates of its problem logs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the logs for the problem whose id is 10\nfiltered_df = df[df['problem_id'] == 10]\n\n# Select the required columns\nselected_df = filtered_df[['problem_log_id', 'log_entry_date']]\n\n# Save the answer in a variable\nanswer = selected_df\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: List all the log ids and their descriptions from the problem logs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the log_id and log_entry_description columns\ndf_selected = df[['problem_log_id', 'log_entry_description']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details\n1,11,11,Middleware,Solved,2011-03-13 13:11:57,t,k,p\n2,11,8,GUI,Solved,1976-03-31 14:03:02,a,k,s\n3,12,1,GUI,Solved,1974-12-11 01:06:22,b,j,e\n4,12,12,GUI,Reported,1993-04-02 11:07:29,a,t,b\n5,6,12,Middleware,Reported,1976-09-17 09:01:12,c,n,u\n6,2,13,GUI,Solved,1983-07-01 02:12:36,h,g,n\n7,13,1,Datatabase,Solved,1974-09-13 00:37:26,s,c,v\n8,4,15,Datatabase,Solved,1999-08-17 00:00:18,j,h,j\n9,10,13,GUI,Reported,1993-06-21 22:33:35,p,i,f\n10,6,1,Middleware,Reported,2001-05-14 10:03:53,d,x,d\n\nQuestion: What are the log id and entry description of each problem?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the log_id and log_entry_description columns\ndf_selected = df[['problem_log_id', 'log_entry_description']]\n\n# Print the selected dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_id,product_id,closure_authorised_by_staff_id,reported_by_staff_id,date_problem_reported,date_problem_closed,problem_description,other_problem_details\n1,4,4,2,1978-06-26 19:10:17,2012-07-22 19:24:26,x,p\n2,8,3,10,1988-11-07 16:09:31,1973-06-07 04:13:51,w,p\n3,1,4,1,1995-05-14 08:32:56,1997-02-26 05:06:15,r,i\n4,13,8,7,1973-10-12 10:51:23,1993-06-19 10:02:59,y,c\n5,4,12,11,1986-11-13 07:30:55,2013-05-24 20:33:11,a,k\n6,1,5,4,2010-10-05 02:25:37,1998-07-03 14:53:59,p,l\n7,2,2,7,1996-04-19 15:54:13,1974-09-20 13:42:19,a,l\n8,2,4,1,1976-12-18 23:54:41,1982-08-26 10:58:01,w,f\n9,15,14,13,2010-10-11 13:36:00,1995-06-10 18:41:08,i,v\n10,4,13,10,1993-12-29 23:22:21,1990-04-13 21:15:50,d,s\n\nQuestion: What are the ids of the problems which are reported after 1978-06-26?", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert the date_problem_reported column to datetime format\ndf['date_problem_reported'] = pd.to_datetime(df['date_problem_reported'])\n\n# Filter the rows where date_problem_reported is after 1978-06-26\nfiltered_df = df[df['date_problem_reported'] > '1978-06-26']\n\n# Get the ids of the problems which are reported after 1978-06-26\nproblem_ids = filtered_df['problem_id'].tolist()\n\n# Print the ids\nprint(problem_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_id,product_id,closure_authorised_by_staff_id,reported_by_staff_id,date_problem_reported,date_problem_closed,problem_description,other_problem_details\n1,4,4,2,1978-06-26 19:10:17,2012-07-22 19:24:26,x,p\n2,8,3,10,1988-11-07 16:09:31,1973-06-07 04:13:51,w,p\n3,1,4,1,1995-05-14 08:32:56,1997-02-26 05:06:15,r,i\n4,13,8,7,1973-10-12 10:51:23,1993-06-19 10:02:59,y,c\n5,4,12,11,1986-11-13 07:30:55,2013-05-24 20:33:11,a,k\n6,1,5,4,2010-10-05 02:25:37,1998-07-03 14:53:59,p,l\n7,2,2,7,1996-04-19 15:54:13,1974-09-20 13:42:19,a,l\n8,2,4,1,1976-12-18 23:54:41,1982-08-26 10:58:01,w,f\n9,15,14,13,2010-10-11 13:36:00,1995-06-10 18:41:08,i,v\n10,4,13,10,1993-12-29 23:22:21,1990-04-13 21:15:50,d,s\n\nQuestion: Find the ids of the problems reported after 1978-06-26.", "response": "import pandas as pd\n\n# Read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert the date_problem_reported column to datetime format\ndf['date_problem_reported'] = pd.to_datetime(df['date_problem_reported'])\n\n# Filter the rows where date_problem_reported is after 1978-06-26\nfiltered_df = df[df['date_problem_reported'] > '1978-06-26']\n\n# Get the ids of the problems which are reported after 1978-06-26\nproblem_ids = filtered_df['problem_id'].tolist()\n\n# Print the ids\nprint(problem_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_id,product_id,closure_authorised_by_staff_id,reported_by_staff_id,date_problem_reported,date_problem_closed,problem_description,other_problem_details\n1,4,4,2,1978-06-26 19:10:17,2012-07-22 19:24:26,x,p\n2,8,3,10,1988-11-07 16:09:31,1973-06-07 04:13:51,w,p\n3,1,4,1,1995-05-14 08:32:56,1997-02-26 05:06:15,r,i\n4,13,8,7,1973-10-12 10:51:23,1993-06-19 10:02:59,y,c\n5,4,12,11,1986-11-13 07:30:55,2013-05-24 20:33:11,a,k\n6,1,5,4,2010-10-05 02:25:37,1998-07-03 14:53:59,p,l\n7,2,2,7,1996-04-19 15:54:13,1974-09-20 13:42:19,a,l\n8,2,4,1,1976-12-18 23:54:41,1982-08-26 10:58:01,w,f\n9,15,14,13,2010-10-11 13:36:00,1995-06-10 18:41:08,i,v\n10,4,13,10,1993-12-29 23:22:21,1990-04-13 21:15:50,d,s\n\nQuestion: What are the ids of the problems which are reported before 1978-06-26?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the date_problem_reported column to datetime\ndf['date_problem_reported'] = pd.to_datetime(df['date_problem_reported'])\n\n# Filter the rows where date_problem_reported is before 1978-06-26\nfiltered_df = df[df['date_problem_reported'] < pd.to_datetime('1978-06-26')]\n\n# Get the ids of the filtered problems\nanswer = filtered_df['problem_id'].tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproblem_id,product_id,closure_authorised_by_staff_id,reported_by_staff_id,date_problem_reported,date_problem_closed,problem_description,other_problem_details\n1,4,4,2,1978-06-26 19:10:17,2012-07-22 19:24:26,x,p\n2,8,3,10,1988-11-07 16:09:31,1973-06-07 04:13:51,w,p\n3,1,4,1,1995-05-14 08:32:56,1997-02-26 05:06:15,r,i\n4,13,8,7,1973-10-12 10:51:23,1993-06-19 10:02:59,y,c\n5,4,12,11,1986-11-13 07:30:55,2013-05-24 20:33:11,a,k\n6,1,5,4,2010-10-05 02:25:37,1998-07-03 14:53:59,p,l\n7,2,2,7,1996-04-19 15:54:13,1974-09-20 13:42:19,a,l\n8,2,4,1,1976-12-18 23:54:41,1982-08-26 10:58:01,w,f\n9,15,14,13,2010-10-11 13:36:00,1995-06-10 18:41:08,i,v\n10,4,13,10,1993-12-29 23:22:21,1990-04-13 21:15:50,d,s\n\nQuestion: Which problems are reported before 1978-06-26? Give me the ids of the problems.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the date_problem_reported column to datetime\ndf['date_problem_reported'] = pd.to_datetime(df['date_problem_reported'])\n\n# Filter the rows where date_problem_reported is before 1978-06-26\nfiltered_df = df[df['date_problem_reported'] < pd.to_datetime('1978-06-26')]\n\n# Get the ids of the filtered problems\nanswer = filtered_df['problem_id'].tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,rose,k\n2,yellow,q\n3,chat,e\n4,wechat,r\n5,life,q\n6,keep,d\n7,messager,m\n8,hangout,u\n9,twitter,z\n10,blog,d\n\nQuestion: List the names of all the distinct product names in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique product names and convert it to a list\ndistinct_product_names = df['product_name'].unique().tolist()\n\n# Sort the list in alphabetical order\ndistinct_product_names.sort()\n\n# Print the list of distinct product names\nprint(distinct_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,rose,k\n2,yellow,q\n3,chat,e\n4,wechat,r\n5,life,q\n6,keep,d\n7,messager,m\n8,hangout,u\n9,twitter,z\n10,blog,d\n\nQuestion: Sort all the distinct product names in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique product names and convert it to a list\ndistinct_product_names = df['product_name'].unique().tolist()\n\n# Sort the list in alphabetical order\ndistinct_product_names.sort()\n\n# Print the list of distinct product names\nprint(distinct_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,rose,k\n2,yellow,q\n3,chat,e\n4,wechat,r\n5,life,q\n6,keep,d\n7,messager,m\n8,hangout,u\n9,twitter,z\n10,blog,d\n\nQuestion: List all the distinct product names ordered by product id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_product_names = df.sort_values('product_id')['product_name'].unique()\n\nprint(distinct_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,rose,k\n2,yellow,q\n3,chat,e\n4,wechat,r\n5,life,q\n6,keep,d\n7,messager,m\n8,hangout,u\n9,twitter,z\n10,blog,d\n\nQuestion: What is the list of distinct product names sorted by product id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_product_names = df.sort_values('product_id')['product_name'].unique()\n\nprint(distinct_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: Show name, address road, and city for all branches sorted by open year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf = df.sort_values('Open_year')\ndf = df[['Name', 'Address_road', 'City']]\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: What are the names, address roads, and cities of the branches ordered by opening year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndf = df.sort_values('Open_year')\ndf = df[['Name', 'Address_road', 'City']]\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: List all open years when at least two shops are opened.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Count the number of shops opened in each year\nyear_counts = df['Open_year'].value_counts()\n\n# Get the years where at least two shops opened\nanswer = year_counts[year_counts >= 2].index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: What are the opening years in which at least two shops opened?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Count the number of shops opened in each year\nyear_counts = df['Open_year'].value_counts()\n\n# Get the years where at least two shops opened\nanswer = year_counts[year_counts >= 2].index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: Show the city and the number of branches opened before 2010 for each city.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for branches opened before 2010\ndf_before_2010 = df[df['Open_year'] < 2010]\n\n# Group by City and count the number of branches\ncity_count = df_before_2010.groupby('City')['Branch_ID'].count()\n\n# Save the answer in a variable\nanswer = city_count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBranch_ID,Name,Open_year,Address_road,City,membership_amount\n1,Alexandre,2001,Valleys Place,London,112\n2,Popert,2009,Oaks Crescent,London,11\n3,Stanley,2013,Abbott Street,London,6\n4,Zytogorski,2009,Abbey Rise,Oxford,7\n5,Cochrane,2012,Brampton Road,London,1418\n6,Taverner,2014,Cecilia Avenue,Oxford,56\n7,Saint Amant,2015,Concord Road,London,91\n8,Brooke Greville,2009,Glebe Street,Oxford,31\n\nQuestion: For each city, how many branches opened before 2010?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for branches opened before 2010\ndf_before_2010 = df[df['Open_year'] < 2010]\n\n# Group by City and count the number of branches\ncity_count = df_before_2010.groupby('City')['Branch_ID'].count()\n\n# Save the answer in a variable\nanswer = city_count\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: How many different levels do members have?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique levels\nnum_unique_levels = df['Level'].nunique()\n\n# Print the result\nprint(num_unique_levels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: What are the different membership levels?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique levels\nnum_unique_levels = df['Level'].nunique()\n\n# Print the result\nprint(num_unique_levels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: Show card number, name, and hometown for all members in a descending order of level.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Level' in descending order\ndf = df.sort_values('Level', ascending=False)\n\n# Select the columns 'Card_Number', 'Name', and 'Hometown'\ndf = df[['Card_Number', 'Name', 'Hometown']]\n\n# Print the DataFrame\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: What are the card numbers, names, and hometowns of every member ordered by descending level?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Level' in descending order\ndf = df.sort_values('Level', ascending=False)\n\n# Select the columns 'Card_Number', 'Name', and 'Hometown'\ndf = df[['Card_Number', 'Name', 'Hometown']]\n\n# Print the DataFrame\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: Show the membership level with most number of members.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by the 'Level' column and count the number of occurrences of each unique value\nlevel_counts = df['Level'].value_counts()\n\n# Find the level with the most people\nmost_common_level = level_counts.idxmax()\n\n# Print the result\nprint('The membership level with the most people is:', most_common_level)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: What is the membership level with the most people?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by the 'Level' column and count the number of occurrences of each unique value\nlevel_counts = df['Level'].value_counts()\n\n# Find the level with the most people\nmost_common_level = level_counts.idxmax()\n\n# Print the result\nprint('The membership level with the most people is:', most_common_level)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: list the card number of all members whose hometown address includes word \"Kentucky\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where hometown includes \"Kentucky\"\nkentucky_df = df[df['Hometown'].str.contains('Kentucky')]\n\n# Extract the card numbers of the filtered dataframe\ncard_numbers = kentucky_df['Card_Number'].tolist()\n\n# Print the card numbers\nprint(card_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMember_ID,Card_Number,Name,Hometown,Level\n1,LE99,Jeremy Jarmon,Collierville, Tennessee,6\n2,LT98,Myron Pryor,Louisville, Kentucky,6\n3,RT91,Corey Peters,Louisville, Kentucky,6\n4,RE95,Ventrell Jenkins,Columbia, South Carolina,6\n5,OLB56,Braxton Kelley,LaGrange, Georgia,6\n6,MLB4,Micah Johnson,Fort Campbell, Kentucky,4\n7,SLB51,Johnny Williams,Jacksonville, Florida,6\n8,RCB32,Trevard Lindley,Hiram, Georgia,6\n9,LCB7,David Jones,Red Jacket, West Virginia,6\n10,FS10,Matt Lentz,Simpsonville, South Carolina,2\n\nQuestion: What are the card numbers of members from Kentucky?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where hometown includes \"Kentucky\"\nkentucky_df = df[df['Hometown'].str.contains('Kentucky')]\n\n# Extract the card numbers of the filtered dataframe\ncard_numbers = kentucky_df['Card_Number'].tolist()\n\n# Print the card numbers\nprint(card_numbers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the number of students in total.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_students = df.shape[0]\n\nprint(total_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_students = df.shape[0]\n\nprint(total_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Find the number of voting records in total.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the number of rows in the DataFrame\ntotal_records = len(df)\n\n# Print the number of voting records\nprint(total_records)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: How many voting records do we have?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the number of rows in the DataFrame\ntotal_records = len(df)\n\n# Print the number of voting records\nprint(total_records)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Find the distinct number of president votes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_president_votes = df['President_Vote'].nunique()\n\nprint(distinct_president_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: How many distinct president votes are recorded?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_president_votes = df['President_Vote'].nunique()\n\nprint(distinct_president_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the maximum age of all the students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_age = df['Age'].max()\nprint(max_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the oldest age among the students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_age = df['Age'].max()\nprint(max_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the last names of students with major 50.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for students with major 50\nmajor_50_students = df[df['Major'] == 50]\n\n# Get the last names of the students\nlast_names = major_50_students['LName'].tolist()\n\n# Print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the last names of students studying major 50?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data for students with major 50\nmajor_50_students = df[df['Major'] == 50]\n\n# Get the last names of the students\nlast_names = major_50_students['LName'].tolist()\n\n# Print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first names of students with age above 22.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only students aged above 22\ndf_above_22 = df[df['Age'] > 22]\n\n# Extract the first names of these students\nfirst_names_above_22 = df_above_22['Fname']\n\n# Print the first names\nprint(first_names_above_22)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first names of all the students aged above 22?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only students aged above 22\ndf_above_22 = df[df['Age'] > 22]\n\n# Extract the first names of these students\nfirst_names_above_22 = df_above_22['Fname']\n\n# Print the first names\nprint(first_names_above_22)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the majors of male (sex is M) students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to only include male students\nmale_students = df[df['Sex'] == 'M']\n\n# Get the major of each male student\nmajor_of_male_students = male_students['Major'].tolist()\n\n# Print the major of each male student\nprint(major_of_male_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: List the major of each male student.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to only include male students\nmale_students = df[df['Sex'] == 'M']\n\n# Get the major of each male student\nmajor_of_male_students = male_students['Major'].tolist()\n\n# Print the major of each male student\nprint(major_of_male_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the average age of female (sex is F) students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Calculate the average age of the female students\naverage_age = female_students['Age'].mean()\n\n# Save the average age in a variable and print it\naverage_age_female_students = average_age\nprint(average_age_female_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the average age of female students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Calculate the average age of the female students\naverage_age = female_students['Age'].mean()\n\n# Save the average age in a variable and print it\naverage_age_female_students = average_age\nprint(average_age_female_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the maximum and minimum age of students with major 600?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include students studying major 600\ndf_major_600 = df[df['Major'] == 600]\n\n# Find the maximum and minimum ages of students studying major 600\noldest_age = df_major_600['Age'].max()\nyoungest_age = df_major_600['Age'].min()\n\n# Save the answer in a variable\nanswer = (oldest_age, youngest_age)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Tell me the ages of the oldest and youngest students studying major 600.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include students studying major 600\ndf_major_600 = df[df['Major'] == 600]\n\n# Find the maximum and minimum ages of students studying major 600\noldest_age = df_major_600['Age'].max()\nyoungest_age = df_major_600['Age'].min()\n\n# Save the answer in a variable\nanswer = (oldest_age, youngest_age)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Who are the advisors for students that live in a city with city code \"BAL\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the DataFrame for students living in a city with city code 'BAL'\ndf_bal = df[df['city_code'] == 'BAL']\n\n# extract the list of advisors for these students\nadvisors = df_bal['Advisor'].tolist()\n\n# print the advisors\nprint(advisors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show the advisors of the students whose city of residence has city code \"BAL\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# filter the DataFrame for students living in a city with city code 'BAL'\ndf_bal = df[df['city_code'] == 'BAL']\n\n# extract the list of advisors for these students\nadvisors = df_bal['Advisor'].tolist()\n\n# print the advisors\nprint(advisors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: What are the distinct secretary votes in the fall election cycle?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the rows where the 'Election_Cycle' is 'Fall'\nfall_elections = df[df['Election_Cycle'] == 'Fall']\n\n# Get all distinct 'Secretary_Vote' values\nsecretary_votes = fall_elections['Secretary_Vote'].unique()\n\n# Print the results\nprint(secretary_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Return all the distinct secretary votes made in the fall election cycle.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the rows where the 'Election_Cycle' is 'Fall'\nfall_elections = df[df['Election_Cycle'] == 'Fall']\n\n# Get all distinct 'Secretary_Vote' values\nsecretary_votes = fall_elections['Secretary_Vote'].unique()\n\n# Print the results\nprint(secretary_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: What are the distinct president votes on 08/30/2015?", "response": "import pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# filter data for the date 08/30/2015\nfiltered_df = df[df['Registration_Date'] == '08/30/2015']\n\n# get distinct president votes\ndistinct_votes = filtered_df['President_Vote'].unique()\n\n# print the result\nprint(distinct_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Show all the distinct president votes made on 08/30/2015.", "response": "import pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# filter data for the date 08/30/2015\nfiltered_df = df[df['Registration_Date'] == '08/30/2015']\n\n# get distinct president votes\ndistinct_votes = filtered_df['President_Vote'].unique()\n\n# print the result\nprint(distinct_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Report the distinct registration date and the election cycle.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Get the distinct registration date and election cycle\ndistinct_dates_cycles = df[['Registration_Date', 'Election_Cycle']].drop_duplicates()\n\n# Print the result\nprint(distinct_dates_cycles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: What are the distinct registration dates and the election cycles?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Get the distinct registration date and election cycle\ndistinct_dates_cycles = df[['Registration_Date', 'Election_Cycle']].drop_duplicates()\n\n# Print the result\nprint(distinct_dates_cycles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Report the distinct president vote and the vice president vote.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the columns\nvotes = df[['President_Vote', 'Vice_President_Vote']]\n\n# Get the unique values\nunique_votes = votes.drop_duplicates()\n\n# Print the unique votes\nprint(unique_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: List all the distinct president votes and the vice president votes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the columns\nvotes = df[['President_Vote', 'Vice_President_Vote']]\n\n# Get the unique values\nunique_votes = votes.drop_duplicates()\n\n# Print the unique votes\nprint(unique_votes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: For each advisor, report the total number of students advised by him or her.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group data by advisor and then count the number of students for each group\nadvisor_group = df.groupby('Advisor').size()\n\n# Print the result\nprint(advisor_group)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students does each advisor have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group data by advisor and then count the number of students for each group\nadvisor_group = df.groupby('Advisor').size()\n\n# Print the result\nprint(advisor_group)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Report all advisors that advise more than 2 students.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Advisor' and filter out those advisors that advise more than 2 students\nadvisors = df.groupby('Advisor').filter(lambda x: len(x) > 2)['Advisor']\n\n# Save the answer in a variable\nanswer = advisors.unique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which advisors have more than two students?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Advisor' and filter out those advisors that advise more than 2 students\nadvisors = df.groupby('Advisor').filter(lambda x: len(x) > 2)['Advisor']\n\n# Save the answer in a variable\nanswer = advisors.unique()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Report all majors that have less than 3 students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students in each major\nmajor_counts = df['Major'].value_counts()\n\n# Filter out majors with less than 3 students\nless_than_three_students_major = major_counts[major_counts < 3]\n\n# Save the answer in a variable\nanswer = less_than_three_students_major.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the majors only less than three students are studying?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of students in each major\nmajor_counts = df['Major'].value_counts()\n\n# Filter out majors with less than 3 students\nless_than_three_students_major = major_counts[major_counts < 3]\n\n# Save the answer in a variable\nanswer = less_than_three_students_major.index.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: For each election cycle, report the number of voting records.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nelection_cycle_count = df['Election_Cycle'].value_counts()\n\nprint(election_cycle_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote\n1001,08/30/2015,Spring,1004,1007,1010,1035,1001,1028\n1002,08/30/2014,Spring,1014,1007,1020,1025,1021,1028\n1003,08/30/2013,Spring,1004,1017,1030,1035,1031,1028\n1004,08/30/2013,Spring,1024,1017,1020,1035,1011,1028\n1005,08/30/2012,Spring,1024,1017,1010,1035,1021,1028\n1001,08/30/2015,Fall,1004,1007,1010,1035,1021,1028\n1002,08/30/2014,Fall,1004,1007,1020,1035,1021,1028\n1003,08/30/2013,Fall,1004,1017,1020,1035,1031,1028\n1004,08/30/2013,Fall,1024,1017,1020,1035,1011,1018\n1005,08/30/2012,Fall,1024,1017,1010,1035,1021,1028\n\nQuestion: Count the number of voting records for each election cycle.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nelection_cycle_count = df['Election_Cycle'].value_counts()\n\nprint(election_cycle_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which major has the most students?", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Major' and count the number of students in each group\nmajor_counts = df['Major'].value_counts()\n\n# Find the major with the maximum count\nmajor_with_max_students = major_counts.idxmax()\n\n# Print the result\nprint(major_with_max_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the major that is studied by the largest number of students.", "response": "import pandas as pd\n\n# Load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Major' and count the number of students in each group\nmajor_counts = df['Major'].value_counts()\n\n# Find the major with the maximum count\nmajor_with_max_students = major_counts.idxmax()\n\n# Print the result\nprint(major_with_max_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the most common major among female (sex is F) students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Find the most common major among female students\nmost_common_major = female_students['Major'].value_counts().idxmax()\n\nprint(most_common_major)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the major that is studied by the most female students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only female students\nfemale_students = df[df['Sex'] == 'F']\n\n# Find the most common major among female students\nmost_common_major = female_students['Major'].value_counts().idxmax()\n\nprint(most_common_major)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Report the distinct advisors who have more than 2 students.", "response": "import pandas as pd\n\n# Load the csv data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students for each advisor\nadvisor_count = df['Advisor'].value_counts()\n\n# Filter out the advisors with more than 2 students\nadvisors_more_than_two = advisor_count[advisor_count > 2]\n\n# Save the answer in a variable\nanswer = advisors_more_than_two.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Which advisors are advising more than 2 students?", "response": "import pandas as pd\n\n# Load the csv data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of students for each advisor\nadvisor_count = df['Advisor'].value_counts()\n\n# Filter out the advisors with more than 2 students\nadvisors_more_than_two = advisor_count[advisor_count > 2]\n\n# Save the answer in a variable\nanswer = advisors_more_than_two.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: How many products are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_count = len(df)\n\nprint(product_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: Count the number of products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nproduct_count = len(df)\n\nprint(product_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncolor_code,color_description\n9,red\n5,green\n1,yellow\n4,blue\n7,black\n2,white\n8,purple\n3,gray\n\nQuestion: How many colors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_colors = df.shape[0]\n\nprint(num_colors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncolor_code,color_description\n9,red\n5,green\n1,yellow\n4,blue\n7,black\n2,white\n8,purple\n3,gray\n\nQuestion: Count the number of colors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_colors = df.shape[0]\n\nprint(num_colors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncharacteristic_id,characteristic_type_code,characteristic_data_type,characteristic_name,other_characteristic_details\n1,Grade,numquam,slow,\n2,Grade,doloribus,fast,\n3,Purity,rem,warm,\n4,Grade,aut,hot,\n5,Purity,impedit,hot,\n6,Purity,qui,warm,\n7,Grade,et,cool,\n8,Grade,dolores,cool,\n9,Grade,quam,cool,\n10,Grade,velit,fast,\n\nQuestion: How many characteristics are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df['characteristic_id'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncharacteristic_id,characteristic_type_code,characteristic_data_type,characteristic_name,other_characteristic_details\n1,Grade,numquam,slow,\n2,Grade,doloribus,fast,\n3,Purity,rem,warm,\n4,Grade,aut,hot,\n5,Purity,impedit,hot,\n6,Purity,qui,warm,\n7,Grade,et,cool,\n8,Grade,dolores,cool,\n9,Grade,quam,cool,\n10,Grade,velit,fast,\n\nQuestion: Count the number of characteristics.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df['characteristic_id'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncolor_code,color_description\n9,red\n5,green\n1,yellow\n4,blue\n7,black\n2,white\n8,purple\n3,gray\n\nQuestion: List the description of all the colors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf.sort_values('color_code', inplace=True)\n\ndescriptions = df['color_description'].tolist()\n\nprint(descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncolor_code,color_description\n9,red\n5,green\n1,yellow\n4,blue\n7,black\n2,white\n8,purple\n3,gray\n\nQuestion: What are the descriptions for each color?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf.sort_values('color_code', inplace=True)\n\ndescriptions = df['color_description'].tolist()\n\nprint(descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncharacteristic_id,characteristic_type_code,characteristic_data_type,characteristic_name,other_characteristic_details\n1,Grade,numquam,slow,\n2,Grade,doloribus,fast,\n3,Purity,rem,warm,\n4,Grade,aut,hot,\n5,Purity,impedit,hot,\n6,Purity,qui,warm,\n7,Grade,et,cool,\n8,Grade,dolores,cool,\n9,Grade,quam,cool,\n10,Grade,velit,fast,\n\nQuestion: Find the names of all the product characteristics.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the names of all the product characteristics\nproduct_characteristics = df['characteristic_name'].unique()\n\n# Save the answer in a variable\nanswer = product_characteristics\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncharacteristic_id,characteristic_type_code,characteristic_data_type,characteristic_name,other_characteristic_details\n1,Grade,numquam,slow,\n2,Grade,doloribus,fast,\n3,Purity,rem,warm,\n4,Grade,aut,hot,\n5,Purity,impedit,hot,\n6,Purity,qui,warm,\n7,Grade,et,cool,\n8,Grade,dolores,cool,\n9,Grade,quam,cool,\n10,Grade,velit,fast,\n\nQuestion: What are the different names of the product characteristics?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Find the names of all the product characteristics\nproduct_characteristics = df['characteristic_name'].unique()\n\n# Save the answer in a variable\nanswer = product_characteristics\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: What are the names of products with category \"Spices\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'product_category_code' is 'Spices'\nspices_df = df[df['product_category_code'] == 'Spices']\n\n# Retrieve the 'product_name' column from the filtered DataFrame\nspices_product_names = spices_df['product_name'].tolist()\n\n# Print the product names\nprint(spices_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: Return the names of products in the category 'Spices'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'product_category_code' is 'Spices'\nspices_df = df[df['product_category_code'] == 'Spices']\n\n# Retrieve the 'product_name' column from the filtered DataFrame\nspices_product_names = spices_df['product_name'].tolist()\n\n# Print the product names\nprint(spices_product_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: How many products are there under the category \"Seeds\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to only include 'Seeds' category\nseeds_df = df[df['product_category_code'] == 'Seeds']\n\n# Counting the number of products in 'Seeds' category\nnum_seeds = len(seeds_df)\n\nprint(num_seeds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: Count the number of products in the category 'Seeds'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the dataframe to only include 'Seeds' category\nseeds_df = df[df['product_category_code'] == 'Seeds']\n\n# Counting the number of products in 'Seeds' category\nnum_seeds = len(seeds_df)\n\nprint(num_seeds)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: Find the number of products with category \"Spices\" and typically sold above 1000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_spices = df[df['product_category_code'] == 'Spices']\ndf_spices_price_over_1000 = df_spices[df_spices['typical_buying_price'] > 1000]\n\nanswer = len(df_spices_price_over_1000)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: How many products are in the 'Spices' category and have a typical price of over 1000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_spices = df[df['product_category_code'] == 'Spices']\ndf_spices_price_over_1000 = df_spices[df_spices['typical_buying_price'] > 1000]\n\nanswer = len(df_spices_price_over_1000)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: Which category does the product named \"flax\" belong to?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'product_name' is 'flax'\nflax_product = df[df['product_name'] == 'flax']\n\n# Get the 'product_category_code' of the filtered DataFrame\nflax_category_code = flax_product['product_category_code'].values[0]\n\nprint(flax_category_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details\n1,4,Spices,cumin,,2878.3,et,\n2,2,Spices,peper,352447.2874677,1892070.2803543,rerum,\n3,9,Herbs,basil,503.8431967,0.1859512,officia,\n4,1,Herbs,borage,,10377614.847385,blanditiis,\n5,4,Spices,chili,,39446,eius,\n6,4,Seeds,ginger,5.578,52735.6101,doloribus,\n7,9,Seeds,sesame,1284268.0659,68205825.7,et,\n8,9,Herbs,caraway,24493,,nulla,\n9,2,Herbs,catnip,12008702.623,21577.891642,vel,\n10,5,Seeds,flax,339404395.7,59622629.74,et,\n\nQuestion: What is the code of the category that the product with the name 'flax' belongs to?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'product_name' is 'flax'\nflax_product = df[df['product_name'] == 'flax']\n\n# Get the 'product_category_code' of the filtered DataFrame\nflax_category_code = flax_product['product_category_code'].values[0]\n\nprint(flax_category_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: What is the unit of measuerment of the product category code \"Herbs\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where product_category_code is 'Herbs'\nherbs = df[df['product_category_code'] == 'Herbs']\n\n# Get the unit of measure for 'Herbs'\nanswer = herbs['unit_of_measure'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: Return the unit of measure for 'Herb' products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row where product_category_code is 'Herbs'\nherbs = df[df['product_category_code'] == 'Herbs']\n\n# Get the unit of measure for 'Herbs'\nanswer = herbs['unit_of_measure'].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: Find the product category description of the product category with code \"Spices\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'product_category_code' is 'Spices'\nspices_df = df[df['product_category_code'] == 'Spices']\n\n# Save the description of the product category with the code 'Spices' in a variable\nspices_description = spices_df['product_category_description'].values[0]\n\n# Print the variable\nprint(spices_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: What is the description of the product category with the code 'Spices'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'product_category_code' is 'Spices'\nspices_df = df[df['product_category_code'] == 'Spices']\n\n# Save the description of the product category with the code 'Spices' in a variable\nspices_description = spices_df['product_category_description'].values[0]\n\n# Print the variable\nprint(spices_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: What is the product category description and unit of measurement of category \"Herbs\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where product_category_code is 'Herbs'\nherbs_df = df[df['product_category_code'] == 'Herbs']\n\n# Get the product category description and unit of measure for the 'Herbs' category\nanswer = herbs_df[['product_category_description', 'unit_of_measure']].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_category_code,product_category_description,unit_of_measure\nHerbs,Herbs,Handful             \nSeeds,Seeds,Weight - pound,kilo.\nSpices,Spices,Weight - pound,kilo.\n\nQuestion: Return the description and unit of measurement for products in the 'Herbs' category.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where product_category_code is 'Herbs'\nherbs_df = df[df['product_category_code'] == 'Herbs']\n\n# Get the product category description and unit of measure for the 'Herbs' category\nanswer = herbs_df[['product_category_description', 'unit_of_measure']].values[0]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Name,Stadium_ID,Year\n1,FINA,1,2016\n2,Pacific,10,2011\n3,World Master,2,2012\n4,World Junior,3,2013\n5,IPC,4,2014\n6,European FINA,8,2017\n\nQuestion: How many events are there?", "response": "import pandas as pd\n\n# load the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# get the number of events (or rows)\nnum_events = df.shape[0]\n\n# print the number of events\nprint(num_events)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Name,Stadium_ID,Year\n1,FINA,1,2016\n2,Pacific,10,2011\n3,World Master,2,2012\n4,World Junior,3,2013\n5,IPC,4,2014\n6,European FINA,8,2017\n\nQuestion: List all the event names by year from the most recent to the oldest.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sorting the DataFrame by 'Year' in descending order and 'Name' in ascending order\ndf_sorted = df.sort_values(by=['Year', 'Name'], ascending=[False, True])\n\n# Creating a list of event names\nevent_names = df_sorted['Name'].tolist()\n\n# Printing the list of event names\nprint(event_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Name,Stadium_ID,Year\n1,FINA,1,2016\n2,Pacific,10,2011\n3,World Master,2,2012\n4,World Junior,3,2013\n5,IPC,4,2014\n6,European FINA,8,2017\n\nQuestion: What is the name of the event that happened in the most recent year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the data by 'Year' in descending order\ndf_sorted = df.sort_values('Year', ascending=False)\n\n# Get the 'Name' of the event from the first row of the sorted data\nevent_name = df_sorted.iloc[0]['Name']\n\nprint(event_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: How many stadiums are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnumber_of_stadiums = len(df)\nprint(number_of_stadiums)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Find the name of the stadium that has the maximum capacity.", "response": "# importing pandas library\nimport pandas as pd\n\n# reading csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# finding the maximum capacity\nmax_capacity = df['Capacity'].max()\n\n# finding the name of the stadium that has the maximum capacity\nmax_capacity_stadium_name = df[df['Capacity'] == max_capacity]['name'].values[0]\n\n# printing the name of the stadium that has the maximum capacity\nprint(max_capacity_stadium_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Find the names of stadiums whose capacity is smaller than the average capacity.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the average capacity\naverage_capacity = df['Capacity'].mean()\n\n# Filter the DataFrame to only include stadiums with a capacity smaller than the average\nsmaller_than_average = df[df['Capacity'] < average_capacity]\n\n# Save the names of the stadiums in a list\nstadium_names = smaller_than_average['name'].tolist()\n\n# Print the stadium names\nprint(stadium_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Find the country that has the most stadiums.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of stadiums for each country\ncountry_counts = df['Country'].value_counts()\n\n# Find the country with the most stadiums\nmax_country = country_counts.idxmax()\n\nprint(max_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Which country has at most 3 stadiums listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of stadiums in each country\ncounts = df['Country'].value_counts()\n\n# Get the countries with at most 3 stadiums\ncountries = counts[counts <= 3]\n\n# Save the answer in a variable and print the variable\nanswer = countries.index.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get stadiums with capacity greater than 60000\nstadiums_gt_60000 = df[df['Capacity'] > 60000]['Country'].unique()\n\n# Get stadiums with capacity less than 50000\nstadiums_lt_50000 = df[df['Capacity'] < 50000]['Country'].unique()\n\n# Find the intersection of both lists\nanswer = list(set(stadiums_gt_60000) & set(stadiums_lt_50000))\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: How many cities have a stadium that was opened before the year of 2006?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only the cities with a stadium opened before 2006\nbefore_2006_df = df[df['Opening_year'] < 2006]\n\n# Count the number of unique cities with a stadium opened before 2006\nanswer = before_2006_df['City'].nunique()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: How many stadiums does each country have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by 'Country' and then count the number of entries in each group\nstadium_counts = df.groupby('Country').size()\n\nprint(stadium_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: Which countries do not have a stadium that was opened after 2006?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get all countries after filtering\ncountries_after_2006 = df[df['Opening_year'] > 2006]['Country']\n\n# Get all unique countries from the original dataframe\nall_countries = df['Country'].unique()\n\n# Find the countries that are not in countries_after_2006\ncountries_before_2006 = [country for country in all_countries if country not in countries_after_2006.values]\n\n# Print the countries that were opened before 2006\nprint(countries_before_2006)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: How many stadiums are not in country \"Russia\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnon_russian_stadiums = df[df['Country'] != 'Russia'].shape[0]\n\nprint(non_russian_stadiums)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time\n7,Przemysław Stańczyk,Poland,57.31,1:57.10,2:56.02,3:55.36,4:54.21,5:52.59,6:50.91,7:47.91\n4,Craig Stevens,Australia,57.35,1:56.34,2:55.90,3:55.72,4:55.08,5:54.45,6:52.69,7:48.67\n5,Federico Colbertaldo,Italy,57.66,1:56.77,2:56.04,3:55.37,4:54.48,5:53.53,6:52.58,7:49.98\n8,Sébastien Rouault,France,55.67,1:54.40,2:53.46,3:52.93,4:52.85,5:53.03,6:53.34,7:52.04\n1,Sergiy Fesenko,Ukraine,57.34,1:57.26,2:57.10,3:57.12,4:57.03,5:56.31,6:55.07,7:53.43\n2,Grant Hackett,Australia,57.34,1:57.21,2:56.95,3:57.00,4:56.96,5:57.10,6:57.44,7:55.39\n6,Ryan Cochrane,Canada,57.84,1:57.26,2:56.64,3:56.34,4:56.15,5:56.99,6:57.69,7:56.56\n3,Oussama Mellouli,Tunisia,57.31,1:56.44,2:55.94,3:55.49,4:54.19,5:52.92,6:50.80,7:46.95\n\nQuestion: Find the names of all swimmers, sorted by their 100 meter scores in ascending order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'meter_100' column to a numeric type for sorting\ndf['meter_100'] = pd.to_numeric(df['meter_100'], errors='coerce')\n\n# Sort the dataframe by 'meter_100' and select the 'name' column\nsorted_names = df.sort_values('meter_100')['name']\n\n# Print the sorted names\nprint(sorted_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time\n7,Przemysław Stańczyk,Poland,57.31,1:57.10,2:56.02,3:55.36,4:54.21,5:52.59,6:50.91,7:47.91\n4,Craig Stevens,Australia,57.35,1:56.34,2:55.90,3:55.72,4:55.08,5:54.45,6:52.69,7:48.67\n5,Federico Colbertaldo,Italy,57.66,1:56.77,2:56.04,3:55.37,4:54.48,5:53.53,6:52.58,7:49.98\n8,Sébastien Rouault,France,55.67,1:54.40,2:53.46,3:52.93,4:52.85,5:53.03,6:53.34,7:52.04\n1,Sergiy Fesenko,Ukraine,57.34,1:57.26,2:57.10,3:57.12,4:57.03,5:56.31,6:55.07,7:53.43\n2,Grant Hackett,Australia,57.34,1:57.21,2:56.95,3:57.00,4:56.96,5:57.10,6:57.44,7:55.39\n6,Ryan Cochrane,Canada,57.84,1:57.26,2:56.64,3:56.34,4:56.15,5:56.99,6:57.69,7:56.56\n3,Oussama Mellouli,Tunisia,57.31,1:56.44,2:55.94,3:55.49,4:54.19,5:52.92,6:50.80,7:46.95\n\nQuestion: How many different countries are all the swimmers from?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the unique countries\ncountries = df['Nationality'].unique()\n\n# Calculate the number of different countries\nnum_countries = len(countries)\n\n# Print the number of different countries\nprint(num_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time\n7,Przemysław Stańczyk,Poland,57.31,1:57.10,2:56.02,3:55.36,4:54.21,5:52.59,6:50.91,7:47.91\n4,Craig Stevens,Australia,57.35,1:56.34,2:55.90,3:55.72,4:55.08,5:54.45,6:52.69,7:48.67\n5,Federico Colbertaldo,Italy,57.66,1:56.77,2:56.04,3:55.37,4:54.48,5:53.53,6:52.58,7:49.98\n8,Sébastien Rouault,France,55.67,1:54.40,2:53.46,3:52.93,4:52.85,5:53.03,6:53.34,7:52.04\n1,Sergiy Fesenko,Ukraine,57.34,1:57.26,2:57.10,3:57.12,4:57.03,5:56.31,6:55.07,7:53.43\n2,Grant Hackett,Australia,57.34,1:57.21,2:56.95,3:57.00,4:56.96,5:57.10,6:57.44,7:55.39\n6,Ryan Cochrane,Canada,57.84,1:57.26,2:56.64,3:56.34,4:56.15,5:56.99,6:57.69,7:56.56\n3,Oussama Mellouli,Tunisia,57.31,1:56.44,2:55.94,3:55.49,4:54.19,5:52.92,6:50.80,7:46.95\n\nQuestion: List countries that have more than one swimmer.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of swimmers from each country\ncountry_counts = df['Nationality'].value_counts()\n\n# Filter the countries that have more than one swimmer\ncountries_with_multiple_swimmers = country_counts[country_counts > 1]\n\n# Print the result\nprint(countries_with_multiple_swimmers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time\n7,Przemysław Stańczyk,Poland,57.31,1:57.10,2:56.02,3:55.36,4:54.21,5:52.59,6:50.91,7:47.91\n4,Craig Stevens,Australia,57.35,1:56.34,2:55.90,3:55.72,4:55.08,5:54.45,6:52.69,7:48.67\n5,Federico Colbertaldo,Italy,57.66,1:56.77,2:56.04,3:55.37,4:54.48,5:53.53,6:52.58,7:49.98\n8,Sébastien Rouault,France,55.67,1:54.40,2:53.46,3:52.93,4:52.85,5:53.03,6:53.34,7:52.04\n1,Sergiy Fesenko,Ukraine,57.34,1:57.26,2:57.10,3:57.12,4:57.03,5:56.31,6:55.07,7:53.43\n2,Grant Hackett,Australia,57.34,1:57.21,2:56.95,3:57.00,4:56.96,5:57.10,6:57.44,7:55.39\n6,Ryan Cochrane,Canada,57.84,1:57.26,2:56.64,3:56.34,4:56.15,5:56.99,6:57.69,7:56.56\n3,Oussama Mellouli,Tunisia,57.31,1:56.44,2:55.94,3:55.49,4:54.19,5:52.92,6:50.80,7:46.95\n\nQuestion: Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows with nationality \"Australia\"\naustralian_df = df[df['Nationality'] == 'Australia']\n\n# Extract the results for 200 meter and 300 meter\nresults = australian_df[['meter_200', 'meter_300']]\n\n# Print the results\nprint(results)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time\n7,Przemysław Stańczyk,Poland,57.31,1:57.10,2:56.02,3:55.36,4:54.21,5:52.59,6:50.91,7:47.91\n4,Craig Stevens,Australia,57.35,1:56.34,2:55.90,3:55.72,4:55.08,5:54.45,6:52.69,7:48.67\n5,Federico Colbertaldo,Italy,57.66,1:56.77,2:56.04,3:55.37,4:54.48,5:53.53,6:52.58,7:49.98\n8,Sébastien Rouault,France,55.67,1:54.40,2:53.46,3:52.93,4:52.85,5:53.03,6:53.34,7:52.04\n1,Sergiy Fesenko,Ukraine,57.34,1:57.26,2:57.10,3:57.12,4:57.03,5:56.31,6:55.07,7:53.43\n2,Grant Hackett,Australia,57.34,1:57.21,2:56.95,3:57.00,4:56.96,5:57.10,6:57.44,7:55.39\n6,Ryan Cochrane,Canada,57.84,1:57.26,2:56.64,3:56.34,4:56.15,5:56.99,6:57.69,7:56.56\n3,Oussama Mellouli,Tunisia,57.31,1:56.44,2:55.94,3:55.49,4:54.19,5:52.92,6:50.80,7:46.95\n\nQuestion: Find all details for each swimmer.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# To find details for each swimmer\nswimmer_details = df\n\nprint(swimmer_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,name,Capacity,City,Country,Opening_year\n1,Nou Mestalla,75000,Valencia,Spain,2004\n2,Gazprom Arena,69501,Saint Petersburg,Russia,2005\n3,Baku Olympic Stadium,68000,Baku,Azerbaijan,2005\n4,Estadio La Peineta,67500,Madrid,Spain,2005\n5,Ferenc Puskás Stadion,65000,Budapest,Hungary,2006\n6,Stade des Lumières,61556,Lyon,France,2004\n7,Northumberland Development Project,56250,London,England,2006\n8,Fisht Olympic Stadium,47659,Sochi,Russia,2004\n9,Arena Baltika,45015,Kaliningrad,Russia,2007\n10,Yubileyniy Stadium,45015,Saransk,Russia,2005\n\nQuestion: What is the average capacity of the stadiums that were opened in year 2005?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Opening_year is 2005\ndf_2005 = df[df['Opening_year'] == 2005]\n\n# Calculate the average capacity\naverage_capacity = df_2005['Capacity'].mean()\n\n# Print the average capacity\nprint(average_capacity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: How many railways are there?", "response": "import pandas as pd\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of railways\nnum_railways = df.shape[0]\n\n# save the answer in a variable and print the variable\nprint(num_railways)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: List the builders of railways in ascending alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nbuilders = df['Builder'].sort_values()\n\nprint(builders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: List the wheels and locations of the railways.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Wheels' and 'Location' columns\nselected_data = df[['Wheels', 'Location']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: What is the average age for all managers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naverage_age = df['Age'].mean()\n\nprint(average_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: What are the names of managers in ascending order of level?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Level' in ascending order\ndf = df.sort_values('Level')\n\n# Get the names of managers\nmanager_names = df['Name'].tolist()\n\n# Print the names of managers\nprint(manager_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrain_ID,Train_Num,Name,From,Arrival,Railway_ID\n1,51195,Wardha-Ballarshah Pass,Wardha,08:54,1\n2,12139,Sewagram Exp,Mumbai CST,09:08,1\n3,12140,Ballarshah-Mumbai Pass,Ballarshah,09:48,2\n4,57135,Nagpur-Kazipet Pass,Nagpur,23:44,3\n5,57136,Kazipet-Nagpur Pass,Kazipet,05:09,5\n6,16094,Lucknow-Chennai Exp,Lucknow,13:04,5\n7,16032,Andaman Exp,Jammu Tawi,13:04,7\n8,16031,Andaman Exp,Chennai,23:39,9\n9,11401,Nandigram Exp,Mumbai CST,13:28,10\n\nQuestion: What are the names and arrival times of trains?", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Name' and 'Arrival' columns\nresult = df[['Name', 'Arrival']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: What is the name of the oldest manager?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the manager with the maximum age\noldest_manager = df.loc[df['Age'].idxmax(), 'Name']\n\nprint(oldest_manager)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: Show different builders of railways, along with the corresponding number of railways using each builder.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find different builders of railways and count of each\nbuilder_counts = df['Builder'].value_counts()\n\n# Print the result\nprint(builder_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: Show the most common builder of railways.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common builder of railways\nmost_common_builder = df['Builder'].value_counts().idxmax()\n\n# Save the answer in a variable and print the variable\nprint(most_common_builder)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: Show different locations of railways along with the corresponding number of railways at each location.", "response": "# Required Libraries\nimport pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Group by location and count the number of railways at each location\nloc_count = df['Location'].value_counts()\n\n# Print the result\nprint(loc_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRailway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber\n1,SECR,SECR Ashford,1901,4-4-0,York,1975-7006\n2,MR,MR Derby,1902 Midland Railway 1000 was rebuilt in 1914.,4-4-0,Bo'ness,1975-7018\n3,GNRD,GNR Doncaster,1902,4-4-2,Barrow Hill,1975-7005\n4,GWRS,GWR Swindon,1903,4-4-0,Toddington,1978-7025\n5,GERSt,GER Stratford,1904,0-6-0T,Bressingham,1975-7003\n6,GERHt,GER Hartford,1905,0-6-0,Barrow Hill,1978-7026\n7,GWRSn,GWR Swindon,1905,2-8-0,Shildon,1976-7001\n8,GWRWk,Swindon Works,1907,4-6-0,Swindon,1978-7027\n9,LTSR,Stephenson,1909,4-4-2T,Bressingham,1978-7028\n10,Longmoor,Avonside,1910,0-6-0ST,Basingstoke,2008-7159\n\nQuestion: Show the locations that have more than one railways.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nlocation_counts = df['Location'].value_counts()\n\nlocations_with_multiple_railways = location_counts[location_counts > 1].index.tolist()\n\nprint(locations_with_multiple_railways)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: Show the countries that have both managers of age above 50 and managers of age below 46.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get managers of age above 50\nabove_50 = df[df['Age'] > 50]['Country']\n\n# Filter the dataframe to get managers of age below 46\nbelow_46 = df[df['Age'] < 46]['Country']\n\n# Find the intersection of the two filtered dataframes\nresult = set(above_50).intersection(set(below_46))\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: Show the distinct countries of managers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndistinct_countries = df['Country'].unique()\nprint(distinct_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: Show the working years of managers in descending order of their level.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Level' in descending order\ndf_sorted = df.sort_values('Level', ascending=False)\n\n# Select only the 'Working_year_starts' column\nworking_years = df_sorted['Working_year_starts']\n\n# Print the working years\nprint(working_years)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nManager_ID,Name,Country,Working_year_starts,Age,Level\n1,Ben Curtis,United States,2003,45,5\n2,Todd Hamilton,United States,2004,55,5\n3,Tiger Woods,United States,2006,46,5\n4,David Duval,United States,2001,47,7\n5,Sandy Lyle,Scotland,1985,48,8\n6,Nick Faldo,England,1999,51,11\n7,Greg Norman,Australia,1993,52,12\n\nQuestion: Show the countries that have managers of age above 50 or below 46.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get countries where manager's age is above 50 or below 46\ncountries = df.loc[(df['Age'] > 50) | (df['Age'] < 46), 'Country']\n\n# Print the countries\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,city,zip_postcode,state_province_county,country\n1,4315 Kerluke Canyon Apt. 800,Hertafurt,740,Nevada,USA\n2,319 Kozey Highway Suite 973,Edgardoberg,282,Colorado,USA\n3,592 Frederique Ridge,Gilbertmouth,167,Virginia,USA\n4,01868 Laverna Green,Lake Floyd,041,Oklahoma,USA\n5,6017 Price Greens,Gibsonfurt,873,District of Columbia,USA\n6,037 Luella Path,North Jairo,126,Maryland,USA\n7,044 Greenfelder Fort,East Rickey,564,Louisiana,USA\n8,2676 Connelly Islands Apt. 199,West Kaiatown,770,Oregon,USA\n9,6830 Alexanne Forks Apt. 925,Agustinstad,248,Illinois,USA\n10,918 Lauren Drive,Gleasonland,116,Kentucky,USA\n\nQuestion: How many addresses are there in country USA?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nusa_count = df[df['country'] == 'USA'].shape[0]\n\nprint(usa_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,city,zip_postcode,state_province_county,country\n1,4315 Kerluke Canyon Apt. 800,Hertafurt,740,Nevada,USA\n2,319 Kozey Highway Suite 973,Edgardoberg,282,Colorado,USA\n3,592 Frederique Ridge,Gilbertmouth,167,Virginia,USA\n4,01868 Laverna Green,Lake Floyd,041,Oklahoma,USA\n5,6017 Price Greens,Gibsonfurt,873,District of Columbia,USA\n6,037 Luella Path,North Jairo,126,Maryland,USA\n7,044 Greenfelder Fort,East Rickey,564,Louisiana,USA\n8,2676 Connelly Islands Apt. 199,West Kaiatown,770,Oregon,USA\n9,6830 Alexanne Forks Apt. 925,Agustinstad,248,Illinois,USA\n10,918 Lauren Drive,Gleasonland,116,Kentucky,USA\n\nQuestion: Show all distinct cities in the address record.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncities = df['city'].tolist()\n\nprint(cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,city,zip_postcode,state_province_county,country\n1,4315 Kerluke Canyon Apt. 800,Hertafurt,740,Nevada,USA\n2,319 Kozey Highway Suite 973,Edgardoberg,282,Colorado,USA\n3,592 Frederique Ridge,Gilbertmouth,167,Virginia,USA\n4,01868 Laverna Green,Lake Floyd,041,Oklahoma,USA\n5,6017 Price Greens,Gibsonfurt,873,District of Columbia,USA\n6,037 Luella Path,North Jairo,126,Maryland,USA\n7,044 Greenfelder Fort,East Rickey,564,Louisiana,USA\n8,2676 Connelly Islands Apt. 199,West Kaiatown,770,Oregon,USA\n9,6830 Alexanne Forks Apt. 925,Agustinstad,248,Illinois,USA\n10,918 Lauren Drive,Gleasonland,116,Kentucky,USA\n\nQuestion: Show each state and the number of addresses in each state.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nstate_counts = df['state_province_county'].value_counts()\n\nprint(state_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Hardware,Apple,54753982.574522\n2,Clothes,jcrew,30590929.528306\n3,Hardware,Apple,10268.85297069\n4,Hardware,Apple,22956668.699482\n5,Clothes,jcrew,5927021.8748021\n6,Hardware,Apple,77.109961147471\n7,Hardware,Apple,450.39232520498\n8,Hardware,Sony,4446237.9177554\n9,Clothes,jcrew,622.79275984494\n10,Hardware,Sony,7171.5933353284\n\nQuestion: Show the product type codes which have at least two products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the dataframe by product_type_code and count the number of products\nproduct_counts = df['product_type_code'].value_counts()\n\n# Select the product_type_codes that have at least two products\nproduct_type_codes = product_counts[product_counts >= 2].index.tolist()\n\n# Print the product_type_codes\nprint(product_type_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method_code,customer_number,customer_name,customer_address,customer_phone,customer_email\n1,Credit Card,456,Kayley,636 Chanelle Isle Apt. 846,+87(9)5279161988,antonette73@example.com\n2,Credit Card,553,Sterling,12174 Boyer Crossroad,896.685.8228x2786,stroman.chadd@example.net\n3,Credit Card,951,Buford,650 Spencer Way Apt. 584,(192)144-4687,pattie.mayer@example.net\n4,Direct Debit,497,Caterina,075 Skiles Expressway,387.053.1225,dbeahan@example.net\n5,Direct Debit,752,Raymond,8497 Huel Stravenue,1-513-427-0125,bergnaum.ashton@example.com\n6,Direct Debit,838,Cheyenne,058 Ben Street Apt. 034,009-136-4509x19635,rhayes@example.org\n7,Direct Debit,429,Cecelia,4065 Forest Vista Apt. 103,672-559-0630x7875,caesar.lemke@example.net\n8,Credit Card,564,Brenna,440 Aiden Ports,1-271-345-4681x1131,macy.huel@example.org\n9,Credit Card,525,Lela,13256 Valentina Valleys Suite 292,838.718.8618x23239,vandervort.helena@example.org\n10,Credit Card,795,Cleo,91702 Hilpert Pines Suite 177,1-202-928-5395,xrosenbaum@example.org\n\nQuestion: Show the name, phone, and payment method code for all customers in descending order of customer number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf_sorted = df.sort_values(by='customer_number', ascending=False)\nresult = df_sorted[['customer_name', 'customer_phone', 'payment_method_code']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Hardware,Apple,54753982.574522\n2,Clothes,jcrew,30590929.528306\n3,Hardware,Apple,10268.85297069\n4,Hardware,Apple,22956668.699482\n5,Clothes,jcrew,5927021.8748021\n6,Hardware,Apple,77.109961147471\n7,Hardware,Apple,450.39232520498\n8,Hardware,Sony,4446237.9177554\n9,Clothes,jcrew,622.79275984494\n10,Hardware,Sony,7171.5933353284\n\nQuestion: Show the minimum, maximum, average price for all products.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['product_price'] = df['product_price'].astype(float)\n\n# Calculating the minimum, maximum, and average price of all products\nmin_price = df['product_price'].min()\nmax_price = df['product_price'].max()\navg_price = df['product_price'].mean()\n\n# Storing the answers in a dictionary\nanswer = {\"Minimum price\": min_price, \"Maximum price\": max_price, \"Average price\": avg_price}\n\n# Printing the dictionary\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Hardware,Apple,54753982.574522\n2,Clothes,jcrew,30590929.528306\n3,Hardware,Apple,10268.85297069\n4,Hardware,Apple,22956668.699482\n5,Clothes,jcrew,5927021.8748021\n6,Hardware,Apple,77.109961147471\n7,Hardware,Apple,450.39232520498\n8,Hardware,Sony,4446237.9177554\n9,Clothes,jcrew,622.79275984494\n10,Hardware,Sony,7171.5933353284\n\nQuestion: How many products have a price higher than the average?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average price\naverage_price = df['product_price'].mean()\n\n# Filter the products with price higher than the average\nfiltered_products = df[df['product_price'] > average_price]\n\n# Count the number of products\ncount_products = len(filtered_products)\n\nprint(count_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_type_code,product_name,product_price\n1,Hardware,Apple,54753982.574522\n2,Clothes,jcrew,30590929.528306\n3,Hardware,Apple,10268.85297069\n4,Hardware,Apple,22956668.699482\n5,Clothes,jcrew,5927021.8748021\n6,Hardware,Apple,77.109961147471\n7,Hardware,Apple,450.39232520498\n8,Hardware,Sony,4446237.9177554\n9,Clothes,jcrew,622.79275984494\n10,Hardware,Sony,7171.5933353284\n\nQuestion: Show the product type and name for the products with price higher than 1000 or lower than 500.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get the products with price higher than 1000 or lower than 500\nfiltered_df = df[(df['product_price'] > 1000) | (df['product_price'] < 500)]\n\n# Select the 'product_type_code' and 'product_name' columns from the filtered DataFrame\nanswer = filtered_df[['product_type_code', 'product_name']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: Find the name of dorms only for female (F gender).", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'gender' column is 'F'\nfemale_dorms = df[df['gender'] == 'F']\n\n# Extract the 'dorm_name' column from the filtered DataFrame\nfemale_dorm_names = female_dorms['dorm_name']\n\n# Print the names of the all-female dorms\nprint(female_dorm_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: What are the names of the all-female dorms?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'gender' column is 'F'\nfemale_dorms = df[df['gender'] == 'F']\n\n# Extract the 'dorm_name' column from the filtered DataFrame\nfemale_dorm_names = female_dorms['dorm_name']\n\n# Print the names of the all-female dorms\nprint(female_dorm_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many female students (sex is F) whose age is below 25?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for female students and age below 25\nfiltered_df = df[(df['Sex'] == 'F') & (df['Age'] < 25)]\n\n# Get the count of filtered dataframe\nanswer = len(filtered_df)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many girl students who are younger than 25?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for female students and age below 25\nfiltered_df = df[(df['Sex'] == 'F') & (df['Age'] < 25)]\n\n# Get the count of filtered dataframe\nanswer = len(filtered_df)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first name of students who is older than 20.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter students who are older than 20\nfilter = df['Age'] > 20\n\n# Get the first name of these students\nfirst_name = df[filter]['Fname']\n\n# Print the first name\nprint(first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first names of all students who are older than 20?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter students who are older than 20\nfilter = df['Age'] > 20\n\n# Get the first name of these students\nfirst_name = df[filter]['Fname']\n\n# Print the first name\nprint(first_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first name of students living in city PHL whose age is between 20 and 25.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only students in the age range 20 to 25 and living in PHL city.\nfiltered_df = df[(df['Age'].between(20, 25)) & (df['city_code'] == 'PHL')]\n\n# Extract the first name of the students.\nfirst_names = filtered_df['Fname'].tolist()\n\n# Print the first names.\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the first name of the students who are in age 20 to 25 and living in PHL city?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only students in the age range 20 to 25 and living in PHL city.\nfiltered_df = df[(df['Age'].between(20, 25)) & (df['city_code'] == 'PHL')]\n\n# Extract the first name of the students.\nfirst_names = filtered_df['Fname'].tolist()\n\n# Print the first names.\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: How many dorms are there?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of rows\nnum_dorms = df.shape[0]\n\n# Print the answer\nprint(num_dorms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: How many dorms are in the database?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of rows\nnum_dorms = df.shape[0]\n\n# Print the answer\nprint(num_dorms)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_count = df['StuID'].count()\n\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students exist?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_count = df['StuID'].count()\n\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the average age of all students living in the each city.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_grouped = df.groupby('city_code')\navg_ages = df_grouped['Age'].mean()\n\nprint(avg_ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the average age for each city and what are those cities?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_grouped = df.groupby('city_code')\navg_ages = df_grouped['Age'].mean()\n\nprint(avg_ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: Find the number of distinct gender for dorms.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of distinct genders\nnum_genders = df['gender'].nunique()\n\n# Print the answer\nprint(num_genders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ndormid,dorm_name,student_capacity,gender\n100,Smith Hall,85,X\n110,Bud Jones Hall,116,M\n140,Fawlty Towers,355,X\n160,Dorm-plex 2000,400,X\n109,Anonymous Donor Hall,128,F\n117,University Hovels,40,X\n104,Grad Student Asylum,256,X\n\nQuestion: How many different genders are there in the dorms?", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of distinct genders\nnum_genders = df['gender'].nunique()\n\n# Print the answer\nprint(num_genders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the numbers of different majors and cities.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count unique majors\nnum_majors = len(df['Major'].unique())\n\n# Count unique city codes\nnum_city_codes = len(df['city_code'].unique())\n\n# Save the answer\nanswer = (num_majors, num_city_codes)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many different majors are there and how many different city codes are there for each student?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count unique majors\nnum_majors = len(df['Major'].unique())\n\n# Count unique city codes\nnum_city_codes = len(df['city_code'].unique())\n\n# Save the answer\nanswer = (num_majors, num_city_codes)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the last name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filtering rows where sex is Female and city_code is BAL\nfemale_bal = df.loc[(df['Sex'] == 'F') & (df['city_code'] == 'BAL')]\n\n# filtering rows where sex is Male and age is below 20\nmale_below_20 = df.loc[(df['Sex'] == 'M') & (df['Age'] < 20)]\n\n# combining the two dataframes\nanswer = pd.concat([female_bal, male_below_20])\n\n# get unique last names\nlnames = answer['LName'].unique()\n\nprint(lnames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the last name of every student who is either female or living in a city with the code BAL or male and under 20?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filtering rows where sex is Female and city_code is BAL\nfemale_bal = df.loc[(df['Sex'] == 'F') & (df['city_code'] == 'BAL')]\n\n# filtering rows where sex is Male and age is below 20\nmale_below_20 = df.loc[(df['Sex'] == 'M') & (df['Age'] < 20)]\n\n# combining the two dataframes\nanswer = pd.concat([female_bal, male_below_20])\n\n# get unique last names\nlnames = answer['LName'].unique()\n\nprint(lnames)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first and last name of students whose age is younger than the average age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate average age\naverage_age = df['Age'].mean()\n\n# Filter students whose age is less than the average\nfiltered_students = df[df['Age'] < average_age]\n\n# Get the first and last names of these students\nnames = filtered_students[['Fname', 'LName']]\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the first and last name of all students who are younger than average?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate average age\naverage_age = df['Age'].mean()\n\n# Filter students whose age is less than the average\nfiltered_students = df[df['Age'] < average_age]\n\n# Get the first and last names of these students\nnames = filtered_students[['Fname', 'LName']]\n\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the students who are not living in the city HKG\ndf_filtered = df[df['city_code'] != 'HKG']\n\n# Sorting the filtered data by age\ndf_sorted = df_filtered.sort_values('Age')\n\n# Getting the first and last names\nresult = df_sorted[['Fname', 'LName']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first and last names of all students who are not living in the city HKG and order the results by age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering the students who are not living in the city HKG\ndf_filtered = df[df['city_code'] != 'HKG']\n\n# Sorting the filtered data by age\ndf_sorted = df_filtered.sort_values('Age')\n\n# Getting the first and last names\nresult = df_sorted[['Fname', 'LName']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the average and oldest age for students with different sex.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Sex' and compute the mean and max of 'Age'\ngrouped = df.groupby('Sex').agg({'Age': ['mean', 'max']})\n\n# Reset the index to remove 'Sex' from the index\ngrouped.reset_index(inplace=True)\n\n# Rename the columns\ngrouped.columns = ['Gender', 'Average Age', 'Oldest Age']\n\n# Print the DataFrame\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the average and oldest age for each gender of student?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Sex' and compute the mean and max of 'Age'\ngrouped = df.groupby('Sex').agg({'Age': ['mean', 'max']})\n\n# Reset the index to remove 'Sex' from the index\ngrouped.reset_index(inplace=True)\n\n# Rename the columns\ngrouped.columns = ['Gender', 'Average Age', 'Oldest Age']\n\n# Print the DataFrame\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the number of students in each major.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Major' and count the number of rows for each group\nmajor_count = df.groupby('Major').size()\n\nprint(major_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are there in each major?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Major' and count the number of rows for each group\nmajor_count = df.groupby('Major').size()\n\nprint(major_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the number and average age of students living in each city.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by city_code and count the number of students in each city\nstudents_per_city = df.groupby('city_code')['StuID'].count().reset_index(name='Students')\n\n# Group by city_code and calculate the average age\naverage_age_per_city = df.groupby('city_code')['Age'].mean().reset_index(name='Average_Age')\n\n# Merge the two dataframes\nresult = pd.merge(students_per_city, average_age_per_city, on='city_code')\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students live in each city and what are their average ages?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by city_code and count the number of students in each city\nstudents_per_city = df.groupby('city_code')['StuID'].count().reset_index(name='Students')\n\n# Group by city_code and calculate the average age\naverage_age_per_city = df.groupby('city_code')['Age'].mean().reset_index(name='Average_Age')\n\n# Merge the two dataframes\nresult = pd.merge(students_per_city, average_age_per_city, on='city_code')\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the number of students for the cities where have more than one student.", "response": "import pandas as pd\n\n# Load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by 'city_code' and count the number of students in each group\ngrouped = df.groupby('city_code').size()\n\n# Filter the groups that have more than one student\ncities_with_more_than_one_student = grouped[grouped > 1]\n\n# Print the result\nprint(cities_with_more_than_one_student)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are from each city, and which cities have more than one cities?", "response": "import pandas as pd\n\n# Load the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group by 'city_code' and count the number of students in each group\ngrouped = df.groupby('city_code').size()\n\n# Filter the groups that have more than one student\ncities_with_more_than_one_student = grouped[grouped > 1]\n\n# Print the result\nprint(cities_with_more_than_one_student)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the first and last name of students who are not in the largest major.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, find the major with the highest frequency\nmajor_counts = df['Major'].value_counts()\nmax_major = major_counts.idxmax()\n\n# Then, filter out the students who are not in the max major\nnot_max_major_students = df[df['Major'] != max_major]\n\n# Get the first and last names of these students\nnames = not_max_major_students[['Fname', 'LName']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What is the first and last name of the students who are not in the largest major?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, find the major with the highest frequency\nmajor_counts = df['Major'].value_counts()\nmax_major = major_counts.idxmax()\n\n# Then, filter out the students who are not in the max major\nnot_max_major_students = df[df['Major'] != max_major]\n\n# Get the first and last names of these students\nnames = not_max_major_students[['Fname', 'LName']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Find the number of students whose age is older than the average age for each gender.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average age\naverage_age = df['Age'].mean()\n\n# Filter out the students who are older than average\nolder_than_average = df[df['Age'] > average_age]\n\n# Group by gender and count the number of students\nnum_students_older_than_average = older_than_average.groupby('Sex').size()\n\n# Print the result\nprint(num_students_older_than_average)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: How many students are older than average for each gender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average age\naverage_age = df['Age'].mean()\n\n# Filter out the students who are older than average\nolder_than_average = df[df['Age'] > average_age]\n\n# Group by gender and count the number of students\nnum_students_older_than_average = older_than_average.groupby('Sex').size()\n\n# Print the result\nprint(num_students_older_than_average)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: How many customers are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Assuming the csv file is located at 'data.csv'\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = len(df)\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Count the number of customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Assuming the csv file is located at 'data.csv'\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = len(df)\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Find the emails and phone numbers of all the customers, ordered by email address and phone number.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, we need to sort the DataFrame by 'email_address' and 'phone_number'\ndf_sorted = df.sort_values(by=['email_address', 'phone_number'])\n\n# Then, we select the 'email_address' and 'phone_number' columns\ndf_selected = df_sorted[['email_address', 'phone_number']]\n\n# Finally, we print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: What are the emails and phone numbers of all customers, sorted by email address and phone number?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# First, we need to sort the DataFrame by 'email_address' and 'phone_number'\ndf_sorted = df.sort_values(by=['email_address', 'phone_number'])\n\n# Then, we select the 'email_address' and 'phone_number' columns\ndf_selected = df_sorted[['email_address', 'phone_number']]\n\n# Finally, we print the result\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Which city has the least number of customers whose type code is \"Good Credit Rating\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows with 'Good Credit Rating' customer type code\ndf_good_credit = df[df['customer_type_code'] == 'Good Credit Rating']\n\n# Group by 'town_city' and count the number of customers\ndf_grouped = df_good_credit.groupby('town_city').size()\n\n# Find the city with the fewest customers\ncity_with_fewest_customers = df_grouped.idxmin()\n\nprint(city_with_fewest_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to include only rows with 'Good Credit Rating' customer type code\ndf_good_credit = df[df['customer_type_code'] == 'Good Credit Rating']\n\n# Group by 'town_city' and count the number of customers\ndf_grouped = df_good_credit.groupby('town_city').size()\n\n# Find the city with the fewest customers\ncity_with_fewest_customers = df_grouped.idxmin()\n\nprint(city_with_fewest_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: What is the description of the product named \"Chocolate\"?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where product_name is 'Chocolate'\nchocolate = df[df['product_name'] == 'Chocolate']\n\n# Save the description of 'Chocolate' in a variable\nproduct_description = chocolate['product_description'].values[0]\n\n# Print the product description\nprint(product_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: Return the description of the product called \"Chocolate\".", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where product_name is 'Chocolate'\nchocolate = df[df['product_name'] == 'Chocolate']\n\n# Save the description of 'Chocolate' in a variable\nproduct_description = chocolate['product_description'].values[0]\n\n# Print the product description\nprint(product_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: Find the name and category of the most expensive product.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_price_product = df[df.product_price == df.product_price.max()]\n\nanswer = highest_price_product[['product_name', 'product_category_code']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: What is the name and category code of the product with the highest price?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_price_product = df[df.product_price == df.product_price.max()]\n\nanswer = highest_price_product[['product_name', 'product_category_code']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: What is the average price of the products for each category?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average price for each category\naverage_price = df.groupby('product_category_code')['product_price'].mean()\n\n# Print the average price for each category\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price\n117,4,Food,1988-09-29 17:54:50,1987-12-20 13:46:16,Chocolate,Handmade chocolate,2.88\n118,3,Book,1974-06-25 12:26:47,1991-08-20 05:22:31,The Great Gatsby,American novel,35\n119,8,Hardware,1994-12-18 15:13:19,1997-07-02 18:26:16,Keyboard,Designed for games,109.99\n120,9,Hardware,1998-06-20 15:04:11,1980-06-26 10:40:19,Mouse,Blue tooth mouse,23.35\n\nQuestion: Return the average price of products that have each category code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Calculate the average price for each category\naverage_price = df.groupby('product_category_code')['product_price'].mean()\n\n# Print the average price for each category\nprint(average_price)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: Which complaint status has more than 3 records on file?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncomplaint_status_counts = df['complaint_status_code'].value_counts()\n\nanswer = complaint_status_counts[complaint_status_counts > 3].index.tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: Return complaint status codes have more than 3 corresponding complaints?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncomplaint_status_counts = df['complaint_status_code'].value_counts()\n\nanswer = complaint_status_counts[complaint_status_counts > 3].index.tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,gender,first_name,last_name,email_address,phone_number\n114,0,Ward,Boehm,marcelle.ritchie@example.com,(379)551-0838x146\n115,1,Lucie,Lowe,ohintz@example.org,142-311-6503x206\n116,0,Dagmar,Erdman,wrau@example.com,345-656-5571\n117,0,Bradly,Hahn,brett99@example.net,1-132-839-9409x288\n118,0,Austin,Zieme,reichel.armani@example.org,(383)553-1035x20399\n119,0,Dorian,Oberbrunner,richard.gutkowski@example.com,155-811-6153\n120,0,Mikel,Lynch,glen.borer@example.com,751-262-8424x575\n\nQuestion: Find the last name of the staff whose email address contains \"wrau\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where email_address contains 'wrau'\nwrau_rows = df[df['email_address'].str.contains('wrau')]\n\n# Get the last names of these rows\nlast_names = wrau_rows['last_name'].tolist()\n\n# Print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,gender,first_name,last_name,email_address,phone_number\n114,0,Ward,Boehm,marcelle.ritchie@example.com,(379)551-0838x146\n115,1,Lucie,Lowe,ohintz@example.org,142-311-6503x206\n116,0,Dagmar,Erdman,wrau@example.com,345-656-5571\n117,0,Bradly,Hahn,brett99@example.net,1-132-839-9409x288\n118,0,Austin,Zieme,reichel.armani@example.org,(383)553-1035x20399\n119,0,Dorian,Oberbrunner,richard.gutkowski@example.com,155-811-6153\n120,0,Mikel,Lynch,glen.borer@example.com,751-262-8424x575\n\nQuestion: What are the last names of staff with email addressed containing the substring \"wrau\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where email_address contains 'wrau'\nwrau_rows = df[df['email_address'].str.contains('wrau')]\n\n# Get the last names of these rows\nlast_names = wrau_rows['last_name'].tolist()\n\n# Print the last names\nprint(last_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: How many customers are there in the customer type with the most customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of occurrences of each customer type\ntype_counts = df['customer_type_code'].value_counts()\n\n# Find the customer type that is most common\nmost_common_type = type_counts.idxmax()\n\n# Count the number of customers with the most common customer type\nmost_common_type_count = df['customer_type_code'].value_counts()[most_common_type]\n\n# Save the answer in a variable and print it\nanswer = most_common_type_count\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Count the number of customers that have the customer type that is most common.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of occurrences of each customer type\ntype_counts = df['customer_type_code'].value_counts()\n\n# Find the customer type that is most common\nmost_common_type = type_counts.idxmax()\n\n# Count the number of customers with the most common customer type\nmost_common_type_count = df['customer_type_code'].value_counts()[most_common_type]\n\n# Save the answer in a variable and print it\nanswer = most_common_type_count\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: How many distinct complaint type codes are there in the database?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of distinct complaint type codes\ndistinct_complaint_type_codes = df['complaint_type_code'].nunique()\n\n# Print the number of distinct complaint type codes\nprint(distinct_complaint_type_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: Count the number of different complaint type codes.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of distinct complaint type codes\ndistinct_complaint_type_codes = df['complaint_type_code'].nunique()\n\n# Print the number of distinct complaint type codes\nprint(distinct_complaint_type_codes)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows with email \"vbogisich@example.org\"\nfiltered_df = df[df['email_address'] == 'vbogisich@example.org']\n\n# Get the first 2 lines of the filtered dataframe\naddress_lines = filtered_df.iloc[0:2, 2:4]\n\n# Print the address lines\nprint(address_lines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number\n113,Good Credit Rating,144 Legros Landing,Apt. 551,Maryamport,Kansas,hsteuber@example.org,06963347450\n114,Good Credit Rating,039 Jedidiah Estate Suite 537,Apt. 245,Sauerberg,Hawaii,cayla.satterfield@example.net,470-803-0244\n115,Good Credit Rating,92189 Gulgowski Ranch Apt. 683,Apt. 828,Tyreekhaven,Tennessee,vida86@example.com,997.698.4779x882\n116,Good Credit Rating,72144 Katlynn Flat Suite 512,Suite 959,Hansenbury,Tennessee,vbogisich@example.org,548.373.3603x59134\n117,Good Credit Rating,1566 Ramona Overpass Apt. 464,Suite 151,North Alisaville,Florida,ubeier@example.org,044-468-4549\n118,Defaults on payments,425 Roman Tunnel,Apt. 495,Funkstad,Colorado,lavonne.frami@example.com,+38(3)9011433816\n119,Good Credit Rating,05355 Marcelle Radial,Suite 054,Port Joshuah,Pennsylvania,paige.hyatt@example.com,1-369-302-7623x576\n120,Defaults on payments,518 Mann Park,Suite 035,West Annamariestad,Iowa,rzulauf@example.org,578.019.7943x328\n\nQuestion: What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows with email \"vbogisich@example.org\"\nfiltered_df = df[df['email_address'] == 'vbogisich@example.org']\n\n# Get the first 2 lines of the filtered dataframe\naddress_lines = filtered_df.iloc[0:2, 2:4]\n\n# Print the address lines\nprint(address_lines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: Find the number of complaints with Product Failure type for each complaint status.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe by complaint type\nfiltered_df = df[df['complaint_type_code'] == 'Product Failure']\n\n# Group by complaint status and count the number of complaints\nresult = filtered_df.groupby('complaint_status_code').size()\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncomplaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id\n1,117,120,OK,Closed,Product Failure,2002-07-18 10:59:35,1976-04-19 11:03:06,114\n2,118,113,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,120\n3,119,114,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,115\n4,120,114,OK,Closed,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n5,117,118,OK,Open,Product Failure,2007-10-14 21:50:43,2000-08-17 17:02:48,116\n6,118,114,OK,Open,Product Unusable,1987-07-11 14:40:30,1975-10-11 05:54:30,114\n7,117,117,OK,New,Product Unusable,2002-07-18 10:59:35,1976-04-19 11:03:06,118\n8,117,114,OK,New,Product Unusable,1973-02-10 22:55:56,2013-09-14 02:59:10,117\n9,117,116,OK,New,Product Unusable,2006-10-29 07:08:46,1995-09-11 14:48:46,120\n10,118,115,OK,New,Product Unusable,1977-08-06 00:31:19,1970-10-14 00:57:25,114\n\nQuestion: Of complaints with the type code \"Product Failure\", how many had each different status code?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe by complaint type\nfiltered_df = df[df['complaint_type_code'] == 'Product Failure']\n\n# Group by complaint status and count the number of complaints\nresult = filtered_df.groupby('complaint_status_code').size()\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: How many submissions are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of submissions\nnum_submissions = df.shape[0]\n\n# print the number of submissions\nprint(num_submissions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Count the number of submissions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# read the csv file\ndf = pd.read_csv('data.csv')\n\n# count the number of submissions\nnum_submissions = df.shape[0]\n\n# print the number of submissions\nprint(num_submissions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: List the authors of submissions in ascending order of scores.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['Scores', 'Author'])\nauthors = df['Author'].tolist()\nprint(authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Find the author for each submission and list them in ascending order of submission score.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['Scores', 'Author'])\nauthors = df['Author'].tolist()\nprint(authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: What are the authors of submissions and their colleges?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Author' and 'College' columns\nauthors_and_colleges = df[['Author', 'College']]\n\n# Print the selected dataframe\nprint(authors_and_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: For each submission, show the author and their affiliated college.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Author' and 'College' columns\nauthors_and_colleges = df[['Author', 'College']]\n\n# Print the selected dataframe\nprint(authors_and_colleges)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Show the names of authors from college \"Florida\" or \"Temple\"", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'College' column is either 'Florida' or 'Temple'\nfiltered_df = df[df['College'].isin(['Florida', 'Temple'])]\n\n# Get the authors from the filtered dataframe\nauthors = filtered_df['Author'].tolist()\n\n# Print the authors\nprint(authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Which authors with submissions are from college \"Florida\" or \"Temple\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'College' column is either 'Florida' or 'Temple'\nfiltered_df = df[df['College'].isin(['Florida', 'Temple'])]\n\n# Get the authors from the filtered dataframe\nauthors = filtered_df['Author'].tolist()\n\n# Print the authors\nprint(authors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: What is the average score of submissions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Compute the average score of submissions\naverage_score = df['Scores'].mean()\n\n# Print the average score\nprint(average_score)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Compute the average score of submissions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Compute the average score of submissions\naverage_score = df['Scores'].mean()\n\n# Print the average score\nprint(average_score)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: What is the author of the submission with the highest score?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by scores in descending order\ndf = df.sort_values('Scores', ascending=False)\n\n# Select the first entry (the one with the highest score)\nhighest_score_author = df.iloc[0]['Author']\n\n# Print the author with the highest score\nprint(highest_score_author)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Find the author who achieved the highest score in a submission.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by scores in descending order\ndf = df.sort_values('Scores', ascending=False)\n\n# Select the first entry (the one with the highest score)\nhighest_score_author = df.iloc[0]['Author']\n\n# Print the author with the highest score\nprint(highest_score_author)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: Show different colleges along with the number of authors of submission from each college.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by college and count the number of authors\nauthor_count = df['College'].value_counts()\n\n# Print the result\nprint(author_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSubmission_ID,Scores,Author,College\n1,72.0,Steve Niehaus,Notre Dame\n2,79.0,Sammy Green,Florida\n3,78.0,Sherman Smith,Miami (OH)\n4,79.0,Steve Raible,Georgia Tech\n5,82.0,Jeff Lloyd,West Texas State\n6,89.0,Rick Engles,Tulsa\n7,92.0,Don Bitterlich,Temple\n8,93.0,Steve Myer,New Mexico\n9,82.0,Randy Johnson,Georgia\n10,83.0,Andy Bolton,Fisk\n\nQuestion: For each college, return the college name and the count of authors with submissions from that college.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Group by college and count the number of authors\nauthor_count = df['College'].value_counts()\n\n# Print the result\nprint(author_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_ID,Date,Venue,Name\n1,August 18, 2007,London UK,ABC 2007\n2,August 21, 2007,London UK,Conference 2007\n3,August 25, 2007,New Jersey USA,Workshop 2007\n4,October 8, 2007,New York USA,2007 qualification\n5,January 14, 2008,New York USA,2008 qualification\n6,July 5, 2011,Istanbul Turkey,Anual Workshop 2011\n\nQuestion: Show the date and venue of each workshop in ascending alphabetical order of the venue.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('Venue')\n\nanswer = df[['Date', 'Venue']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nWorkshop_ID,Date,Venue,Name\n1,August 18, 2007,London UK,ABC 2007\n2,August 21, 2007,London UK,Conference 2007\n3,August 25, 2007,New Jersey USA,Workshop 2007\n4,October 8, 2007,New York USA,2007 qualification\n5,January 14, 2008,New York USA,2008 qualification\n6,July 5, 2011,Istanbul Turkey,Anual Workshop 2011\n\nQuestion: Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df.sort_values('Venue')\n\nanswer = df[['Date', 'Venue']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvestor_id,Investor_details\n1,z\n2,z\n3,d\n4,d\n5,b\n6,k\n7,l\n8,t\n9,y\n10,r\n\nQuestion: Find the number of investors in total.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntotal_investors = len(df)\n\nprint(total_investors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvestor_id,Investor_details\n1,z\n2,z\n3,d\n4,d\n5,b\n6,k\n7,l\n8,t\n9,y\n10,r\n\nQuestion: Show all investor details.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the 'Investor_details' column\ninvestor_details = df['Investor_details']\n\n# Print the investor details\nprint(investor_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlot_id,investor_id,lot_details\n1,13,r\n2,16,z\n3,10,s\n4,19,s\n5,6,q\n6,20,d\n7,7,m\n8,7,h\n9,20,z\n10,9,x\n\nQuestion: Show all distinct lot details.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_lot_details = df['lot_details'].unique()\n\nprint(unique_lot_details)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the maximum amount of transaction.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_amount = df['amount_of_transaction'].max()\nprint(max_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: What is the total share of transactions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_share = df['share_count'].sum()\n\nprint(total_share)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show all transaction ids with transaction code 'PUR'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe where transaction_type_code is 'PUR'\npur_df = df[df['transaction_type_code'] == 'PUR']\n\n# Save the answer of the question in a variable\ntransaction_ids = pur_df['transaction_id']\n\n# Print the variable\nprint(transaction_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show all dates of transactions whose type code is \"SALE\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where transaction_type_code is 'SALE'\nsale_df = df[df['transaction_type_code'] == 'SALE']\n\n# Save the dates in a variable\ndates_of_sale = sale_df['date_of_transaction']\n\n# Print the variable\nprint(dates_of_sale)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the average amount of transactions with type code \"SALE\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows with transaction_type_code \"SALE\"\ndf_sale = df[df['transaction_type_code'] == 'SALE']\n\n# Calculate the average amount of transactions\naverage_amount = df_sale['amount_of_transaction'].mean()\n\n# Print the average amount\nprint(average_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_type_code,transaction_type_description\nSALE,Sale\nPUR,Purchase\n\nQuestion: Show the description of transaction type with code \"PUR\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where 'transaction_type_code' is 'PUR'\npur_df = df[df['transaction_type_code'] == 'PUR']\n\n# Get the transaction_type_description of the first row in the filtered DataFrame\ntransaction_description = pur_df['transaction_type_description'].iloc[0]\n\n# Print the transaction description\nprint(transaction_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to only include transactions of type \"PUR\" and share count bigger than 50\npur_df = df[(df['transaction_type_code'] == 'PUR') & (df['share_count'] > 50)]\n\n# Find the minimum amount of transactions\nmin_amount = pur_df['amount_of_transaction'].min()\n\n# Print the result\nprint(min_amount)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: How many distinct transaction types are used in the transactions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Identify distinct transaction types\ntransaction_types = df['transaction_type_code'].unique()\n\n# Count the number of distinct transaction types\nnum_transaction_types = len(transaction_types)\n\nprint(num_transaction_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlot_id,investor_id,lot_details\n1,13,r\n2,16,z\n3,10,s\n4,19,s\n5,6,q\n6,20,d\n7,7,m\n8,7,h\n9,20,z\n10,9,x\n\nQuestion: Return the lot details and investor ids.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'lot_details' and 'investor_id' columns\nselected_data = df[['lot_details', 'investor_id']]\n\n# Print the selected data\nprint(selected_data)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the average share count of transactions each each investor, ordered by average share count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['date_of_transaction'] = pd.to_datetime(df['date_of_transaction'])\ndf['share_count'] = df['share_count'].fillna(0)\n\navg_share_count = df.groupby('investor_id')['share_count'].mean().sort_values()\n\nprint(avg_share_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the average amount of transactions for different investors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_transactions = df.groupby('investor_id')['amount_of_transaction'].mean()\n\nprint(average_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include transactions with type \"SALE\"\nsale_transactions = df[df['transaction_type_code'] == 'SALE']\n\n# Count the number of transactions per investor for the remaining DataFrame\ninvestor_sale_counts = sale_transactions['investor_id'].value_counts()\n\n# Filter the Series to only include investors with more than 0 \"SALE\" transactions\ninvestor_sale_counts = investor_sale_counts[investor_sale_counts > 0]\n\n# Print the result\nprint(investor_sale_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the number of transactions for different investors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'investor_id' and count the number of transactions for each investor\ninvestor_transactions = df.groupby('investor_id')['transaction_id'].count()\n\nprint(investor_transactions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the transaction type code that occurs the fewest times.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the transaction type code that occurs the fewest times\nleast_common_transaction_type = df['transaction_type_code'].value_counts().idxmin()\n\n# Print the result\nprint(least_common_transaction_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ntransaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details\n1,6,SALE,1988-09-16 19:02:51,302507.6996,8718572,\n2,18,PUR,1982-06-06 17:19:00,27.257,9,\n3,2,SALE,1979-04-27 06:03:59,48777.969,8580,\n4,14,PUR,2001-11-28 15:06:25,4.5263,8040,\n5,8,PUR,1977-08-17 13:13:30,0,930,\n6,19,PUR,1985-10-08 13:13:39,207484122.2796,2751,\n7,7,PUR,1990-12-02 09:03:38,822.803,1522,\n8,17,SALE,2004-01-18 20:37:50,78035671.4424,96178,\n9,20,PUR,1977-08-13 02:18:47,82057.207,,\n10,2,SALE,1981-01-28 08:07:03,29.3534,1654756,\n\nQuestion: Show the transaction type code that occurs the most frequently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_frequent_transaction_type = df['transaction_type_code'].mode()[0]\n\nprint(most_frequent_transaction_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhotel_id,star_rating_code,pets_allowed_yn,price_range,other_hotel_details\n123,5,1,2914989.571,\n144,4,,,\n172,5,,17012.682586009,\n222,5,1,,\n239,3,1,,\n264,1,1,48525.4530675,\n314,5,1,766712918.96763,\n331,1,1,,\n350,1,,,\n373,5,1,250548014.90329,\n\nQuestion: How many available hotels are there in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the total number of available hotels\ntotal_hotels = df['hotel_id'].nunique()\n\n# Save the answer in a variable and print the variable\nprint(total_hotels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhotel_id,star_rating_code,pets_allowed_yn,price_range,other_hotel_details\n123,5,1,2914989.571,\n144,4,,,\n172,5,,17012.682586009,\n222,5,1,,\n239,3,1,,\n264,1,1,48525.4530675,\n314,5,1,766712918.96763,\n331,1,1,,\n350,1,,,\n373,5,1,250548014.90329,\n\nQuestion: Find the total number of available hotels.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the total number of available hotels\ntotal_hotels = df['hotel_id'].nunique()\n\n# Save the answer in a variable and print the variable\nprint(total_hotels)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: Show all distinct location names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_locations = df['Location_Name'].unique()\n\nprint(distinct_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: What are the distinct location names?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_locations = df['Location_Name'].unique()\n\nprint(distinct_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_ID,Tourist_Details\n164,Toney\n189,Graciela\n204,Vincent\n211,Vivian\n241,Nettie\n295,Laurence\n359,Newell\n377,Marisol\n399,Jarrell\n439,Edna\n\nQuestion: Show details of all visitors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nall_visitors = df['Tourist_Details']\n\nprint(all_visitors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_ID,Tourist_Details\n164,Toney\n189,Graciela\n204,Vincent\n211,Vivian\n241,Nettie\n295,Laurence\n359,Newell\n377,Marisol\n399,Jarrell\n439,Edna\n\nQuestion: What is the detail of each visitor?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nall_visitors = df['Tourist_Details']\n\nprint(all_visitors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: What is the address of the location \"UK Gallery\"?", "response": "import pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to find the row where Location_Name is 'UK Gallery'\nuk_gallery = df[df['Location_Name'] == 'UK Gallery']\n\n# Get the Address of 'UK Gallery'\nuk_gallery_address = uk_gallery['Address'].values[0]\n\n# Print the address\nprint(uk_gallery_address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: Find the address of the location named \"UK Gallery\".", "response": "import pandas as pd\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to find the row where Location_Name is 'UK Gallery'\nuk_gallery = df[df['Location_Name'] == 'UK Gallery']\n\n# Get the Address of 'UK Gallery'\nuk_gallery_address = uk_gallery['Address'].values[0]\n\n# Print the address\nprint(uk_gallery_address)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: Which location names contain the word \"film\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfilm_locations = df[df['Location_Name'].str.contains(\"film\", case=False)]['Location_Name']\n\nprint(film_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nLocation_ID,Location_Name,Address,Other_Details\n333,Astro Orbiter,660 Shea Crescent,\n368,African Animals,254 Ottilie Junction,\n417,American Adventure,53815 Sawayn Tunnel Apt. 297,\n579,The Barnstormer,3374 Sarina Manor,\n603,African Adventure,88271 Barrows Union Suite 203,\n650,UK Gallery,4411 Sabrina Radial Suite 582,\n655,The Boneyard,0692 Georgiana Pass,\n661,Shark World,2485 Mueller Squares Suite 537,\n740,Space Spin,5536 Betsy Street Apt. 646,\n759,Butterflies,959 Feest Glen Suite 523,\n\nQuestion: Find all the locations whose names contain the word \"film\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfilm_locations = df[df['Location_Name'].str.contains(\"film\", case=False)]['Location_Name']\n\nprint(film_locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPhoto_ID,Tourist_Attraction_ID,Name,Description,Filename,Other_Details\n211,8449,game1,,702,\n280,7067,game2,,762,\n303,5076,game3,,392,\n327,9919,fun1,,820,\n332,5076,fun2,,060,\n428,6523,fun3,,148,\n435,8429,fun4,,453,\n437,2701,fun5,,128,\n525,5265,park1,,538,\n534,6852,park2,,325,\n\nQuestion: How many distinct names are associated with all the photos?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_names = df['Name'].nunique()\n\nprint(distinct_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nPhoto_ID,Tourist_Attraction_ID,Name,Description,Filename,Other_Details\n211,8449,game1,,702,\n280,7067,game2,,762,\n303,5076,game3,,392,\n327,9919,fun1,,820,\n332,5076,fun2,,060,\n428,6523,fun3,,148,\n435,8429,fun4,,453,\n437,2701,fun5,,128,\n525,5265,park1,,538,\n534,6852,park2,,325,\n\nQuestion: Count the number of distinct names associated with the photos.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_names = df['Name'].nunique()\n\nprint(distinct_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVisit_ID,Tourist_Attraction_ID,Tourist_ID,Visit_Date,Visit_Details\n183,6653,377,2004-08-21 03:06:14,\n268,5076,204,2013-08-06 05:35:51,\n273,9360,211,2013-10-27 09:56:08,\n302,6476,377,1990-08-15 14:24:10,\n356,6476,439,1980-11-26 02:08:00,\n381,6523,211,2017-03-19 08:48:19,\n416,6476,841,2008-11-09 01:28:01,\n479,6852,439,1989-08-24 20:26:37,\n563,6852,610,1993-02-01 15:27:20,\n612,9919,204,2007-09-17 10:12:45,\n\nQuestion: What are the distinct visit dates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_visit_dates = df['Visit_Date'].unique()\n\nprint(distinct_visit_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVisit_ID,Tourist_Attraction_ID,Tourist_ID,Visit_Date,Visit_Details\n183,6653,377,2004-08-21 03:06:14,\n268,5076,204,2013-08-06 05:35:51,\n273,9360,211,2013-10-27 09:56:08,\n302,6476,377,1990-08-15 14:24:10,\n356,6476,439,1980-11-26 02:08:00,\n381,6523,211,2017-03-19 08:48:19,\n416,6476,841,2008-11-09 01:28:01,\n479,6852,439,1989-08-24 20:26:37,\n563,6852,610,1993-02-01 15:27:20,\n612,9919,204,2007-09-17 10:12:45,\n\nQuestion: Find all the distinct visit dates.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_visit_dates = df['Visit_Date'].unique()\n\nprint(distinct_visit_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: What are the names of the tourist attractions that can be accessed by bus?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows where 'How_to_Get_There' is 'bus'\nbus_attractions = df[df['How_to_Get_There'] == 'bus']\n\n# Get the names of the attractions\nattraction_names = bus_attractions['Name'].tolist()\n\n# Print the list of attraction names\nprint(attraction_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: Which tourist attractions can we get to by bus? Tell me the names of the attractions.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include rows where 'How_to_Get_There' is 'bus'\nbus_attractions = df[df['How_to_Get_There'] == 'bus']\n\n# Get the names of the attractions\nattraction_names = bus_attractions['Name'].tolist()\n\n# Print the list of attraction names\nprint(attraction_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhotel_id,star_rating_code,pets_allowed_yn,price_range,other_hotel_details\n123,5,1,2914989.571,\n144,4,,,\n172,5,,17012.682586009,\n222,5,1,,\n239,3,1,,\n264,1,1,48525.4530675,\n314,5,1,766712918.96763,\n331,1,1,,\n350,1,,,\n373,5,1,250548014.90329,\n\nQuestion: Show the id and star rating of each hotel, ordered by its price from low to high.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Fill NaN values in 'price_range' column with a large value (for sorting purpose)\ndf['price_range'].fillna(value=df['price_range'].max()+1, inplace=True)\n\n# Sort the DataFrame by 'price_range' in ascending order\ndf_sorted = df.sort_values('price_range')\n\n# Select the 'hotel_id' and 'star_rating_code' columns from the sorted DataFrame\nresult = df_sorted[['hotel_id', 'star_rating_code']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nhotel_id,star_rating_code,pets_allowed_yn,price_range,other_hotel_details\n123,5,1,2914989.571,\n144,4,,,\n172,5,,17012.682586009,\n222,5,1,,\n239,3,1,,\n264,1,1,48525.4530675,\n314,5,1,766712918.96763,\n331,1,1,,\n350,1,,,\n373,5,1,250548014.90329,\n\nQuestion: Find the id and star rating of each hotel and sort them in increasing order of price.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Fill NaN values in 'price_range' column with a large value (for sorting purpose)\ndf['price_range'].fillna(value=df['price_range'].max()+1, inplace=True)\n\n# Sort the DataFrame by 'price_range' in ascending order\ndf_sorted = df.sort_values('price_range')\n\n# Select the 'hotel_id' and 'star_rating_code' columns from the sorted DataFrame\nresult = df_sorted[['hotel_id', 'star_rating_code']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: Show the transportation method most people choose to get to tourist attractions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common transportation method\nmost_common_transportation = df['How_to_Get_There'].mode()[0]\n\nprint(most_common_transportation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: Which transportation method is used the most often to get to tourist attractions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most common transportation method\nmost_common_transportation = df['How_to_Get_There'].mode()[0]\n\nprint(most_common_transportation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nways_to_get_to = df['How_to_Get_There'].value_counts()\n\nprint(ways_to_get_to)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details\n2113,2,579,bus,art museum,,,\n2701,6,417,walk,UK gallery,,,\n5076,2,868,shuttle,flying elephant,,,\n5265,5,603,bus,film festival,,,\n6476,3,417,shuttle,US museum,,,\n6523,9,858,walk,fun games,,,\n6653,9,655,walk,history gallery,,,\n6852,5,858,walk,exploration trial,,,\n7067,5,417,bus,haunted mansion,,,\n8429,9,867,walk,presidents hall,,,\n\nQuestion: List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nways_to_get_to = df['How_to_Get_There'].value_counts()\n\nprint(ways_to_get_to)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: How many video games exist?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of games\nnum_games = df.shape[0]\n\n# Print the number of games\nprint(num_games)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: How many video games do you have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of games\nnum_games = df.shape[0]\n\n# Print the number of games\nprint(num_games)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: How many video game types exist?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Counting unique game types\ncount_of_game_types = df['GType'].nunique()\n\n# Printing the count\nprint(count_of_game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What is the count of different game types?", "response": "# Importing pandas library\nimport pandas as pd\n\n# Reading CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Counting unique game types\ncount_of_game_types = df['GType'].nunique()\n\n# Printing the count\nprint(count_of_game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Show all video game types.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_game_types = df['GType'].unique()\n\nprint(unique_game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What are the different types of video games?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_game_types = df['GType'].unique()\n\nprint(unique_game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Show all video games and their types in the order of their names.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data based on game name in alphabetical order\nsorted_df = df.sort_values(by='GName')\n\n# Get the names of all the video games and their types\nanswer = sorted_df[['GName', 'GType']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What are the names of all the video games and their types in alphabetical order?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the data based on game name in alphabetical order\nsorted_df = df.sort_values(by='GName')\n\n# Get the names of all the video games and their types\nanswer = sorted_df[['GName', 'GType']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Show all video games with type Collectible card game.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the game type is 'Collectible card game'\ncollectible_games = df[df['GType'] == 'Collectible card game']\n\n# Get the names of the games\ngame_names = collectible_games['GName'].tolist()\n\n# Print the names of the games\nprint(game_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What are the names of all video games that are collectible cards?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where the game type is 'Collectible card game'\ncollectible_games = df[df['GType'] == 'Collectible card game']\n\n# Get the names of the games\ngame_names = collectible_games['GName'].tolist()\n\n# Print the names of the games\nprint(game_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What is the type of video game Call of Destiny.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where GName is 'Call of Destiny'\nfiltered_df = df[df['GName'] == 'Call of Destiny']\n\n# Extract the GType for the filtered DataFrame\ngame_type = filtered_df['GType'].values[0]\n\nprint(game_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What type of game is Call of Destiny?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where GName is 'Call of Destiny'\nfiltered_df = df[df['GName'] == 'Call of Destiny']\n\n# Extract the GType for the filtered DataFrame\ngame_type = filtered_df['GType'].values[0]\n\nprint(game_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: How many video games have type Massively multiplayer online game?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df[df['GType'] == 'Massively multiplayer online game']['GType'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Count the number of video games with Massively multiplayer online game type .", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount = df[df['GType'] == 'Massively multiplayer online game']['GType'].count()\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Show all video game types and the number of video games in each type.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of games in each type\ngame_types = df['GType'].value_counts()\n\n# print the game types and their counts\nprint(game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What are the types of video games and how many are in each type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# count the number of games in each type\ngame_types = df['GType'].value_counts()\n\n# print the game types and their counts\nprint(game_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: Which game type has least number of games?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of games for each type\ngame_types_count = df['GType'].value_counts()\n\n# Find the type with the fewest games\nleast_common_type = game_types_count.idxmin()\n\nprint(least_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nGameID,GName,GType\n1,RNG Stone,Collectible card game\n2,The Vanishing of Eric Calder,Walking Simulator\n3,Grand Term Assignment,Role-playing game\n4,Europe is the Universe,Grand strategy\n5,Call of Destiny,Frist-person shooter\n6,Works of Widenius,Massively multiplayer online game\n\nQuestion: What is the type with the fewest games?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of games for each type\ngame_types_count = df['GType'].value_counts()\n\n# Find the type with the fewest games\nleast_common_type = game_types_count.idxmin()\n\nprint(least_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show ids for all students who live in CHI.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use a boolean mask to filter the dataframe for students living in CHI\nchi_students = df[df['city_code'] == 'CHI']\n\n# Get the StuIDs of the students living in CHI\nstudent_ids = chi_students['StuID'].values.tolist()\n\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the ids of all students who live in CHI?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use a boolean mask to filter the dataframe for students living in CHI\nchi_students = df[df['city_code'] == 'CHI']\n\n# Get the StuIDs of the students living in CHI\nstudent_ids = chi_students['StuID'].values.tolist()\n\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show ids for all students who have advisor 1121.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the data where advisor is 1121\ndf_filtered = df[df['Advisor'] == 1121]\n\n# Save the answer in a variable\nstudent_ids = df_filtered['StuID'].tolist()\n\n# Print the variable\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the ids of all students who have advisor number 1121?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Filter the data where advisor is 1121\ndf_filtered = df[df['Advisor'] == 1121]\n\n# Save the answer in a variable\nstudent_ids = df_filtered['StuID'].tolist()\n\n# Print the variable\nprint(student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show first name for all students with major 600.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Major' column is 600\nfiltered_df = df[df['Major'] == 600]\n\n# Extract the 'Fname' column from the filtered DataFrame\nfirst_names = filtered_df['Fname']\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the first names for all students who are from the major numbered 600?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the 'Major' column is 600\nfiltered_df = df[df['Major'] == 600]\n\n# Extract the 'Fname' column from the filtered DataFrame\nfirst_names = filtered_df['Fname']\n\n# Print the first names\nprint(first_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: Show the average, minimum, and maximum age for different majors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the data by 'Major' and then calculate the average, minimum, and maximum age\ndf_grouped = df.groupby('Major').agg({'Age': ['mean', 'min', 'max']})\n\n# Reset the index to make 'Major' a column instead of an index\ndf_grouped.reset_index(inplace=True)\n\n# Rename the columns to a more readable format\ndf_grouped.columns = ['Major', 'Average Age', 'Minimum Age', 'Maximum Age']\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,LName,Fname,Age,Sex,Major,Advisor,city_code\n1001,Smith,Linda,18,F,600,1121,BAL\n1002,Kim,Tracy,19,F,600,7712,HKG\n1003,Jones,Shiela,21,F,600,7792,WAS\n1004,Kumar,Dinesh,20,M,600,8423,CHI\n1005,Gompers,Paul,26,M,600,1121,YYZ\n1006,Schultz,Andy,18,M,600,1148,BAL\n1007,Apap,Lisa,18,F,600,8918,PIT\n1008,Nelson,Jandy,20,F,600,9172,BAL\n1009,Tai,Eric,19,M,600,2192,YYZ\n1010,Lee,Derek,17,M,600,2192,HOU\n\nQuestion: What are the average, minimum, and max ages for each of the different majors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group the data by 'Major' and then calculate the average, minimum, and maximum age\ndf_grouped = df.groupby('Major').agg({'Age': ['mean', 'min', 'max']})\n\n# Reset the index to make 'Major' a column instead of an index\ndf_grouped.reset_index(inplace=True)\n\n# Rename the columns to a more readable format\ndf_grouped.columns = ['Major', 'Average Age', 'Minimum Age', 'Maximum Age']\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many sports do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique sports\nunique_sports = df['SportName'].unique()\n\n# Get the number of unique sports\nnum_unique_sports = len(unique_sports)\n\n# Print the result\nprint(num_unique_sports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many different types of sports do we offer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get unique sports\nunique_sports = df['SportName'].unique()\n\n# Get the number of unique sports\nnum_unique_sports = len(unique_sports)\n\n# Print the result\nprint(num_unique_sports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many students play sports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the unique students\nstudents = df['StuID'].nunique()\n\n# Print the result\nprint(students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many different students are involved in sports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the unique students\nstudents = df['StuID'].nunique()\n\n# Print the result\nprint(students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: List ids for all student who are on scholarship.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where student is on scholarship\ndf_scholarship = df[df['OnScholarship'] == 'Y']\n\n# Get the ids of sporty students who are on scholarship\nsporty_student_ids = df_scholarship['StuID']\n\nprint(sporty_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What are the ids for all sporty students who are on scholarship?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where student is on scholarship\ndf_scholarship = df[df['OnScholarship'] == 'Y']\n\n# Get the ids of sporty students who are on scholarship\nsporty_student_ids = df_scholarship['StuID']\n\nprint(sporty_student_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many games are played for all students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_games_played = df['GamesPlayed'].sum()\n\nprint(total_games_played)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What is the total number of games played?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_games_played = df['GamesPlayed'].sum()\n\nprint(total_games_played)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many games are played for all football games by students on scholarship?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_football = df[df['SportName'] == 'Football']\ndf_scholarship = df_football[df_football['OnScholarship'] == 'Y']\ntotal_football_games = df_scholarship['GamesPlayed'].sum()\n\nprint(total_football_games)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What is the total number of all football games played by scholarship students?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_football = df[df['SportName'] == 'Football']\ndf_scholarship = df_football[df_football['OnScholarship'] == 'Y']\ntotal_football_games = df_scholarship['GamesPlayed'].sum()\n\nprint(total_football_games)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: Show all sport name and the number of students.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts method to count the number of occurrences of each sport\nsport_count = df['SportName'].value_counts()\n\n# Print the result\nprint(sport_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: How many students play each sport?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use the value_counts method to count the number of occurrences of each sport\nsport_count = df['SportName'].value_counts()\n\n# Print the result\nprint(sport_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: Show all student IDs with the number of sports and total number of games played", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['SportCount'] = df.groupby('StuID')['SportName'].transform('nunique')\ndf['GamesCount'] = df.groupby('StuID')['GamesPlayed'].transform('sum')\n\nanswer = df[['StuID', 'SportCount', 'GamesCount']].drop_duplicates().reset_index(drop=True)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What are the ids of all students along with how many sports and games did they play?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['SportCount'] = df.groupby('StuID')['SportName'].transform('nunique')\ndf['GamesCount'] = df.groupby('StuID')['GamesPlayed'].transform('sum')\n\nanswer = df[['StuID', 'SportCount', 'GamesCount']].drop_duplicates().reset_index(drop=True)\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: Show all student IDs with more than total 10 hours per week on all sports played.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by student ID and calculate total hours per week\nhours_per_student = df.groupby('StuID')['HoursPerWeek'].sum()\n\n# Filter for students who play more than 10 hours per week\nstudents_more_than_10_hours = hours_per_student[hours_per_student > 10]\n\n# Get the student IDs\nstudent_ids = students_more_than_10_hours.index.tolist()\n\n# Save the answer in a variable and print it\nanswer = student_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What are the student IDs for everybody who worked for more than 10 hours per week on all sports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by student ID and calculate total hours per week\nhours_per_student = df.groupby('StuID')['HoursPerWeek'].sum()\n\n# Filter for students who play more than 10 hours per week\nstudents_more_than_10_hours = hours_per_student[hours_per_student > 10]\n\n# Get the student IDs\nstudent_ids = students_more_than_10_hours.index.tolist()\n\n# Save the answer in a variable and print it\nanswer = student_ids\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: Which sport has most number of students on scholarship?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where OnScholarship is 'Y'\nscholarship_df = df[df['OnScholarship'] == 'Y']\n\n# Use the groupby function to group the DataFrame by SportName, and count the number of students in each group\nsport_counts = scholarship_df.groupby('SportName').size()\n\n# Find the SportName with the maximum number of students\nmax_sport = sport_counts.idxmax()\n\nprint(\"The sport with the most scholarship students is:\", max_sport)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship\n1001,Athletics,2,5,N\n1002,Football,7,20,Y\n1003,Football,45,18,Y\n1005,Lacrosse,35,16,N\n1015,Lacrosse,25,41,Y\n1018,Lacrosse,39,25,N\n1019,Swimming,8,16,Y\n1019,Tennis,19,62,N\n1022,Baseball,29,31,N\n1023,Basketball,14,8,Y\n\nQuestion: What is the sport with the most scholarship students?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where OnScholarship is 'Y'\nscholarship_df = df[df['OnScholarship'] == 'Y']\n\n# Use the groupby function to group the DataFrame by SportName, and count the number of students in each group\nsport_counts = scholarship_df.groupby('SportName').size()\n\n# Find the SportName with the maximum number of students\nmax_sport = sport_counts.idxmax()\n\nprint(\"The sport with the most scholarship students is:\", max_sport)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: How many students play video games?", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the unique students\nunique_students = df['StuID'].nunique()\n\n# Print the answer\nprint(unique_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: How many different students play games?", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Find the unique students\nunique_students = df['StuID'].nunique()\n\n# Print the answer\nprint(unique_students)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: Show all game ids and the number of hours played.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the sum of hours played for each game\nhours_played_by_game = df.groupby('GameID')['Hours_Played'].sum()\n\n# Print the result\nprint(hours_played_by_game)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: What are ids and total number of hours played for each game?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the sum of hours played for each game\nhours_played_by_game = df.groupby('GameID')['Hours_Played'].sum()\n\n# Print the result\nprint(hours_played_by_game)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: Show all student ids and the number of hours played.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by student ID and sum the hours played\nhours_played_by_student = df.groupby('StuID')['Hours_Played'].sum()\n\nprint(hours_played_by_student)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStuID,GameID,Hours_Played\n1001,1,35\n1001,2,15\n1001,5,1\n1007,4,1000\n1008,5,50\n1008,3,50\n1010,6,1337\n1032,1,47\n1032,2,10\n1032,3,100\n\nQuestion: What are the ids of all students and number of hours played?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by student ID and sum the hours played\nhours_played_by_student = df.groupby('StuID')['Hours_Played'].sum()\n\nprint(hours_played_by_student)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the name of all customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncustomer_names = df['customer_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What are the names of all the customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncustomer_names = df['customer_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: How many customers are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Assuming the csv file is located at 'data.csv'\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = len(df)\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Return the total number of distinct customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Assuming the csv file is located at 'data.csv'\ndf = pd.read_csv('data.csv')\n\n# Count the number of customers\ncustomer_count = len(df)\n\n# Print the customer count\nprint(customer_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,product_id,order_quantity\n14,2,5\n5,2,9\n14,3,2\n2,2,9\n13,1,9\n10,1,5\n10,3,6\n7,2,9\n14,3,8\n10,2,5\n\nQuestion: What is the average amount of items ordered in each order?", "response": "import pandas as pd\n\n# Load the data from CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average order quantity per order\naverage_order_quantity = df['order_quantity'].mean()\n\n# Print the average order quantity\nprint(average_order_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,product_id,order_quantity\n14,2,5\n5,2,9\n14,3,2\n2,2,9\n13,1,9\n10,1,5\n10,3,6\n7,2,9\n14,3,8\n10,2,5\n\nQuestion: Find the average order quantity per order.", "response": "import pandas as pd\n\n# Load the data from CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Calculate the average order quantity per order\naverage_order_quantity = df['order_quantity'].mean()\n\n# Print the average order quantity\nprint(average_order_quantity)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What are the names of customers who use payment method \"Cash\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_cash = df[df['payment_method'] == 'Cash']\ncustomer_names = df_cash['customer_name'].values\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Which customers use \"Cash\" for payment method? Return the customer names.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_cash = df[df['payment_method'] == 'Cash']\ncustomer_names = df_cash['customer_name'].values\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the \"date became customers\" of the customers whose ID is between 10 and 20.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[(df['customer_id'] >= 10) & (df['customer_id'] <= 20)]\ndates = df['date_became_customer'].tolist()\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What are the dates when customers with ids between 10 and 20 became customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[(df['customer_id'] >= 10) & (df['customer_id'] <= 20)]\ndates = df['date_became_customer'].tolist()\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Which payment method is used by most customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_method = df['payment_method'].mode()[0]\n\nprint(most_common_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the payment method that is used most frequently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_method = df['payment_method'].mode()[0]\n\nprint(most_common_method)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What are the names of customers using the most popular payment method?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most popular payment method\npopular_method = df['payment_method'].value_counts().idxmax()\n\n# Find the names of customers using the most popular payment method\ncustomer_names = df[df['payment_method'] == popular_method]['customer_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the name of the customers who use the most frequently used payment method.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most popular payment method\npopular_method = df['payment_method'].value_counts().idxmax()\n\n# Find the names of customers using the most popular payment method\ncustomer_names = df[df['payment_method'] == popular_method]['customer_name'].tolist()\n\nprint(customer_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What are all the payment methods?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\npayment_methods = df['payment_method'].unique()\n\nprint(payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Return all the distinct payment methods used by customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\npayment_methods = df['payment_method'].unique()\n\nprint(payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_details\n1,Americano\n2,Dove Chocolate\n3,Latte\n\nQuestion: What are the details of all products?", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the details of all products\nproduct_details = df['product_details'].tolist()\n\n# Save the answer in a variable\nanswer = product_details\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_details\n1,Americano\n2,Dove Chocolate\n3,Latte\n\nQuestion: Return the the details of all products.", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the details of all products\nproduct_details = df['product_details'].tolist()\n\n# Save the answer in a variable\nanswer = product_details\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the name of all customers whose name contains \"Alex\".", "response": "import pandas as pd\n\n# read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# get the names of customers whose name contains \"Alex\"\nnames_with_alex = df[df['customer_name'].str.contains(\"Alex\")]['customer_name']\n\n# save the answer in a variable\nanswer = names_with_alex.to_list()\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Which customer's name contains \"Alex\"? Find the full name.", "response": "import pandas as pd\n\n# read the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# get the names of customers whose name contains \"Alex\"\nnames_with_alex = df[df['customer_name'].str.contains(\"Alex\")]['customer_name']\n\n# save the answer in a variable\nanswer = names_with_alex.to_list()\n\n# print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_details\n1,Americano\n2,Dove Chocolate\n3,Latte\n\nQuestion: Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\"", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Create a mask for the rows where the product details contain either 'Latte' or 'Americano'\nmask = df['product_details'].str.contains('Latte|Americano')\n\n# Filter the DataFrame using the mask\nfiltered_df = df[mask]\n\n# Save the answer in a variable\nanswer = filtered_df['product_details']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_details\n1,Americano\n2,Dove Chocolate\n3,Latte\n\nQuestion: Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Create a mask for the rows where the product details contain either 'Latte' or 'Americano'\nmask = df['product_details'].str.contains('Latte|Americano')\n\n# Filter the DataFrame using the mask\nfiltered_df = df[mask]\n\n# Save the answer in a variable\nanswer = filtered_df['product_details']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: Retrieve the list of all cities.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncities = df['city'].tolist()\n\nprint(cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: List all the distinct cities", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncities = df['city'].tolist()\n\nprint(cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: Find the city with post code 255.", "response": "import pandas as pd\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the zip_postcode is 255\nfiltered_df = df[df['zip_postcode'] == 255]\n\n# Extract the city from the filtered dataframe\ncity = filtered_df['city'].values[0]\n\n# Print the city\nprint(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: Which city is post code 255 located in?", "response": "import pandas as pd\n\n# Load the data from CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for rows where the zip_postcode is 255\nfiltered_df = df[df['zip_postcode'] == 255]\n\n# Extract the city from the filtered dataframe\ncity = filtered_df['city'].values[0]\n\n# Print the city\nprint(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: Find the state and country of all cities with post code starting with 4.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to include only rows where 'zip_postcode' starts with '4'\ndf_filtered = df[df['zip_postcode'].astype(str).str.startswith('4')]\n\n# Extract 'state_province_county' and 'country' columns for these rows\nanswer = df_filtered[['state_province_county', 'country']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: What are the state and country of all the cities that have post codes starting with 4.\\", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to include only rows where 'zip_postcode' starts with '4'\ndf_filtered = df[df['zip_postcode'].astype(str).str.startswith('4')]\n\n# Extract 'state_province_county' and 'country' columns for these rows\nanswer = df_filtered[['state_province_county', 'country']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: List the countries having more than 4 addresses listed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount_countries = df.groupby('country').filter(lambda x: len(x) > 4)['country'].unique()\n\nprint(count_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: For which countries are there more than four distinct addresses listed?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ncount_countries = df.groupby('country').filter(lambda x: len(x) > 4)['country'].unique()\n\nprint(count_countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,channel_code,active_from_date,active_to_date,contact_number\n9,Email,2017-12-07 18:18:15,2018-03-23 13:37:14,940.035.6435x0225\n2,Email,2017-04-07 04:51:41,2018-03-23 01:30:52,189.449.8326x7607\n9,Email,2017-05-25 16:08:45,2018-03-13 07:32:25,958-653-2640\n2,Email,2018-01-05 21:42:56,2018-03-15 14:58:13,1-968-863-4947x96956\n4,Cell,2017-08-07 08:07:10,2018-03-02 17:44:49,(165)527-5756x2419\n2,Cell,2017-09-21 12:41:56,2018-03-08 19:28:16,1-077-864-0102\n3,Handheld,2017-05-11 12:32:16,2018-03-20 14:35:34,06068550461\n14,Handheld,2017-05-23 15:20:20,2018-03-15 02:34:01,542.983.0224\n13,Handheld,2017-08-26 15:16:44,2018-03-16 14:00:15,(379)834-0867x267\n6,Handheld,2017-07-01 17:59:48,2018-02-25 22:20:55,(620)266-6990x8590\n\nQuestion: List all the contact channel codes that were used less than 5 times.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the frequency of each channel code\nchannel_code_counts = df['channel_code'].value_counts()\n\n# Filter out the channel codes used less than 5 times\nless_used_channel_codes = channel_code_counts[channel_code_counts < 5]\n\n# Save the answer in a variable\nanswer = less_used_channel_codes.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,channel_code,active_from_date,active_to_date,contact_number\n9,Email,2017-12-07 18:18:15,2018-03-23 13:37:14,940.035.6435x0225\n2,Email,2017-04-07 04:51:41,2018-03-23 01:30:52,189.449.8326x7607\n9,Email,2017-05-25 16:08:45,2018-03-13 07:32:25,958-653-2640\n2,Email,2018-01-05 21:42:56,2018-03-15 14:58:13,1-968-863-4947x96956\n4,Cell,2017-08-07 08:07:10,2018-03-02 17:44:49,(165)527-5756x2419\n2,Cell,2017-09-21 12:41:56,2018-03-08 19:28:16,1-077-864-0102\n3,Handheld,2017-05-11 12:32:16,2018-03-20 14:35:34,06068550461\n14,Handheld,2017-05-23 15:20:20,2018-03-15 02:34:01,542.983.0224\n13,Handheld,2017-08-26 15:16:44,2018-03-16 14:00:15,(379)834-0867x267\n6,Handheld,2017-07-01 17:59:48,2018-02-25 22:20:55,(620)266-6990x8590\n\nQuestion: Which contact channel codes were used less than 5 times?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the frequency of each channel code\nchannel_code_counts = df['channel_code'].value_counts()\n\n# Filter out the channel codes used less than 5 times\nless_used_channel_codes = channel_code_counts[channel_code_counts < 5]\n\n# Save the answer in a variable\nanswer = less_used_channel_codes.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,order_date,order_details\n1,15,Cancelled,2018-03-21 11:20:46,\n2,3,Cancelled,2018-03-05 06:35:33,\n3,5,Delivered,2018-03-04 07:16:22,Second time\n4,12,Cancelled,2018-02-28 15:46:06,\n5,12,Delivered,2018-03-08 15:30:24,\n6,5,Cancelled,2018-03-10 06:12:51,\n7,10,Cancelled,2018-03-23 04:39:50,Second time\n8,3,Cancelled,2018-03-17 02:51:37,\n9,8,Cancelled,2018-03-23 06:25:41,\n10,12,Cancelled,2018-03-17 07:13:53,\n\nQuestion: How many customers have at least one order with status \"Cancelled\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for orders with 'Cancelled' status\ncancelled_orders = df[df['order_status'] == 'Cancelled']\n\n# Get the unique customer_ids from the cancelled orders\nunique_customers = cancelled_orders['customer_id'].unique()\n\n# Get the count of unique customers\nnum_customers = len(unique_customers)\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,order_date,order_details\n1,15,Cancelled,2018-03-21 11:20:46,\n2,3,Cancelled,2018-03-05 06:35:33,\n3,5,Delivered,2018-03-04 07:16:22,Second time\n4,12,Cancelled,2018-02-28 15:46:06,\n5,12,Delivered,2018-03-08 15:30:24,\n6,5,Cancelled,2018-03-10 06:12:51,\n7,10,Cancelled,2018-03-23 04:39:50,Second time\n8,3,Cancelled,2018-03-17 02:51:37,\n9,8,Cancelled,2018-03-23 06:25:41,\n10,12,Cancelled,2018-03-17 07:13:53,\n\nQuestion: Return the number of customers who have at least one order with \"Cancelled\" status.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for orders with 'Cancelled' status\ncancelled_orders = df[df['order_status'] == 'Cancelled']\n\n# Get the unique customer_ids from the cancelled orders\nunique_customers = cancelled_orders['customer_id'].unique()\n\n# Get the count of unique customers\nnum_customers = len(unique_customers)\n\n# Print the answer\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,order_date,order_details\n1,15,Cancelled,2018-03-21 11:20:46,\n2,3,Cancelled,2018-03-05 06:35:33,\n3,5,Delivered,2018-03-04 07:16:22,Second time\n4,12,Cancelled,2018-02-28 15:46:06,\n5,12,Delivered,2018-03-08 15:30:24,\n6,5,Cancelled,2018-03-10 06:12:51,\n7,10,Cancelled,2018-03-23 04:39:50,Second time\n8,3,Cancelled,2018-03-17 02:51:37,\n9,8,Cancelled,2018-03-23 06:25:41,\n10,12,Cancelled,2018-03-17 07:13:53,\n\nQuestion: How many orders have detail \"Second time\"?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where 'order_details' is 'Second time'\nsecond_time_orders = df[df['order_details'] == 'Second time']\n\n# Get the count of these orders\nnum_second_time_orders = len(second_time_orders)\n\n# Print the answer\nprint(num_second_time_orders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,order_date,order_details\n1,15,Cancelled,2018-03-21 11:20:46,\n2,3,Cancelled,2018-03-05 06:35:33,\n3,5,Delivered,2018-03-04 07:16:22,Second time\n4,12,Cancelled,2018-02-28 15:46:06,\n5,12,Delivered,2018-03-08 15:30:24,\n6,5,Cancelled,2018-03-10 06:12:51,\n7,10,Cancelled,2018-03-23 04:39:50,Second time\n8,3,Cancelled,2018-03-17 02:51:37,\n9,8,Cancelled,2018-03-23 06:25:41,\n10,12,Cancelled,2018-03-17 07:13:53,\n\nQuestion: Tell me the number of orders with \"Second time\" as order detail.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter the rows where 'order_details' is 'Second time'\nsecond_time_orders = df[df['order_details'] == 'Second time']\n\n# Get the count of these orders\nnum_second_time_orders = len(second_time_orders)\n\n# Print the answer\nprint(num_second_time_orders)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\ndf_filtered = df[(df['city'] == 'Gleasonmouth') & (df['state_province_county'] == 'Arizona') |\n                 (df['city'] == 'East Julianaside') & (df['state_province_county'] == 'Texas')]\n\n# Save the answer in a variable\nanswer = df_filtered['address_content'].values.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,address_content,city,zip_postcode,state_province_county,country,other_address_details\n1,9443 Boyle Route Suite 857,Lucasville,416,Colorado,USA,\n2,1969 Jabari Port Suite 393,New Sabryna,721,SouthCarolina,USA,\n3,295 Hackett Curve,Reingertown,255,NewJersey,USA,\n4,92865 Margaretta Streets Suite 467,Gleasonmouth,940,Arizona,USA,\n5,08996 Brisa Lane Apt. 583,Stantonville,354,Mississippi,USA,\n6,826 Murray Locks Apt. 654,South Meghanview,918,Colorado,USA,\n7,59540 Grover Wells Apt. 814,Lake Walterton,767,Virginia,USA,\n8,78614 Maybell Alley Suite 057,South Bellaland,921,Florida,USA,\n9,9168 King Rest,Felicityfort,482,Texas,USA,\n10,120 Noble Radial,East Julianaside,821,Texas,USA,\n\nQuestion: What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the conditions\ndf_filtered = df[(df['city'] == 'Gleasonmouth') & (df['state_province_county'] == 'Arizona') |\n                 (df['city'] == 'East Julianaside') & (df['state_province_county'] == 'Texas')]\n\n# Save the answer in a variable\nanswer = df_filtered['address_content'].values.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: Find the name of customers who did not pay with Cash.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where payment_method is not Cash\nfiltered_df = df[df['payment_method'] != 'Cash']\n\n# Save the answer in a variable\nanswer = filtered_df['customer_name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,payment_method,customer_name,date_became_customer,other_customer_details\n1,Cash,Dr. Julia Wuckert MD,2018-03-01 23:20:10,\n2,Cheque,Tillman Ernser,2018-02-28 11:37:44,\n3,Credit Card,Rodrick Heaney,2018-03-09 17:41:58,\n4,Credit Card,Prof. Alexzander Hamill,2018-02-24 00:20:18,VIP\n5,Cheque,Prof. Reyes Berge II,2018-03-07 18:05:11,\n6,Cash,Maudie Kertzmann,2018-02-26 11:57:47,\n7,Credit Card,Mozell Morissette,2018-02-25 13:15:04,VIP\n8,Credit Card,Eunice Morar,2018-03-21 01:01:04,\n9,Cheque,Devin Mills,2018-03-05 16:52:51,\n10,Cash,Kitty Padberg III,2018-03-22 18:09:09,\n\nQuestion: What is the name of customers who do not use Cash as payment method.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where payment_method is not Cash\nfiltered_df = df[df['payment_method'] != 'Cash']\n\n# Save the answer in a variable\nanswer = filtered_df['customer_name']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: How many artists are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_artists = df.shape[0]\n\nprint(num_artists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Count the number of artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nnum_artists = df.shape[0]\n\nprint(num_artists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: List the age of all music artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all ages\nages = df['Age']\n\n# Print the ages\nprint(ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What are the ages of all music artists?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get all ages\nages = df['Age']\n\n# Print the ages\nprint(ages)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What is the average age of all artists?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_age = df['Age'].mean()\n\nprint(average_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Return the average age across all artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_age = df['Age'].mean()\n\nprint(average_age)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What are the famous titles of the artist \"Triumfall\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfamous_titles = df[df['Artist'] == 'Triumfall']['Famous_Title']\n\nprint(famous_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Return the famous titles of the artist called \"Triumfall\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nfamous_titles = df[df['Artist'] == 'Triumfall']['Famous_Title']\n\nprint(famous_titles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What are the distinct Famous release dates?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extracting the unique release dates\nunique_dates = df['Famous_Release_date'].unique()\n\nprint(unique_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Give the distinct famous release dates for all artists.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extracting the unique release dates\nunique_dates = df['Famous_Release_date'].unique()\n\nprint(unique_dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Return the dates of ceremony and the results of all music festivals", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the columns of interest\nselected_df = df[['Date_of_ceremony', 'Result']]\n\n# Print the selected DataFrame\nprint(selected_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: What are the dates of ceremony and results for each music festival?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Select the columns of interest\nselected_df = df[['Date_of_ceremony', 'Result']]\n\n# Print the selected DataFrame\nprint(selected_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: What are the category of music festivals with result \"Awarded\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Result' is 'Awarded'\nawarded_df = df[df['Result'] == 'Awarded']\n\n# Select the 'Category' column from the filtered dataframe\nawarded_categories = awarded_df['Category']\n\n# Print the categories\nprint(awarded_categories)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Return the categories of music festivals that have the result \"Awarded\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Result' is 'Awarded'\nawarded_df = df[df['Result'] == 'Awarded']\n\n# Select the 'Category' column from the filtered dataframe\nawarded_categories = awarded_df['Category']\n\n# Print the categories\nprint(awarded_categories)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: What are the songs in volumes with more than 1 week on top?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where 'Weeks_on_Top' is greater than 1\nfiltered_df = df[df['Weeks_on_Top'] > 1]\n\n# Get the 'Song' column from the filtered DataFrame\nsongs = filtered_df['Song']\n\n# Print the songs\nprint(songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: Give the songs included in volumes that have more than 1 week on top.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where 'Weeks_on_Top' is greater than 1\nfiltered_df = df[df['Weeks_on_Top'] > 1]\n\n# Get the 'Song' column from the filtered DataFrame\nsongs = filtered_df['Song']\n\n# Print the songs\nprint(songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: Please list all songs in volumes in ascending alphabetical order.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the songs in ascending alphabetical order\nsorted_songs = df['Song'].sort_values()\n\n# Print the sorted songs\nprint(sorted_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: What are the the songs in volumes, listed in ascending order?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the songs in ascending alphabetical order\nsorted_songs = df['Song'].sort_values()\n\n# Print the sorted songs\nprint(sorted_songs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Please list the age and famous title of artists in descending order of age.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['Age'], ascending=False)\n\nanswer = df[['Age', 'Famous_Title']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What are the famous titles and ages of each artist, listed in descending order by age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['Age'], ascending=False)\n\nanswer = df[['Age', 'Famous_Title']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: What is the famous release date of the artist with the oldest age?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the oldest artist\noldest_artist_index = df['Age'].idxmax()\n\n# Get the famous release date of the oldest artist\noldest_artist_famous_release_date = df.loc[oldest_artist_index, 'Famous_Release_date']\n\nprint(oldest_artist_famous_release_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nArtist_ID,Artist,Age,Famous_Title,Famous_Release_date\n1,Gorgoroth,34,Bergen 1996,November 2007\n2,Ophiolatry,35,Transmutation,January 21, 2008\n3,Ophiolatry,22,Antievangelistical Process (re-release),2009\n4,Black Flame,18,Imperivm,June 23, 2008\n5,Tangorodrim,35,Unholy Metal Way (re-release),2009\n6,Tangorodrim,27,Those Who Unleashed (re-release),2009\n7,Triumfall,49,Antithesis of All Flesh,June 15, 2009\n\nQuestion: Return the famous release date for the oldest artist.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the index of the oldest artist\noldest_artist_index = df['Age'].idxmax()\n\n# Get the famous release date of the oldest artist\noldest_artist_famous_release_date = df.loc[oldest_artist_index, 'Famous_Release_date']\n\nprint(oldest_artist_famous_release_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Please show the categories of the music festivals and the count.", "response": "import pandas as pd\n\n# load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of each category\ncategory_counts = df['Category'].value_counts()\n\n# print the category counts\nprint(category_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Return the number of music festivals of each category.", "response": "import pandas as pd\n\n# load the data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# count the number of each category\ncategory_counts = df['Category'].value_counts()\n\n# print the category counts\nprint(category_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: What is the most common result of the music festival?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most frequent result\nmost_frequent_result = df['Result'].mode()[0]\n\nprint(most_frequent_result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Return the result that is most frequent at music festivals.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the most frequent result\nmost_frequent_result = df['Result'].mode()[0]\n\nprint(most_frequent_result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Please show the categories of the music festivals with count more than 1.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Category' and filter the ones having count > 1\nfiltered_categories = df.groupby('Category').filter(lambda x: len(x) > 1)\n\n# Get the unique categories\nanswer = filtered_categories['Category'].unique().tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: What are the categories of music festivals for which there have been more than 1 music festival?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Category' and filter the ones having count > 1\nfiltered_categories = df.groupby('Category').filter(lambda x: len(x) > 1)\n\n# Get the unique categories\nanswer = filtered_categories['Category'].unique().tolist()\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: What is the song in the volume with the maximum weeks on top?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weeks_on_Top' in descending order\ndf = df.sort_values('Weeks_on_Top', ascending=False)\n\n# Get the song with the highest number of weeks on top\ntop_song = df['Song'].iloc[0]\n\n# Print the result\nprint(top_song)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: Return the song in the volume that has spent the most weeks on top?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weeks_on_Top' in descending order\ndf = df.sort_values('Weeks_on_Top', ascending=False)\n\n# Get the song with the highest number of weeks on top\ntop_song = df['Song'].iloc[0]\n\n# Print the result\nprint(top_song)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['Category'] == 'Best Song') & (df['Result'] == 'Awarded')]\ndates = df_filtered['Date_of_ceremony']\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_filtered = df[(df['Category'] == 'Best Song') & (df['Result'] == 'Awarded')]\ndates = df_filtered['Date_of_ceremony']\nprint(dates)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: What is the issue date of the volume with the minimum weeks on top?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weeks_on_Top' in ascending order\ndf_sorted = df.sort_values('Weeks_on_Top')\n\n# Get the issue date of the volume with the fewest weeks on top\nissue_date = df_sorted.iloc[0]['Issue_Date']\n\nprint(issue_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nVolume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID\n1,45:14 §,27 December 1986 - 10 January,3.0, The Way,1\n2,45:15,17 January,1.0, Everybody Have Fun Tonight ,2\n3,45:16,24 January,1.0, Walk Like an Egyptian ,1\n4,45:21-22,28 February - 7 March,2.0, Touch Me (I Want Your Body) ,2\n5,46:5,9 May,1.0, With or Without You ,1\n6,46:6-8,16 May - 30 May,3.0, (I Just) Died in Your Arms ,1\n7,46:9,6 June,1.0, La Isla Bonita ,4\n8,46:10,13 June,1.0,Looking for a New Love,5\n9,46:14-15,11 July - 18 July,2.0, Always ,6\n10,46:16,25 July,1.0,Head to Toe ,5\n\nQuestion: Return the issue date of the volume that has spent the fewest weeks on top.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Weeks_on_Top' in ascending order\ndf_sorted = df.sort_values('Weeks_on_Top')\n\n# Get the issue date of the volume with the fewest weeks on top\nissue_date = df_sorted.iloc[0]['Issue_Date']\n\nprint(issue_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Result' and count unique 'Music_Festival'\nresult_counts = df.groupby('Result')['Music_Festival'].nunique()\n\n# Sort the counts in descending order\nresult_counts = result_counts.sort_values(ascending=False)\n\nprint(result_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nID,Music_Festival,Date_of_ceremony,Category,Volume,Result\n1,34th England Academy Prize,18 February 2011,Best Song,1,Nominated\n2,34th Japan Academy Prize,18 February 2011,Best Lyrics,2,Nominated\n3,34th European Academy Prize,18 February 2011,Best Song,3,Awarded\n4,36th Japan Academy Prize,18 February 2011,Best Song,4,Awarded\n5,34th USA Academy Prize,18 February 2011,Best Song,5,Nominated\n6,40th Japan Academy Prize,18 February 2011,Best Song,6,Nominated\n7,37th Sweden Academy Prize,18 February 2011,Best Lyrics,7,Nominated\n8,37th Canadian Academy Prize,18 February 2011,Best Lyrics,8,Nominated\n9,35th China Academy Prize,18 February 2011,Best Sound Song,9,Awarded\n\nQuestion: How many music festivals have had each kind of result, ordered descending by count?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Result' and count unique 'Music_Festival'\nresult_counts = df.groupby('Result')['Music_Festival'].nunique()\n\n# Sort the counts in descending order\nresult_counts = result_counts.sort_values(ascending=False)\n\nprint(result_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: How many roller coasters are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of roller coasters\nnum_coasters = df.shape[0]\n\nprint(num_coasters)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: List the names of roller coasters by ascending order of length.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert length column to numeric (if not already done)\ndf['Length'] = pd.to_numeric(df['Length'], errors='coerce')\n\n# Sort dataframe by 'Length' in ascending order\ndf_sorted = df.sort_values('Length')\n\n# Get the names of roller coasters\nroller_coaster_names = df_sorted['Name'].tolist()\n\n# Print the list of roller coaster names\nprint(roller_coaster_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: What are the lengths and heights of roller coasters?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Length' and 'Height' columns\nlengths_and_heights = df[['Length', 'Height']]\n\nprint(lengths_and_heights)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCountry_ID,Name,Population,Area,Languages\n1,Austria,8206524,83871,German\n2,Finland,5261008,338145,Finnish Swedish\n3,Sweden,9047752,449964,Swedish\n\nQuestion: List the names of countries whose language is not \"German\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only rows where the language is not \"German\"\ndf_filtered = df[df['Languages'] != 'German']\n\n# Save the names of the countries in a variable\ncountries = df_filtered['Name'].tolist()\n\n# Print the variable\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: Show the statuses of roller coasters longer than 3300 or higher than 100.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where length is greater than 3300 or height is more than 100\nfiltered_df = df[(df['Length'] > 3300) | (df['Height'] > 100)]\n\n# Save the answer in a variable\nanswer = filtered_df['Status']\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: What are the speeds of the longest roller coaster?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the maximum length and corresponding speed\nmax_length = df['Length'].max()\ncorresponding_speed = df.loc[df['Length'] == max_length, 'Speed'].values[0]\n\n# Print the answer\nprint(corresponding_speed)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: What is the average speed of roller coasters?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Calculate the average speed\naverage_speed = df['Speed'].mean()\n\n# Print the average speed\nprint(average_speed)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: Show the different statuses and the numbers of roller coasters for each status.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\nstatus_counts = df['Status'].value_counts()\n\nprint(status_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: Please show the most common status of roller coasters.", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the most common status\nmost_common_status = df['Status'].mode()[0]\n\n# Print the most common status\nprint(most_common_status)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: List the status shared by more than two roller coaster.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nstatus_counts = df['Status'].value_counts()\n\nstatus_shared_by_more_than_two = status_counts[status_counts > 2].index.tolist()\n\nprint(status_shared_by_more_than_two)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nRoller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status\n1,Boardwalk Bullet,Kemah Boardwalk,1,3236.0,96.0,51,August 31, 2007,Operating\n2,Dauling Dragon,Happy Valley,1,3914.0,105.0,55,2012,Operating\n3,Hades 360,Mt. Olympus,1,4726.0,136.0,70,May 14, 2005,Operating\n4,Ravine Flyer II,Waldameer,2,2900.0,120.0,57,May 17, 2008,Operating\n5,Twister,Gröna Lund,2,1574.0,50.0,37.9,2011,Operating\n6,The Voyage,Holiday World,3,6442.0,163.0,67,May 6, 2006,Operating\n\nQuestion: Show the park of the roller coaster with the highest speed.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the row with the highest speed\nmax_speed_row = df[df.Speed == df.Speed.max()]\n\n# Save the answer in a variable\nanswer = max_speed_row['Park'].values[0]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: How many different captain ranks are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the 'Rank' column\nrank_column = df['Rank']\n\n# Find the unique values in the 'Rank' column\nunique_ranks = rank_column.unique()\n\n# Count the unique ranks\nnum_unique_ranks = len(unique_ranks)\n\n# Print the number of unique ranks\nprint(num_unique_ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Count the number of different ranks of captain.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Select the 'Rank' column\nrank_column = df['Rank']\n\n# Find the unique values in the 'Rank' column\nunique_ranks = rank_column.unique()\n\n# Count the unique ranks\nnum_unique_ranks = len(unique_ranks)\n\n# Print the number of unique ranks\nprint(num_unique_ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: How many captains are in each rank?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncaptains_count = df['Rank'].value_counts()\n\nprint(captains_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Count the number of captains that have each rank.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ncaptains_count = df['Rank'].value_counts()\n\nprint(captains_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: How many captains with younger than 50 are in each rank?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only rows where age is less than 50\nfiltered_df = df[df['age'] < 50]\n\n# Group dataframe by 'Rank' and count the number of captains in each group\ncaptain_counts = filtered_df.groupby('Rank')['Captain_ID'].count()\n\n# Print the result\nprint(captain_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Count the number of captains younger than 50 of each rank.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only rows where age is less than 50\nfiltered_df = df[df['age'] < 50]\n\n# Group dataframe by 'Rank' and count the number of captains in each group\ncaptain_counts = filtered_df.groupby('Rank')['Captain_ID'].count()\n\n# Print the result\nprint(captain_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Find the name, class and rank of all captains.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Captain_ID' is not null\ncaptains_df = df[df['Captain_ID'].notnull()]\n\n# Select the 'Name', 'Class', and 'Rank' columns for the captains\ncaptains_df = captains_df[['Name', 'Class', 'Rank']]\n\n# Save the answer in a variable and print it\nanswer = captains_df\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: What are the names, classes, and ranks of all captains?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where the 'Captain_ID' is not null\ncaptains_df = df[df['Captain_ID'].notnull()]\n\n# Select the 'Name', 'Class', and 'Rank' columns for the captains\ncaptains_df = captains_df[['Name', 'Class', 'Rank']]\n\n# Save the answer in a variable and print it\nanswer = captains_df\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Which rank is the most common among captains?", "response": "import pandas as pd\n\n# Read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Rank' and count the number of captains in each rank\nrank_counts = df[df['Name'].str.contains('Captain')]['Rank'].value_counts()\n\n# Find the rank with the fewest captains\nmin_rank = rank_counts.idxmin()\n\n# Print the result\nprint(min_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Return the rank for which there are the fewest captains.", "response": "import pandas as pd\n\n# Read the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Rank' and count the number of captains in each rank\nrank_counts = df[df['Name'].str.contains('Captain')]['Rank'].value_counts()\n\n# Find the rank with the fewest captains\nmin_rank = rank_counts.idxmin()\n\n# Print the result\nprint(min_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Which classes have more than two captains?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Class' and count the number of captains in each group\ncaptain_counts = df.groupby('Class')['Name'].apply(lambda x: x.str.contains('Captain').sum())\n\n# Get the classes that have more than two captains\nclasses_with_more_than_two_captains = captain_counts[captain_counts > 2].index.tolist()\n\n# Print the answer\nprint(classes_with_more_than_two_captains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Give the classes that have more than two captains.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Group by 'Class' and count the number of captains in each group\ncaptain_counts = df.groupby('Class')['Name'].apply(lambda x: x.str.contains('Captain').sum())\n\n# Get the classes that have more than two captains\nclasses_with_more_than_two_captains = captain_counts[captain_counts > 2].index.tolist()\n\n# Print the answer\nprint(classes_with_more_than_two_captains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Find the captain rank that has some captains in both Cutter and Armed schooner classes.", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include captains in the Cutter and Armed schooner classes\nfiltered_df = df[(df['Class'] == 'Cutter') | (df['Class'] == 'Armed schooner')]\n\n# Get the ranks of these captains\nranks = filtered_df['Rank'].unique()\n\n# Print the ranks\nprint(ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include captains in the Cutter and Armed schooner classes\nfiltered_df = df[(df['Class'] == 'Cutter') | (df['Class'] == 'Armed schooner')]\n\n# Get the ranks of these captains\nranks = filtered_df['Rank'].unique()\n\n# Print the ranks\nprint(ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: What is the name of the youngest captain?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only captains (assuming Captain in the Name column) and select the one with the minimum age\nyoungest_captain = df[df['Name'].str.contains('Captain')].sort_values(by='age').iloc[0]['Name']\n\nprint(youngest_captain)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCaptain_ID,Name,Ship_ID,age,Class,Rank\n1,Captain Sir Henry Langford,1,40,Third-rate ship of the line,Midshipman\n2,Captain Beves Conway,2,54,Third-rate ship of the line,Midshipman\n3,Lieutenant Hugh Bolitho,3,43,Cutter,Midshipman\n4,Lieutenant Montagu Verling,4,45,Armed schooner,Midshipman\n5,Captain Henry Dumaresq,5,38,Frigate,Lieutenant\n6,Captain Gilbert Pears,2,60,Third-rate ship of the line,Lieutenant\n7,Commander Richard Bolitho,3,38,Sloop-of-war,Commander, junior captain\n\nQuestion: Return the name of the youngest captain.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only captains (assuming Captain in the Name column) and select the one with the minimum age\nyoungest_captain = df[df['Name'].str.contains('Captain')].sort_values(by='age').iloc[0]['Name']\n\nprint(youngest_captain)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: how many ships are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of ships\nnum_ships = df.shape[0]\n\n# Print the number of ships\nprint(num_ships)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Count the number of ships.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of ships\nnum_ships = df.shape[0]\n\n# Print the number of ships\nprint(num_ships)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Find the name, type, and flag of the ship that is built in the most recent year.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum built year\nmax_built_year = df['Built_Year'].max()\n\n# Get the row with the maximum built year\nmax_built_year_row = df[df['Built_Year'] == max_built_year]\n\n# Extract the name, type, and flag from the row\nship_name = max_built_year_row['Name'].values[0]\nship_type = max_built_year_row['Type'].values[0]\nship_flag = max_built_year_row['Flag'].values[0]\n\n# Save the answer in a variable\nanswer = (ship_name, ship_type, ship_flag)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: What is the name, type, and flag of the ship that was built in the most recent year?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the maximum built year\nmax_built_year = df['Built_Year'].max()\n\n# Get the row with the maximum built year\nmax_built_year_row = df[df['Built_Year'] == max_built_year]\n\n# Extract the name, type, and flag from the row\nship_name = max_built_year_row['Name'].values[0]\nship_type = max_built_year_row['Type'].values[0]\nship_flag = max_built_year_row['Flag'].values[0]\n\n# Save the answer in a variable\nanswer = (ship_name, ship_type, ship_flag)\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Group by ships by flag, and return number of ships that have each flag.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Flag' and count the number of ships in each group\ngrouped = df.groupby('Flag').size()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: What are the different ship flags, and how many ships have each?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Flag' and count the number of ships in each group\ngrouped = df.groupby('Flag').size()\n\n# Print the result\nprint(grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Which flag is most widely used among all ships?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_flag = df['Flag'].mode()[0]\n\nprint(most_common_flag)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Return the flag that is most common among all ships.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_flag = df['Flag'].mode()[0]\n\nprint(most_common_flag)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: List all ship names in the order of built year and class.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by 'Built_Year' and 'Class', and then by 'Name'\ndf_sorted = df.sort_values(by=['Built_Year', 'Class', 'Name'])\n\n# Select the 'Name' column\nship_names = df_sorted['Name']\n\n# Save the answer in a variable\nanswer = ship_names.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: What are the names of ships, ordered by year they were built and their class?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Sort the data by 'Built_Year' and 'Class', and then by 'Name'\ndf_sorted = df.sort_values(by=['Built_Year', 'Class', 'Name'])\n\n# Select the 'Name' column\nship_names = df_sorted['Name']\n\n# Save the answer in a variable\nanswer = ship_names.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: Find the ship type that are used by both ships with Panama and Malta flags.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data for ships with Panama flags\npanama_ships = df[df['Flag'] == 'Panama']['Type'].unique()\n\n# Filter data for ships with Malta flags\nmalta_ships = df[df['Flag'] == 'Malta']['Type'].unique()\n\n# Find common types of ships\ncommon_ships = set(panama_ships) & set(malta_ships)\n\n# Save answer in a variable\nanswer = ', '.join(common_ships)\n\n# Print answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: What types of ships have both ships that have Panama Flags and Malta flags?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Filter data for ships with Panama flags\npanama_ships = df[df['Flag'] == 'Panama']['Type'].unique()\n\n# Filter data for ships with Malta flags\nmalta_ships = df[df['Flag'] == 'Malta']['Type'].unique()\n\n# Find common types of ships\ncommon_ships = set(panama_ships) & set(malta_ships)\n\n# Save answer in a variable\nanswer = ', '.join(common_ships)\n\n# Print answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: In which year were most of ships built?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of ships built each year\nyear_counts = df['Built_Year'].value_counts()\n\n# Get the year with the most ships built\nmost_built_year = year_counts.index[0]\n\n# Print the answer\nprint(most_built_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nShip_ID,Name,Type,Built_Year,Class,Flag\n1,HMS Manxman,Panamax,1997.0,KR,Panama\n2,HMS Gorgon,Panamax,1998.0,KR,Panama\n3,HM Cutter Avenger,Panamax,1997.0,KR,Panama\n4,HM Schooner Hotspur,Panamax,1998.0,KR,Panama\n5,HMS Destiny,Panamax,1998.0,KR,Panama\n6,HMS Trojan,Panamax,1997.0,KR,Panama\n7,HM Sloop Sparrow,Panamax,1997.0,KR,Panama\n8,HMS Phalarope,Panamax,1997.0,KR,Panama\n9,HMS Undine,Panamax,1998.0,GL,Malta\n\nQuestion: What is the year in which most ships were built?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of ships built each year\nyear_counts = df['Built_Year'].value_counts()\n\n# Get the year with the most ships built\nmost_built_year = year_counts.index[0]\n\n# Print the answer\nprint(most_built_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmatch_id = df[df['Competition'] == '1994 FIFA World Cup qualification']['Match_ID'].values\n\nprint(match_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: What is the match id of the competition called \"1994 FIFA World Cup qualification\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmatch_id = df[df['Competition'] == '1994 FIFA World Cup qualification']['Match_ID'].values\n\nprint(match_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: Which three cities have the largest regional population?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by 'Regional_Population' in descending order\nsorted_df = df.sort_values(by='Regional_Population', ascending=False)\n\n# Select the first three rows\ntop_three_cities = sorted_df.head(3)\n\n# Save the answer in a variable\nanswer = top_three_cities['City'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: What are the three largest cities in terms of regional population?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by 'Regional_Population' in descending order\nsorted_df = df.sort_values(by='Regional_Population', ascending=False)\n\n# Select the first three rows\ntop_three_cities = sorted_df.head(3)\n\n# Save the answer in a variable\nanswer = top_three_cities['City'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: Which city has the lowest GDP? Please list the city name and its GDP.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the smallest GDP\nsmallest_gdp = df[df['GDP'] == df['GDP'].min()]\n\n# Save the answer in a variable\nanswer = (smallest_gdp['City'].values[0], smallest_gdp['GDP'].values[0])\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: What is the city with the smallest GDP? Return the city and its GDP.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the row with the smallest GDP\nsmallest_gdp = df[df['GDP'] == df['GDP'].min()]\n\n# Save the answer in a variable\nanswer = (smallest_gdp['City'].values[0], smallest_gdp['GDP'].values[0])\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: Please give me a list of cities whose regional population is over 10000000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for cities with population greater than 10 million\nfiltered_df = df[df['Regional_Population'] > 10000000]\n\n# Create a list of the cities\ncity_list = filtered_df['City'].tolist()\n\n# Print the list\nprint(city_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: Which cities have regional population above 10000000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe for cities with population greater than 10 million\nfiltered_df = df[df['Regional_Population'] > 10000000]\n\n# Create a list of the cities\ncity_list = filtered_df['City'].tolist()\n\n# Print the list\nprint(city_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: Find the number of matches in different competitions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of matches in each competition\nmatches_per_competition = df['Competition'].value_counts()\n\nprint(matches_per_competition)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: For each competition, count the number of matches.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of matches in each competition\nmatches_per_competition = df['Competition'].value_counts()\n\nprint(matches_per_competition)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: List venues of all matches in the order of their dates starting from the most recent one.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Date' column to datetime format\ndf['Date'] = pd.to_datetime(df['Date'])\n\n# Sort the dataframe by date in descending order\ndf = df.sort_values(by='Date', ascending=False)\n\n# Get the 'Venue' column\nvenues = df['Venue']\n\nprint(venues)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nMatch_ID,Date,Venue,Score,Result,Competition\n1,18 February 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,2-0,Friendly match\n2,19 July 1992,Estadio Rigoberto López , Managua , Nicaragua,3-0,5-0,1994 FIFA World Cup qualification\n3,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,1-0,5-1,1994 FIFA World Cup qualification\n4,23 July 1992,Estadio Cuscatlán , San Salvador , El Salvador,3-0,5-1,1994 FIFA World Cup qualification\n5,4 April 1993,Estadio Cuscatlán , San Salvador , El Salvador,1–0,2–1,1994 FIFA World Cup qualification\n6,23 July 2000,Estadio Cuscatlán , San Salvador , El Salvador,2–1,7–1,2002 FIFA World Cup qualification\n\nQuestion: What are the venues of all the matches? Sort them in the descending order of match date.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Date' column to datetime format\ndf['Date'] = pd.to_datetime(df['Date'])\n\n# Sort the dataframe by date in descending order\ndf = df.sort_values(by='Date', ascending=False)\n\n# Get the 'Venue' column\nvenues = df['Venue']\n\nprint(venues)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: what is the GDP of the city with the largest population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by the 'Regional_Population' column in descending order\ndf_sorted = df.sort_values(by='Regional_Population', ascending=False)\n\n# Get the GDP of the city with the largest population\nlargest_population_gdp = df_sorted.iloc[0]['GDP']\n\nprint(largest_population_gdp)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCity_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP\n1,Shanghai,上海,Shànghǎi,23019148,1919.57\n2,Nanjing ( Jiangsu ),南京,Nánjīng,8004680,614.55\n3,Hangzhou ( Zhejiang ),杭州,Hángzhōu,8700400,701.18\n4,Suzhou ( Jiangsu ),苏州/ 蘇州,Sūzhōu,10465994,1071.7\n5,Ningbo ( Zhejiang ),宁波/ 寧波,Níngbō,7605689,601.05\n6,Wuxi ( Jiangsu ),无锡/ 無錫,Wúxī,6372624,688.02\n7,Nantong ( Jiangsu ),南通,Nántōng,7282835,408.02\n8,Shaoxing ( Zhejiang ),绍兴/ 紹興,Shàoxīng,4912200,329.12\n9,Changzhou ( Jiangsu ),常州,Chángzhōu,4591972,358.04\n10,Jinhua ( Zhejiang ),金华/ 金華,Jīnhuá,4614100,244.77\n\nQuestion: Find the GDP of the city with the largest regional population.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the DataFrame by the 'Regional_Population' column in descending order\ndf_sorted = df.sort_values(by='Regional_Population', ascending=False)\n\n# Get the GDP of the city with the largest population\nlargest_population_gdp = df_sorted.iloc[0]['GDP']\n\nprint(largest_population_gdp)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nindividual_id,individual_first_name,individual_middle_name,inidividual_phone,individual_email,individual_address,individual_last_name\n1,Oscar,Hosea,1-925-696-5232,amie.okuneva@example.org,6956 Lia Plaza,Maggio\n2,Geovanny,Antonia,075.012.6775x409,jamey.effertz@example.net,69578 Baylee Prairie,Kerluke\n3,Casper,Mitchell,1-818-062-2837,brandon.hermiston@example.com,4555 Hane Orchard,Kutch\n4,Guy,Erick,1-014-109-1968x40778,reinger.leola@example.net,919 Cummerata Burgs Apt. 063,Wunsch\n5,Matteo,Rene,634.660.8469,strosin.conor@example.org,13223 Torphy Point,Schuster\n6,Nella,Tommie,892.154.8492,austyn.effertz@example.org,640 Johns Branch,Kertzmann\n7,Jeffery,Alberto,317.382.4425x7924,august78@example.net,384 Carter Flat Suite 896,Jacobs\n8,Shany,Colleen,(030)939-8437x6141,mbahringer@example.com,407 Sofia Knoll Suite 591,D'Amore\n9,Allene,Erwin,1-797-739-0925,autumn.fisher@example.net,3889 Theodore Radial Suite 795,Rutherford\n10,Lafayette,Raoul,396.348.9925x9122,hickle.ewell@example.com,3203 Hermann Port Apt. 429,Rau\n\nQuestion: List every individual's first name, middle name and last name in alphabetical order by last name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df[['individual_first_name', 'individual_middle_name', 'individual_last_name']]\ndf = df.sort_values('individual_last_name')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nindividual_id,individual_first_name,individual_middle_name,inidividual_phone,individual_email,individual_address,individual_last_name\n1,Oscar,Hosea,1-925-696-5232,amie.okuneva@example.org,6956 Lia Plaza,Maggio\n2,Geovanny,Antonia,075.012.6775x409,jamey.effertz@example.net,69578 Baylee Prairie,Kerluke\n3,Casper,Mitchell,1-818-062-2837,brandon.hermiston@example.com,4555 Hane Orchard,Kutch\n4,Guy,Erick,1-014-109-1968x40778,reinger.leola@example.net,919 Cummerata Burgs Apt. 063,Wunsch\n5,Matteo,Rene,634.660.8469,strosin.conor@example.org,13223 Torphy Point,Schuster\n6,Nella,Tommie,892.154.8492,austyn.effertz@example.org,640 Johns Branch,Kertzmann\n7,Jeffery,Alberto,317.382.4425x7924,august78@example.net,384 Carter Flat Suite 896,Jacobs\n8,Shany,Colleen,(030)939-8437x6141,mbahringer@example.com,407 Sofia Knoll Suite 591,D'Amore\n9,Allene,Erwin,1-797-739-0925,autumn.fisher@example.net,3889 Theodore Radial Suite 795,Rutherford\n10,Lafayette,Raoul,396.348.9925x9122,hickle.ewell@example.com,3203 Hermann Port Apt. 429,Rau\n\nQuestion: What are the first, middle, and last names of all individuals, ordered by last name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndf = df[['individual_first_name', 'individual_middle_name', 'individual_last_name']]\ndf = df.sort_values('individual_last_name')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nform_id,form_type_code,service_id,form_number,form_name,form_description\n1,Basic,13,8069,SSN Application,Form for SSN Application\n2,Complex,9,2675,Marriage Certificate,Marriage Certificate\n3,Complex,2,9837,Divorce  Certificate,Divorce  Certificate\n4,Complex,14,9173,Moving Form,Form for moving house\n5,Basic,3,6673,Account Application,Form for Account Application\n6,Complex,7,9130,Property Change,Form for Property Change\n\nQuestion: List all the types of forms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nform_types = df['form_type_code'].unique()\n\nprint(form_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nform_id,form_type_code,service_id,form_number,form_name,form_description\n1,Basic,13,8069,SSN Application,Form for SSN Application\n2,Complex,9,2675,Marriage Certificate,Marriage Certificate\n3,Complex,2,9837,Divorce  Certificate,Divorce  Certificate\n4,Complex,14,9173,Moving Form,Form for moving house\n5,Basic,3,6673,Account Application,Form for Account Application\n6,Complex,7,9130,Property Change,Form for Property Change\n\nQuestion: What are the different types of forms?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nform_types = df['form_type_code'].unique()\n\nprint(form_types)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: Find the payment method and phone of the party with email \"enrico09@example.com\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the email\nfiltered_df = df[df['party_email'] == 'enrico09@example.com']\n\n# Get the payment method and phone\nanswer = filtered_df[['payment_method_code', 'party_phone']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: What is the payment method code and party phone of the party with the email 'enrico09@example.com'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the email\nfiltered_df = df[df['party_email'] == 'enrico09@example.com']\n\n# Get the payment method and phone\nanswer = filtered_df[['payment_method_code', 'party_phone']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: List all the name of organizations in order of the date formed.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_formed' column to datetime format\ndf['date_formed'] = pd.to_datetime(df['date_formed'])\n\n# Sort the DataFrame by the 'date_formed' column in ascending order\ndf = df.sort_values(by='date_formed')\n\n# Save the names of the organizations in the sorted DataFrame to a list\norganization_names = df['organization_name'].tolist()\n\n# Print the list of organization names\nprint(organization_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: What are the names of organizations, ordered by the date they were formed, ascending?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_formed' column to datetime format\ndf['date_formed'] = pd.to_datetime(df['date_formed'])\n\n# Sort the DataFrame by the 'date_formed' column in ascending order\ndf = df.sort_values(by='date_formed')\n\n# Save the names of the organizations in the sorted DataFrame to a list\norganization_names = df['organization_name'].tolist()\n\n# Print the list of organization names\nprint(organization_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: Find the name of the youngest organization.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_formed' column to datetime format\ndf['date_formed'] = pd.to_datetime(df['date_formed'])\n\n# Find the most recent date\nlatest_date = df['date_formed'].max()\n\n# Find the organization name corresponding to the most recent date\nlatest_org = df[df['date_formed'] == latest_date]['organization_name'].values[0]\n\nprint(latest_org)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: What is the name of the organization that was formed most recently?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the 'date_formed' column to datetime format\ndf['date_formed'] = pd.to_datetime(df['date_formed'])\n\n# Find the most recent date\nlatest_date = df['date_formed'].max()\n\n# Find the organization name corresponding to the most recent date\nlatest_org = df[df['date_formed'] == latest_date]['organization_name'].values[0]\n\nprint(latest_org)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nservice_id,service_type_code,service_name,service_descriptio\n1,Education,Education,Education\n2,Welfare,Health,Welfare\n3,Education,Education,Health\n4,Welfare,Education,Education\n5,Education,Education,Health\n6,Welfare,Welfare,Health\n7,Welfare,Welfare,Welfare\n8,Education,Education,Welfare\n9,Education,Health,Education\n10,Education,Health,Welfare\n\nQuestion: How many services are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_services = df.shape[0]\n\nprint(num_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nservice_id,service_type_code,service_name,service_descriptio\n1,Education,Education,Education\n2,Welfare,Health,Welfare\n3,Education,Education,Health\n4,Welfare,Education,Education\n5,Education,Education,Health\n6,Welfare,Welfare,Health\n7,Welfare,Welfare,Welfare\n8,Education,Education,Welfare\n9,Education,Health,Education\n10,Education,Health,Welfare\n\nQuestion: Count the number of services.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_services = df.shape[0]\n\nprint(num_services)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,town_city,zip_postcode,state_province_county,country\n1,25518 Ortiz Centers,West Stacy,193,NorthCarolina,USA\n2,033 Stracke Parkways,Lake Meaghan,227,Colorado,USA\n3,269 Flatley Port Suite 062,Breanneberg,527,NewHampshire,USA\n4,90928 Garret Mall,New Gabe,993,Missouri,USA\n5,0399 Colby Extensions,Carrollland,250,Kentucky,USA\n6,538 Schaefer Highway Apt. 472,East Lamonttown,202,Louisiana,USA\n7,34580 Mireille Crescent Suite 776,Cletusbury,215,Georgia,USA\n8,6862 Kaitlyn Knolls Suite 309,New Katlyn,021,Pennsylvania,USA\n9,90236 Kunze Pass,Dangelohaven,259,Louisiana,USA\n10,51124 Marquardt Forks,Robertsberg,023,NewYork,USA\n\nQuestion: How many cities are there in state \"Colorado\"?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where state_province_county is \"Colorado\"\ndf_colorado = df[df['state_province_county'] == 'Colorado']\n\n# Count the number of unique cities in the filtered dataframe\ncity_count = df_colorado['town_city'].nunique()\n\nprint(city_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,town_city,zip_postcode,state_province_county,country\n1,25518 Ortiz Centers,West Stacy,193,NorthCarolina,USA\n2,033 Stracke Parkways,Lake Meaghan,227,Colorado,USA\n3,269 Flatley Port Suite 062,Breanneberg,527,NewHampshire,USA\n4,90928 Garret Mall,New Gabe,993,Missouri,USA\n5,0399 Colby Extensions,Carrollland,250,Kentucky,USA\n6,538 Schaefer Highway Apt. 472,East Lamonttown,202,Louisiana,USA\n7,34580 Mireille Crescent Suite 776,Cletusbury,215,Georgia,USA\n8,6862 Kaitlyn Knolls Suite 309,New Katlyn,021,Pennsylvania,USA\n9,90236 Kunze Pass,Dangelohaven,259,Louisiana,USA\n10,51124 Marquardt Forks,Robertsberg,023,NewYork,USA\n\nQuestion: Count the number of cities in the state of Colorado.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where state_province_county is \"Colorado\"\ndf_colorado = df[df['state_province_county'] == 'Colorado']\n\n# Count the number of unique cities in the filtered dataframe\ncity_count = df_colorado['town_city'].nunique()\n\nprint(city_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: Find the payment method code used by more than 3 parties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'payment_method_code' and count the number of parties\ngrouped_df = df.groupby('payment_method_code').size().reset_index(name='counts')\n\n# Filter the payment methods used by more than 3 parties\nfiltered_df = grouped_df[grouped_df['counts'] > 3]\n\n# Save the answer in a variable\nanswer = filtered_df['payment_method_code'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: What are the payment method codes that have been used by more than 3 parties?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'payment_method_code' and count the number of parties\ngrouped_df = df.groupby('payment_method_code').size().reset_index(name='counts')\n\n# Filter the payment methods used by more than 3 parties\nfiltered_df = grouped_df[grouped_df['counts'] > 3]\n\n# Save the answer in a variable\nanswer = filtered_df['payment_method_code'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: Find the name of organizations whose names contain \"Party\".", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the organizations with \"Party\" in their name\nparty_organizations = df[df['organization_name'].str.contains(\"Party\")]\n\n# Save the answer in a variable\nanswer = party_organizations['organization_name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norganization_id,date_formed,organization_name,uk_vat_number\n1,2016-08-24 23:52:48,Labour Party,2157\n2,2016-10-01 12:42:01,Plaid Cymru,7459\n3,2016-10-09 07:22:53,Conservative,1211\n4,2017-04-06 23:59:16,Liberal Democrats,7237\n5,2016-07-28 01:45:10,Green Party,4271\n\nQuestion: What are the names of organizations that contain the word \"Party\"?", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to get only the organizations with \"Party\" in their name\nparty_organizations = df[df['organization_name'].str.contains(\"Party\")]\n\n# Save the answer in a variable\nanswer = party_organizations['organization_name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: How many distinct payment methods are used by parties?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_payment_methods = df['payment_method_code'].nunique()\n\nprint(distinct_payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nparty_id,payment_method_code,party_phone,party_email\n1,Cheque,05374656172,enrico09@example.com\n2,Credit Card,1-525-947-7867x51521,brakus.aliya@example.com\n3,Cheque,1-606-232-3728x3568,frida57@example.org\n4,Cash,019-302-5166,wuckert.misty@example.com\n5,Cheque,529-074-5348,alanna.boehm@example.net\n6,Credit Card,1-950-874-1693x65923,daniel.charity@example.net\n7,Direct Debit,112-477-4433x137,lucinda83@example.org\n8,Cash,(919)169-1514x55820,erick.mills@example.com\n9,Cash,04177934231,evie97@example.org\n10,Credit Card,(211)528-0733x8063,hilll.elyssa@example.net\n\nQuestion: Count the number of different payment method codes used by parties.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_payment_methods = df['payment_method_code'].nunique()\n\nprint(distinct_payment_methods)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,town_city,zip_postcode,state_province_county,country\n1,25518 Ortiz Centers,West Stacy,193,NorthCarolina,USA\n2,033 Stracke Parkways,Lake Meaghan,227,Colorado,USA\n3,269 Flatley Port Suite 062,Breanneberg,527,NewHampshire,USA\n4,90928 Garret Mall,New Gabe,993,Missouri,USA\n5,0399 Colby Extensions,Carrollland,250,Kentucky,USA\n6,538 Schaefer Highway Apt. 472,East Lamonttown,202,Louisiana,USA\n7,34580 Mireille Crescent Suite 776,Cletusbury,215,Georgia,USA\n8,6862 Kaitlyn Knolls Suite 309,New Katlyn,021,Pennsylvania,USA\n9,90236 Kunze Pass,Dangelohaven,259,Louisiana,USA\n10,51124 Marquardt Forks,Robertsberg,023,NewYork,USA\n\nQuestion: Which state can address \"6862 Kaitlyn Knolls\" possibly be in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows that contain \"6862 Kaitlyn Knolls\" in the 'line_1_number_building' column\nfiltered_df = df[df['line_1_number_building'].str.contains(\"6862 Kaitlyn Knolls\")]\n\n# Get the corresponding 'state_province_county'\nstate = filtered_df['state_province_county'].values[0]\n\nprint(state)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,town_city,zip_postcode,state_province_county,country\n1,25518 Ortiz Centers,West Stacy,193,NorthCarolina,USA\n2,033 Stracke Parkways,Lake Meaghan,227,Colorado,USA\n3,269 Flatley Port Suite 062,Breanneberg,527,NewHampshire,USA\n4,90928 Garret Mall,New Gabe,993,Missouri,USA\n5,0399 Colby Extensions,Carrollland,250,Kentucky,USA\n6,538 Schaefer Highway Apt. 472,East Lamonttown,202,Louisiana,USA\n7,34580 Mireille Crescent Suite 776,Cletusbury,215,Georgia,USA\n8,6862 Kaitlyn Knolls Suite 309,New Katlyn,021,Pennsylvania,USA\n9,90236 Kunze Pass,Dangelohaven,259,Louisiana,USA\n10,51124 Marquardt Forks,Robertsberg,023,NewYork,USA\n\nQuestion: Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows that contain \"6862 Kaitlyn Knolls\" in the 'line_1_number_building' column\nfiltered_df = df[df['line_1_number_building'].str.contains(\"6862 Kaitlyn Knolls\")]\n\n# Get the corresponding 'state_province_county'\nstate = filtered_df['state_province_county'].values[0]\n\nprint(state)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: How many drivers are there?", "response": "# Import pandas library\nimport pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Calculate the number of drivers\nnum_drivers = len(df)\n\n# Print the number of drivers\nprint(num_drivers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show the name, home city, and age for all drivers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf_selected = df[['Name', 'Home_city', 'Age']]\n\n# Print the selected data\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show the party and the number of drivers in each party.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Party' and then count the number of drivers in each group\nparty_count = df.groupby('Party').size()\n\nprint(party_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show the name of drivers in descending order of age.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by age in descending order\nsorted_df = df.sort_values('Age', ascending=False)\n\n# Save the names in a variable\nanswer = sorted_df['Name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show all different home cities.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nunique_cities = df['Home_city'].unique()\n\nprint(unique_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show the home city with the most number of drivers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of drivers in each city\ncity_counts = df['Home_city'].value_counts()\n\n# Find the city with the most drivers\nmost_common_city = city_counts.idxmax()\n\n# Print the most common city\nprint(most_common_city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show the party with drivers from Hartford and drivers older than 40.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include rows with Home_city as Hartford and Age greater than 40\nfiltered_df = df[(df['Home_city'] == 'Hartford') & (df['Age'] > 40)]\n\n# Extract the Party column from the filtered DataFrame\nparty = filtered_df['Party']\n\n# Print the Party column\nprint(party)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show home city where at least two drivers older than 40 are from.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to include only drivers older than 40\ndf_older_than_40 = df[df['Age'] > 40]\n\n# Group by home city and filter to include only those with 2 or more drivers\nhome_cities = df_older_than_40.groupby('Home_city').filter(lambda x: len(x) >= 2)\n\n# Get unique home cities\nunique_home_cities = home_cities['Home_city'].unique()\n\n# Print the unique home cities\nfor city in unique_home_cities:\n    print(city)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: Show all home cities except for those having a driver older than 40.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter drivers older than 40\ndf_older_drivers = df[df['Age'] > 40]\n\n# Get the home cities of older drivers\nolder_driver_cities = df_older_drivers['Home_city'].unique()\n\n# Get all home cities\nall_cities = df['Home_city'].unique()\n\n# Get cities that are not in older_driver_cities\nanswer = [city for city in all_cities if city not in older_driver_cities]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSchool_ID,Grade,School,Location,Type\n1,Kindergarten,Noelani Elementary School,Honolulu, Hawaii,Public\n2,1st-3rd grade,St. Francis Assisi,Jakarta, Indonesia,Private Catholic\n3,4th grade,State Elementary School Menteng 01,Jakarta, Indonesia,Public\n4,5th-12th grade,Punahou School,Honolulu, Hawaii,Private\n5,Freshman–Sophomore year,Occidental College,Los Angeles, California,Private\n6,Junior–Senior year,Columbia University,New York City,Private\n7,College,Harvard Law School,Cambridge, Massachusetts,Private\n\nQuestion: Show the types of schools that have two schools.", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by the \"Type\" column and count the number of entries in each group\ngrouped = df.groupby('Type').count()\n\n# Filter the grouped DataFrame to include only entries where the count is 2\nfiltered = grouped[grouped['School_ID'] == 2]\n\n# Save the answer in a variable\nanswer = filtered.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: How many drivers are from Hartford city or younger than 40?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe to get drivers from Hartford or younger than 40\ndf_filtered = df[(df['Home_city'] == 'Hartford') | (df['Age'] < 40)]\n\n# Count the number of drivers\nnum_drivers = len(df_filtered)\n\n# Print the answer\nprint(num_drivers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDriver_ID,Name,Party,Home_city,Age\n1,Matthew Ritter,Dem,Hartford,40\n2,Dan Carter,Rep,Bethel,30\n3,Minnie Gonzalez,Dem,Hartford,46\n4,Angel Acre,Dem,Hartford,42\n5,Brandon McGee,Dem,Hartford,45\n6,Edwin Vargas,Dem,Hartford,52\n7,Douglas McCrory,Dem,Hartford,36\n8,Timothy Ackert,Rep,Coventry,35\n9,Jason Rojas,Dem,East Hartford,38\n10,Henry Genga,Dem,East Hartford,37\n\nQuestion: List names for drivers from Hartford city and younger than 40.", "response": "# Import the necessary libraries\nimport pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only drivers from Hartford city and younger than 40\nfiltered_df = df[(df['Home_city'] == 'Hartford') & (df['Age'] < 40)]\n\n# Save the answer in a variable\nanswer = filtered_df['Name'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,Vehicle_Flight_number,Date,Pilot,Velocity,Altitude,airport_id,company_id\n1,M2-F1 #0,March 1, 1963,Thompson,135.0,0.0,1,2\n2,M2-F1 #1,August 16, 1963,Thompson,240.0,3650.0,2,3\n3,M2-F1 #6,September 3, 1963,Thompson,240.0,3650.0,2,4\n4,M2-F1 #13,October 25, 1963,Thompson,240.0,3650.0,3,4\n5,M2-F1 #14,November 8, 1963,Thompson,240.0,3650.0,4,5\n6,M2-F1 #21,January 29, 1964,Thompson,240.0,3650.0,4,6\n7,M2-F1 #33,March 30, 1964,Peterson,240.0,3650.0,5,11\n8,M2-F1 #39,May 19, 1964,Peterson,240.0,3650.0,2,13\n9,M2-F1 #61,July 16, 1965,Thompson,240.0,3650.0,6,11\n10,M2-F1 #64,August 30, 1965,Thompson,240.0,3650.0,9,1\n\nQuestion: How many flights have a velocity larger than 200?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where velocity is greater than 200\ndf_filtered = df[df['Velocity'] > 200]\n\n# Count the number of rows in the filtered dataframe\nnum_flights = len(df_filtered)\n\n# Save and print the answer\nprint(num_flights)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,Vehicle_Flight_number,Date,Pilot,Velocity,Altitude,airport_id,company_id\n1,M2-F1 #0,March 1, 1963,Thompson,135.0,0.0,1,2\n2,M2-F1 #1,August 16, 1963,Thompson,240.0,3650.0,2,3\n3,M2-F1 #6,September 3, 1963,Thompson,240.0,3650.0,2,4\n4,M2-F1 #13,October 25, 1963,Thompson,240.0,3650.0,3,4\n5,M2-F1 #14,November 8, 1963,Thompson,240.0,3650.0,4,5\n6,M2-F1 #21,January 29, 1964,Thompson,240.0,3650.0,4,6\n7,M2-F1 #33,March 30, 1964,Peterson,240.0,3650.0,5,11\n8,M2-F1 #39,May 19, 1964,Peterson,240.0,3650.0,2,13\n9,M2-F1 #61,July 16, 1965,Thompson,240.0,3650.0,6,11\n10,M2-F1 #64,August 30, 1965,Thompson,240.0,3650.0,9,1\n\nQuestion: List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by Altitude\ndf_sorted = df.sort_values('Altitude')\n\n# Extract the required columns\nresult = df_sorted[['Vehicle_Flight_number', 'Date', 'Pilot']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,City,Country,IATA,ICAO,name\n1,Akureyri,Iceland,AEY,BIAR,Akureyri Airport\n2,Amsterdam,Netherlands,AMS,EHAM,Schiphol Airport\n3,Anchorage,United States,ANC,PANC,Ted Stevens Airport\n4,Baltimore,United States,BWI,KBWI,Baltimore-Washington Airport\n5,Barcelona,Spain,BCN,LEBL,El Prat Airport\n6,Bergen,Norway,BGO,ENBR,Bergen Airport\n7,Billund,Denmark,BLL,EKBI,Billund Airport\n8,Boston,United States,BOS,KBOS,Logan International Airport\n9,Brussels,Belgium,BRU,EBBR,National Airport\n\nQuestion: List the id, country, city and name of the airports ordered alphabetically by the name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Sort the dataframe by 'name' column\ndf_sorted = df.sort_values('name')\n\n# Select the required columns\ndf_sorted = df_sorted[['id', 'Country', 'City', 'name']]\n\n# Save the answer in a variable\nanswer = df_sorted\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Type,Principal_activities,Incorporated_in,Group_Equity_Shareholding\n1,Air China,Corporate,Airline,China,18.77\n2,Air China Cargo,Joint Venture,Cargo airline,China,49.0\n3,Air Hong Kong,Joint Venture,Cargo airline,Hong Kong,60.0\n4,Dragonair,Subsidiary,Airline,Hong Kong,100.0\n5,Cathay Pacific Cargo,Subsidiary,Cargo airline,Hong Kong,100.0\n6,Cathay Pacific Catering Services (HK) Limited,Subsidiary,Catering services,Hong Kong,100.0\n7,Cathay Pacific Services Limited,Subsidiary,Cargo,Hong Kong,100.0\n8,Cathay Pacific Holidays,Subsidiary,Travel agency,Hong Kong,100.0\n9,Dragonair Holidays,Subsidiary,Travel agency,Hong Kong,100.0\n10,Hong Kong Airport Services,Subsidiary,Ground handling,Hong Kong,100.0\n\nQuestion: What is maximum group equity shareholding of the companies?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_group_equity_shareholding = df['Group_Equity_Shareholding'].max()\nprint(max_group_equity_shareholding)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,City,Country,IATA,ICAO,name\n1,Akureyri,Iceland,AEY,BIAR,Akureyri Airport\n2,Amsterdam,Netherlands,AMS,EHAM,Schiphol Airport\n3,Anchorage,United States,ANC,PANC,Ted Stevens Airport\n4,Baltimore,United States,BWI,KBWI,Baltimore-Washington Airport\n5,Barcelona,Spain,BCN,LEBL,El Prat Airport\n6,Bergen,Norway,BGO,ENBR,Bergen Airport\n7,Billund,Denmark,BLL,EKBI,Billund Airport\n8,Boston,United States,BOS,KBOS,Logan International Airport\n9,Brussels,Belgium,BRU,EBBR,National Airport\n\nQuestion: What are the names of the airports which are not in the country 'Iceland'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter out the airports that are not in Iceland\nnot_iceland_airports = df[df['Country'] != 'Iceland']\n\n# Get the names of the airports\nnames_of_not_iceland_airports = not_iceland_airports['name'].tolist()\n\n# Print the names of the airports\nprint(names_of_not_iceland_airports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,Type,Principal_activities,Incorporated_in,Group_Equity_Shareholding\n1,Air China,Corporate,Airline,China,18.77\n2,Air China Cargo,Joint Venture,Cargo airline,China,49.0\n3,Air Hong Kong,Joint Venture,Cargo airline,Hong Kong,60.0\n4,Dragonair,Subsidiary,Airline,Hong Kong,100.0\n5,Cathay Pacific Cargo,Subsidiary,Cargo airline,Hong Kong,100.0\n6,Cathay Pacific Catering Services (HK) Limited,Subsidiary,Catering services,Hong Kong,100.0\n7,Cathay Pacific Services Limited,Subsidiary,Cargo,Hong Kong,100.0\n8,Cathay Pacific Holidays,Subsidiary,Travel agency,Hong Kong,100.0\n9,Dragonair Holidays,Subsidiary,Travel agency,Hong Kong,100.0\n10,Hong Kong Airport Services,Subsidiary,Ground handling,Hong Kong,100.0\n\nQuestion: What is the most common company type, and how many are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Get the most common company type and its count\nmost_common_company_type = df['Type'].value_counts().head(1)\n\n# Print the result\nprint(most_common_company_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,City,Country,IATA,ICAO,name\n1,Akureyri,Iceland,AEY,BIAR,Akureyri Airport\n2,Amsterdam,Netherlands,AMS,EHAM,Schiphol Airport\n3,Anchorage,United States,ANC,PANC,Ted Stevens Airport\n4,Baltimore,United States,BWI,KBWI,Baltimore-Washington Airport\n5,Barcelona,Spain,BCN,LEBL,El Prat Airport\n6,Bergen,Norway,BGO,ENBR,Bergen Airport\n7,Billund,Denmark,BLL,EKBI,Billund Airport\n8,Boston,United States,BOS,KBOS,Logan International Airport\n9,Brussels,Belgium,BRU,EBBR,National Airport\n\nQuestion: Which of the airport names contains the word 'international'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load data from csv\ndf = pd.read_csv('data.csv')\n\n# Create a mask to filter airport names that contain 'international'\nmask = df['name'].str.contains('international', case=False)\n\n# Apply the mask and get the corresponding airport names\nanswer = df[mask]['name']\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,City,Country,IATA,ICAO,name\n1,Akureyri,Iceland,AEY,BIAR,Akureyri Airport\n2,Amsterdam,Netherlands,AMS,EHAM,Schiphol Airport\n3,Anchorage,United States,ANC,PANC,Ted Stevens Airport\n4,Baltimore,United States,BWI,KBWI,Baltimore-Washington Airport\n5,Barcelona,Spain,BCN,LEBL,El Prat Airport\n6,Bergen,Norway,BGO,ENBR,Bergen Airport\n7,Billund,Denmark,BLL,EKBI,Billund Airport\n8,Boston,United States,BOS,KBOS,Logan International Airport\n9,Brussels,Belgium,BRU,EBBR,National Airport\n\nQuestion: how many airports are there in each country?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports in each country\nairport_counts = df['Country'].value_counts()\n\n# Print the result\nprint(airport_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,City,Country,IATA,ICAO,name\n1,Akureyri,Iceland,AEY,BIAR,Akureyri Airport\n2,Amsterdam,Netherlands,AMS,EHAM,Schiphol Airport\n3,Anchorage,United States,ANC,PANC,Ted Stevens Airport\n4,Baltimore,United States,BWI,KBWI,Baltimore-Washington Airport\n5,Barcelona,Spain,BCN,LEBL,El Prat Airport\n6,Bergen,Norway,BGO,ENBR,Bergen Airport\n7,Billund,Denmark,BLL,EKBI,Billund Airport\n8,Boston,United States,BOS,KBOS,Logan International Airport\n9,Brussels,Belgium,BRU,EBBR,National Airport\n\nQuestion: which countries have more than 2 airports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports per country\nairport_count = df['Country'].value_counts()\n\n# Select countries with more than 2 airports\ncountries = airport_count[airport_count > 2].index.tolist()\n\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,Vehicle_Flight_number,Date,Pilot,Velocity,Altitude,airport_id,company_id\n1,M2-F1 #0,March 1, 1963,Thompson,135.0,0.0,1,2\n2,M2-F1 #1,August 16, 1963,Thompson,240.0,3650.0,2,3\n3,M2-F1 #6,September 3, 1963,Thompson,240.0,3650.0,2,4\n4,M2-F1 #13,October 25, 1963,Thompson,240.0,3650.0,3,4\n5,M2-F1 #14,November 8, 1963,Thompson,240.0,3650.0,4,5\n6,M2-F1 #21,January 29, 1964,Thompson,240.0,3650.0,4,6\n7,M2-F1 #33,March 30, 1964,Peterson,240.0,3650.0,5,11\n8,M2-F1 #39,May 19, 1964,Peterson,240.0,3650.0,2,13\n9,M2-F1 #61,July 16, 1965,Thompson,240.0,3650.0,6,11\n10,M2-F1 #64,August 30, 1965,Thompson,240.0,3650.0,9,1\n\nQuestion: which pilot is in charge of the most number of flights?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of flights for each pilot\nflights_by_pilot = df['Pilot'].value_counts()\n\n# Find the pilot with the most flights\npilot_with_most_flights = flights_by_pilot.idxmax()\n\nprint(pilot_with_most_flights)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: How many accounts do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: Count the number of accounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\naccount_count = df['Account_ID'].nunique()\n\nprint(account_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: Show all account ids and account details.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select only the columns of interest\ndf = df[['Account_ID', 'Account_Details']]\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: What are the ids and details of all accounts?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select only the columns of interest\ndf = df[['Account_ID', 'Account_Details']]\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStatement_ID,Statement_Details\n57,Open Project\n192,Private Project\n\nQuestion: How many statements do we have?", "response": "import pandas as pd\n\n# Load the data from CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of statements\nnum_statements = df.shape[0]\n\n# Print the number of statements\nprint(num_statements)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStatement_ID,Statement_Details\n57,Open Project\n192,Private Project\n\nQuestion: Count the number of statements.", "response": "import pandas as pd\n\n# Load the data from CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of statements\nnum_statements = df.shape[0]\n\n# Print the number of statements\nprint(num_statements)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStatement_ID,Statement_Details\n57,Open Project\n192,Private Project\n\nQuestion: List all statement ids and statement details.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStatement_ID,Statement_Details\n57,Open Project\n192,Private Project\n\nQuestion: What are the ids and details of all statements?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: Show all statement id and the number of accounts for each statement.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Statement_ID' and count the number of accounts for each 'Statement_ID'\nstatement_counts = df.groupby('Statement_ID').size()\n\n# Print the counts\nprint(statement_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: What are the different statement ids on accounts, and the number of accounts for each?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Group the DataFrame by 'Statement_ID' and count the number of accounts for each 'Statement_ID'\nstatement_counts = df.groupby('Statement_ID').size()\n\n# Print the counts\nprint(statement_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Show the number of documents.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents\nnum_documents = len(df)\n\n# Print the number of documents\nprint(num_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Count the number of documents.", "response": "import pandas as pd\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents\nnum_documents = len(df)\n\n# Print the number of documents\nprint(num_documents)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Show the ids and names of all documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Document_ID' and 'Document_Name' columns\nselected_df = df[['Document_ID', 'Document_Name']]\n\n# Print the selected dataframe\nprint(selected_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What are the ids and names for each of the documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the 'Document_ID' and 'Document_Name' columns\nselected_df = df[['Document_ID', 'Document_Name']]\n\n# Print the selected dataframe\nprint(selected_df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Find names and ids of all documents with document type code BK.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_bk = df[df['Document_Type_Code'] == 'BK']\n\nbk_names_and_ids = df_bk[['Document_ID', 'Document_Name']]\n\nprint(bk_names_and_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What are the names and ids of documents that have the type code BK?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_bk = df[df['Document_Type_Code'] == 'BK']\n\nbk_names_and_ids = df_bk[['Document_ID', 'Document_Name']]\n\nprint(bk_names_and_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: How many documents are with document type code BK for each product id?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Document_Type_Code is 'BK'\ndf_bk = df[df['Document_Type_Code'] == 'BK']\n\n# Count the number of documents for each Project_ID\ndocument_counts = df_bk['Project_ID'].value_counts()\n\n# Save the answer in a variable\nanswer = document_counts\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Count the number of documents with the type code BK that correspond to each product id.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where Document_Type_Code is 'BK'\ndf_bk = df[df['Document_Type_Code'] == 'BK']\n\n# Count the number of documents for each Project_ID\ndocument_counts = df_bk['Project_ID'].value_counts()\n\n# Save the answer in a variable\nanswer = document_counts\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Show project ids and the number of documents in each project.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use pandas groupby function to group by Project_ID and count the number of documents in each project\ndocuments_count = df.groupby('Project_ID').size()\n\nprint(documents_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: How many documents correspond with each project id?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Use pandas groupby function to group by Project_ID and count the number of documents in each project\ndocuments_count = df.groupby('Project_ID').size()\n\nprint(documents_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What is the id of the project with least number of documents?", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents for each project\ndocument_count = df['Project_ID'].value_counts()\n\n# Find the project with the least number of documents\nleast_document_project = document_count.idxmin()\n\n# Print the project id with the least number of documents\nprint(least_document_project)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Return the id of the project that has the fewest corresponding documents.", "response": "import pandas as pd\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents for each project\ndocument_count = df['Project_ID'].value_counts()\n\n# Find the project with the least number of documents\nleast_document_project = document_count.idxmin()\n\n# Print the project id with the least number of documents\nprint(least_document_project)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Show the ids for projects with at least 2 documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.groupby('Project_ID').filter(lambda x: len(x) >= 2)\nproject_ids = df['Project_ID'].unique()\n\nprint(project_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What are project ids of projects that have 2 or more corresponding documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.groupby('Project_ID').filter(lambda x: len(x) >= 2)\nproject_ids = df['Project_ID'].unique()\n\nprint(project_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: List document type codes and the number of documents in each code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Document_Type_Code' and count the number of documents in each group\ndoc_count = df.groupby('Document_Type_Code')['Document_ID'].count()\n\nprint(doc_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: How many documents are there of each type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Document_Type_Code' and count the number of documents in each group\ndoc_count = df.groupby('Document_Type_Code')['Document_ID'].count()\n\nprint(doc_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What is the document type code with most number of documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_document_code = df['Document_Type_Code'].value_counts().idxmax()\nprint(most_common_document_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Return the code of the document type that is most common.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_document_code = df['Document_Type_Code'].value_counts().idxmax()\nprint(most_common_document_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: Show the document type code with fewer than 3 documents.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents for each type\ndocument_counts = df['Document_Type_Code'].value_counts()\n\n# Filter for those with less than 3 documents\nless_than_3_documents = document_counts[document_counts < 3]\n\n# Save the answer in a variable\nanswer = less_than_3_documents.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details\n29,CV,30,2004-08-28 06:59:19,Review on UK files,,\n42,BK,105,2012-12-27 19:09:18,Review on Canadian files,,\n57,CV,195,1980-10-22 14:17:11,Review on French files,,\n121,BK,105,1981-11-29 10:23:01,Review on USA files,,\n181,PP,105,1970-06-17 14:03:21,Chapter on private files,,\n192,PP,134,2013-01-26 15:15:25,Book on USA files,,\n226,BK,30,1991-07-08 08:49:59,Review on UK files,,\n227,BK,30,1970-03-06 07:34:49,Deontae files,,\n240,BK,105,1971-06-09 19:03:41,Winona Book,,\n300,FM,35,2007-09-26 02:39:11,Trenton Presentation,,\n\nQuestion: What are the codes corresponding to document types for which there are less than 3 documents?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of documents for each type\ndocument_counts = df['Document_Type_Code'].value_counts()\n\n# Filter for those with less than 3 documents\nless_than_3_documents = document_counts[document_counts < 3]\n\n# Save the answer in a variable\nanswer = less_than_3_documents.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nBK,Book,excellent\nCV,CV,excellent\nPT,Presentation,very good\nPP,Paper,good\nFM,Film,fun\n\nQuestion: Show all document type codes, document type names, document type descriptions.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nBK,Book,excellent\nCV,CV,excellent\nPT,Presentation,very good\nPP,Paper,good\nFM,Film,fun\n\nQuestion: What are the codes, names, and descriptions of the different document types?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Print the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nBK,Book,excellent\nCV,CV,excellent\nPT,Presentation,very good\nPP,Paper,good\nFM,Film,fun\n\nQuestion: What is the document type description for document type named Film?", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'Document_Type_Name' is 'Film'\nfilm_df = df[df['Document_Type_Name'] == 'Film']\n\n# Extract the 'Document_Type_Description' from the filtered DataFrame\nfilm_description = film_df['Document_Type_Description'].values[0]\n\n# Print the answer\nprint(film_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nDocument_Type_Code,Document_Type_Name,Document_Type_Description\nBK,Book,excellent\nCV,CV,excellent\nPT,Presentation,very good\nPP,Paper,good\nFM,Film,fun\n\nQuestion: Return the description of the document type name 'Film'.", "response": "import pandas as pd\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where 'Document_Type_Name' is 'Film'\nfilm_df = df[df['Document_Type_Name'] == 'Film']\n\n# Extract the 'Document_Type_Description' from the filtered DataFrame\nfilm_description = film_df['Document_Type_Description'].values[0]\n\n# Print the answer\nprint(film_description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProject_ID,Project_Details\n30,Society Research project\n35,Internet of Things project\n105,Graph Database project\n134,Human Resource project\n195,Population Research project\n\nQuestion: Show the number of projects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of projects\nnum_projects = df.shape[0]\nprint(num_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProject_ID,Project_Details\n30,Society Research project\n35,Internet of Things project\n105,Graph Database project\n134,Human Resource project\n195,Population Research project\n\nQuestion: How many projects are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Number of projects\nnum_projects = df.shape[0]\nprint(num_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProject_ID,Project_Details\n30,Society Research project\n35,Internet of Things project\n105,Graph Database project\n134,Human Resource project\n195,Population Research project\n\nQuestion: List ids and details for all projects.", "response": "import pandas as pd\n\n# Load the data into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Display the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nProject_ID,Project_Details\n30,Society Research project\n35,Internet of Things project\n105,Graph Database project\n134,Human Resource project\n195,Population Research project\n\nQuestion: What are the ids and details for each project?", "response": "import pandas as pd\n\n# Load the data into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Display the dataframe\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: How many budget types do we have?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique budget codes\ncount = df['Budget_Type_Code'].nunique()\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: Count the number of budget codes.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique budget codes\ncount = df['Budget_Type_Code'].nunique()\n\n# Print the count\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: List all budget type codes and descriptions.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the type codes and descriptions\ntype_codes_descriptions = df[['Budget_Type_Code', 'Budget_Type_Description']]\n\n# Print the type codes and descriptions\nprint(type_codes_descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: What are the type codes and descriptions of each budget type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the type codes and descriptions\ntype_codes_descriptions = df[['Budget_Type_Code', 'Budget_Type_Description']]\n\n# Print the type codes and descriptions\nprint(type_codes_descriptions)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: What is the description for the budget type with code ORG?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Budget_Type_Code is 'ORG'\ndf_ORG = df[df['Budget_Type_Code'] == 'ORG']\n\n# Save the description of the filtered dataframe in a variable\ndescription = df_ORG['Budget_Type_Description'].values[0]\n\n# Print the variable\nprint(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nBudget_Type_Code,Budget_Type_Description\nGV,Government\nORG,Organisation\nSF,Self founded\n\nQuestion: Return the description of the budget type that has the code ORG.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where Budget_Type_Code is 'ORG'\ndf_ORG = df[df['Budget_Type_Code'] == 'ORG']\n\n# Save the description of the filtered dataframe in a variable\ndescription = df_ORG['Budget_Type_Description'].values[0]\n\n# Print the variable\nprint(description)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: What are the account details with the largest value or with value having char '5' in it?", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'Account_Details' to string\ndf['Account_Details'] = df['Account_Details'].astype(str)\n\n# Get the maximum value\nmax_value = df['Account_Details'].max()\n\n# Filter dataframe\nfiltered_df = df[(df['Account_Details'] == max_value) | (df['Account_Details'].str.contains('5'))]\n\n# Save the answer in a variable\nanswer = filtered_df['Account_Details'].values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nAccount_ID,Statement_ID,Account_Details\n7,57,495.063\n61,57,930.14\n98,57,6035.84\n136,57,199.52\n164,192,12223.93\n209,57,11130.23\n211,192,1230.454\n240,192,6352.31\n262,57,147.96\n280,57,187.14\n\nQuestion: Return the account details with the greatest value, as well as those that include the character 5.", "response": "import pandas as pd\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert 'Account_Details' to string\ndf['Account_Details'] = df['Account_Details'].astype(str)\n\n# Get the maximum value\nmax_value = df['Account_Details'].max()\n\n# Filter dataframe\nfiltered_df = df[(df['Account_Details'] == max_value) | (df['Account_Details'].str.contains('5'))]\n\n# Save the answer in a variable\nanswer = filtered_df['Account_Details'].values.tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSSN,Name\n123234877,Michael Rogers\n152934485,Anand Manikutty\n222364883,Carol Smith\n326587417,Joe Stevens\n332154719,Mary-Anne Foster\n332569843,George ODonnell\n546523478,John Doe\n631231482,David Smith\n654873219,Zacary Efron\n745685214,Eric Goldsmith\n\nQuestion: Find the total number of scientists.", "response": "import pandas as pd\n\n# Load the CSV data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of scientists\nnum_scientists = df.shape[0]\n\n# Print the number of scientists\nprint(num_scientists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSSN,Name\n123234877,Michael Rogers\n152934485,Anand Manikutty\n222364883,Carol Smith\n326587417,Joe Stevens\n332154719,Mary-Anne Foster\n332569843,George ODonnell\n546523478,John Doe\n631231482,David Smith\n654873219,Zacary Efron\n745685214,Eric Goldsmith\n\nQuestion: How many scientists are there?", "response": "import pandas as pd\n\n# Load the CSV data into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Count the number of scientists\nnum_scientists = df.shape[0]\n\n# Print the number of scientists\nprint(num_scientists)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: Find the total hours of all projects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_hours = df['Hours'].sum()\n\nprint(total_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: What is the total number of hours for all projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_hours = df['Hours'].sum()\n\nprint(total_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nScientist,Project\n123234877,AeH1\n152934485,AeH3\n222364883,Ast3\n326587417,Ast3\n332154719,Bte1\n546523478,Che1\n631231482,Ast3\n654873219,Che1\n745685214,AeH3\n845657245,Ast1\n\nQuestion: How many different scientists are assigned to any project?", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique scientists\nscientists_count = df['Scientist'].nunique()\n\n# Print the result\nprint(scientists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nScientist,Project\n123234877,AeH1\n152934485,AeH3\n222364883,Ast3\n326587417,Ast3\n332154719,Bte1\n546523478,Che1\n631231482,Ast3\n654873219,Che1\n745685214,AeH3\n845657245,Ast1\n\nQuestion: Count the number of different scientists assigned to any project.", "response": "import pandas as pd\n\n# Load the data\ndf = pd.read_csv('data.csv')\n\n# Count the number of unique scientists\nscientists_count = df['Scientist'].nunique()\n\n# Print the result\nprint(scientists_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: Find the number of distinct projects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique 'Code' to get the number of different projects\nnum_projects = df['Code'].nunique()\n\nprint(num_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: How many different projects are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count unique 'Code' to get the number of different projects\nnum_projects = df['Code'].nunique()\n\nprint(num_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: Find the average hours of all projects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_hours = df['Hours'].mean()\n\nprint(average_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: What is the average hours across all projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_hours = df['Hours'].mean()\n\nprint(average_hours)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: Find the name of project that continues for the longest time.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum value in the 'Hours' column\nmax_hours = df['Hours'].max()\n\n# Find the corresponding project name\nproject_name = df.loc[df['Hours'] == max_hours, 'Name'].values[0]\n\nprint(project_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: What is the name of the project with the most hours?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Find the maximum value in the 'Hours' column\nmax_hours = df['Hours'].max()\n\n# Find the corresponding project name\nproject_name = df.loc[df['Hours'] == max_hours, 'Name'].values[0]\n\nprint(project_name)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: List the name of all projects that are operated longer than the average working hours of all projects.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_hours = df['Hours'].mean()\n\nlong_projects = df[df['Hours'] > average_hours]['Name']\n\nprint(long_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: What are the names of projects that have taken longer than the average number of hours for all projects?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\naverage_hours = df['Hours'].mean()\n\nlong_projects = df[df['Hours'] > average_hours]['Name']\n\nprint(long_projects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: Find the name of projects that require between 100 and 300 hours of work.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where hours are between 100 and 300 (inclusive)\nfiltered_df = df[(df['Hours'] >= 100) & (df['Hours'] <= 300)]\n\n# Get the names of the projects\nproject_names = filtered_df['Name'].tolist()\n\n# Print the names of the projects\nprint(project_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nCode,Name,Hours\nAeH1,Winds: Studying Bernoullis Principle,156\nAeH2,Aerodynamics and Bridge Design,189\nAeH3,Aerodynamics and Gas Mileage,256\nAeH4,Aerodynamics and Ice Hockey,789\nAeH5,Aerodynamics of a Football,98\nAeH6,Aerodynamics of Air Hockey,89\nAst1,A Matter of Time,112\nAst2,A Puzzling Parallax,299\nAst3,Build Your Own Telescope,6546\nBte1,Juicy: Extracting Apple Juice with Pectinase,321\n\nQuestion: What are the names of projects that require between 100 and 300 hours?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe where hours are between 100 and 300 (inclusive)\nfiltered_df = df[(df['Hours'] >= 100) & (df['Hours'] <= 300)]\n\n# Get the names of the projects\nproject_names = filtered_df['Name'].tolist()\n\n# Print the names of the projects\nprint(project_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSSN,Name\n123234877,Michael Rogers\n152934485,Anand Manikutty\n222364883,Carol Smith\n326587417,Joe Stevens\n332154719,Mary-Anne Foster\n332569843,George ODonnell\n546523478,John Doe\n631231482,David Smith\n654873219,Zacary Efron\n745685214,Eric Goldsmith\n\nQuestion: List the names of all scientists sorted in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Name'\ndf_sorted = df.sort_values('Name')\n\n# Get the names of all scientists in sorted order\nscientist_names = df_sorted['Name'].tolist()\n\n# Print the list of scientist names\nprint(scientist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nSSN,Name\n123234877,Michael Rogers\n152934485,Anand Manikutty\n222364883,Carol Smith\n326587417,Joe Stevens\n332154719,Mary-Anne Foster\n332569843,George ODonnell\n546523478,John Doe\n631231482,David Smith\n654873219,Zacary Efron\n745685214,Eric Goldsmith\n\nQuestion: What are the names of all the scientists in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Sort the dataframe by 'Name'\ndf_sorted = df.sort_values('Name')\n\n# Get the names of all scientists in sorted order\nscientist_names = df_sorted['Name'].tolist()\n\n# Print the list of scientist names\nprint(scientist_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Find the names of all wines produced in 2008.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the year 2008\nfiltered_df = df[df['Year'] == 2008]\n\n# Extract the names of the wines\nwine_names = filtered_df['Name'].tolist()\n\n# Save the answer in a variable and print it\nanswer = wine_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of all wines produced in 2008?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data for the year 2008\nfiltered_df = df[df['Year'] == 2008]\n\n# Extract the names of the wines\nwine_names = filtered_df['Name'].tolist()\n\n# Save the answer in a variable and print it\nanswer = wine_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the grapes and appelations of all wines.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrape_appelation = df[['Grape', 'Appelation']]\n\nprint(grape_appelation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the grapes and appelations of each wine?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrape_appelation = df[['Grape', 'Appelation']]\n\nprint(grape_appelation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the names and scores of all wines.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Name' and 'Score' columns\nnames_scores = df[['Name', 'Score']]\n\n# Print the names and scores\nprint(names_scores)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names and scores of all wines?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the 'Name' and 'Score' columns\nnames_scores = df[['Name', 'Score']]\n\n# Print the names and scores\nprint(names_scores)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the prices of wines produced before the year of 2010?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['Year'] < 2010]\nprices = df['Price']\n\nprint(prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Return the prices of wines produced before 2010.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df[df['Year'] < 2010]\nprices = df['Price']\n\nprint(prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the names of all distinct wines that have scores higher than 90.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where score is greater than 90\nhigh_score_wines = df[df['Score'] > 90]\n\n# Get the names of the wines\nwine_names = high_score_wines['Name'].tolist()\n\nprint(wine_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines with scores higher than 90?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where score is greater than 90\nhigh_score_wines = df[df['Score'] > 90]\n\n# Get the names of the wines\nwine_names = high_score_wines['Name'].tolist()\n\nprint(wine_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: How many wines are produced at Robert Biale winery?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the winery name\nrobert_biale_wines = df[df['Winery'] == 'Robert Biale']\n\n# Get the count of wines produced\nwine_count = len(robert_biale_wines)\n\n# Print the count\nprint(wine_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Count the number of wines produced at Robert Biale winery.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the winery name\nrobert_biale_wines = df[df['Winery'] == 'Robert Biale']\n\n# Get the count of wines produced\nwine_count = len(robert_biale_wines)\n\n# Print the count\nprint(wine_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Appelation,County,State,Area,isAVA\n1,Alexander Valley,Sonoma,California,North Coast,Yes\n2,Amador County,Amador,California,Sierra Foothills,No\n3,Amador-Mendocino-Sonoma Counties,N/A,California,N/A,No\n4,Anderson Valley,Mendocino,California,North Coast,Yes\n5,Arroyo Grande Valley,San Luis Obispo,California,Central Coast,Yes\n6,Atlas Peak,Napa,California,North Coast,Yes\n7,Bennett Valley,Sonoma,California,North Coast,Yes\n8,Calaveras County,Calaveras,California,Sierra Foothills,No\n9,California,N/A,California,California,No\n10,Carneros,Napa,California,North Coast,Yes\n\nQuestion: How many appelations are in Napa Country?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Napa County\nnapa_county_data = df[df['County'] == 'Napa']\n\n# Count the number of appelations in Napa County\nappelation_count = napa_county_data['Appelation'].count()\n\nprint(appelation_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Appelation,County,State,Area,isAVA\n1,Alexander Valley,Sonoma,California,North Coast,Yes\n2,Amador County,Amador,California,Sierra Foothills,No\n3,Amador-Mendocino-Sonoma Counties,N/A,California,N/A,No\n4,Anderson Valley,Mendocino,California,North Coast,Yes\n5,Arroyo Grande Valley,San Luis Obispo,California,Central Coast,Yes\n6,Atlas Peak,Napa,California,North Coast,Yes\n7,Bennett Valley,Sonoma,California,North Coast,Yes\n8,Calaveras County,Calaveras,California,Sierra Foothills,No\n9,California,N/A,California,California,No\n10,Carneros,Napa,California,North Coast,Yes\n\nQuestion: Count the number of appelations in Napa County.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data for Napa County\nnapa_county_data = df[df['County'] == 'Napa']\n\n# Count the number of appelations in Napa County\nappelation_count = napa_county_data['Appelation'].count()\n\nprint(appelation_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the numbers of wines for different grapes?", "response": "# import pandas library\nimport pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# group by grape and get the count\nwine_counts = df.groupby('Grape').size()\n\n# print the answer\nprint(wine_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: How many wines are there for each grape?", "response": "# import pandas library\nimport pandas as pd\n\n# read csv file\ndf = pd.read_csv('data.csv')\n\n# group by grape and get the count\nwine_counts = df.groupby('Grape').size()\n\n# print the answer\nprint(wine_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the average prices of wines for different years?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Year' and then calculate the mean of 'Price'\naverage_prices = df.groupby('Year')['Price'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What is the average prices of wines for each each?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group the data by 'Year' and then calculate the mean of 'Price'\naverage_prices = df.groupby('Year')['Price'].mean()\n\n# Print the result\nprint(average_prices)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the prices of wines from John Anthony winery\njohn_anthony_prices = df[df['Winery'] == 'John Anthony']['Price']\n\n# Find the wines with prices higher than some wines from John Anthony winery\ndistinct_wines = df[df['Price'] > john_anthony_prices.min()]['Name'].unique()\n\n# Save the answer of the question in a variable and print the variable\nanswer = distinct_wines\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the distinct names of wines with prices higher than any wine from John Anthony winery.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Find the prices of wines from John Anthony winery\njohn_anthony_prices = df[df['Winery'] == 'John Anthony']['Price']\n\n# Find the wines with prices higher than some wines from John Anthony winery\ndistinct_wines = df[df['Price'] > john_anthony_prices.min()]['Name'].unique()\n\n# Save the answer of the question in a variable and print the variable\nanswer = distinct_wines\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the names of all distinct wines in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# sort the 'Name' column in alphabetical order and get unique names\nwines = df['Name'].sort_values().unique()\n\n# save the answer in a variable and print it\nanswer = wines\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines, sorted in alphabetical order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# sort the 'Name' column in alphabetical order and get unique names\nwines = df['Name'].sort_values().unique()\n\n# save the answer in a variable and print it\nanswer = wines\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the names of all distinct wines ordered by price.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Name' column from the DataFrame\n# and use the 'unique()' function to get unique names\ndistinct_wines = df['Name'].unique()\n\n# Sort the array of distinct wine names by price\ndistinct_wines_sorted = sorted(distinct_wines, key=lambda x: df[df['Name'] == x]['Price'].values[0])\n\n# Print the sorted array of distinct wine names\nprint(distinct_wines_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines, sorted by price ascending?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Select the 'Name' column from the DataFrame\n# and use the 'unique()' function to get unique names\ndistinct_wines = df['Name'].unique()\n\n# Sort the array of distinct wine names by price\ndistinct_wines_sorted = sorted(distinct_wines, key=lambda x: df[df['Name'] == x]['Price'].values[0])\n\n# Print the sorted array of distinct wine names\nprint(distinct_wines_sorted)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Find the distinct names of wines produced before the year of 2000 or after the year of 2010.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Year' column to datetime format\ndf['Year'] = pd.to_datetime(df['Year'], format='%Y')\n\n# Filter the dataframe to get wines produced before 2000 or after 2010\nfiltered_df = df[(df['Year'].dt.year < 2000) | (df['Year'].dt.year > 2010)]\n\n# Find the distinct names of wines\ndistinct_wine_names = filtered_df['Name'].unique()\n\n# Save the answer in a variable\nanswer = distinct_wine_names\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Give the distinct names of wines made before 2000 or after 2010.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert the 'Year' column to datetime format\ndf['Year'] = pd.to_datetime(df['Year'], format='%Y')\n\n# Filter the dataframe to get wines produced before 2000 or after 2010\nfiltered_df = df[(df['Year'].dt.year < 2000) | (df['Year'].dt.year > 2010)]\n\n# Find the distinct names of wines\ndistinct_wine_names = filtered_df['Name'].unique()\n\n# Save the answer in a variable\nanswer = distinct_wine_names\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Find the distinct winery of wines having price between 50 and 100.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where price is between 50 and 100\nfiltered_df = df[(df['Price'] >= 50) & (df['Price'] <= 100)]\n\n# Get distinct wineries\ndistinct_wineries = filtered_df['Winery'].unique()\n\n# Print distinct wineries\nprint(distinct_wineries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the distinct wineries which produce wines costing between 50 and 100?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter rows where price is between 50 and 100\nfiltered_df = df[(df['Price'] >= 50) & (df['Price'] <= 100)]\n\n# Get distinct wineries\ndistinct_wineries = filtered_df['Winery'].unique()\n\n# Print distinct wineries\nprint(distinct_wineries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the grape type 'Zinfandel' and the year 2009\nfiltered_df = df[(df['Grape'] == 'Zinfandel') & (df['Year'] == 2009)]\n\n# Calculate the average price and cases\naverage_price = filtered_df['Price'].mean()\naverage_cases = filtered_df['Cases'].mean()\n\n# Save the answer in a variable and print the variable\nanswer = (average_price, average_cases)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Give the average price and case of wines made from Zinfandel grapes in the year 2009.", "response": "import pandas as pd\n\n# Load the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe for the grape type 'Zinfandel' and the year 2009\nfiltered_df = df[(df['Grape'] == 'Zinfandel') & (df['Year'] == 2009)]\n\n# Calculate the average price and cases\naverage_price = filtered_df['Price'].mean()\naverage_cases = filtered_df['Cases'].mean()\n\n# Save the answer in a variable and print the variable\nanswer = (average_price, average_cases)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the maximum price and score of wines produced by St. Helena appelation?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data where appelation is 'St. Helena'\nst_helena_df = df[df['Appelation'] == 'St. Helena']\n\n# Find the maximum price and score\nmax_price = st_helena_df['Price'].max()\nmax_score = st_helena_df['Score'].max()\n\n# Save the answer in a variable\nanswer = (max_price, max_score)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Give the maximum price and score for wines produced in the appelation St. Helena.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the data where appelation is 'St. Helena'\nst_helena_df = df[df['Appelation'] == 'St. Helena']\n\n# Find the maximum price and score\nmax_price = st_helena_df['Price'].max()\nmax_score = st_helena_df['Score'].max()\n\n# Save the answer in a variable\nanswer = (max_price, max_score)\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the maximum price and score of wines in each year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_price_score_each_year = df.groupby('Year').agg({'Price':'max', 'Score':'max'}).reset_index()\n\nprint(max_price_score_each_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the maximum price and score of wines for each year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmax_price_score_each_year = df.groupby('Year').agg({'Price':'max', 'Score':'max'}).reset_index()\n\nprint(max_price_score_each_year)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the average price and score of wines grouped by appelation?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Appelation and calculate average Price and Score\ndf_grouped = df.groupby('Appelation').agg({'Price':'mean', 'Score':'mean'}).reset_index()\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the average price and score of wines for each appelation?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by Appelation and calculate average Price and Score\ndf_grouped = df.groupby('Appelation').agg({'Price':'mean', 'Score':'mean'}).reset_index()\n\n# Print the result\nprint(df_grouped)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Find the wineries that have at least four wines.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of wines each winery has\nwineries_wine_count = df['Winery'].value_counts()\n\n# Filter the wineries that have at least four wines\nwineries_with_four_wines = wineries_wine_count[wineries_wine_count >= 4].index.tolist()\n\nprint(wineries_with_four_wines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Which wineries produce at least four wines?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of wines each winery has\nwineries_wine_count = df['Winery'].value_counts()\n\n# Filter the wineries that have at least four wines\nwineries_with_four_wines = wineries_wine_count[wineries_wine_count >= 4].index.tolist()\n\nprint(wineries_with_four_wines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines whose production year are before the year of all wines by Brander winery?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to contain only rows where the winery is 'Brander'\nbrander_df = df[df['Winery'] == 'Brander']\n\n# Get the year of the last wine produced by 'Brander'\nbrander_last_year = brander_df['Year'].max()\n\n# Filter the dataframe to contain only wines produced before the last wine from 'Brander'\nwines_before_brander = df[df['Year'] < brander_last_year]\n\n# Get the names of wines produced before any wine from 'Brander'\nwines_before_brander_names = wines_before_brander['Name'].tolist()\n\n# Print the names of wines produced before any wine from 'Brander'\nprint(wines_before_brander_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines produced before any wine from the Brander winery?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to contain only rows where the winery is 'Brander'\nbrander_df = df[df['Winery'] == 'Brander']\n\n# Get the year of the last wine produced by 'Brander'\nbrander_last_year = brander_df['Year'].max()\n\n# Filter the dataframe to contain only wines produced before the last wine from 'Brander'\nwines_before_brander = df[df['Year'] < brander_last_year]\n\n# Get the names of wines produced before any wine from 'Brander'\nwines_before_brander_names = wines_before_brander['Name'].tolist()\n\n# Print the names of wines produced before any wine from 'Brander'\nprint(wines_before_brander_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the names of wines that are more expensive then all wines made in the year 2006?", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert 'Year' column to integer\ndf['Year'] = df['Year'].astype(int)\n\n# Find the maximum price of a wine produced in 2006\nmax_price_2006 = df[df['Year'] == 2006]['Price'].max()\n\n# Get the names of wines with prices above any wine produced in 2006\nwines = df[df['Price'] > max_price_2006]['Name'].values\n\n# Print the names of wines\nprint(wines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: Give the names of wines with prices above any wine produced in 2006.", "response": "# Import pandas library\nimport pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert 'Year' column to integer\ndf['Year'] = df['Year'].astype(int)\n\n# Find the maximum price of a wine produced in 2006\nmax_price_2006 = df[df['Year'] == 2006]['Price'].max()\n\n# Get the names of wines with prices above any wine produced in 2006\nwines = df[df['Price'] > max_price_2006]['Name'].values\n\n# Print the names of wines\nprint(wines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where the price is higher than 100\nfiltered_df = df[df['Price'] > 100]\n\n# Sort the filtered dataframe by year\nsorted_df = filtered_df.sort_values('Year')\n\n# Select the required columns: grape, winery and year\nanswer = sorted_df[['Grape', 'Winery', 'Year']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the grapes, wineries and years for wines with price higher than 100, sorted by year?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where the price is higher than 100\nfiltered_df = df[df['Price'] > 100]\n\n# Sort the filtered dataframe by year\nsorted_df = filtered_df.sort_values('Year')\n\n# Select the required columns: grape, winery and year\nanswer = sorted_df[['Grape', 'Winery', 'Year']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nresult = df[df['Score'] > 93].sort_values('Name')[['Grape', 'Appelation', 'Name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nNo,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink\n1,Zinfandel,Robert Biale,St. Helena,California,Old Kraft Vineyard,2008,44,93,275,now\n2,Zinfandel,Chiarello Family,Napa Valley,California,Giana,2008,35,93,480,now\n3,Zinfandel,Robert Biale,Napa Valley,California,Black Chicken,2008,40,91,2700,2012\n4,Zinfandel,Robert Biale,Napa Valley,California,Napa Ranches,2008,38,89,525,now\n5,Zinfandel,Robert Biale,St. Helena,California,Varozza Vineyard,2008,44,88,275,2012\n6,Zinfandel,Pedroncelli,Dry Creek Valley,California,Mother Clone,2008,15,88,6000,now\n7,Zinfandel,Rutherford Ranch,Napa Valley,California,Zinfandel,2007,18,87,1552,now\n8,Sauvignon Blanc,Altamura,Napa Valley,California,Sauvignon Blanc,2007,48,92,500,now\n9,Sauvignon Blanc,Capture,Sonoma County,California,Les Pionniers,2009,36,92,360,now\n10,Sauvignon Blanc,Brander,Santa Ynez Valley,California,Cuvee Nicolas,2009,25,91,377,now\n\nQuestion: What are the grapes, appelations, and wines with scores above 93, sorted by Name?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nresult = df[df['Score'] > 93].sort_values('Name')[['Grape', 'Appelation', 'Name']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: How many train stations are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the number of unique Station_IDs\nnum_stations = df['Station_ID'].nunique()\n\nprint(num_stations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show the name, location, and number of platforms for all stations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select the required columns\ndf_selected = df[['Name', 'Location', 'Number_of_Platforms']]\n\n# Print the dataframe\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: What are all locations of train stations?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Save the answer of the question in a variable\nlocations = df['Location'].unique().tolist()\n\n# Print the variable\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show the names and total passengers for all train stations not in London.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include rows where 'Location' is not 'London'\ndf_not_london = df[df['Location'] != 'London']\n\n# Select 'Name' and 'Total_Passengers' columns\nresult = df_not_london[['Name', 'Total_Passengers']]\n\n# Print the result\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show the names and main services for train stations that have the top three total number of passengers.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Total_Passengers' in descending order\ndf = df.sort_values('Total_Passengers', ascending=False)\n\n# Select the top 3 stations with the highest 'Total_Passengers'\ntop_three_df = df.head(3)\n\n# Select the 'Name' and 'Main_Services' columns from the top 3 stations\nanswer = top_three_df[['Name', 'Main_Services']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows where Number_of_Platforms >= 15 and Total_Passengers > 25\nselected_df = df[(df['Number_of_Platforms'] >= 15) & (df['Total_Passengers'] > 25)]\n\n# Get unique locations\nlocations = selected_df['Location'].unique()\n\nprint(locations)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show all locations which don't have a train station with at least 15 platforms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# filter dataframe to only include rows where Number_of_Platforms is less than 15\nfiltered_df = df[df['Number_of_Platforms'] < 15]\n\n# get unique locations from filtered dataframe\nlocations = filtered_df['Location'].unique()\n\n# print locations\nfor location in locations:\n    print(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show the location with most number of train stations.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the location with most number of train stations\nmost_stations_location = df['Location'].value_counts().idxmax()\n\nprint(most_stations_location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrain_ID,Name,Time,Service\n1,Ananthapuri Express,17:15,Daily\n2,Guruvayur Express,22:10,Daily\n3,Guruvayur Express,4:49,Daily\n4,Ananthapuri Express,11:35,Daily\n5,Jayanthi Janatha Express,06:30,Daily\n6,Island Express,11:15,Daily\n7,Madurai Fast Passenger,21:49,Daily\n8,Quilon Fast Passenger,04:55,Daily\n9,Island Express,16:59,Daily\n10,Jayanthi Janatha Express,10:38,Daily\n\nQuestion: Show the name, time, and service for all trains.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nresult = df[['Name', 'Time', 'Service']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrain_ID,Name,Time,Service\n1,Ananthapuri Express,17:15,Daily\n2,Guruvayur Express,22:10,Daily\n3,Guruvayur Express,4:49,Daily\n4,Ananthapuri Express,11:35,Daily\n5,Jayanthi Janatha Express,06:30,Daily\n6,Island Express,11:15,Daily\n7,Madurai Fast Passenger,21:49,Daily\n8,Quilon Fast Passenger,04:55,Daily\n9,Island Express,16:59,Daily\n10,Jayanthi Janatha Express,10:38,Daily\n\nQuestion: Show the number of trains", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Get the unique train IDs\nunique_trains = df['Train_ID'].nunique()\n\n# Save the answer in a variable and print it\nprint(\"The number of trains is:\", unique_trains)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nTrain_ID,Name,Time,Service\n1,Ananthapuri Express,17:15,Daily\n2,Guruvayur Express,22:10,Daily\n3,Guruvayur Express,4:49,Daily\n4,Ananthapuri Express,11:35,Daily\n5,Jayanthi Janatha Express,06:30,Daily\n6,Island Express,11:15,Daily\n7,Madurai Fast Passenger,21:49,Daily\n8,Quilon Fast Passenger,04:55,Daily\n9,Island Express,16:59,Daily\n10,Jayanthi Janatha Express,10:38,Daily\n\nQuestion: Show the name and service for all trains in order by time.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['Time'] = pd.to_datetime(df['Time'])\ndf_sorted = df.sort_values(by='Time')\nanswer = df_sorted[['Name', 'Service']]\n\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: Show all locations with only 1 station.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by location and filter those with only 1 station\nlocations = df['Location'].value_counts()\nlocations_with_one_station = locations[locations == 1].index.tolist()\n\n# Print locations with only 1 station\nprint(locations_with_one_station)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nStation_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms\n1,London Waterloo,94.046,9.489,103.534,London,South Western Main Line West of England Main Line,19\n2,London Victoria,76.231,9.157,85.38,London,Brighton Main Line Chatham Main Line,19\n3,London Bridge,52.634,8.742,61.376,London,South Eastern Main Line Thameslink,12\n4,London Liverpool Street,57.107,2.353,59.46,London,Great Eastern Main Line West Anglia Main Line,18\n5,London Euston,36.609,3.832,40.44,London,West Coast Main Line,18\n6,London Charing Cross,38.005,1.99,39.995,London,South Eastern Main Line,6\n7,Birmingham New Street,31.214,5.118,36.331,Birmingham,West Coast Main Line Cross Country Route,13\n8,London King's Cross,27.875,3.022,30.896,London,East Coast Main Line,12\n9,Glasgow Central,26.639,3.018,29.658,Glasgow,West Coast Main Line,17\n10,East Croydon,20.551,6.341,26.892,London,Brighton Main Line,6\n\nQuestion: List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf = df.sort_values(by=['Annual_entry_exit', 'Annual_interchanges'], ascending=[True, True])\nresult = df[['Name', 'Location']]\n\nprint(result)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: List all vehicle id", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# List all vehicle id\nvehicle_ids = df['vehicle_id'].tolist()\n\n# Print the list of vehicle ids\nprint(vehicle_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: What are the ids of all vehicles?", "response": "import pandas as pd\n\n# Load the csv file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# List all vehicle id\nvehicle_ids = df['vehicle_id'].tolist()\n\n# Print the list of vehicle ids\nprint(vehicle_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: How many vehicle in total?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# count the number of vehicles\nnum_vehicles = df['vehicle_id'].nunique()\n\n# print the number of vehicles\nprint(num_vehicles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: How many vehicles exist?", "response": "import pandas as pd\n\n# read the csv file into a dataframe\ndf = pd.read_csv('data.csv')\n\n# count the number of vehicles\nnum_vehicles = df['vehicle_id'].nunique()\n\n# print the number of vehicles\nprint(num_vehicles)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: Show the detail of vehicle with id 1.", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include the row with vehicle_id equal to 1\nfiltered_df = df[df['vehicle_id'] == 1]\n\n# Get the vehicle_details of the first row in the filtered DataFrame\nvehicle_detail = filtered_df.iloc[0]['vehicle_details']\n\n# Print the result\nprint(vehicle_detail)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nvehicle_id,vehicle_details\n1,Van\n2,Truck\n3,Car\n\nQuestion: What are the details of the car with id 1?", "response": "import pandas as pd\n\n# Load the CSV data into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include the row with vehicle_id equal to 1\nfiltered_df = df[df['vehicle_id'] == 1]\n\n# Get the vehicle_details of the first row in the filtered DataFrame\nvehicle_detail = filtered_df.iloc[0]['vehicle_details']\n\n# Print the result\nprint(vehicle_detail)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: List the first name middle name and last name of all staff.", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the first, middle and last names\nnames = df[['first_name', 'middle_name', 'last_name']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: What are the first, middle, and last names of all staff?", "response": "import pandas as pd\n\n# Load the csv file\ndf = pd.read_csv('data.csv')\n\n# Get the first, middle and last names\nnames = df[['first_name', 'middle_name', 'last_name']]\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: What is the birthday of the staff member with first name as Janessa and last name as Sawayn?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'first_name' is 'Janessa' and 'last_name' is 'Sawayn'\nfiltered_df = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Extract the 'date_of_birth' value from the filtered dataframe\nbirthday = filtered_df['date_of_birth'].values[0]\n\n# Print the 'date_of_birth' value\nprint(birthday)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: What is the date of birth for the staff member named Janessa Sawayn?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include rows where 'first_name' is 'Janessa' and 'last_name' is 'Sawayn'\nfiltered_df = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Extract the 'date_of_birth' value from the filtered dataframe\nbirthday = filtered_df['date_of_birth'].values[0]\n\n# Print the 'date_of_birth' value\nprint(birthday)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: When did the staff member with first name as Janessa and last name as Sawayn join the company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row with first name as Janessa and last name as Sawayn\njanessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Get the date_joined_staff for Janessa Sawayn\ndate_joined = janessa_sawayn['date_joined_staff'].values[0]\n\n# Print the date_joined_staff\nprint(date_joined)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: When did the staff member named Janessa Sawayn join the company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get the row with first name as Janessa and last name as Sawayn\njanessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Get the date_joined_staff for Janessa Sawayn\ndate_joined = janessa_sawayn['date_joined_staff'].values[0]\n\n# Print the date_joined_staff\nprint(date_joined)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: When did the staff member with first name as Janessa and last name as Sawayn leave the company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_janessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\ndate_left_staff = df_janessa_sawayn['date_left_staff'].values[0]\nprint(date_left_staff)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: When did the staff member Janessa Sawayn leave the company?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_janessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\ndate_left_staff = df_janessa_sawayn['date_left_staff'].values[0]\nprint(date_left_staff)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: How many staff have the first name Ludie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nludie_count = df['first_name'].value_counts()['Ludie']\n\nprint(ludie_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: How many employees have a first name of Ludie?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nludie_count = df['first_name'].value_counts()['Ludie']\n\nprint(ludie_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: What is the nickname of staff with first name as Janessa and last name as Sawayn?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the first name and last name match\njanessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Get the nickname of the employee\nnickname = janessa_sawayn['nickname'].values[0]\n\n# Print the nickname\nprint(nickname)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: What is the nickname of the employee named Janessa Sawayn?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to only include rows where the first name and last name match\njanessa_sawayn = df[(df['first_name'] == 'Janessa') & (df['last_name'] == 'Sawayn')]\n\n# Get the nickname of the employee\nnickname = janessa_sawayn['nickname'].values[0]\n\n# Print the nickname\nprint(nickname)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: How many staff in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_staff = len(df)\n\nprint(total_staff)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nstaff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff\n1,14,thompson.constantin,Janessa,Amara,Sawayn,2010-12-08 16:55:14,2017-04-27 03:21:26,2018-03-23 22:53:12\n2,3,santos45,Camylle,Icie,Weissnat,2015-08-01 13:22:43,2016-06-06 08:54:28,2018-03-10 15:25:00\n3,5,ynader,Kaitlin,Stephania,Mertz,1994-05-17 05:32:11,2018-01-02 12:24:24,2018-03-24 10:11:08\n4,1,lsenger,Rebekah,Sherwood,Hermann,2003-01-16 06:29:11,2017-10-21 17:20:57,2018-03-04 17:13:53\n5,14,ledner.jamie,Jedidiah,Dejon,Herzog,2015-08-10 11:37:39,2016-05-16 20:56:53,2018-03-08 04:23:14\n6,12,bogisich.geovany,Eulalia,Tre,Maggio,1998-04-27 12:55:05,2017-08-27 19:19:44,2018-02-28 08:26:10\n7,13,weldon.kling,Queenie,Madelyn,Macejkovic,2007-06-11 20:03:28,2017-06-04 14:30:41,2018-03-08 05:16:29\n8,1,gabe21,Titus,Duane,Durgan,2005-05-02 06:23:36,2016-05-26 00:55:07,2018-03-05 18:30:12\n9,4,ymiller,Margie,Caesar,Doyle,1995-06-03 08:09:17,2017-12-22 03:06:32,2018-03-08 12:31:16\n10,2,sbrown,Jaleel,Maiya,Rogahn,1996-09-24 09:51:42,2016-06-05 22:22:23,2018-03-14 07:14:37\n\nQuestion: How many employees are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ntotal_staff = len(df)\n\nprint(total_staff)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,city,zip_postcode,state_province_county,country\n1,3904 Stroman Passage,Port Melyssa,14445,Georgia,USA\n2,053 Quigley Island,Hagenesfurt,22194,Kentucky,USA\n3,00704 Zoe Alley,Lake Elaina,08938,Georgia,USA\n4,484 O'Hara Drive,Buckridgehaven,00005,Oregon,USA\n5,354 Frederik Ridge,Powlowskichester,27559,Ohio,USA\n6,376 Kallie Tunnel Apt. 784,Elviebury,63768,Connecticut,USA\n7,56461 Baumbach Well Suite 634,Lockmanfurt,34975,Washington,USA\n8,29085 Dejah Pine Suite 059,Lake Rafaela,80376,WestVirginia,USA\n9,535 Ariel Brook,Port Jackelinemouth,85954,Maine,USA\n10,2291 Larkin Ports,South Richieport,95098,Idaho,USA\n\nQuestion: How many staff live in state Georgia?", "response": "# Importing the necessary library\nimport pandas as pd\n\n# Loading the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Finding the employees living in Georgia\nga_employees = df[df['state_province_county'] == 'Georgia']\n\n# Counting the number of employees living in Georgia\nga_employee_count = len(ga_employees)\n\n# Saving the answer in a variable and printing it\nprint(\"Number of employees living in Georgia: \", ga_employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\naddress_id,line_1_number_building,city,zip_postcode,state_province_county,country\n1,3904 Stroman Passage,Port Melyssa,14445,Georgia,USA\n2,053 Quigley Island,Hagenesfurt,22194,Kentucky,USA\n3,00704 Zoe Alley,Lake Elaina,08938,Georgia,USA\n4,484 O'Hara Drive,Buckridgehaven,00005,Oregon,USA\n5,354 Frederik Ridge,Powlowskichester,27559,Ohio,USA\n6,376 Kallie Tunnel Apt. 784,Elviebury,63768,Connecticut,USA\n7,56461 Baumbach Well Suite 634,Lockmanfurt,34975,Washington,USA\n8,29085 Dejah Pine Suite 059,Lake Rafaela,80376,WestVirginia,USA\n9,535 Ariel Brook,Port Jackelinemouth,85954,Maine,USA\n10,2291 Larkin Ports,South Richieport,95098,Idaho,USA\n\nQuestion: How many employees live in Georgia?", "response": "# Importing the necessary library\nimport pandas as pd\n\n# Loading the csv file into a pandas dataframe\ndf = pd.read_csv('data.csv')\n\n# Finding the employees living in Georgia\nga_employees = df[df['state_province_county'] == 'Georgia']\n\n# Counting the number of employees living in Georgia\nga_employee_count = len(ga_employees)\n\n# Saving the answer in a variable and printing it\nprint(\"Number of employees living in Georgia: \", ga_employee_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: List the first name and last name of all customers.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_names = df[['first_name', 'last_name']]\n\nprint(df_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What are the first and last names for all customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_names = df[['first_name', 'last_name']]\n\nprint(df_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: List email address and birthday of customer whose first name as Carole.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for rows where first_name is 'Carole'\ncarole_df = df[df['first_name'] == 'Carole']\n\n# Select email_address and date_of_birth columns\ncarole_info = carole_df[['email_address', 'date_of_birth']]\n\n# Print result\nprint(carole_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What are the email addresses and date of births for all customers who have a first name of Carole?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for rows where first_name is 'Carole'\ncarole_df = df[df['first_name'] == 'Carole']\n\n# Select email_address and date_of_birth columns\ncarole_info = carole_df[['email_address', 'date_of_birth']]\n\n# Print result\nprint(carole_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: List phone number and email address of customer with more than 2000 outstanding balance.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data where amount_outstanding > 2000\nfiltered_df = df[df['amount_outstanding'] > 2000]\n\n# Select phone numbers and email addresses\nanswer = filtered_df[['phone_number', 'email_address']]\n\n# Print answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data where amount_outstanding > 2000\nfiltered_df = df[df['amount_outstanding'] > 2000]\n\n# Select phone numbers and email addresses\nanswer = filtered_df[['phone_number', 'email_address']]\n\n# Print answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: When are the birthdays of customer who are classified as 'Good Customer' status?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_of_birth' column to datetime format\ndf['date_of_birth'] = pd.to_datetime(df['date_of_birth'])\n\n# Filter rows where 'customer_status_code' is 'Good Customer'\ngood_customers = df[df['customer_status_code'] == 'Good Customer']\n\n# Get the date of birth for good customers\ngood_customer_birthdays = good_customers['date_of_birth']\n\n# Print the birthdays\nprint(good_customer_birthdays)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What is the date of birth of every customer whose status code is 'Good Customer'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_of_birth' column to datetime format\ndf['date_of_birth'] = pd.to_datetime(df['date_of_birth'])\n\n# Filter rows where 'customer_status_code' is 'Good Customer'\ngood_customers = df[df['customer_status_code'] == 'Good Customer']\n\n# Get the date of birth for good customers\ngood_customer_birthdays = good_customers['date_of_birth']\n\n# Print the birthdays\nprint(good_customer_birthdays)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: When did customer with first name as Carole and last name as Bernhard became a customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to find the customer with first name 'Carole' and last name 'Bernhard'\ncarole_bernhard = df[(df['first_name'] == 'Carole') & (df['last_name'] == 'Bernhard')]\n\n# Get the date when Carole Bernhard became a customer\ncarole_bernhard_date = carole_bernhard['date_became_customer'].values[0]\n\n# Print the result\nprint(carole_bernhard_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: When did Carole Bernhard first become a customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to find the customer with first name 'Carole' and last name 'Bernhard'\ncarole_bernhard = df[(df['first_name'] == 'Carole') & (df['last_name'] == 'Bernhard')]\n\n# Get the date when Carole Bernhard became a customer\ncarole_bernhard_date = carole_bernhard['date_became_customer'].values[0]\n\n# Print the result\nprint(carole_bernhard_date)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: How many customers in total?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_customers = len(df)\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: How many customers are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nnum_customers = len(df)\n\nprint(num_customers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: List all customer status codes and the number of customers having each status code.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of customers for each status code\nstatus_counts = df['customer_status_code'].value_counts()\n\n# Print the result\nprint(status_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: For each customer status code, how many customers are classified that way?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of customers for each status code\nstatus_counts = df['customer_status_code'].value_counts()\n\n# Print the result\nprint(status_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: Which customer status code has least number of customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the count of customers for each customer status code\nstatus_counts = df['customer_status_code'].value_counts()\n\n# Get the customer status code with the least number of customers\nleast_customer_status_code = status_counts.idxmin()\n\nprint(least_customer_status_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What is the status code with the least number of customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Get the count of customers for each customer status code\nstatus_counts = df['customer_status_code'].value_counts()\n\n# Get the customer status code with the least number of customers\nleast_customer_status_code = status_counts.idxmin()\n\nprint(least_customer_status_code)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What is maximum, minimum and average amount of outstanding of customer?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Compute the minimum, maximum, and average amounts of outstanding\nmin_outstanding = df['amount_outstanding'].min()\nmax_outstanding = df['amount_outstanding'].max()\navg_outstanding = df['amount_outstanding'].mean()\n\n# Save the answers in variables\nanswer = {'minimum_outstanding': min_outstanding,\n          'maximum_outstanding': max_outstanding,\n          'average_outstanding': avg_outstanding}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What is the maximum, minimum, and average amount of money outsanding for all customers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Compute the minimum, maximum, and average amounts of outstanding\nmin_outstanding = df['amount_outstanding'].min()\nmax_outstanding = df['amount_outstanding'].max()\navg_outstanding = df['amount_outstanding'].mean()\n\n# Save the answers in variables\nanswer = {'minimum_outstanding': min_outstanding,\n          'maximum_outstanding': max_outstanding,\n          'average_outstanding': avg_outstanding}\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: List the first name and last name of customers have the amount of outstanding between 1000 and 3000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the condition of amount_outstanding being between 1000 and 3000\nfiltered_df = df[(df['amount_outstanding'] >= 1000) & (df['amount_outstanding'] <= 3000)]\n\n# Get the first and last name columns from the filtered dataframe\nname_list = filtered_df[['first_name', 'last_name']]\n\n# Print the name list\nprint(name_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number\n1,13,Bad Customer,2016-05-11 17:03:48,1998-12-15 13:24:40,Carole,Bernhard,255.0,everette.goyette@example.org,07278206718,861-638-9797\n2,10,Bad Customer,2015-11-16 22:52:14,1995-07-17 12:13:16,Genevieve,Terry,7256.0,huel.jana@example.org,+14(5)2351480248,578-518-4785x612\n3,10,Good Customer,2016-04-08 00:28:15,1994-06-21 01:34:56,Clara,Ortiz,9443.0,hilario.sporer@example.org,374-483-2758x85087,1-197-686-2849x8761\n4,8,Good Customer,2016-07-22 15:53:44,1993-02-07 05:40:26,Jordy,Tromp,3751.0,afranecki@example.com,218.550.1362,081-097-3684\n5,2,Bad Customer,2017-11-12 04:34:44,1991-02-10 00:42:17,Millie,Bruen,5687.0,asha.kilback@example.org,1-618-535-9750,00659133944\n6,9,Good Customer,2017-04-16 05:12:21,1993-03-08 08:48:42,Amya,Spinka,3900.0,kozey.citlalli@example.org,1-673-962-8158x7646,(780)719-4206x033\n7,1,Bad Customer,2015-06-24 03:50:04,1996-11-07 05:30:55,Marina,Koelpin,8144.0,mayert.judy@example.com,(662)490-3108,848-099-2095x785\n8,10,Bad Customer,2017-10-05 14:15:46,1998-09-18 04:45:01,Dianna,Trantow,9500.0,kroberts@example.org,206-054-0689x05861,739-333-6966x187\n9,12,Bad Customer,2016-02-17 08:26:23,1991-12-05 02:50:15,Leif,Mertz,7093.0,mariela28@example.org,753.921.0871,1-387-258-1016x96963\n10,1,Bad Customer,2017-11-25 01:42:26,1996-08-29 00:03:08,Rylan,Goodwin,1000.0,nichole59@example.com,1-387-884-0656,+45(6)4872981083\n\nQuestion: What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe based on the condition of amount_outstanding being between 1000 and 3000\nfiltered_df = df[(df['amount_outstanding'] >= 1000) & (df['amount_outstanding'] <= 3000)]\n\n# Get the first and last name columns from the filtered dataframe\nname_list = filtered_df[['first_name', 'last_name']]\n\n# Print the name list\nprint(name_list)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,datetime_payment,payment_method_code,amount_payment\n11,2018-02-05 18:44:46,Direct Debit,9570.93\n2,2018-02-24 10:07:05,Direct Debit,8180.26\n14,2018-02-27 20:08:53,Direct Debit,4610.26\n6,2018-03-12 08:41:47,Direct Debit,4032.33\n3,2018-02-06 13:35:58,Credit Card,787.12\n14,2018-03-12 13:31:36,Credit Card,6970.98\n4,2018-02-03 15:04:36,Direct Debit,6311.37\n7,2018-02-15 16:38:49,Direct Debit,4773.16\n13,2018-02-21 05:28:49,Credit Card,7440.34\n6,2018-02-19 09:06:29,Direct Debit,5475.26\n\nQuestion: List all payment methods and number of payments using each payment methods.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of payments for each payment method\npayments_count = df['payment_method_code'].value_counts()\n\n# Print the result\nprint(payments_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ncustomer_id,datetime_payment,payment_method_code,amount_payment\n11,2018-02-05 18:44:46,Direct Debit,9570.93\n2,2018-02-24 10:07:05,Direct Debit,8180.26\n14,2018-02-27 20:08:53,Direct Debit,4610.26\n6,2018-03-12 08:41:47,Direct Debit,4032.33\n3,2018-02-06 13:35:58,Credit Card,787.12\n14,2018-03-12 13:31:36,Credit Card,6970.98\n4,2018-02-03 15:04:36,Direct Debit,6311.37\n7,2018-02-15 16:38:49,Direct Debit,4773.16\n13,2018-02-21 05:28:49,Credit Card,7440.34\n6,2018-02-19 09:06:29,Direct Debit,5475.26\n\nQuestion: For each payment method, how many payments were made?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of payments for each payment method\npayments_count = df['payment_method_code'].value_counts()\n\n# Print the result\nprint(payments_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlesson_id,customer_id,lesson_status_code,staff_id,vehicle_id,lesson_date,lesson_time,price\n1,6,Cancelled,8,3,2018-02-28 10:55:36,5,199.0\n2,8,Cancelled,14,3,2018-03-07 16:12:36,6,167.0\n3,6,Cancelled,11,2,2018-03-03 15:10:16,3,352.0\n4,8,Completed,1,2,2018-03-17 19:02:07,9,306.0\n5,10,Completed,3,2,2018-03-12 00:41:59,9,295.0\n6,5,Completed,4,2,2018-03-07 22:03:49,6,492.0\n7,9,Cancelled,11,1,2018-03-08 16:05:05,9,231.0\n8,3,Completed,8,2,2018-03-21 06:48:45,2,277.0\n9,2,Completed,4,2,2018-03-05 20:05:33,9,456.0\n10,2,Cancelled,5,2,2018-02-26 02:36:35,4,495.0\n\nQuestion: How many lessons were in cancelled state?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['lesson_status_code'] == 'Cancelled'\n\ncount = df['lesson_status_code'].value_counts()['Cancelled']\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nlesson_id,customer_id,lesson_status_code,staff_id,vehicle_id,lesson_date,lesson_time,price\n1,6,Cancelled,8,3,2018-02-28 10:55:36,5,199.0\n2,8,Cancelled,14,3,2018-03-07 16:12:36,6,167.0\n3,6,Cancelled,11,2,2018-03-03 15:10:16,3,352.0\n4,8,Completed,1,2,2018-03-17 19:02:07,9,306.0\n5,10,Completed,3,2,2018-03-12 00:41:59,9,295.0\n6,5,Completed,4,2,2018-03-07 22:03:49,6,492.0\n7,9,Cancelled,11,1,2018-03-08 16:05:05,9,231.0\n8,3,Completed,8,2,2018-03-21 06:48:45,2,277.0\n9,2,Completed,4,2,2018-03-05 20:05:33,9,456.0\n10,2,Cancelled,5,2,2018-02-26 02:36:35,4,495.0\n\nQuestion: How many lessons have been cancelled?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['lesson_status_code'] == 'Cancelled'\n\ncount = df['lesson_status_code'].value_counts()['Cancelled']\n\nprint(count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many faculty do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of faculty\nnum_faculty = len(df)\n\n# Print the number of faculty\nprint(num_faculty)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What is the total number of faculty members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of faculty\nnum_faculty = len(df)\n\n# Print the number of faculty\nprint(num_faculty)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What ranks do we have for faculty?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the list of distinct ranks\ndistinct_ranks = df['Rank'].unique().tolist()\n\nprint(distinct_ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the list of distinct ranks for faculty.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Finding the list of distinct ranks\ndistinct_ranks = df['Rank'].unique().tolist()\n\nprint(distinct_ranks)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show all the distinct buildings that have faculty rooms.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct buildings that have faculty rooms\ndistinct_buildings = df['Building'].unique()\n\nprint(distinct_buildings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What buildings have faculty offices?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the distinct buildings that have faculty rooms\ndistinct_buildings = df['Building'].unique()\n\nprint(distinct_buildings)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show the rank, first name, and last name for all the faculty.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the desired columns\ndesired_columns = df[['Rank', 'Fname', 'Lname']]\n\n# Print the dataframe\nprint(desired_columns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the rank, first name, and last name of the faculty members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Extract the desired columns\ndesired_columns = df[['Rank', 'Fname', 'Lname']]\n\n# Print the dataframe\nprint(desired_columns)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show the first name, last name, and phone number for all female faculty members.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female faculty members\nfemale_faculty = df[df['Sex'] == 'F']\n\n# Select the columns of interest\nanswer = female_faculty[['Fname', 'Lname', 'Phone']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the first name, last name, and phone number of all the female faculty members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include female faculty members\nfemale_faculty = df[df['Sex'] == 'F']\n\n# Select the columns of interest\nanswer = female_faculty[['Fname', 'Lname', 'Phone']]\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show ids for all the male faculty.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmale_faculty_ids = df[df['Sex'] == 'M']['FacID']\n\nprint(male_faculty_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the faculty ids of all the male faculty members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmale_faculty_ids = df[df['Sex'] == 'M']['FacID']\n\nprint(male_faculty_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many female Professors do we have?", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include Professors who are female\nfemale_professors = df[(df['Rank'] == 'Professor') & (df['Sex'] == 'F')]\n\n# Calculate the number of such Professors\nnum_female_professors = len(female_professors)\n\n# Print the result\nprint(num_female_professors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Count the number of female Professors we have.", "response": "import pandas as pd\n\n# Load the data from the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the data to only include Professors who are female\nfemale_professors = df[(df['Rank'] == 'Professor') & (df['Sex'] == 'F')]\n\n# Calculate the number of such Professors\nnum_female_professors = len(female_professors)\n\n# Print the result\nprint(num_female_professors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show the phone, room, and building for the faculty named Jerry Prince.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include the row where the Lname is 'Prince'\njerry_prince_info = df[df['Lname'] == 'Prince']\n\n# Select the phone, room, and building columns\njerry_prince_info = jerry_prince_info[['Phone', 'Room', 'Building']]\n\n# Print the result\nprint(jerry_prince_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the phone, room, and building of the faculty member called Jerry Prince?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include the row where the Lname is 'Prince'\njerry_prince_info = df[df['Lname'] == 'Prince']\n\n# Select the phone, room, and building columns\njerry_prince_info = jerry_prince_info[['Phone', 'Room', 'Building']]\n\n# Print the result\nprint(jerry_prince_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many Professors are in building NEB?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where 'Rank' is 'Professor' and 'Building' is 'NEB'\nprofessors_in_NEB = df[(df['Rank'] == 'Professor') & (df['Building'] == 'NEB')]\n\n# Count the number of rows in the filtered dataframe\ncount = professors_in_NEB.shape[0]\n\n# Save the answer in a variable and print the variable\nnum_professors_in_NEB = count\nprint(num_professors_in_NEB)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Count the number of Professors who have office in building NEB.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to only include rows where 'Rank' is 'Professor' and 'Building' is 'NEB'\nprofessors_in_NEB = df[(df['Rank'] == 'Professor') & (df['Building'] == 'NEB')]\n\n# Count the number of rows in the filtered dataframe\ncount = professors_in_NEB.shape[0]\n\n# Save the answer in a variable and print the variable\nnum_professors_in_NEB = count\nprint(num_professors_in_NEB)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show the first name and last name for all the instructors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ninstructors = df[df['Rank'] == 'Instructor'][['Fname', 'Lname']]\n\nprint(instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: What are the first name and last name of all the instructors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ninstructors = df[df['Rank'] == 'Instructor'][['Fname', 'Lname']]\n\nprint(instructors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show all the buildings along with the number of faculty members the buildings have.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of faculty members in each building\nbuilding_counts = df['Building'].value_counts()\n\n# Print the result\nprint(building_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many faculty members does each building have? List the result with the name of the building.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of faculty members in each building\nbuilding_counts = df['Building'].value_counts()\n\n# Print the result\nprint(building_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show all the buildings that have at least 10 professors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to get only the rows with 'Professor' rank\nprofessors = df[df['Rank'] == 'Professor']\n\n# Group the filtered dataframe by 'Building' and get the count of professors in each building\nbuilding_count = professors.groupby('Building').size()\n\n# Filter the grouped dataframe to get only the buildings with at least ten professors\nbuildings_with_ten_professors = building_count[building_count >= 10]\n\n# Save the answer in a variable\nanswer = buildings_with_ten_professors.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: In which buildings are there at least ten professors?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe to get only the rows with 'Professor' rank\nprofessors = df[df['Rank'] == 'Professor']\n\n# Group the filtered dataframe by 'Building' and get the count of professors in each building\nbuilding_count = professors.groupby('Building').size()\n\n# Filter the grouped dataframe to get only the buildings with at least ten professors\nbuildings_with_ten_professors = building_count[building_count >= 10]\n\n# Save the answer in a variable\nanswer = buildings_with_ten_professors.index.tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: For each faculty rank, show the number of faculty members who have it.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of faculty members for each rank\nfaculty_count = df['Rank'].value_counts()\n\n# Print the result\nprint(faculty_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many faculty members do we have for each faculty rank?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Count the number of faculty members for each rank\nfaculty_count = df['Rank'].value_counts()\n\n# Print the result\nprint(faculty_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show all the ranks and the number of male and female faculty for each rank.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Counting the faculty members for each rank and gender\ndf_count = df.groupby(['Rank', 'Sex']).size().reset_index(name='Count')\n\n# Printing the result\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many faculty members do we have for each rank and gender?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Counting the faculty members for each rank and gender\ndf_count = df.groupby(['Rank', 'Sex']).size().reset_index(name='Count')\n\n# Printing the result\nprint(df_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Which rank has the smallest number of faculty members?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Rank' and count the number of members in each group\nrank_counts = df.groupby('Rank').size()\n\n# Find the rank with the smallest number of faculty members\nsmallest_rank = rank_counts.idxmin()\n\nprint(smallest_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Find the faculty rank that has the least members.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'Rank' and count the number of members in each group\nrank_counts = df.groupby('Rank').size()\n\n# Find the rank with the smallest number of faculty members\nsmallest_rank = rank_counts.idxmin()\n\nprint(smallest_rank)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: Show the number of male and female assistant professors.", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only assistant professors and male or female sex\nfiltered_df = df[(df['Rank'] == 'AsstProf') & (df['Sex'].isin(['M', 'F']))]\n\n# Count the number of male and female assistant professors\nmale_female_count = filtered_df['Sex'].value_counts()\n\n# Print the count of male and female assistant professors\nprint(male_female_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nFacID,Lname,Fname,Rank,Sex,Phone,Room,Building\n1082,Giuliano,Mark,Instructor,M,2424,224,NEB\n1121,Goodrich,Michael,Professor,M,3593,219,NEB\n1148,Masson,Gerald,Professor,M,3402,224B,NEB\n1172,Runolfsson,Thordur,AssocProf,M,3121,119,Barton\n1177,Naiman,Daniel,Professor,M,3571,288,Krieger\n1193,Jones,Stacey,Instructor,F,3550,224,NEB\n1823,Davidson,Frederic,Professor,M,5629,119,Barton\n2028,Brody,William,Professor,M,6073,119,Barton\n2119,Meyer,Gerard,Professor,M,6350,119,Barton\n2192,Yarowsky,David,AsstProf,M,6587,324,NEB\n\nQuestion: How many male and female assistant professors do we have?", "response": "import pandas as pd\n\n# Load the data from the CSV file into a pandas DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame to include only assistant professors and male or female sex\nfiltered_df = df[(df['Rank'] == 'AsstProf') & (df['Sex'].isin(['M', 'F']))]\n\n# Count the number of male and female assistant professors\nmale_female_count = filtered_df['Sex'].value_counts()\n\n# Print the count of male and female assistant professors\nprint(male_female_count)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactid,activity_name\n770,Mountain Climbing\n771,Canoeing\n772,Kayaking\n773,Spelunking\n776,Extreme Canasta\n777,Soccer\n778,Baseball\n779,Accordion Ensemble\n780,Football\n782,Volleyball\n\nQuestion: What activities do we have?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nactivities = df['activity_name'].tolist()\n\nprint(activities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactid,activity_name\n770,Mountain Climbing\n771,Canoeing\n772,Kayaking\n773,Spelunking\n776,Extreme Canasta\n777,Soccer\n778,Baseball\n779,Accordion Ensemble\n780,Football\n782,Volleyball\n\nQuestion: List all the activities we have.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nactivities = df['activity_name'].tolist()\n\nprint(activities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactid,activity_name\n770,Mountain Climbing\n771,Canoeing\n772,Kayaking\n773,Spelunking\n776,Extreme Canasta\n777,Soccer\n778,Baseball\n779,Accordion Ensemble\n780,Football\n782,Volleyball\n\nQuestion: How many activities do we have?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of activities\nnum_activities = len(df)\n\n# Print the number of activities\nprint(num_activities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nactid,activity_name\n770,Mountain Climbing\n771,Canoeing\n772,Kayaking\n773,Spelunking\n776,Extreme Canasta\n777,Soccer\n778,Baseball\n779,Accordion Ensemble\n780,Football\n782,Volleyball\n\nQuestion: Find the number of activities available.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Count the number of activities\nnum_activities = len(df)\n\n# Print the number of activities\nprint(num_activities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the name of the airport in the city of Goroka.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where city is 'Goroka'\ngoroka_airports = df[df['city'] == 'Goroka']\n\n# Get the names of the airports\nnames = goroka_airports['name'].values\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What are the names of the airports in the city of Goroka?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to get only the rows where city is 'Goroka'\ngoroka_airports = df[df['city'] == 'Goroka']\n\n# Get the names of the airports\nnames = goroka_airports['name'].values\n\n# Print the names\nprint(names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include rows where the city is 'New York'\nnew_york_df = df[df['city'] == 'New York']\n\n# Select the columns 'name', 'city', 'country', and 'elevation'\nnew_york_info = new_york_df[['name', 'city', 'country', 'elevation']]\n\n# Print the result\nprint(new_york_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the name, city, country, and elevation for every airport in the city of New York?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame to only include rows where the city is 'New York'\nnew_york_df = df[df['city'] == 'New York']\n\n# Select the columns 'name', 'city', 'country', and 'elevation'\nnew_york_info = new_york_df[['name', 'city', 'country', 'elevation']]\n\n# Print the result\nprint(new_york_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: How many airlines are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntotal_airlines = df.shape[0]\nprint(total_airlines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: What is the total number of airlines?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ntotal_airlines = df.shape[0]\nprint(total_airlines)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: How many airlines does Russia has?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on country column\ndf_russia = df[df['country'] == 'Russia']\n\n# Get the number of airlines based in Russia\nnum_airlines_russia = len(df_russia)\n\n# Print the result\nprint(num_airlines_russia)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: What is the number of airlines based in Russia?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe based on country column\ndf_russia = df[df['country'] == 'Russia']\n\n# Get the number of airlines based in Russia\nnum_airlines_russia = len(df_russia)\n\n# Print the result\nprint(num_airlines_russia)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the maximum elevation of all airports in the country of Iceland?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include airports from Iceland\ndf_iceland = df[df['country'] == 'Iceland']\n\n# Find the maximum elevation of the airports in Iceland\nmax_elevation = df_iceland['elevation'].max()\n\nprint(max_elevation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the highest elevation of an airport in the country of Iceland?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to only include airports from Iceland\ndf_iceland = df[df['country'] == 'Iceland']\n\n# Find the maximum elevation of the airports in Iceland\nmax_elevation = df_iceland['elevation'].max()\n\nprint(max_elevation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the name of the airports located in Cuba or Argentina.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'country' column\ncuba_argentina_df = df[df['country'].isin(['Cuba', 'Argentina'])]\n\n# Select the 'name' column\nairport_names = cuba_argentina_df['name']\n\n# Print the airport names\nprint(airport_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What are the names of all airports in Cuba or Argentina?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame based on the 'country' column\ncuba_argentina_df = df[df['country'].isin(['Cuba', 'Argentina'])]\n\n# Select the 'name' column\nairport_names = cuba_argentina_df['name']\n\n# Print the airport names\nprint(airport_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: Find the country of the airlines whose name starts with 'Orbit'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for airlines whose names start with 'Orbit'\norbit_airlines = df[df['name'].str.startswith('Orbit')]\n\n# Get the countries of these airlines\ncountries = orbit_airlines['country'].tolist()\n\n# Print the countries\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: What are the countries of all airlines whose names start with Orbit?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for airlines whose names start with 'Orbit'\norbit_airlines = df[df['name'].str.startswith('Orbit')]\n\n# Get the countries of these airlines\ncountries = orbit_airlines['country'].tolist()\n\n# Print the countries\nprint(countries)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the name of airports whose altitude is between -50 and 50.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows with elevation between -50 and 50\nfiltered_df = df[(df['elevation'] >= -50) & (df['elevation'] <= 50)]\n\n# Get the names of the airports\nairport_names = filtered_df['name'].tolist()\n\n# Save the answer in a variable and print it\nanswer = airport_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What are the names of all airports whose elevation is between -50 and 50?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Select rows with elevation between -50 and 50\nfiltered_df = df[(df['elevation'] >= -50) & (df['elevation'] <= 50)]\n\n# Get the names of the airports\nairport_names = filtered_df['name'].tolist()\n\n# Save the answer in a variable and print it\nanswer = airport_names\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Which country is the airport that has the highest altitude located in?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_altitude_country = df.loc[df['elevation'].idxmax(), 'country']\n\nprint(highest_altitude_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the country of the airport with the highest elevation?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nhighest_altitude_country = df.loc[df['elevation'].idxmax(), 'country']\n\nprint(highest_altitude_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the number of airports whose name contain the word 'International'.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert all names to lower case\ndf['name'] = df['name'].str.lower()\n\n# Find the number of airports whose name contain the word 'international'\nnumber_of_airports = df[df['name'].str.contains('international')].shape[0]\n\nprint(number_of_airports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: How many airports' names have the word Interanation in them?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Convert all names to lower case\ndf['name'] = df['name'].str.lower()\n\n# Find the number of airports whose name contain the word 'international'\nnumber_of_airports = df[df['name'].str.contains('international')].shape[0]\n\nprint(number_of_airports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: How many different cities do have some airport in the country of Greenland?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngreenland_df = df[df['country'] == 'Greenland']\nnum_cities = len(greenland_df['city'].unique())\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: In how many cities are there airports in the country of Greenland?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngreenland_df = df[df['country'] == 'Greenland']\nnum_cities = len(greenland_df['city'].unique())\n\nprint(num_cities)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the name, city, and country of the airport that has the lowest altitude.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the minimum elevation\nmin_elevation = df['elevation'].min()\n\n# Get the details of the airport with the minimum elevation\nmin_elevation_airport = df[df['elevation'] == min_elevation]\n\n# Save the answer in a variable\nanswer = min_elevation_airport[['name', 'city', 'country']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the name, city, and country of the airport with the lowest altitude?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Find the minimum elevation\nmin_elevation = df['elevation'].min()\n\n# Get the details of the airport with the minimum elevation\nmin_elevation_airport = df[df['elevation'] == min_elevation]\n\n# Save the answer in a variable\nanswer = min_elevation_airport[['name', 'city', 'country']]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: Which countries has the most number of airlines?", "response": "# Importing pandas\nimport pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Counting the number of airlines in each country\ncounts = df['country'].value_counts()\n\n# Getting the country with the most airlines\nmax_airlines_country = counts.idxmax()\n\n# Printing the result\nprint(max_airlines_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: What is the name of the country with the most number of home airlines?", "response": "# Importing pandas\nimport pandas as pd\n\n# Reading the CSV file\ndf = pd.read_csv('data.csv')\n\n# Counting the number of airlines in each country\ncounts = df['country'].value_counts()\n\n# Getting the country with the most airlines\nmax_airlines_country = counts.idxmax()\n\n# Printing the result\nprint(max_airlines_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: Which countries has the most number of airlines whose active status is 'Y'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where active status is 'Y'\nactive_df = df[df['active'] == 'Y']\n\n# Count the number of airlines in each country\ncountry_counts = active_df['country'].value_counts()\n\n# Get the country with the most airlines\nmax_country = country_counts.idxmax()\n\nprint(max_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nalid,name,iata,icao,callsign,country,active\n-1,Unknown,-,N/A,,,Y\n1,Private flight,-,N/A,,,Y\n2,135 Airways,,GNL,GENERAL,United States,N\n3,1Time Airline,1T,RNX,NEXTIME,South Africa,Y\n4,2 Sqn No 1 Elementary Flying Training School,,WYT,,United Kingdom,N\n5,213 Flight Unit,,TFU,,Russia,N\n6,223 Flight Unit State Airline,,CHD,CHKALOVSK-AVIA,Russia,N\n7,224th Flight Unit,,TTF,CARGO UNIT,Russia,N\n8,247 Jet Ltd,,TWF,CLOUD RUNNER,United Kingdom,N\n9,3D Aviation,,SEC,SECUREX,United States,N\n\nQuestion: What are the countries with the most airlines whose active status is Y?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter data where active status is 'Y'\nactive_df = df[df['active'] == 'Y']\n\n# Count the number of airlines in each country\ncountry_counts = active_df['country'].value_counts()\n\n# Get the country with the most airlines\nmax_country = country_counts.idxmax()\n\nprint(max_country)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: How many airports are there per country? Order the countries by decreasing number of airports.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports per country\nairport_counts = df['country'].value_counts()\n\n# Sort the counts in descending order\nsorted_airport_counts = airport_counts.sort_values(ascending=False)\n\n# Print the sorted counts\nprint(sorted_airport_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What is the number of airports per country, ordered from most to least?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports per country\nairport_counts = df['country'].value_counts()\n\n# Sort the counts in descending order\nsorted_airport_counts = airport_counts.sort_values(ascending=False)\n\n# Print the sorted counts\nprint(sorted_airport_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data to only include airports in the United States\ndf_usa = df[df['country'] == 'United States']\n\n# Group by city and count number of airports\nairport_counts = df_usa.groupby('city').size().sort_values(ascending=False)\n\n# Print the answer\nprint(airport_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: How many airports are there per city in the US ordered from most to least?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data to only include airports in the United States\ndf_usa = df[df['country'] == 'United States']\n\n# Group by city and count number of airports\nairport_counts = df_usa.groupby('city').size().sort_values(ascending=False)\n\n# Print the answer\nprint(airport_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the average elevation of all airports for each country.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'country' and calculate the mean of 'elevation'\naverage_elevation = df.groupby('country')['elevation'].mean()\n\n# Print the result\nprint(average_elevation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: For each country, what is the average elevation of that country's airports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Group by 'country' and calculate the mean of 'elevation'\naverage_elevation = df.groupby('country')['elevation'].mean()\n\n# Print the result\nprint(average_elevation)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: Find the cities which have exactly two airports.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports in each city\ncity_counts = df['city'].value_counts()\n\n# Filter the cities which have exactly two airports\ncities_with_two_airports = city_counts[city_counts == 2].index.tolist()\n\n# Print the result\nprint(cities_with_two_airports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\napid,name,city,country,x,y,elevation,iata,icao\n1,Goroka Airport,Goroka,Papua New Guinea,145.391998291,-6.081689834590001,5282,GKA,AYGA\n2,Madang Airport,Madang,Papua New Guinea,145.789001465,-5.20707988739,20,MAG,AYMD\n3,Mount Hagen Kagamuga Airport,Mount Hagen,Papua New Guinea,144.29600524902344,-5.826789855957031,5388,HGU,AYMH\n4,Nadzab Airport,Nadzab,Papua New Guinea,146.725977,-6.569803,239,LAE,AYNZ\n5,Port Moresby Jacksons International Airport,Port Moresby,Papua New Guinea,147.22000122070312,-9.443380355834961,146,POM,AYPY\n6,Wewak International Airport,Wewak,Papua New Guinea,143.669006348,-3.58383011818,19,WWK,AYWK\n7,Narsarsuaq Airport,Narssarssuaq,Greenland,-45.4259986877,61.1604995728,112,UAK,BGBW\n8,Godthaab / Nuuk Airport,Godthaab,Greenland,-51.6781005859,64.19090271,283,GOH,BGGH\n9,Kangerlussuaq Airport,Sondrestrom,Greenland,-50.7116031647,67.0122218992,165,SFJ,BGSF\n10,Thule Air Base,Thule,Greenland,-68.7032012939,76.5311965942,251,THU,BGTL\n\nQuestion: What are the cities with exactly two airports?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of airports in each city\ncity_counts = df['city'].value_counts()\n\n# Filter the cities which have exactly two airports\ncities_with_two_airports = city_counts[city_counts == 2].index.tolist()\n\n# Print the result\nprint(cities_with_two_airports)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: What is the id of the most recent order?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the date_order_placed column to datetime\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Find the most recent order\nmost_recent_order = df[df['date_order_placed'] == df['date_order_placed'].max()]\n\n# Save the answer in a variable\nanswer = most_recent_order['order_id'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: Find the id of the order made most recently.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Convert the date_order_placed column to datetime\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Find the most recent order\nmost_recent_order = df[df['date_order_placed'] == df['date_order_placed'].max()]\n\n# Save the answer in a variable\nanswer = most_recent_order['order_id'].values[0]\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: what are the order id and customer id of the oldest order?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the 'date_order_placed' column to datetime\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Find the minimum date\noldest_date = df['date_order_placed'].min()\n\n# Filter the dataframe to only include rows with the oldest date\noldest_orders = df[df['date_order_placed'] == oldest_date]\n\n# Save the order id and customer id associated with the oldest order\noldest_order_id_customer_id = oldest_orders[['order_id', 'customer_id']]\n\n# Print the oldest order id and customer id\nprint(oldest_order_id_customer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: Find the order id and customer id associated with the oldest order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the 'date_order_placed' column to datetime\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Find the minimum date\noldest_date = df['date_order_placed'].min()\n\n# Filter the dataframe to only include rows with the oldest date\noldest_orders = df[df['date_order_placed'] == oldest_date]\n\n# Save the order id and customer id associated with the oldest order\noldest_order_id_customer_id = oldest_orders[['order_id', 'customer_id']]\n\n# Print the oldest order id and customer id\nprint(oldest_order_id_customer_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Find the id of the order whose shipment tracking number is \"3452\".", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the order id for the shipment tracking number '3452'\norder_id = df.loc[df['shipment_tracking_number'] == 3452, 'order_id'].values[0]\n\n# Print the order id\nprint(order_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Which order's shipment tracking number is \"3452\"? Give me the id of the order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Get the order id for the shipment tracking number '3452'\norder_id = df.loc[df['shipment_tracking_number'] == 3452, 'order_id'].values[0]\n\n# Print the order id\nprint(order_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,product_id,order_id,order_item_status,order_item_details\n1,4,6,Finish,\n2,15,6,Finish,\n3,12,15,Finish,\n4,8,15,Payed,\n5,11,6,Payed,\n6,14,8,Payed,\n7,3,5,Payed,\n8,4,10,Cancel,\n9,11,15,Cancel,\n10,7,7,Cancel,\n\nQuestion: Find the ids of all the order items whose product id is 11.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame based on the product_id\nfiltered_df = df[df['product_id'] == 11]\n\n# Get the order_item_ids from the filtered DataFrame\norder_item_ids = filtered_df['order_item_id']\n\n# Save the answer in a variable and print the variable\nanswer = order_item_ids.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_item_id,product_id,order_id,order_item_status,order_item_details\n1,4,6,Finish,\n2,15,6,Finish,\n3,12,15,Finish,\n4,8,15,Payed,\n5,11,6,Payed,\n6,14,8,Payed,\n7,3,5,Payed,\n8,4,10,Cancel,\n9,11,15,Cancel,\n10,7,7,Cancel,\n\nQuestion: Find all the order items whose product id is 11. What are the order item ids?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the DataFrame based on the product_id\nfiltered_df = df[df['product_id'] == 11]\n\n# Get the order_item_ids from the filtered DataFrame\norder_item_ids = filtered_df['order_item_id']\n\n# Save the answer in a variable and print the variable\nanswer = order_item_ids.tolist()\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Find the ids of orders which are shipped after 2000-01-01.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['shipment_date'] = pd.to_datetime(df['shipment_date'])\n\norders_after_2000 = df[df['shipment_date'] > '2000-01-01']['order_id'].unique()\n\nprint(orders_after_2000)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Which orders have shipment after 2000-01-01? Give me the order ids.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf['shipment_date'] = pd.to_datetime(df['shipment_date'])\n\norders_after_2000 = df[df['shipment_date'] > '2000-01-01']['order_id'].unique()\n\nprint(orders_after_2000)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Find the id of the order which is shipped most recently.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the shipment_date column to datetime format\ndf['shipment_date'] = pd.to_datetime(df['shipment_date'])\n\n# Get the row with the maximum shipment_date\nmax_shipment_row = df[df['shipment_date'] == df['shipment_date'].max()]\n\n# Get the order_id of this row\norder_id = max_shipment_row['order_id'].values[0]\n\n# Print the order id\nprint(order_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nshipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details\n1,5,13,3452,1983-08-13 22:34:11,\n2,7,2,0114,1977-11-10 12:11:25,\n3,10,5,478,2006-01-17 03:08:05,\n4,5,2,08858,1982-01-24 12:13:16,\n5,6,15,35342,1981-11-13 23:20:42,\n6,4,3,7480,1978-05-17 00:03:43,\n7,13,15,7662,1999-10-12 10:41:49,\n8,9,10,2323,1983-03-08 16:14:58,\n9,8,10,5991,1986-06-07 13:54:27,\n10,14,15,0182,1973-06-20 14:26:43,\n\nQuestion: Which order has the most recent shipment? Give me the order id.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert the shipment_date column to datetime format\ndf['shipment_date'] = pd.to_datetime(df['shipment_date'])\n\n# Get the row with the maximum shipment_date\nmax_shipment_row = df[df['shipment_date'] == df['shipment_date'].max()]\n\n# Get the order_id of this row\norder_id = max_shipment_row['order_id'].values[0]\n\n# Print the order id\nprint(order_id)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,food,\n2,book,\n3,food,\n4,food,\n5,clothes,\n6,clothes,\n7,clothes,\n8,book,\n9,book,\n10,phone,\n\nQuestion: List the names of all distinct products in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_products = df['product_name'].unique()\n\ndistinct_products.sort()\n\nprint(distinct_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nproduct_id,product_name,product_details\n1,food,\n2,book,\n3,food,\n4,food,\n5,clothes,\n6,clothes,\n7,clothes,\n8,book,\n9,book,\n10,phone,\n\nQuestion: Sort all the distinct products in alphabetical order.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ndistinct_products = df['product_name'].unique()\n\ndistinct_products.sort()\n\nprint(distinct_products)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: List the ids of all distinct orders ordered by placed date.", "response": "import pandas as pd\n\n# Load CSV data into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_order_placed' column to datetime format\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Sort the dataframe by 'date_order_placed'\ndf = df.sort_values('date_order_placed')\n\n# Get all distinct order ids\ndistinct_order_ids = df['order_id'].unique()\n\n# Sort the order ids\ndistinct_order_ids = sorted(distinct_order_ids)\n\n# Print the sorted order ids\nprint(distinct_order_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\norder_id,customer_id,order_status,date_order_placed,order_details\n1,2,Shipped,2009-02-21 15:26:19,\n2,11,Shipped,1974-06-24 22:10:26,\n3,4,Shipped,1982-12-29 21:10:11,\n4,15,Packing,1974-08-10 08:15:16,\n5,5,Packing,2010-06-08 02:20:49,\n6,7,Packing,1975-12-23 15:59:43,\n7,15,Packing,1976-09-01 09:27:00,\n8,10,On Road,1997-01-27 19:12:01,\n9,3,On Road,1983-09-08 12:32:49,\n10,2,On Road,1982-12-09 09:42:23,\n\nQuestion: What are ids of the all distinct orders, sorted by placement date?", "response": "import pandas as pd\n\n# Load CSV data into a dataframe\ndf = pd.read_csv('data.csv')\n\n# Convert 'date_order_placed' column to datetime format\ndf['date_order_placed'] = pd.to_datetime(df['date_order_placed'])\n\n# Sort the dataframe by 'date_order_placed'\ndf = df.sort_values('date_order_placed')\n\n# Get all distinct order ids\ndistinct_order_ids = df['order_id'].unique()\n\n# Sort the order ids\ndistinct_order_ids = sorted(distinct_order_ids)\n\n# Print the sorted order ids\nprint(distinct_order_ids)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,invoice_date,invoice_details\n1,1989-09-03 16:03:05,vitae\n2,1989-12-11 16:40:57,magnam\n3,1995-10-07 14:13:05,et\n4,1985-04-27 08:38:49,tempore\n5,1971-02-12 00:29:57,labore\n6,2007-12-25 15:49:37,optio\n7,1991-01-05 16:44:25,reiciendis\n8,2012-06-12 07:34:17,doloremque\n9,1974-07-27 16:18:49,quo\n10,2005-02-27 19:53:13,eveniet\n\nQuestion: Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert 'invoice_date' column to datetime format\ndf['invoice_date'] = pd.to_datetime(df['invoice_date'])\n\n# Create two datetime objects for comparison\ncutoff_date_1 = pd.to_datetime('1989-09-03')\ncutoff_date_2 = pd.to_datetime('2007-12-25')\n\n# Filter rows where 'invoice_date' is before 1989-09-03 or after 2007-12-25\nfiltered_df = df[(df['invoice_date'] < cutoff_date_1) | (df['invoice_date'] > cutoff_date_2)]\n\n# Get the invoice numbers for the filtered rows\nanswer = filtered_df['invoice_number'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,invoice_date,invoice_details\n1,1989-09-03 16:03:05,vitae\n2,1989-12-11 16:40:57,magnam\n3,1995-10-07 14:13:05,et\n4,1985-04-27 08:38:49,tempore\n5,1971-02-12 00:29:57,labore\n6,2007-12-25 15:49:37,optio\n7,1991-01-05 16:44:25,reiciendis\n8,2012-06-12 07:34:17,doloremque\n9,1974-07-27 16:18:49,quo\n10,2005-02-27 19:53:13,eveniet\n\nQuestion: What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Convert 'invoice_date' column to datetime format\ndf['invoice_date'] = pd.to_datetime(df['invoice_date'])\n\n# Create two datetime objects for comparison\ncutoff_date_1 = pd.to_datetime('1989-09-03')\ncutoff_date_2 = pd.to_datetime('2007-12-25')\n\n# Filter rows where 'invoice_date' is before 1989-09-03 or after 2007-12-25\nfiltered_df = df[(df['invoice_date'] < cutoff_date_1) | (df['invoice_date'] > cutoff_date_2)]\n\n# Get the invoice numbers for the filtered rows\nanswer = filtered_df['invoice_number'].tolist()\n\n# Print the answer\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,invoice_date,invoice_details\n1,1989-09-03 16:03:05,vitae\n2,1989-12-11 16:40:57,magnam\n3,1995-10-07 14:13:05,et\n4,1985-04-27 08:38:49,tempore\n5,1971-02-12 00:29:57,labore\n6,2007-12-25 15:49:37,optio\n7,1991-01-05 16:44:25,reiciendis\n8,2012-06-12 07:34:17,doloremque\n9,1974-07-27 16:18:49,quo\n10,2005-02-27 19:53:13,eveniet\n\nQuestion: Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the invoice_date column to datetime format\ndf['invoice_date'] = pd.to_datetime(df['invoice_date'])\n\n# Filter the dataframe based on the date\nfiltered_df = df[(df['invoice_date'] < '1989-09-03') | (df['invoice_date'] > '2007-12-25')]\n\n# Get the distinct details of invoices\ndistinct_invoices = filtered_df['invoice_details'].unique()\n\n# Save the answer in a variable\nanswer = distinct_invoices\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\ninvoice_number,invoice_date,invoice_details\n1,1989-09-03 16:03:05,vitae\n2,1989-12-11 16:40:57,magnam\n3,1995-10-07 14:13:05,et\n4,1985-04-27 08:38:49,tempore\n5,1971-02-12 00:29:57,labore\n6,2007-12-25 15:49:37,optio\n7,1991-01-05 16:44:25,reiciendis\n8,2012-06-12 07:34:17,doloremque\n9,1974-07-27 16:18:49,quo\n10,2005-02-27 19:53:13,eveniet\n\nQuestion: What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?", "response": "import pandas as pd\n\n# Read the CSV file\ndf = pd.read_csv('data.csv')\n\n# Convert the invoice_date column to datetime format\ndf['invoice_date'] = pd.to_datetime(df['invoice_date'])\n\n# Filter the dataframe based on the date\nfiltered_df = df[(df['invoice_date'] < '1989-09-03') | (df['invoice_date'] > '2007-12-25')]\n\n# Get the distinct details of invoices\ndistinct_invoices = filtered_df['invoice_details'].unique()\n\n# Save the answer in a variable\nanswer = distinct_invoices\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,nationality,gender\n1,Frank Lloyd Wright,American,male\n2,Frank Gehry,Canadian,male\n3,Zaha Hadid,Iraqi, British,female\n4,Mies Van Der Rohe,German, American,male\n5,Le Corbusier,Swiss, French,male\n\nQuestion: How many architects are female?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter dataframe to only include female architects\nfemale_architects = df[df['gender'] == 'female']\n\n# Count the number of female architects\nnum_female_architects = len(female_architects)\n\n# Print the result\nprint(num_female_architects)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nid,name,nationality,gender\n1,Frank Lloyd Wright,American,male\n2,Frank Gehry,Canadian,male\n3,Zaha Hadid,Iraqi, British,female\n4,Mies Van Der Rohe,German, American,male\n5,Le Corbusier,Swiss, French,male\n\nQuestion: List the name, nationality and id of all male architects ordered by their names lexicographically.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\ndf_male = df[(df['gender'] == 'male') & (df['name'].notnull())]\ndf_male = df_male[['name', 'nationality', 'id']]\ndf_male = df_male.sort_values('name')\n\nprint(df_male)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,name,location,length_meters,length_feet\n1,1,Xian Ren Qiao (Fairy Bridge),Guangxi , China,121.0,400.0\n2,2,Landscape Arch,Arches National Park , Utah , USA,88.0,290.0\n3,3,Kolob Arch,Zion National Park , Utah , USA,87.0,287.0\n4,4,Aloba Arch,Ennedi Plateau , Chad,76.0,250.0\n5,5,Morning Glory Natural Bridge,Negro Bill Canyon , Utah , USA,74.0,243.0\n5,6,Rainbow Bridge,Glen Canyon National Recreation Area , Utah , USA,71.0,234.0\n4,7,Gaotun Natural Bridge,Guizhou , China,70.0,230.0\n3,8,Sipapu Natural Bridge,Natural Bridges National Monument , Utah , USA,69.0,225.0\n2,9,Stevens Arch,Escalante Canyon , Utah , USA,67.0,220.0\n1,10,Shipton's Arch,Xinjiang , China,65.0,212.0\n\nQuestion: What is the average length in feet of the bridges?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Load the CSV file\ndf = pd.read_csv('data.csv')\n\n# Calculate the average length in feet\naverage_length_feet = df['length_feet'].mean()\n\n# Print the result\nprint(average_length_feet)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,location,name,type,built_year,notes\n1,1,Coswarem,Le Vieux Molen,Grondzeiler,1840,Molenechos (Dutch)\n1,2,Donceel,Moulin Bertrand,Grondzeiler,1890,Molenechos (Dutch)\n2,3,Fexhe-le-haut-Clocher,Moulin de Fexhe,Grondzeiler,1843,Molenechos (Dutch)\n3,4,Momalle,Moulin de Momalle,Bergmolen,1850,Molenechos (Dutch)\n4,5,Othée,Moulin du Château,Grondzeiler,1856,Molenechos (Dutch)\n4,6,Pousset,Moulin de Pousset,Grondzeiler,1819,Molenechos (Dutch)\n\nQuestion: What are the names and year of construction for the mills of 'Grondzeiler' type?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\ngrondzeiler_df = df[df['type'] == 'Grondzeiler']\n\nmill_info = grondzeiler_df[['name', 'built_year']]\n\nprint(mill_info)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,location,name,type,built_year,notes\n1,1,Coswarem,Le Vieux Molen,Grondzeiler,1840,Molenechos (Dutch)\n1,2,Donceel,Moulin Bertrand,Grondzeiler,1890,Molenechos (Dutch)\n2,3,Fexhe-le-haut-Clocher,Moulin de Fexhe,Grondzeiler,1843,Molenechos (Dutch)\n3,4,Momalle,Moulin de Momalle,Bergmolen,1850,Molenechos (Dutch)\n4,5,Othée,Moulin du Château,Grondzeiler,1856,Molenechos (Dutch)\n4,6,Pousset,Moulin de Pousset,Grondzeiler,1819,Molenechos (Dutch)\n\nQuestion: What are the names of the mills which are not located in 'Donceel'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filter the dataframe to include only rows where 'location' is not 'Donceel'\ndf = df[df['location'] != 'Donceel']\n\n# Save the answer in a variable\nanswer = df['name'].tolist()\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,name,location,length_meters,length_feet\n1,1,Xian Ren Qiao (Fairy Bridge),Guangxi , China,121.0,400.0\n2,2,Landscape Arch,Arches National Park , Utah , USA,88.0,290.0\n3,3,Kolob Arch,Zion National Park , Utah , USA,87.0,287.0\n4,4,Aloba Arch,Ennedi Plateau , Chad,76.0,250.0\n5,5,Morning Glory Natural Bridge,Negro Bill Canyon , Utah , USA,74.0,243.0\n5,6,Rainbow Bridge,Glen Canyon National Recreation Area , Utah , USA,71.0,234.0\n4,7,Gaotun Natural Bridge,Guizhou , China,70.0,230.0\n3,8,Sipapu Natural Bridge,Natural Bridges National Monument , Utah , USA,69.0,225.0\n2,9,Stevens Arch,Escalante Canyon , Utah , USA,67.0,220.0\n1,10,Shipton's Arch,Xinjiang , China,65.0,212.0\n\nQuestion: What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Filtering data for 'Kolob Arch' or 'Rainbow Bridge'\nfilter_condition = (df['name'] == 'Kolob Arch') | (df['name'] == 'Rainbow Bridge')\n\n# Selecting location of the bridge\nlocation = df.loc[filter_condition, 'location'].values\n\n# Printing the location\nprint(location)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,location,name,type,built_year,notes\n1,1,Coswarem,Le Vieux Molen,Grondzeiler,1840,Molenechos (Dutch)\n1,2,Donceel,Moulin Bertrand,Grondzeiler,1890,Molenechos (Dutch)\n2,3,Fexhe-le-haut-Clocher,Moulin de Fexhe,Grondzeiler,1843,Molenechos (Dutch)\n3,4,Momalle,Moulin de Momalle,Bergmolen,1850,Molenechos (Dutch)\n4,5,Othée,Moulin du Château,Grondzeiler,1856,Molenechos (Dutch)\n4,6,Pousset,Moulin de Pousset,Grondzeiler,1819,Molenechos (Dutch)\n\nQuestion: Which of the mill names contains the french word 'Moulin'?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmill_names = df[df['name'].str.contains('Moulin')]['name']\n\nprint(mill_names)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\narchitect_id,id,location,name,type,built_year,notes\n1,1,Coswarem,Le Vieux Molen,Grondzeiler,1840,Molenechos (Dutch)\n1,2,Donceel,Moulin Bertrand,Grondzeiler,1890,Molenechos (Dutch)\n2,3,Fexhe-le-haut-Clocher,Moulin de Fexhe,Grondzeiler,1843,Molenechos (Dutch)\n3,4,Momalle,Moulin de Momalle,Bergmolen,1850,Molenechos (Dutch)\n4,5,Othée,Moulin du Château,Grondzeiler,1856,Molenechos (Dutch)\n4,6,Pousset,Moulin de Pousset,Grondzeiler,1819,Molenechos (Dutch)\n\nQuestion: What is the most common mill type, and how many are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\nmost_common_type = df['type'].value_counts().head(1)\n\nprint(most_common_type)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: How many book clubs are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nnum_book_clubs = df['book_club_id'].nunique()\nprint(num_book_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Count the number of book clubs.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\nnum_book_clubs = df['book_club_id'].nunique()\nprint(num_book_clubs)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: show the titles, and authors or editors for all books made after the year 1989.", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for books made after 1989\ndf_after_1989 = df[df['Year'] > 1989]\n\n# Extract the titles and authors or editors of the books made after 1989\nbooks_after_1989 = df_after_1989[['Book_Title', 'Author_or_Editor']]\n\n# Print the titles and authors or editors of the books made after 1989\nprint(books_after_1989)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What are the titles and authors or editors that correspond to books made after 1989?", "response": "import pandas as pd\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv('data.csv')\n\n# Filter the DataFrame for books made after 1989\ndf_after_1989 = df[df['Year'] > 1989]\n\n# Extract the titles and authors or editors of the books made after 1989\nbooks_after_1989 = df_after_1989[['Book_Title', 'Author_or_Editor']]\n\n# Print the titles and authors or editors of the books made after 1989\nprint(books_after_1989)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Show all distinct publishers for books.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndistinct_publishers = df['Publisher'].unique()\n\nprint(distinct_publishers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What are all the different book publishers?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndistinct_publishers = df['Publisher'].unique()\n\nprint(distinct_publishers)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Show the years, book titles, and publishers for all books, in descending order by year.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by year in descending order\ndf = df.sort_values(by='Year', ascending=False)\n\n# Select only the desired columns\ndf = df[['Year', 'Book_Title', 'Publisher']]\n\n# Print the DataFrame\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What are the years, titles, and publishers for all books, ordered by year descending?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by year in descending order\ndf = df.sort_values(by='Year', ascending=False)\n\n# Select only the desired columns\ndf = df[['Year', 'Book_Title', 'Publisher']]\n\n# Print the DataFrame\nprint(df)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Show all publishers and the number of books for each publisher.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# count the number of books for each publisher\nbooks_by_publisher = df['Publisher'].value_counts()\n\n# print the result\nprint(books_by_publisher)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: How many books are there for each publisher?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# count the number of books for each publisher\nbooks_by_publisher = df['Publisher'].value_counts()\n\n# print the result\nprint(books_by_publisher)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What is the publisher with most number of books?", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the publisher with most number of books\npublisher_most_books = df['Publisher'].value_counts().idxmax()\n\n# Save the answer in a variable and print the variable\nprint(publisher_most_books)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Return the publisher that has published the most books.", "response": "import pandas as pd\n\n# Load the data from the CSV file\ndf = pd.read_csv('data.csv')\n\n# Find the publisher with most number of books\npublisher_most_books = df['Publisher'].value_counts().idxmax()\n\n# Save the answer in a variable and print the variable\nprint(publisher_most_books)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Show all book categories and the number of books in each category.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of books in each category\ncategory_counts = df['Category'].value_counts()\n\n# Print the category counts\nprint(category_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: How many books fall into each category?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of books in each category\ncategory_counts = df['Category'].value_counts()\n\n# Print the category counts\nprint(category_counts)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: List categories that have at least two books after year 1989.", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Year' is greater than 1989\ndf_after_1989 = df[df['Year'] > 1989]\n\n# Count the number of books per category\ncategory_counts = df_after_1989['Category'].value_counts()\n\n# Filter categories with more than one book\ncategories_with_two_or_more_books = category_counts[category_counts > 1].index.tolist()\n\n# Print the result\nprint(categories_with_two_or_more_books)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What categories have two or more corresponding books that were made after 1989?", "response": "import pandas as pd\n\n# Read the csv file\ndf = pd.read_csv('data.csv')\n\n# Filter rows where 'Year' is greater than 1989\ndf_after_1989 = df[df['Year'] > 1989]\n\n# Count the number of books per category\ncategory_counts = df_after_1989['Category'].value_counts()\n\n# Filter categories with more than one book\ncategories_with_two_or_more_books = category_counts[category_counts > 1].index.tolist()\n\n# Print the result\nprint(categories_with_two_or_more_books)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: Show publishers with a book published in 1989 and a book in 1990.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for the year 1989\ndf_1989 = df[df['Year'] == 1989]\n\n# Get a list of unique publishers from 1989\npublishers_1989 = df_1989['Publisher'].unique()\n\n# Filter data for the year 1990\ndf_1990 = df[df['Year'] == 1990]\n\n# Get a list of unique publishers from 1990\npublishers_1990 = df_1990['Publisher'].unique()\n\n# Find the common publishers\ncommon_publishers = set(publishers_1989) & set(publishers_1990)\n\n# Save the answer in a variable\nanswer = common_publishers\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nbook_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result\n1,1989,Michael Nava,Goldenboy,Alyson,Gay M/SF,Won [A ]\n2,1989,Donald Ward,Death Takes the Stage,St. Martin's Press,Gay M/SF,Nom\n3,1989,Michael Bishop,Unicorn Mountain,William Morrow,Gay M/SF,Nom\n4,1989,Joseph Hansen,Obedience,Mysterious Press,Gay M/SF,Nom\n5,1989,George Baxt,Whoӳ Next,International Polygonics,Gay M/SF,Nom\n6,1989,Antoinette Azolakov,Skiptrace,Banned Books,Lesb. M/SF,Won\n7,1989,Claire McNab,Lessons In Murder,Naiad Press,Lesb. M/SF,Nom\n8,1989,Judy Grahn,Mundaneӳ World,Crossing Press,Lesb. M/SF,Nom\n9,1989,Dolores Klaich,Heavy Gilt,Naiad Press,Lesb. M/SF,Nom\n10,1989,Sandy Bayer,The Crystal Curtain,Alyson,Lesb. M/SF,Nom\n\nQuestion: What are the publishers who have published a book in both 1989 and 1990?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter data for the year 1989\ndf_1989 = df[df['Year'] == 1989]\n\n# Get a list of unique publishers from 1989\npublishers_1989 = df_1989['Publisher'].unique()\n\n# Filter data for the year 1990\ndf_1990 = df[df['Year'] == 1990]\n\n# Get a list of unique publishers from 1990\npublishers_1990 = df_1990['Publisher'].unique()\n\n# Find the common publishers\ncommon_publishers = set(publishers_1989) & set(publishers_1990)\n\n# Save the answer in a variable\nanswer = common_publishers\n\n# Print the variable\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Show all movie titles, years, and directors, ordered by budget.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Budget_million'\ndf_sorted = df.sort_values(by='Budget_million')\n\n# Select only the 'Title', 'Year', and 'Director' columns\ndf_selected = df_sorted[['Title', 'Year', 'Director']]\n\n# Print the sorted and selected DataFrame\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: What are the titles, years, and directors of all movies, ordered by budget in millions?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Sort the DataFrame by 'Budget_million'\ndf_sorted = df.sort_values(by='Budget_million')\n\n# Select only the 'Title', 'Year', and 'Director' columns\ndf_selected = df_sorted[['Title', 'Year', 'Director']]\n\n# Print the sorted and selected DataFrame\nprint(df_selected)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: How many movie directors are there?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different directors\nnum_directors = df['Director'].nunique()\n\nprint(num_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Count the number of different directors.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n# Count the number of different directors\nnum_directors = df['Director'].nunique()\n\nprint(num_directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for movies made in 2000 or before\ndf_2000_and_before = df[df['Year'] <= 2000]\n\n# Find the movie with the highest worldwide gross\nhighest_grossing_movie = df_2000_and_before.loc[df_2000_and_before['Gross_worldwide'].idxmax()]\n\n# Extract the title and director of the highest grossing movie\ntitle_and_director = highest_grossing_movie[['Title', 'Director']]\n\n# Print the title and director of the highest grossing movie\nprint(title_and_director)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter the dataframe for movies made in 2000 or before\ndf_2000_and_before = df[df['Year'] <= 2000]\n\n# Find the movie with the highest worldwide gross\nhighest_grossing_movie = df_2000_and_before.loc[df_2000_and_before['Gross_worldwide'].idxmax()]\n\n# Extract the title and director of the highest grossing movie\ntitle_and_director = highest_grossing_movie[['Title', 'Director']]\n\n# Print the title and director of the highest grossing movie\nprint(title_and_director)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Show all director names who have a movie in both year 1999 and 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for 1999 and 2000 years\ndf_1999 = df[df['Year'] == 1999]\ndf_2000 = df[df['Year'] == 2000]\n\n# Get unique director names from both dataframes\ndirectors_1999 = df_1999['Director'].unique()\ndirectors_2000 = df_2000['Director'].unique()\n\n# Find common director names\ncommon_directors = set(directors_1999) & set(directors_2000)\n\n# Save and print the answer\nanswer = list(common_directors)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Which directors had a movie both in the year 1999 and 2000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filter dataframe for 1999 and 2000 years\ndf_1999 = df[df['Year'] == 1999]\ndf_2000 = df[df['Year'] == 2000]\n\n# Get unique director names from both dataframes\ndirectors_1999 = df_1999['Director'].unique()\ndirectors_2000 = df_2000['Director'].unique()\n\n# Find common director names\ncommon_directors = set(directors_1999) & set(directors_2000)\n\n# Save and print the answer\nanswer = list(common_directors)\nprint(answer)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Show all director names who have a movie in the year 1999 or 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndirectors = df[(df['Year'] == 1999) | (df['Year'] == 2000)]['Director']\n\nprint(directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Which directors had a movie in either 1999 or 2000?", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\ndirectors = df[(df['Year'] == 1999) | (df['Year'] == 2000)]['Director']\n\nprint(directors)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: What is the average, maximum, and minimum budget for all movies before 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the dataframe to include only movies made before 2000\ndf_before_2000 = df[df['Year'] < 2000]\n\n# Calculating the average, maximum, and minimum budgets\navg_budget = df_before_2000['Budget_million'].mean()\nmax_budget = df_before_2000['Budget_million'].max()\nmin_budget = df_before_2000['Budget_million'].min()\n\n# Storing the results in a dictionary\nresults = {'Average Budget': avg_budget, 'Maximum Budget': max_budget, 'Minimum Budget': min_budget}\n\n# Printing the results\nprint(results)\n"}
{"prompt": "Below are the first few lines of a CSV file. You need to write a Python program to solve the provided question.\n\nHeader and first few lines of CSV file:\nmovie_id,Title,Year,Director,Budget_million,Gross_worldwide\n1,The Boondock Saints,1999,Troy Duffy,6.0,30471\n2,The Big Kahuna,1999,John Swanbeck,7.0,3728888\n3,Storm Catcher,1999,Anthony Hickox,5.0,40500\n4,Jill Rips,2000,Anthony Hickox,4.0,456774\n5,The Whole Nine Yards,2000,Jonathan Lynn,41.3,106371651\n6,Battlefield Earth,2000,Roger Christian,44.0,29725663\n7,Get Carter,2000,Stephen Kay,63.6,19412993\n8,The Art of War,2000,Christian Duguay,60.0,40400425\n9,Agent Red,2000,Damian Lee,47.0,543356\n10,3000 Miles to Graceland,2001,Demian Lichtenstein,62.0,18720175\n\nQuestion: Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "response": "import pandas as pd\n\ndf = pd.read_csv('data.csv')\n\n\n# Filtering the dataframe to include only movies made before 2000\ndf_before_2000 = df[df['Year'] < 2000]\n\n# Calculating the average, maximum, and minimum budgets\navg_budget = df_before_2000['Budget_million'].mean()\nmax_budget = df_before_2000['Budget_million'].max()\nmin_budget = df_before_2000['Budget_million'].min()\n\n# Storing the results in a dictionary\nresults = {'Average Budget': avg_budget, 'Maximum Budget': max_budget, 'Minimum Budget': min_budget}\n\n# Printing the results\nprint(results)\n"}
